<Type Name="CustomPeerResolverService" FullName="System.ServiceModel.PeerResolvers.CustomPeerResolverService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0665e1f689935e8bdee6aecf81db2d734177ec84" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30519845" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomPeerResolverService : System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomPeerResolverService extends System.Object implements class System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomPeerResolverService&#xA;Implements IPeerResolverContract" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomPeerResolverService : System::ServiceModel::PeerResolvers::IPeerResolverContract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.PeerResolvers.IPeerResolverContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, UseSynchronizationContext=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce un'implementazione di base di un servizio resolver peer personalizzato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService> definisce l'implementazione di base di un servizio resolver peer personalizzato e fornisce la funzionalità di ricerca per la risoluzione degli ID di registrazione sugli indirizzi dell'endpoint peer in una rete gestita da questo resolver.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Gli implementatori di resolver peer personalizzati devono eseguire la derivazione da questa classe e eseguire l'override delle funzioni specifiche per le quali vengono fornite le implementazioni personalizzate. È necessario che tutti i resolver peer personalizzati implementino almeno l'interfaccia <see cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />.  
  
 I client che utilizzano un resolver personalizzato devono inoltre avere un limite superiore sulla latenza client-server per aggiornare correttamente la registrazione con il servizio resolver peer.</para>
    </block>
    <altmember cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomPeerResolverService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomPeerResolverService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza predefinita della classe <see cref="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupInterval">
      <MemberSignature Language="C#" Value="public TimeSpan CleanupInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CleanupInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CleanupInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il periodo di tempo ricorrente dopo il quale le voci non aggiornate vengono eliminate dalla tabella di ricerca della registrazione del servizio resolver peer.</summary>
        <value>
          Struttura <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo dopo il quale le voci non aggiornate vengono eliminate dalla tabella di ricerca della registrazione del servizio resolver peer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà deve essere impostata prima del servizio resolver peer e non può essere uguale a zero. L'intervallo predefinito è 1 minuto.  
  
 Questo valore deve essere minore del valore di <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval%2A> per evitare di trovare voci non aggiornate nella tabella di ricerca della registrazione del servizio resolver peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'intervallo è uguale a zero o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è tentato di impostare la proprietà dopo una chiamata a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude il servizio resolver peer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Il servizio è stato chiuso da una chiamata precedente a questo metodo.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlShape">
      <MemberSignature Language="C#" Value="public bool ControlShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlShape" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlShape As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlShape { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta se i riferimenti vengono o no condivisi dal servizio resolver peer.</summary>
        <value>Il valore è Ture se i riferimenti vengono condivisi dal servizio resolver peer. In caso contrario, False.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceSettings">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceSettings () As ServiceSettingsResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ServiceSettingsResponseInfo ^ GetServiceSettings();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene le impostazioni di risposta specifiche per il servizio resolver peer.</summary>
        <returns>
          Classe <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> che contiene le impostazioni di risposta specifiche per il servizio resolver peer personalizzato, comprese le impostazioni per gli intervalli di pulizia e di aggiornamento.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Apre il servizio resolver peer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questo metodo viene chiamato, pianifica la prima pulizia della tabella di ricerca della registrazione in base al valore impostato per la proprietà <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Le proprietà <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" /> o <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" /> sono impostate su un intervallo di tempo uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">Il servizio è stato avviato da una chiamata precedente a questo metodo.</exception>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh (System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh(class System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RefreshResponseInfo ^ Refresh(System::ServiceModel::PeerResolvers::RefreshInfo ^ refreshInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RefreshResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshInfo" Type="System.ServiceModel.PeerResolvers.RefreshInfo" />
      </Parameters>
      <Docs>
        <param name="refreshInfo">
          Oggetto <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> che contiene l'ID di rete e l'ID di registrazione della voce da aggiornare nella tabella di ricerca della registrazione del servizio resolver peer.</param>
        <summary>Aggiorna la scadenza di una voce nella tabella di ricerca della registrazione del servizio resolver peer.</summary>
        <returns>
          Classe <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> che contiene la voce di registrazione appena aggiornata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'aggiornamento di una voce estende la lunghezza dell'intervallo per il quale rimane valida. Tutte le informazioni utilizzate per identificare in modo univoco la voce devono essere fornite nell'oggetto <xref:System.ServiceModel.PeerResolvers.RefreshInfo> fornito in questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Il parametro <paramref name="refreshInfo" /> è impostato su Null.</exception>
        <exception cref="T:System.InvalidOperationException">Il servizio resolver peer personalizzato non è stato avviato con una chiamata precedente a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RefreshInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RefreshInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il periodo di tempo per il quale le voci rimangono valide nella tabella di ricerca della registrazione del servizio resolver.</summary>
        <value>
          Struttura <see cref="T:System.TimeSpan" /> che specifica il periodo di tempo per il quale le voci rimangono valide nella tabella di ricerca della registrazione del servizio resolver.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà deve essere impostata prima del servizio resolver peer e non può essere uguale a zero. L'intervallo predefinito è 2 minuti.  
  
 Quando il periodo di tempo fornito per questa proprietà è stato superato per una voce specificata nella tabella di ricerca della registrazione del servizio resolver peer, quella voce viene contrassegnata per l'eliminazione. L'eliminazione avviene quando l'intervallo specificato nella proprietà <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A> è stato superato.  Ad esempio, se questa proprietà è impostata su un intervallo di tempo di 10 minuti, le voci nella tabella di ricerca della registrazione risulteranno non aggiornate e verranno contrassegnate per l'eliminazione superato questo intervallo. Di conseguenza, il client del resolver peer dovrà aggiornarsi ogni dieci minuti per evitare che ne vengano eliminate le voci.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'intervallo è uguale a zero o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è tentato di impostare la proprietà dopo una chiamata a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra un peer con il servizio resolver peer personalizzato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per registrare un nodo peer in una rete specifica, è necessario fornire un oggetto <xref:System.ServiceModel.PeerResolvers.RegisterInfo> del formato corretto a uno degli overload per questo metodo. Questo oggetto contiene i dettagli specifici necessari a registrare la voce di registrazione che richiede la registrazione, inclusi un GUID che identifica in modo univoco la voce di registrazione, l'ID di rete e un indirizzo dell'endpoint.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (System.ServiceModel.PeerResolvers.RegisterInfo registerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(class System.ServiceModel.PeerResolvers.RegisterInfo registerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(System::ServiceModel::PeerResolvers::RegisterInfo ^ registerInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registerInfo" Type="System.ServiceModel.PeerResolvers.RegisterInfo" />
      </Parameters>
      <Docs>
        <param name="registerInfo">
          Classe <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> che contiene le informazioni relative alla voce di registrazione da registrare con il servizio resolver peer.</param>
        <summary>Aggiunge una nuova voce alla tabella di ricerca della registrazione del servizio resolver peer.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> che contiene una copia della voce aggiunta alla tabella di ricerca della registrazione del servizio resolver peer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo aggiunge una nuova voce alla tabella di ricerca della registrazione del servizio resolver peer. Si noti che le registrazioni eseguite dopo la chiusura del servizio non hanno effetto: queste voci non vengono restituite dalle richieste di risoluzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Una voce di registrazione con lo stesso GUID è già presente nella tabella di ricerca oppure il servizio resolver peer personalizzato non è stato avviato con una chiamata precedente a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> fornito a questo metodo è Null o non è di un formato corretto.</exception>
        <exception cref="T:System.NullReferenceException">La proprietà AddressInfo dell'oggetto fornito al parametro <paramref name="registerInfo" /> è Null.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore <paramref name="meshId" /> fornito a questo metodo è impostato su Null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (Guid clientId, string meshId, System.ServiceModel.PeerNodeAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(valuetype System.Guid clientId, string meshId, class System.ServiceModel.PeerNodeAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Register (clientId As Guid, meshId As String, address As PeerNodeAddress) As RegisterResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(Guid clientId, System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.Guid" />
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="address" Type="System.ServiceModel.PeerNodeAddress" />
      </Parameters>
      <Docs>
        <param name="clientId">
          <see cref="T:System.Guid" /> che specifica un identificatore univoco per la registrazione della voce di registrazione con il servizio resolver.</param>
        <param name="meshId">
          <see cref="T:System.String" /> che specifica l'ID della rete peer alla quale partecipa la voce di registrazione.</param>
        <param name="address">
          <see cref="T:System.ServiceModel.PeerNodeAddress" /> che contiene l'indirizzo dell'endpoint della voce di registrazione.</param>
        <summary>Aggiunge una nuova voce alla tabella di ricerca della registrazione del servizio resolver peer.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> che contiene una copia della voce aggiunta alla tabella di ricerca della registrazione del servizio resolver peer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Una voce di registrazione con lo stesso GUID è già presente nella tabella di ricerca oppure il servizio resolver peer personalizzato non è stato avviato con una chiamata precedente a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> fornito a questo metodo è Null o non è di un formato corretto.</exception>
        <exception cref="T:System.ArgumentNullException">La proprietà MeshId o RegistrationId dell'oggetto fornito al parametro <paramref name="refreshInfo" /> è Null.</exception>
        <exception cref="T:System.NullReferenceException">La proprietà MeshId dell'oggetto fornito al parametro <paramref name="refreshInfo" /> è sconosciuta.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve (System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve(class System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ResolveResponseInfo ^ Resolve(System::ServiceModel::PeerResolvers::ResolveInfo ^ resolveInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ResolveResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolveInfo" Type="System.ServiceModel.PeerResolvers.ResolveInfo" />
      </Parameters>
      <Docs>
        <param name="resolveInfo">
          Classe <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> che contiene le informazioni relative alla voce di registrazione per la quale gli endpoint, se noti, devono essere cercati dal servizio resolver peer.</param>
        <summary>Restituisce un elenco degli endpoint noti per una voce di registrazione.</summary>
        <returns>
          Classe <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> che contiene gli endpoint per la voce di registrazione nella tabella di ricerca che corrisponde alle informazioni fornite nel parametro <paramref name="resolveInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo cerca una voce di registrazione in base ai dati forniti in un oggetto <xref:System.ServiceModel.PeerResolvers.ResolveInfo> e restituisce gli indirizzi dell'endpoint corrispondenti trovati nella tabella di ricerca della registrazione del servizio resolver peer. Il numero di indirizzi dell'endpoint restituiti è uguale o minore del valore della proprietà <xref:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses%2A> impostato sull'oggetto <xref:System.ServiceModel.PeerResolvers.ResolveInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> è Null o non è di un formato corretto.</exception>
        <exception cref="T:System.InvalidOperationException">Una voce di registrazione con lo stesso GUID è già presente nella tabella di ricerca oppure il servizio resolver peer personalizzato non è stato avviato con una chiamata precedente a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public virtual void Unregister (System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unregister(System::ServiceModel::PeerResolvers::UnregisterInfo ^ unregisterInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unregisterInfo" Type="System.ServiceModel.PeerResolvers.UnregisterInfo" />
      </Parameters>
      <Docs>
        <param name="unregisterInfo">
          Classe <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> che contiene le informazioni utilizzate per identificare in modo univoco la voce di registrazione da rimuovere dalla tabella di ricerca della registrazione.</param>
        <summary>Rimuove una voce specifica dalla tabella di ricerca della registrazione del servizio resolver peer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Non è stato possibile individuare una voce per la voce di registrazione specificata o l'oggetto <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> fornito è Null o non è di un formato corretto.</exception>
        <exception cref="T:System.InvalidOperationException">Una voce di registrazione con lo stesso GUID è già presente nella tabella di ricerca oppure il servizio resolver peer personalizzato non è stato avviato con una chiamata precedente a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Update (System.ServiceModel.PeerResolvers.UpdateInfo updateInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Update(class System.ServiceModel.PeerResolvers.UpdateInfo updateInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Update(System::ServiceModel::PeerResolvers::UpdateInfo ^ updateInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateInfo" Type="System.ServiceModel.PeerResolvers.UpdateInfo" />
      </Parameters>
      <Docs>
        <param name="updateInfo">
          Classe <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> che identifica in modo univoco una voce di registrazione specifica e fornisce informazioni relative all'aggiornamento di tale voce.</param>
        <summary>Aggiorna una voce di registrazione esistente nella tabella di ricerca della registrazione del servizio resolver peer.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> che contiene una copia della voce di registrazione aggiornata.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Non è stato possibile individuare una voce per la voce di registrazione specificata o l'oggetto <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> fornito non è di un formato corretto.</exception>
        <exception cref="T:System.InvalidOperationException">Una voce di registrazione con lo stesso GUID è già presente nella tabella di ricerca oppure il servizio resolver peer personalizzato non è stato avviato con una chiamata precedente a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>