<Type Name="SymScope" FullName="System.Diagnostics.SymbolStore.SymScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a0c12fdd3974767a25f54e897397fee2e8310c3" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52614479" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymScope : System.Diagnostics.SymbolStore.SymScopeBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolScope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymScope extends System.Diagnostics.SymbolStore.SymScopeBase implements class System.Diagnostics.SymbolStore.ISymbolScope, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymScope" />
  <TypeSignature Language="VB.NET" Value="Public Class SymScope&#xA;Inherits SymScopeBase&#xA;Implements IDisposable, ISymbolScope" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymScope : System::Diagnostics::SymbolStore::SymScopeBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolScope" />
  <TypeSignature Language="F#" Value="type SymScope = class&#xA;    inherit SymScopeBase&#xA;    interface ISymbolScope&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymScopeBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4cde5-101">Rappresenta un ambito lessicale in <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> che consente di accedere agli offset iniziali e finali dell'ambito, nonché ai relativi ambiti padre e figlio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4cde5-101">Represents a lexical scope within <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />, providing access to the start and end offsets of the scope, as well as its child and parent scopes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cde5-102">Il <xref:System.Diagnostics.SymbolStore.SymScope> classe fornisce inoltre l'accesso a tutte le variabili locali definite all'interno dell'ambito corrente.</span><span class="sxs-lookup"><span data-stu-id="4cde5-102">The <xref:System.Diagnostics.SymbolStore.SymScope> class also provides access to all locals defined within the current scope.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymScope (ISymUnmanagedScope* pScope);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(ISymUnmanagedScope* pScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.#ctor(ISymUnmanagedScope*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymScope(ISymUnmanagedScope* pScope);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymScope : nativeptr&lt;ISymUnmanagedScope&gt; -&gt; System.Diagnostics.SymbolStore.SymScope" Usage="new System.Diagnostics.SymbolStore.SymScope pScope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pScope" Type="ISymUnmanagedScope*" />
      </Parameters>
      <Docs>
        <param name="pScope">
          <span data-ttu-id="4cde5-103">Puntatore a un oggetto ISymUnmanagedScope non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-103">A pointer to an unmanaged ISymUnmanagedScope object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cde5-104">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> usando il puntatore specificato a un oggetto **ISymUnmanagedScope** non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-104">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> class by using the specified pointer to an unmanaged **ISymUnmanagedScope** object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4cde5-105">In genere, si usa il <xref:System.Diagnostics.SymbolStore.SymMethod.RootScope> proprietà da ottenere le istanze di questa classe, anziché creare un'istanza con questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="4cde5-105">Typically, you use the <xref:System.Diagnostics.SymbolStore.SymMethod.RootScope> property to obtain instances of this class, instead of creating an instance by using this constructor.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymScope (System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymScope(System::Diagnostics::SymbolStore::Private::ISymUnmanagedScope* pScope);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymScope : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope&gt; -&gt; System.Diagnostics.SymbolStore.SymScope" Usage="new System.Diagnostics.SymbolStore.SymScope pScope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pScope" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*" />
      </Parameters>
      <Docs>
        <param name="pScope">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symScope.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-106">Rilascia le risorse contenute nell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-106">Releases the resources held by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4cde5-107">Usare il <xref:System.Diagnostics.SymbolStore.SymScope.Finalize> metodo per rilasciare le risorse.</span><span class="sxs-lookup"><span data-stu-id="4cde5-107">Use the <xref:System.Diagnostics.SymbolStore.SymScope.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symScope.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-108">Rilascia le risorse contenute nell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-108">Releases the resources held by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="4cde5-109">Usare il <xref:System.Diagnostics.SymbolStore.SymScope.Finalize> metodo per rilasciare le risorse.</span><span class="sxs-lookup"><span data-stu-id="4cde5-109">Use the <xref:System.Diagnostics.SymbolStore.SymScope.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-110">Rilascia le risorse usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-110">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symScope.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="4cde5-111">
            <see langword="true" /> per rilasciare le risorse gestite e non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-111">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cde5-112">Oggetto chiamato dai metodi <see cref="M:System.Diagnostics.SymbolStore.SymScope.Dispose" /> e <see cref="M:System.Diagnostics.SymbolStore.SymScope.Finalize" /> per rilasciare le risorse gestite e non gestite usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-112">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymScope.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymScope.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cde5-113">Questo metodo viene chiamato solo da parte del pubblico <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> e <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> metodi; non chiamare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="4cde5-113">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOffset">
      <MemberSignature Language="C#" Value="public virtual int EndOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndOffset" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.EndOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EndOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EndOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOffset : int" Usage="System.Diagnostics.SymbolStore.SymScope.EndOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-114">Recupera l'offset finale dell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-114">Gets the end offset of the current lexical scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cde5-115">Offset Microsoft Intermediate Language (MSIL) finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-115">The ending Microsoft intermediate language (MSIL) offset.</span>
          </span>
          <span data-ttu-id="4cde5-116">L'offset viene definito a partire dall'inizio del metodo dell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-116">The offset is from the beginning of the method of the current lexical scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymScope ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symScope.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-117">Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che la classe <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> venga recuperata tramite Garbage Collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-117">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cde5-118">Esegue l'override di questo metodo <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="4cde5-118">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="4cde5-119">Il codice dell'applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che non la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="4cde5-119">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildren () As ISymbolScope()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolScope ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope[]&#xA;override this.GetChildren : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope[]" Usage="symScope.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-120">Recupera gli ambiti lessicali figlio dell'ambito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-120">Gets the child lexical scopes of the current lexical scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cde5-121">Ambiti lessicali inclusi nell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-121">The lexical scopes enclosed by the current lexical scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="4cde5-122">Memoria insufficiente per soddisfare la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-122">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocals">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.GetLocals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocals () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetLocals();" />
      <MemberSignature Language="F#" Value="abstract member GetLocals : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetLocals : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symScope.GetLocals " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-123">Recupera le variabili locali all'interno dell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-123">Gets the local variables within the current lexical scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cde5-124">Variabili locali dell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-124">The local variables within the current lexical scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cde5-125">Le variabili locali vengono restituite in nessun ordine particolare.</span><span class="sxs-lookup"><span data-stu-id="4cde5-125">The local variables are returned in no particular order.</span></span> <span data-ttu-id="4cde5-126">Se una variabile locale viene modificato il relativo indirizzo all'interno dell'ambito corrente, tale variabile venga restituita più volte, ognuna con un diverso intervallo di offset.</span><span class="sxs-lookup"><span data-stu-id="4cde5-126">If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="4cde5-127">Memoria insufficiente per soddisfare la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-127">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.GetNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaces () As ISymbolNamespace()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolNamespace ^&gt; ^ GetNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]&#xA;override this.GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]" Usage="symScope.GetNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-128">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-128">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cde5-129">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-129">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SymbolStore.ISymbolMethod Method" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Method As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::ISymbolMethod ^ Method { System::Diagnostics::SymbolStore::ISymbolMethod ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Method : System.Diagnostics.SymbolStore.ISymbolMethod" Usage="System.Diagnostics.SymbolStore.SymScope.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-130">Recupera il metodo che contiene l'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-130">Gets the method that contains the current lexical scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cde5-131">Metodo contenente l'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-131">The method that contains the current lexical scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SymbolStore.ISymbolScope Parent" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::ISymbolScope ^ Parent { System::Diagnostics::SymbolStore::ISymbolScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Diagnostics.SymbolStore.ISymbolScope" Usage="System.Diagnostics.SymbolStore.SymScope.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-132">Recupera l'ambito lessicale padre dell'ambito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-132">Gets the parent lexical scope of the current scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cde5-133">Ambito lessicale di inclusione dell'ambito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-133">The enclosing lexical scope of the current scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOffset">
      <MemberSignature Language="C#" Value="public virtual int StartOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartOffset" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.StartOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StartOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StartOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartOffset : int" Usage="System.Diagnostics.SymbolStore.SymScope.StartOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cde5-134">Recupera l'offset iniziale dell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-134">Gets the start offset of the current lexical scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cde5-135">Offset Microsoft Intermediate Language (MSIL) iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-135">The starting Microsoft intermediate language (MSIL) offset.</span>
          </span>
          <span data-ttu-id="4cde5-136">L'offset viene definito a partire dall'inizio del metodo dell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cde5-136">The offset is from the beginning of the method of the current lexical scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>