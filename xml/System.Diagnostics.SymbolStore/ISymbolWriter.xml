<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ISymbolWriter.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56e350929abc36f84a74566e71622bef50159cab1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e350929abc36f84a74566e71622bef50159cab1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>Represents a symbol writer for managed code.</source>
          <target state="translated">Rappresenta un writer di simboli per codice gestito.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> interface provides methods that define documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> interfaccia fornisce i metodi che definiscono i documenti, punti di sequenza, gli ambiti lessicali e variabili.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>This interface is the managed counterpart of the <ph id="ph1">`ISymUnmanagedWriter`</ph> interface, which is one of the unmanaged symbol store interfaces that provides an alternative way to read and write debug symbol information.</source>
          <target state="translated">Questa interfaccia è la controparte gestita del <ph id="ph1">`ISymUnmanagedWriter`</ph> interfaccia, una delle interfacce di archivio simboli non gestito che fornisce un modo alternativo per leggere e scrivere informazioni sui simboli di debug.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
          <source>Closes <ph id="ph1">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> and commits the symbols to the symbol store.</source>
          <target state="translated">Chiude <ph id="ph1">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> e inserisce i simboli nel relativo archivio.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
          <source>After this call, <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> becomes invalid for further updates.</source>
          <target state="translated">Dopo questa chiamata, <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> diventa non valido per ulteriori aggiornamenti.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
          <source>Closes the current method.</source>
          <target state="translated">Chiude il metodo corrente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
          <source>After a method is closed, you cannot define a symbol from within it.</source>
          <target state="translated">Dopo la chiusura di un metodo, è possibile definire un simbolo dal suo interno.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
          <source>Closes the most recent namespace.</source>
          <target state="translated">Chiude l'ultimo spazio dei nomi aperto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>The points past the last instruction in the scope.</source>
          <target state="translated">Punti successivi all'ultima istruzione nell'ambito.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>Closes the current lexical scope.</source>
          <target state="translated">Chiude l'ambito lessicale corrente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>After a scope is closed, you cannot define a variable from within it.</source>
          <target state="translated">Dopo la chiusura di un ambito, è possibile definire una variabile dal suo interno.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The URL that identifies the document.</source>
          <target state="translated">URL identificativo del documento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The document language.</source>
          <target state="translated">Linguaggio del documento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">Questo parametro può essere <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The identity of the vendor for the document language.</source>
          <target state="translated">Identità del fornitore del linguaggio del documento.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">Questo parametro può essere <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The type of the document.</source>
          <target state="translated">Tipo del documento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">Questo parametro può essere <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>Defines a source document.</source>
          <target state="translated">Definisce un documento di origine.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The object that represents the document.</source>
          <target state="translated">Oggetto che rappresenta il documento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The metadata type or method token.</source>
          <target state="translated">Tipo di metadati o token di metodo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The field name.</source>
          <target state="translated">Nome del campo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the field attributes.</source>
          <target state="translated">Combinazione bit per bit degli attributi del campo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The field signature.</source>
          <target state="translated">Firma di campo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tipi di indirizzo per <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, e <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the field specification.</source>
          <target state="translated">Primo indirizzo relativo al campo specificato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the field specification.</source>
          <target state="translated">Secondo indirizzo relativo al campo specificato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the field specification.</source>
          <target state="translated">Terzo indirizzo relativo al campo specificato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a field in a type or a global field.</source>
          <target state="translated">Definisce un campo in un tipo o in un campo globale.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A&gt;</ph> method defines a single variable that is not within a method by using specified fields in classes, bit fields, and so on.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A&gt;</ph> metodo definisce una singola variabile che non è all'interno di un metodo con i campi specificati nelle classi, i campi di bit e così via.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The global variable name.</source>
          <target state="translated">Nome della variabile globale.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the global variable attributes.</source>
          <target state="translated">Una combinazione bit per bit degli attributi della variabile globale.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The global variable signature.</source>
          <target state="translated">Firma della variabile globale.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tipi di indirizzo per <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> e <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the global variable specification.</source>
          <target state="translated">Primo indirizzo relativo alla variabile globale specificata.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the global variable specification.</source>
          <target state="translated">Secondo indirizzo relativo alla variabile globale specificata.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the global variable specification.</source>
          <target state="translated">Terzo indirizzo relativo alla variabile globale specificata.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single global variable.</source>
          <target state="translated">Definisce una variabile globale singola.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The local variable name.</source>
          <target state="translated">Nome della variabile locale.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the local variable attributes.</source>
          <target state="translated">Una combinazione bit per bit degli attributi della variabile locale.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The local variable signature.</source>
          <target state="translated">Firma della variabile locale.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tipi di indirizzo per <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> e <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the local variable specification.</source>
          <target state="translated">Primo indirizzo relativo alla variabile locale specificata.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the local variable specification.</source>
          <target state="translated">Secondo indirizzo relativo alla variabile locale specificata.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the local variable specification.</source>
          <target state="translated">Terzo indirizzo relativo alla variabile locale specificata.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The start offset for the variable.</source>
          <target state="translated">Offset iniziale della variabile.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">Se questo parametro è uguale a zero, viene ignorato e la variabile viene definita nell'intero ambito.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">Se il parametro è diverso da zero, la variabile rientra negli offset dell'ambito corrente.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The end offset for the variable.</source>
          <target state="translated">Offset finale della variabile.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">Se questo parametro è uguale a zero, viene ignorato e la variabile viene definita nell'intero ambito.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">Se il parametro è diverso da zero, la variabile rientra negli offset dell'ambito corrente.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single variable in the current lexical scope.</source>
          <target state="translated">Definisce una singola variabile nell'ambito lessicale corrente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`startOffset`</ph> and <ph id="ph2">`endOffset`</ph> parameters are optional.</source>
          <target state="translated">Il <ph id="ph1">`startOffset`</ph> e <ph id="ph2">`endOffset`</ph> i parametri sono facoltativi.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If their value is zero, they are ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">Se il valore è zero, vengono ignorati e la variabile viene definita nell'intero ambito.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If their value is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">Se il valore è diverso da zero, la variabile rientra negli offset dell'ambito corrente.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A&gt;</ph> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</source>
          <target state="translated">È possibile chiamare <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A&gt;</ph> più volte per una variabile con lo stesso nome che si verifica più volte in diversi intervalli di offset un ambito.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>(In this case, start and end offsets must not overlap.)</source>
          <target state="translated">(In questo caso, offset iniziali e finali non devono sovrapporsi.)</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The parameter name.</source>
          <target state="translated">Nome del parametro.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the parameter attributes.</source>
          <target state="translated">Combinazione bit per bit degli attributi del parametro.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The parameter signature.</source>
          <target state="translated">Firma del parametro.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tipi di indirizzo per <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> e <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the parameter specification.</source>
          <target state="translated">Primo indirizzo relativo al parametro specificato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the parameter specification.</source>
          <target state="translated">Secondo indirizzo relativo al parametro specificato.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the parameter specification.</source>
          <target state="translated">Terzo indirizzo relativo al parametro specificato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single parameter in the current method.</source>
          <target state="translated">Definisce un singolo parametro nel metodo corrente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The type of each parameter is taken from its position within the signature of the method.</source>
          <target state="translated">Il tipo di ciascun parametro viene individuato in base alla posizione occupata all'interno della firma del metodo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>If parameters are defined in the metadata for a given method, you do not have to define them again with calls to this method.</source>
          <target state="translated">Se i parametri vengono definiti nei metadati per un determinato metodo, non è necessario definire nuovamente con chiamate a questo metodo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Symbol readers need to check for these in the normal metadata first, and then use the symbol store.</source>
          <target state="translated">Sarà necessario, controllare innanzitutto i parametri nei metadati normali e quindi utilizzare l'archivio dei simboli.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document object for which the sequence points are being defined.</source>
          <target state="translated">Oggetto del documento per il quale definire i punti di sequenza.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The sequence point offsets measured from the beginning of methods.</source>
          <target state="translated">Offset del punto di sequenza misurati dall'inizio dei metodi.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document lines for the sequence points.</source>
          <target state="translated">Righe del documento per i punti di sequenza.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document positions for the sequence points.</source>
          <target state="translated">Posizioni del documento per i punti di sequenza.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document end lines for the sequence points.</source>
          <target state="translated">Righe finali del documento per i punti di sequenza.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document end positions for the sequence points.</source>
          <target state="translated">Posizioni finali del documento per i punti di sequenza.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>Defines a group of sequence points within the current method.</source>
          <target state="translated">Definisce un gruppo di punti di sequenza nel metodo corrente.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>Each line and each column defines the start of a statement within a method.</source>
          <target state="translated">Ogni riga e ogni colonna definisce l'inizio di un'istruzione all'interno di un metodo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The arrays should be sorted in increasing order of offsets.</source>
          <target state="translated">Le matrici devono essere ordinate in ordine crescente di offset.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The offset is always the offset from the start of the method, in bytes.</source>
          <target state="translated">L'offset è sempre l'offset dall'inizio del metodo, in byte.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>The metadata emitter interface.</source>
          <target state="translated">Interfaccia di emissione dei metadati.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>The file name for which the debugging symbols are written.</source>
          <target state="translated">Nome del file per il quale vengono scritti i simboli di debug.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>Some writers require a file name, and others do not.</source>
          <target state="translated">Per alcuni writer è richiesto un nome file, per altri questo parametro non è necessario.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>If a file name is specified for a writer that does not use file names, this parameter is ignored.</source>
          <target state="translated">Se specificato per un writer che non usa i nomi file, il parametro sarà ignorato.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that this is a full rebuild; <ph id="ph2">&lt;see langword="false" /&gt;</ph> indicates that this is an incremental compilation.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> indica una ricompilazione completa, <ph id="ph2">&lt;see langword="false" /&gt;</ph> indica che si tratta di una compilazione incrementale.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>Sets the metadata emitter interface to associate with a writer.</source>
          <target state="translated">Imposta l'interfaccia di emissione dei metadati da associare a un writer.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A&gt;</ph> also sets the output file name where the debugging symbols are written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A&gt;</ph> Imposta inoltre il nome del file di output in cui vengono scritti i simboli di debug.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>This method can be called only once and must be called before any other writer methods.</source>
          <target state="translated">Questo metodo può essere chiamato una sola volta e deve essere chiamato prima di altri metodi di scrittura.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The metadata token for the method to be opened.</source>
          <target state="translated">Token di metadati per il metodo da aprire.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Opens a method to place symbol information into.</source>
          <target state="translated">Apre un metodo in cui immettere informazioni sui simboli.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</source>
          <target state="translated">Il metodo specificato diventa il metodo corrente per le chiamate definire punti di sequenza, parametri e gli ambiti lessicali.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>There is an implicit lexical scope around the entire method.</source>
          <target state="translated">È un ambito lessicale implicito l'intero metodo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Reopening a method that has been previously closed erases any previously defined symbols for the method.</source>
          <target state="translated">La riapertura di un metodo che è stato chiuso in precedenza verranno cancellati i simboli definiti in precedenza per il metodo.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>The name of the new namespace.</source>
          <target state="translated">Nome del nuovo spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Opens a new namespace.</source>
          <target state="translated">Apre un nuovo spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Call this method before defining methods or variables that exist within a namespace.</source>
          <target state="translated">Chiamare questo metodo prima di definire i metodi o le variabili presenti all'interno di uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Namespaces can be nested.</source>
          <target state="translated">Spazi dei nomi possono essere nidificati.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.</source>
          <target state="translated">Offset, in byte, dall'inizio del metodo alla prima istruzione dell'ambito lessicale.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Opens a new lexical scope in the current method.</source>
          <target state="translated">Apre un nuovo ambito lessicale nel metodo corrente.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>An opaque scope identifier that can be used with <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /&gt;</ph> to define the start and end offsets of a scope at a later time.</source>
          <target state="translated">Identificatore di ambito opaco che può essere usato con il metodo <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /&gt;</ph> per definire gli offset iniziali e finali di un ambito successivamente.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>In this case, the offsets passed to <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /&gt;</ph> are ignored.</source>
          <target state="translated">In questo caso, gli offset passati a <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /&gt;</ph> saranno ignorati.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>A scope identifier is valid only in the current method.</source>
          <target state="translated">Un identificatore di ambito è valido solo nel metodo corrente.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>This scope becomes the new current scope and is pushed onto a stack of scopes.</source>
          <target state="translated">Questo ambito diventa il nuovo ambito corrente e viene inserito nello stack di ambiti.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Scopes must form a hierarchy.</source>
          <target state="translated">Gli ambiti devono formare una gerarchia.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Siblings are not allowed to overlap.</source>
          <target state="translated">Elementi di pari livello non è consentiti si sovrappongono.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Scope identifiers are valid only in the current method.</source>
          <target state="translated">Gli identificatori di ambito sono validi solo nel metodo corrente.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The document that contains the starting position.</source>
          <target state="translated">Documento che contiene la posizione iniziale.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The starting line number.</source>
          <target state="translated">Numero della riga iniziale.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The starting column.</source>
          <target state="translated">Colonna iniziale.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The document that contains the ending position.</source>
          <target state="translated">Documento che contiene la posizione finale.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The ending line number.</source>
          <target state="translated">Numero della riga finale.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The ending column number.</source>
          <target state="translated">Numero della colonna finale.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>Specifies the true start and end of a method within a source file.</source>
          <target state="translated">Specifica l'inizio e la fine effettivi di un metodo in un file di origine.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>Use <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /&gt;</ph> to specify the extent of a method, independent of the sequence points that exist within the method.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /&gt;</ph> per specificare l'estensione di un metodo, indipendente dai punti di sequenza del metodo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The identifier of the lexical scope.</source>
          <target state="translated">Identificatore dell'ambito lessicale.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The byte offset of the beginning of the lexical scope.</source>
          <target state="translated">Offset di byte dell'inizio dell'ambito lessicale.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The byte offset of the end of the lexical scope.</source>
          <target state="translated">Offset di byte della fine dell'ambito lessicale.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>Defines the offset range for the specified lexical scope.</source>
          <target state="translated">Definisce l'intervallo di offset per l'ambito lessicale specificato.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The metadata token for which the attribute is being defined.</source>
          <target state="translated">Token di metadati per il quale definire l'attributo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The attribute name.</source>
          <target state="translated">Nome dell'attributo.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The attribute value.</source>
          <target state="translated">Valore dell'attributo.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>Defines an attribute when given the attribute name and the attribute value.</source>
          <target state="translated">Definisce un attributo, quando vengono specificati il nome e il valore dell'attributo.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A&gt;</ph> method is only associated with symbolic information and is not a metadata custom attribute.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A&gt;</ph> metodo è solo associato alle informazioni sui simboli e non è un attributo personalizzato di metadati.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>A pointer to code that represents the underlying writer.</source>
          <target state="translated">Puntatore al codice che rappresenta il writer sottostante.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>Sets the underlying <ph id="ph1">&lt;see langword="ISymUnmanagedWriter" /&gt;</ph> (the corresponding unmanaged interface) that a managed <ph id="ph2">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> uses to emit symbols.</source>
          <target state="translated">Imposta l'oggetto <ph id="ph1">&lt;see langword="ISymUnmanagedWriter" /&gt;</ph> sottostante (la corrispondente interfaccia non gestita) utilizzata dall'oggetto <ph id="ph2">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> gestito per emettere i simboli.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>The underlying <ph id="ph1">`ISymUnmanagedWriter`</ph> (the corresponding unmanaged interface) represents a symbol writer for managed code.</source>
          <target state="translated">Sottostante <ph id="ph1">`ISymUnmanagedWriter`</ph> (l'interfaccia non gestita corrispondente) rappresenta un writer di simboli per codice gestito.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>The interface provides methods for defining documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated">L'interfaccia fornisce metodi per la definizione di documenti, punti di sequenza, gli ambiti lessicali e variabili.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The metadata token for the method that is the user entry point.</source>
          <target state="translated">Token di metadati per il metodo che corrisponde al punto di ingresso dell'utente.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Identifies the user-defined method as the entry point for the current module.</source>
          <target state="translated">Identifica il metodo definito dall'utente come punto di ingresso per il modulo corrente.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>This is normally your main method, rather than compiler-generated stubs before the main method.</source>
          <target state="translated">Si tratta in genere il metodo principale, anziché gli stub generato dal compilatore prima del metodo principale.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>The fully qualified name of the namespace.</source>
          <target state="translated">Nome completo dello spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>Specifies that the given, fully qualified namespace name is used within the open lexical scope.</source>
          <target state="translated">Specifica che il nome dello spazio dei nomi completo viene usato all'interno dell'ambito lessicale aperto.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>Closing the current scope prevents this scope from using the namespace.</source>
          <target state="translated">La chiusura dell'ambito corrente non può essere utilizzato con lo spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>The namespace remains in use in all scopes that inherit from the current open scope.</source>
          <target state="translated">Lo spazio dei nomi viene usata in tutti gli ambiti che ereditano dall'ambito corrente aperto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>