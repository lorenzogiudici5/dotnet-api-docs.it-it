<Type Name="SymReader" FullName="System.Diagnostics.SymbolStore.SymReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33f78f37ca99f263245d77bd2ec9551a285ea29c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48641231" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymReader extends System.Diagnostics.SymbolStore.SymReaderBase implements class System.Diagnostics.SymbolStore.ISymbolReader, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SymReader&#xA;Inherits SymReaderBase&#xA;Implements IDisposable, ISymbolReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymReader : System::Diagnostics::SymbolStore::SymReaderBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolReader" />
  <TypeSignature Language="F#" Value="type SymReader = class&#xA;    inherit SymReaderBase&#xA;    interface ISymbolReader&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymReaderBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce l'accesso a documenti, metodi e variabili all'interno di un archivio simboli.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymReader (ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(ISymUnmanagedReader* pReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.#ctor(ISymUnmanagedReader*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymReader(ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymReader : nativeptr&lt;ISymUnmanagedReader&gt; -&gt; System.Diagnostics.SymbolStore.SymReader" Usage="new System.Diagnostics.SymbolStore.SymReader pReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pReader" Type="ISymUnmanagedReader*" />
      </Parameters>
      <Docs>
        <param name="pReader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymReader(System::Diagnostics::SymbolStore::Private::ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymReader : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader&gt; -&gt; System.Diagnostics.SymbolStore.SymReader" Usage="new System.Diagnostics.SymbolStore.SymReader pReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pReader" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*" />
      </Parameters>
      <Docs>
        <param name="pReader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symReader.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symReader.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse contenute nell'istanza corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Usare il <xref:System.Diagnostics.SymbolStore.SymReader.Finalize> metodo per rilasciare le risorse.
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rilascia le risorse usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symReader.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <see langword="true" /> per rilasciare le risorse gestite e non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Oggetto chiamato dai metodi <see cref="M:System.Diagnostics.SymbolStore.SymReader.Dispose" /> e <see cref="M:System.Diagnostics.SymbolStore.SymReader.Finalize" /> per rilasciare le risorse gestite e non gestite usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato solo da parte del pubblico <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> e <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> metodi; non chiamare direttamente questo metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che la classe <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> venga recuperata tramite Garbage Collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esegue l'override di questo metodo <xref:System.Object.Finalize%2A>. Il codice dell'applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che non la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A> (metodo).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument GetDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocument ^ GetDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="abstract member GetDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocument&#xA;override this.GetDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocument" Usage="symReader.GetDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url">URL identificativo del documento.</param>
        <param name="language">Linguaggio del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" />. per indicare qualsiasi linguaggio.</param>
        <param name="languageVendor">Identità del fornitore del linguaggio del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" /> per indicare qualsiasi fornitore di linguaggio.</param>
        <param name="documentType">Tipo del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" /> per indicare qualsiasi tipo di documento.</param>
        <summary>Ottiene un documento specificato in base all'URL per il documento e facoltativamente al linguaggio, al fornitore di linguaggio e al tipo.</summary>
        <returns>Documento con l'URL specificato, se è stato trovato nell'archivio simboli oppure <see langword="null" /> se il documento non esiste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `language`, `languageVendor`, e `documentType` parametri attualmente vengono ignorati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocuments">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocuments () As ISymbolDocument()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ GetDocuments();" />
      <MemberSignature Language="F#" Value="abstract member GetDocuments : unit -&gt; System.Diagnostics.SymbolStore.ISymbolDocument[]&#xA;override this.GetDocuments : unit -&gt; System.Diagnostics.SymbolStore.ISymbolDocument[]" Usage="symReader.GetDocuments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matrice di tutti i documenti definiti nell'archivio simboli.</summary>
        <returns>Matrice di tutti i documenti definiti nell'archivio simboli.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">Memoria insufficiente per soddisfare la richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalVariables () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetGlobalVariables();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalVariables : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetGlobalVariables : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symReader.GetGlobalVariables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</summary>
        <returns>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">In tutti i casi.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene un oggetto del metodo del lettore di simboli.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethod method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method">Token di metadati del metodo.</param>
        <summary>Recupera un oggetto del metodo del lettore di simboli, quando viene specificato l'identificatore di un metodo.</summary>
        <returns>Oggetto del metodo del lettore di simboli dell'identificatore del metodo specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method, int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken, version As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method, int version);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : System.Diagnostics.SymbolStore.SymbolToken * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethod : System.Diagnostics.SymbolStore.SymbolToken * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethod (method, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="method">Token di metadati del metodo.</param>
        <param name="version">Versione continua e di modifica del metodo.</param>
        <summary>Recupera un oggetto del metodo del lettore di simboli, quando viene specificato l'identificatore di un metodo e la versione continua e di modifica.</summary>
        <returns>Oggetto del metodo del lettore di simboli per l'identificatore e la versione del metodo specificati.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodFromDocumentPosition">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethodFromDocumentPosition (document As ISymbolDocument, line As Integer, column As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethodFromDocumentPosition(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetMethodFromDocumentPosition : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethodFromDocumentPosition : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethodFromDocumentPosition (document, line, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document">Documento in cui è contenuto il metodo.</param>
        <param name="line">Posizione della riga all'interno del documento. Le righe sono numerate, partendo da 1.</param>
        <param name="column">Posizione della colonna all'interno del documento. Le colonne sono numerate, partendo da 1.</param>
        <summary>Recupera un oggetto del metodo del lettore di simboli che contiene una posizione specificata in un documento.</summary>
        <returns>Oggetto del metodo del lettore di simboli relativo alla posizione specificata nel documento.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaces () As ISymbolNamespace()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolNamespace ^&gt; ^ GetNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]&#xA;override this.GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]" Usage="symReader.GetNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</summary>
        <returns>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">In tutti i casi.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSymAttribute (parent As SymbolToken, name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string -&gt; byte[]&#xA;override this.GetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string -&gt; byte[]" Usage="symReader.GetSymAttribute (parent, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">Questo parametro non viene usato.</param>
        <param name="name">Questo parametro non viene usato.</param>
        <summary>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</summary>
        <returns>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">In tutti i casi.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables(valuetype System.Diagnostics.SymbolStore.SymbolToken parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVariables (parent As SymbolToken) As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetVariables(System::Diagnostics::SymbolStore::SymbolToken parent);" />
      <MemberSignature Language="F#" Value="abstract member GetVariables : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetVariables : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symReader.GetVariables parent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="parent">Questo parametro non viene usato.</param>
        <summary>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</summary>
        <returns>Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">In tutti i casi.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSymbolStore : string * nativeint -&gt; unit&#xA;override this.ReplaceSymbolStore : string * nativeint -&gt; unit" Usage="symReader.ReplaceSymbolStore (fileName, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome del file contenente l'archivio simboli oppure <see langword="null" /> se viene usato un archivio in memoria.</param>
        <param name="stream">Puntatore al flusso di input per l'archivio simboli oppure <see cref="F:System.IntPtr.Zero" /> se viene usato un archivio su disco.</param>
        <summary>Sostituisce l'archivio dei simboli esistente con un archivio dei simboli delta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> è analogo a quello di <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> (metodo), ma il valore delta specificato funziona come una sostituzione completa anziché un aggiornamento.  
  
 Solo uno dei parametri `fileName` o `stream`, deve essere specificata. Se `fileName` viene specificato, l'archivio dei simboli viene aggiornato con i simboli in tale file. Se `stream` viene specificato, l'archivio dei simboli viene aggiornato con i dati di <xref:System.Runtime.InteropServices.ComTypes.IStream> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void UpdateSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberSignature Language="F#" Value="abstract member UpdateSymbolStore : string * nativeint -&gt; unit&#xA;override this.UpdateSymbolStore : string * nativeint -&gt; unit" Usage="symReader.UpdateSymbolStore (fileName, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome del file contenente l'archivio simboli oppure <see langword="null" /> se viene usato un archivio in memoria.</param>
        <param name="stream">Puntatore al flusso di input per l'archivio simboli oppure <see cref="F:System.IntPtr.Zero" /> se viene usato un archivio su disco.</param>
        <summary>Aggiorna l'archivio dei simboli esistente con un archivio dei simboli delta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato in scenari di modifica e continuazione come un modo per aggiornare l'archivio dei simboli in modo che corrispondano ai file PE originale delta.  
  
 Solo uno dei parametri `fileName` o `stream`, deve essere specificata. Se `fileName` viene specificato, l'archivio dei simboli viene aggiornato con i simboli in tale file. Se `stream` viene specificato, l'archivio dei simboli viene aggiornato con i dati di <xref:System.Runtime.InteropServices.ComTypes.IStream> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymReader.UserEntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserEntryPoint As SymbolToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::SymbolToken UserEntryPoint { System::Diagnostics::SymbolStore::SymbolToken get(); };" />
      <MemberSignature Language="F#" Value="member this.UserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken" Usage="System.Diagnostics.SymbolStore.SymReader.UserEntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.SymbolToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera il token di metadati per il metodo specificato come punto di ingresso utente per il modulo, se presente.</summary>
        <value>Token di metadati per il metodo che corrisponde al punto di ingresso dell'utente per il modulo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito è in genere il metodo principale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Un punto di ingresso non è stato trovato.</exception>
      </Docs>
    </Member>
  </Members>
</Type>