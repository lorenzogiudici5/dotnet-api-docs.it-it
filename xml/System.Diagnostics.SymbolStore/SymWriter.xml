<Type Name="SymWriter" FullName="System.Diagnostics.SymbolStore.SymWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="786e288f5cbb0cb96a8509214e0b0c42885f319c" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52591037" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymWriter extends System.Diagnostics.SymbolStore.SymWriterBase implements class System.Diagnostics.SymbolStore.ISymbolWriter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class SymWriter&#xA;Inherits SymWriterBase&#xA;Implements IDisposable, ISymbolWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymWriter : System::Diagnostics::SymbolStore::SymWriterBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolWriter" />
  <TypeSignature Language="F#" Value="type SymWriter = class&#xA;    inherit SymWriterBase&#xA;    interface ISymbolWriter&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymWriterBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolWriter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5a86a-101">Rappresenta un writer di simboli per codice gestito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a86a-101">Represents a symbol writer for managed code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-102">Il <xref:System.Diagnostics.SymbolStore.SymWriter> classe fornisce metodi che definiscono i documenti, i punti di sequenza, gli ambiti lessicali e variabili.</span><span class="sxs-lookup"><span data-stu-id="5a86a-102">The <xref:System.Diagnostics.SymbolStore.SymWriter> class provides methods that define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-103">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-103">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5a86a-104">Per poter accedere a codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-104">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter(bool noUnderlyingWriter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymWriter : bool -&gt; System.Diagnostics.SymbolStore.SymWriter" Usage="new System.Diagnostics.SymbolStore.SymWriter noUnderlyingWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter">
          <span data-ttu-id="5a86a-105">
            <see langword="true" /> se viene fornito un writer di simboli sottostante mediante la chiamata al metodo <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />; <see langword="false" /> se deve essere creato un writer di simboli sottostante predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-105">
              <see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-106">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> specificando se creare un writer di simboli sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-106">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class, specifying whether to create an underlying symbol writer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symWriter.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-107">Rilascia le risorse mantenute dall'istanza corrente dell'oggetto <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-107">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="5a86a-108">Usare il <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> metodo per rilasciare le risorse.</span><span class="sxs-lookup"><span data-stu-id="5a86a-108">Use the <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symWriter.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-109">Rilascia le risorse mantenute dall'istanza corrente dell'oggetto <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-109">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="5a86a-110">Usare il <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> metodo per rilasciare le risorse.</span><span class="sxs-lookup"><span data-stu-id="5a86a-110">Use the <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="symWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-111">Chiude <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> e inserisce i simboli nel relativo archivio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-111">Closes the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> and commits the symbols to the symbol store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-112">Dopo questa chiamata, il <xref:System.Diagnostics.SymbolStore.SymWriter> diventa non valido per altri aggiornamenti.</span><span class="sxs-lookup"><span data-stu-id="5a86a-112">After this call, the <xref:System.Diagnostics.SymbolStore.SymWriter> becomes invalid for further updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseMethod">
      <MemberSignature Language="C#" Value="public virtual void CloseMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseMethod();" />
      <MemberSignature Language="F#" Value="abstract member CloseMethod : unit -&gt; unit&#xA;override this.CloseMethod : unit -&gt; unit" Usage="symWriter.CloseMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-113">Chiude il metodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-113">Closes the current method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-114">Dopo la chiusura di un metodo, è possibile definire un simbolo da all'interno del metodo.</span><span class="sxs-lookup"><span data-stu-id="5a86a-114">After a method is closed, you cannot define a symbol from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseNamespace">
      <MemberSignature Language="C#" Value="public virtual void CloseNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseNamespace();" />
      <MemberSignature Language="F#" Value="abstract member CloseNamespace : unit -&gt; unit&#xA;override this.CloseNamespace : unit -&gt; unit" Usage="symWriter.CloseNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-115">Chiude l'ultimo spazio dei nomi aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-115">Closes the most recent namespace.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseScope">
      <MemberSignature Language="C#" Value="public virtual void CloseScope (int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseScope(int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseScope (endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseScope(int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member CloseScope : int -&gt; unit&#xA;override this.CloseScope : int -&gt; unit" Usage="symWriter.CloseScope endOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endOffset">
          <span data-ttu-id="5a86a-116">Offset IL successivo all'ultima istruzione nell'ambito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-116">The IL offset just past the last instruction in the scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-117">Chiude l'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-117">Closes the current lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-118">Dopo la chiusura di un ambito, è possibile definire una variabile dall'interno del metodo.</span><span class="sxs-lookup"><span data-stu-id="5a86a-118">After a scope is closed, you cannot define a variable from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="abstract member DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter&#xA;override this.DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="symWriter.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="5a86a-119">URL identificativo del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-119">The URL that identifies the document.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="5a86a-120">Linguaggio del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-120">The document language.</span>
          </span>
          <span data-ttu-id="5a86a-121">Questo parametro può essere <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-121">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="5a86a-122">Identità del fornitore del linguaggio del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-122">The identity of the vendor for the document language.</span>
          </span>
          <span data-ttu-id="5a86a-123">Questo parametro può essere <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-123">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="documentType">
          <span data-ttu-id="5a86a-124">Tipo del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-124">The type of the document.</span>
          </span>
          <span data-ttu-id="5a86a-125">Questo parametro può essere <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-125">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-126">Definisce un documento di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-126">Defines a source document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a86a-127">Oggetto <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> che rappresenta il documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-127">The <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> object that represents the document.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineField(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineField (parent As SymbolToken, name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineField(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineField : System.Diagnostics.SymbolStore.SymbolToken * string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineField : System.Diagnostics.SymbolStore.SymbolToken * string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineField (parent, name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="5a86a-128">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-128">This parameter is not used.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5a86a-129">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-129">This parameter is not used.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="5a86a-130">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-130">This parameter is not used.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="5a86a-131">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-131">This parameter is not used.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="5a86a-132">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-132">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="5a86a-133">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-133">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="5a86a-134">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-134">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="5a86a-135">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-135">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-136">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-136">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5a86a-137">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-137">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineGlobalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineGlobalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineGlobalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineGlobalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineGlobalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineGlobalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5a86a-138">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-138">This parameter is not used.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="5a86a-139">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-139">This parameter is not used.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="5a86a-140">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-140">This parameter is not used.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="5a86a-141">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-141">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="5a86a-142">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-142">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="5a86a-143">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-143">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="5a86a-144">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-144">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-145">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-145">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5a86a-146">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-146">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineLocalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineLocalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineLocalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineLocalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member DefineLocalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int * int * int -&gt; unit&#xA;override this.DefineLocalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int * int * int -&gt; unit" Usage="symWriter.DefineLocalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5a86a-147">Nome della variabile locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-147">The local variable name.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="5a86a-148">Attributi della variabile locale specificati mediante l'enumeratore <see cref="T:System.Reflection.FieldAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-148">The local variable attributes specified using the <see cref="T:System.Reflection.FieldAttributes" /> enumerator.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="5a86a-149">Firma della variabile locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-149">The local variable signature.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="5a86a-150">Tipi dell'indirizzo per <paramref name="addr1" />, <paramref name="addr2" /> e <paramref name="addr3" /> mediante <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-150">The address types for <paramref name="addr1" />, <paramref name="addr2" />, and <paramref name="addr3" /> using <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="5a86a-151">Primo indirizzo relativo alla variabile locale specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-151">The first address for the local variable specification.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="5a86a-152">Secondo indirizzo relativo alla variabile locale specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-152">The second address for the local variable specification.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="5a86a-153">Terzo indirizzo relativo alla variabile locale specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-153">The third address for the local variable specification.</span>
          </span>
        </param>
        <param name="startOffset">
          <span data-ttu-id="5a86a-154">Offset iniziale della variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-154">The start offset for the variable.</span>
          </span>
          <span data-ttu-id="5a86a-155">Se ha valore zero, il parametro sarà ignorato e la variabile sarà definita nell'intero ambito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-155">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span>
          </span>
          <span data-ttu-id="5a86a-156">Se ha valore diverso da zero, il parametro rientrerà negli offset dell'ambito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-156">If nonzero, it falls within the offsets of the current scope.</span>
          </span>
        </param>
        <param name="endOffset">
          <span data-ttu-id="5a86a-157">Offset finale della variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-157">The end offset for the variable.</span>
          </span>
          <span data-ttu-id="5a86a-158">Se ha valore zero, il parametro sarà ignorato e la variabile sarà definita nell'intero ambito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-158">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span>
          </span>
          <span data-ttu-id="5a86a-159">Se ha valore diverso da zero, il parametro rientrerà negli offset dell'ambito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-159">If nonzero, it falls within the offsets of the current scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-160">Definisce una singola variabile nell'ambito lessicale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-160">Defines a single variable in the current lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-161">Il `startOffset` e `endOffset` parametri sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="5a86a-161">The `startOffset` and `endOffset` parameters are optional.</span></span> <span data-ttu-id="5a86a-162">Se il valore è zero, vengono ignorati e la variabile viene definita nell'intero ambito.</span><span class="sxs-lookup"><span data-stu-id="5a86a-162">If their value is zero, they are ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="5a86a-163">Se il valore è diverso da zero, si trovano negli offset dell'ambito corrente.</span><span class="sxs-lookup"><span data-stu-id="5a86a-163">If their value is nonzero, they fall within the offsets of the current scope.</span></span>  
  
 <span data-ttu-id="5a86a-164">È possibile chiamare <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> più volte per una variabile con lo stesso nome che si verifica più volte in diversi intervalli di offset un ambito.</span><span class="sxs-lookup"><span data-stu-id="5a86a-164">You can call <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</span></span> <span data-ttu-id="5a86a-165">(In questo caso, offset iniziali e finali non devono sovrapporsi.)</span><span class="sxs-lookup"><span data-stu-id="5a86a-165">(In this case, start and end offsets must not overlap.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineParameter(string name, valuetype System.Reflection.ParameterAttributes attributes, int32 sequence, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineParameter (name As String, attributes As ParameterAttributes, sequence As Integer, addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineParameter(System::String ^ name, System::Reflection::ParameterAttributes attributes, int sequence, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineParameter : string * System.Reflection.ParameterAttributes * int * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineParameter : string * System.Reflection.ParameterAttributes * int * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineParameter (name, attributes, sequence, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5a86a-166">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-166">This parameter is not used.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="5a86a-167">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-167">This parameter is not used.</span>
          </span>
        </param>
        <param name="sequence">
          <span data-ttu-id="5a86a-168">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-168">This parameter is not used.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="5a86a-169">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-169">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="5a86a-170">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-170">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="5a86a-171">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-171">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="5a86a-172">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-172">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-173">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-173">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5a86a-174">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-174">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineSequencePoints">
      <MemberSignature Language="C#" Value="public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineSequencePoints(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int32[] offsets, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineSequencePoints (document As ISymbolDocumentWriter, offsets As Integer(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineSequencePoints(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ document, cli::array &lt;int&gt; ^ offsets, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberSignature Language="F#" Value="abstract member DefineSequencePoints : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int[] * int[] * int[] * int[] * int[] -&gt; unit&#xA;override this.DefineSequencePoints : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int[] * int[] * int[] * int[] * int[] -&gt; unit" Usage="symWriter.DefineSequencePoints (document, offsets, lines, columns, endLines, endColumns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="5a86a-175">Oggetto del documento per il quale definire i punti di sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-175">The document object for which the sequence points are being defined.</span>
          </span>
        </param>
        <param name="offsets">
          <span data-ttu-id="5a86a-176">Offset IL dei punti di sequenza misurato a partire dall'inizio del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-176">The IL offset of the sequence points measured from the beginning of the method.</span>
          </span>
        </param>
        <param name="lines">
          <span data-ttu-id="5a86a-177">Numeri di riga iniziali dei punti di sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-177">The starting line numbers of the sequence points.</span>
          </span>
        </param>
        <param name="columns">
          <span data-ttu-id="5a86a-178">Numeri di colonna iniziali dei punti di sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-178">The starting column numbers of the sequence points.</span>
          </span>
        </param>
        <param name="endLines">
          <span data-ttu-id="5a86a-179">Numeri di riga finali dei punti di sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-179">The ending line numbers of the sequence points.</span>
          </span>
        </param>
        <param name="endColumns">
          <span data-ttu-id="5a86a-180">Numeri di colonna finali dei punti di sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-180">The ending column numbers of the sequence points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-181">Definisce un gruppo di punti di sequenza nel metodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-181">Defines a group of sequence points within the current method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-182">Punti di sequenza vengono utilizzati per eseguire il mapping tra i percorsi di file di origine e gli offset IL.</span><span class="sxs-lookup"><span data-stu-id="5a86a-182">Sequence points are used to map between source file locations and IL offsets.</span></span>  <span data-ttu-id="5a86a-183">Ogni punto di sequenza è costituito da un linguaggio intermedio offset e l'origine file area, specificata dall'inizio e fine riga/colonna di numeri relativo a un <xref:System.Diagnostics.SymbolStore.ISymbolDocument> oggetto.</span><span class="sxs-lookup"><span data-stu-id="5a86a-183">Each sequence point consists of an IL offset and source file region, specified by start and end line/column numbers relative to an <xref:System.Diagnostics.SymbolStore.ISymbolDocument> object.</span></span>  <span data-ttu-id="5a86a-184">Ogni elemento in corrispondenza dell'indice specifico di ogni matrice corrisponde a un punto di sequenza specifica.</span><span class="sxs-lookup"><span data-stu-id="5a86a-184">Each element at a specific index of every array corresponds to a specific sequence point.</span></span> <span data-ttu-id="5a86a-185">Ogni riga e ogni colonna definisce l'inizio di un'istruzione all'interno di un metodo.</span><span class="sxs-lookup"><span data-stu-id="5a86a-185">Each line and each column defines the start of a statement within a method.</span></span> <span data-ttu-id="5a86a-186">Le matrici devono essere disposti in ordine crescente di offset.</span><span class="sxs-lookup"><span data-stu-id="5a86a-186">The arrays should be sorted in the increasing order of offsets.</span></span> <span data-ttu-id="5a86a-187">L'offset è sempre l'offset dall'inizio del metodo, in byte.</span><span class="sxs-lookup"><span data-stu-id="5a86a-187">The offset is always the offset from the start of the method, in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-188">Rilascia le risorse usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-188">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symWriter.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="5a86a-189">
            <see langword="true" /> per rilasciare le risorse gestite e non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-189">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-190">Oggetto chiamato dai metodi <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> e <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> per rilasciare le risorse gestite e non gestite usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-190">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-191">Questo metodo viene chiamato solo da parte del pubblico <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> e <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> metodi; non chiamare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="5a86a-191">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymWriter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symWriter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-192">Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che la classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> venga recuperata tramite Garbage Collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-192">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-193">Esegue l'override di questo metodo <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="5a86a-193">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="5a86a-194">Il codice dell'applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che non la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="5a86a-194">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWriter">
      <MemberSignature Language="C#" Value="public ISymUnmanagedWriter* GetWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance ISymUnmanagedWriter* GetWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.GetWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ISymUnmanagedWriter* GetWriter();" />
      <MemberSignature Language="F#" Value="member this.GetWriter : unit -&gt; nativeptr&lt;ISymUnmanagedWriter&gt;" Usage="symWriter.GetWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ISymUnmanagedWriter*</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a86a-195">Ottiene il writer di simboli sottostante non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-195">Gets the underlying unmanaged symbol writer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a86a-196">Puntatore raw al writer di simboli sottostante non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-196">A raw pointer to the underlying unmanaged symbol writer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(native int emitter, string filename, bool fFullBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (emitter As IntPtr, filename As String, fFullBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(IntPtr emitter, System::String ^ filename, bool fFullBuild);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : nativeint * string * bool -&gt; unit&#xA;override this.Initialize : nativeint * string * bool -&gt; unit" Usage="symWriter.Initialize (emitter, filename, fFullBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitter" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fFullBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emitter">
          <span data-ttu-id="5a86a-197">Interfaccia di emissione dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-197">The metadata emitter interface.</span>
          </span>
        </param>
        <param name="filename">
          <span data-ttu-id="5a86a-198">Nome del file per il quale vengono scritti i simboli di debug.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-198">The file name for which the debugging symbols are written.</span>
          </span>
          <span data-ttu-id="5a86a-199">Per alcuni writer è richiesto un nome file, per altri questo parametro non è necessario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-199">Some writers require a file name, while others do not.</span>
          </span>
          <span data-ttu-id="5a86a-200">Se specificato per un writer che non usa i nomi file, il parametro sarà ignorato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-200">If a file name is specified for a writer that does not use file names, this parameter is ignored.</span>
          </span>
        </param>
        <param name="fFullBuild">
          <span data-ttu-id="5a86a-201">
            <see langword="true" /> indica una ricompilazione completa, <see langword="false" /> indica una compilazione incrementale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-201">
              <see langword="true" /> indicates that this is a full rebuild; <see langword="false" /> indicates an incremental compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-202">Imposta l'interfaccia di emissione dei metadati da associare a questo writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-202">Sets the metadata emitter interface to associate with this writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-203"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> imposta anche il nome del file di output in cui vengono scritti i simboli di debug.</span><span class="sxs-lookup"><span data-stu-id="5a86a-203"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> also sets the output file name where the debugging symbols are written.</span></span> <span data-ttu-id="5a86a-204">Questo metodo può essere chiamato una sola volta e deve essere chiamato prima degli altri metodi di scrittura vengono chiamati.</span><span class="sxs-lookup"><span data-stu-id="5a86a-204">This method can be called only once and must be called before any other writer methods are called.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5a86a-205">Per poter accedere a codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-205">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InitWriter">
      <MemberSignature Language="C#" Value="public void InitWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitWriter(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitWriter (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitWriter(bool noUnderlyingWriter);" />
      <MemberSignature Language="F#" Value="member this.InitWriter : bool -&gt; unit" Usage="symWriter.InitWriter noUnderlyingWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter">
          <span data-ttu-id="5a86a-206">
            <see langword="true" /> se viene fornito un writer di simboli sottostante mediante la chiamata al metodo <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />; <see langword="false" /> se deve essere creato un writer di simboli sottostante predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-206">
              <see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-207">Inizializza il writer di simboli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-207">Initializes the symbol writer.</span>
          </span>
          <span data-ttu-id="5a86a-208">Questo metodo non deve essere chiamato direttamente, ma viene chiamato dal costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-208">This method should not be called directly; it is called by the constructor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5a86a-209">Per poter accedere a codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-209">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OpenMethod">
      <MemberSignature Language="C#" Value="public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenMethod (method As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberSignature Language="F#" Value="abstract member OpenMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit&#xA;override this.OpenMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="symWriter.OpenMethod method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5a86a-210">Token di metadati per il metodo da aprire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-210">The metadata token for the method to be opened.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-211">Apre un metodo in cui inserire informazioni sui simboli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-211">Opens a method in which to place symbol information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-212">Il metodo specificato diventa il metodo corrente per le chiamate definire punti di sequenza, parametri e gli ambiti lessicali.</span><span class="sxs-lookup"><span data-stu-id="5a86a-212">The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</span></span> <span data-ttu-id="5a86a-213">È un ambito lessicale implicito l'intero metodo.</span><span class="sxs-lookup"><span data-stu-id="5a86a-213">There is an implicit lexical scope around the entire method.</span></span> <span data-ttu-id="5a86a-214">La riapertura di un metodo che è stata chiusa in precedenza verranno cancellati i simboli definiti in precedenza per il metodo.</span><span class="sxs-lookup"><span data-stu-id="5a86a-214">Reopening a method that has been previously closed erases any previously defined symbols for the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNamespace">
      <MemberSignature Language="C#" Value="public virtual void OpenNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenNamespace (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member OpenNamespace : string -&gt; unit&#xA;override this.OpenNamespace : string -&gt; unit" Usage="symWriter.OpenNamespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5a86a-215">Nome del nuovo spazio dei nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-215">The name of the new namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-216">Apre un nuovo spazio dei nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-216">Opens a new namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-217">Chiamare questo metodo prima di definire i metodi o le variabili esistenti all'interno di uno spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="5a86a-217">Call this method before defining methods or variables that exist within a namespace.</span></span> <span data-ttu-id="5a86a-218">Gli spazi dei nomi possono essere annidate.</span><span class="sxs-lookup"><span data-stu-id="5a86a-218">Namespaces can be nested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenScope">
      <MemberSignature Language="C#" Value="public virtual int OpenScope (int startOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 OpenScope(int32 startOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenScope (startOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int OpenScope(int startOffset);" />
      <MemberSignature Language="F#" Value="abstract member OpenScope : int -&gt; int&#xA;override this.OpenScope : int -&gt; int" Usage="symWriter.OpenScope startOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startOffset">
          <span data-ttu-id="5a86a-219">Offset IL in byte a partire dall'inizio del metodo alla prima istruzione dell'ambito lessicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-219">The IL offset in bytes from the beginning of the method to the first instruction in the lexical scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-220">Apre un nuovo ambito lessicale nel metodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-220">Opens a new lexical scope in the current method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a86a-221">Identificatore di ambito opaco che può essere usato con il metodo <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> per definire gli offset iniziali e finali di un ambito successivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-221">An opaque scope identifier that can be used with <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> to define the start and end offsets of a scope at a later time.</span>
          </span>
          <span data-ttu-id="5a86a-222">In questo caso, gli offset passati a <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> e <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> saranno ignorati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-222">In this case, the offsets passed to <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> are ignored.</span>
          </span>
          <span data-ttu-id="5a86a-223">Un identificatore di ambito è valido solo nel metodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-223">A scope identifier is valid only in the current method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-224">In questo ambito diventa il nuovo ambito corrente e viene inserito nello stack di ambiti.</span><span class="sxs-lookup"><span data-stu-id="5a86a-224">This scope becomes the new current scope and is pushed onto a stack of scopes.</span></span> <span data-ttu-id="5a86a-225">Gli ambiti devono formare una gerarchia.</span><span class="sxs-lookup"><span data-stu-id="5a86a-225">Scopes must form a hierarchy.</span></span> <span data-ttu-id="5a86a-226">Elementi di pari livello non possono sovrapporsi.</span><span class="sxs-lookup"><span data-stu-id="5a86a-226">Siblings are not allowed to overlap.</span></span>  
  
 <span data-ttu-id="5a86a-227">Gli identificatori di ambito solo sono validi nel metodo corrente.</span><span class="sxs-lookup"><span data-stu-id="5a86a-227">Scope identifiers are only valid in the current method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethodSourceRange">
      <MemberSignature Language="C#" Value="public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMethodSourceRange(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int32 startLine, int32 startColumn, class System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMethodSourceRange (startDoc As ISymbolDocumentWriter, startLine As Integer, startColumn As Integer, endDoc As ISymbolDocumentWriter, endLine As Integer, endColumn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMethodSourceRange(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ startDoc, int startLine, int startColumn, System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="F#" Value="abstract member SetMethodSourceRange : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int * System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int -&gt; unit&#xA;override this.SetMethodSourceRange : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int * System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int -&gt; unit" Usage="symWriter.SetMethodSourceRange (startDoc, startLine, startColumn, endDoc, endLine, endColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startDoc">
          <span data-ttu-id="5a86a-228">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-228">This parameter is not used.</span>
          </span>
        </param>
        <param name="startLine">
          <span data-ttu-id="5a86a-229">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-229">This parameter is not used.</span>
          </span>
        </param>
        <param name="startColumn">
          <span data-ttu-id="5a86a-230">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-230">This parameter is not used.</span>
          </span>
        </param>
        <param name="endDoc">
          <span data-ttu-id="5a86a-231">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-231">This parameter is not used.</span>
          </span>
        </param>
        <param name="endLine">
          <span data-ttu-id="5a86a-232">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-232">This parameter is not used.</span>
          </span>
        </param>
        <param name="endColumn">
          <span data-ttu-id="5a86a-233">Questo parametro non viene usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-233">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-234">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-234">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5a86a-235">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-235">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopeRange">
      <MemberSignature Language="C#" Value="public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScopeRange(int32 scopeID, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScopeRange (scopeID As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScopeRange(int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member SetScopeRange : int * int * int -&gt; unit&#xA;override this.SetScopeRange : int * int * int -&gt; unit" Usage="symWriter.SetScopeRange (scopeID, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeID" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scopeID">
          <span data-ttu-id="5a86a-236">Identificatore dell'ambito lessicale restituito dal metodo <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-236">The identifier of the lexical scope returned by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> method.</span>
          </span>
        </param>
        <param name="startOffset">
          <span data-ttu-id="5a86a-237">Offset IL dell'inizio dell'ambito lessicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-237">The IL offset of the beginning of the lexical scope.</span>
          </span>
        </param>
        <param name="endOffset">
          <span data-ttu-id="5a86a-238">Offset IL della fine dell'ambito lessicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-238">The IL offset of the end of the lexical scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-239">Definisce l'intervallo di offset per l'ambito lessicale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-239">Defines the offset range for the specified lexical scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSymAttribute (parent As SymbolToken, name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string * byte[] -&gt; unit&#xA;override this.SetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string * byte[] -&gt; unit" Usage="symWriter.SetSymAttribute (parent, name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="5a86a-240">Token di metadati per il quale definire l'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-240">The metadata token for which the attribute is being defined.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5a86a-241">Nome dell'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-241">The attribute name.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="5a86a-242">Valore dell'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-242">The attribute value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-243">Definisce un attributo, quando vengono specificati il nome e il valore dell'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-243">Defines an attribute when given the attribute name and the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-244">Il <xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> metodo è solo con informazioni simboliche associate e non è un attributo personalizzato di metadati.</span><span class="sxs-lookup"><span data-stu-id="5a86a-244">The <xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> method is only associated with symbolic information and is not a metadata custom attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUnderlyingWriter">
      <MemberSignature Language="C#" Value="public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUnderlyingWriter(native int underlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUnderlyingWriter (underlyingWriter As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUnderlyingWriter(IntPtr underlyingWriter);" />
      <MemberSignature Language="F#" Value="abstract member SetUnderlyingWriter : nativeint -&gt; unit&#xA;override this.SetUnderlyingWriter : nativeint -&gt; unit" Usage="symWriter.SetUnderlyingWriter underlyingWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="underlyingWriter" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="underlyingWriter">
          <span data-ttu-id="5a86a-245">Puntatore di tipo <see cref="T:System.IntPtr" /> al codice che corrisponde al sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-245">An <see cref="T:System.IntPtr" /> type pointer to code that is the underlying writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-246">Imposta l'[interfaccia ISymUnmanagedWriter](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) sottostante, ovvero l'API non gestita corrispondente, usata da un oggetto <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> gestito per emettere i simboli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-246">Sets the underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) that a managed <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> uses to emit symbols.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-247">Sottostante [interfaccia ISymUnmanagedWriter](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (API non gestita corrispondente) interfaccia rappresenta un writer di simboli per codice gestito.</span><span class="sxs-lookup"><span data-stu-id="5a86a-247">The underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) interface represents a symbol writer for managed code.</span></span> <span data-ttu-id="5a86a-248">L'interfaccia fornisce metodi per definire punti di sequenza, gli ambiti lessicali, variabili e documenti.</span><span class="sxs-lookup"><span data-stu-id="5a86a-248">The interface provides methods to define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5a86a-249">Per poter accedere a codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-249">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserEntryPoint(valuetype System.Diagnostics.SymbolStore.SymbolToken entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUserEntryPoint (entryMethod As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUserEntryPoint(System::Diagnostics::SymbolStore::SymbolToken entryMethod);" />
      <MemberSignature Language="F#" Value="abstract member SetUserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit&#xA;override this.SetUserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="symWriter.SetUserEntryPoint entryMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="5a86a-250">Token di metadati per il metodo che corrisponde al punto di ingresso dell'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-250">The metadata token for the method that is the user entry point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-251">Identifica il metodo definito dall'utente come punto di ingresso per il modulo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-251">Identifies the user-defined method as the entry point for the current module.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-252">Si tratta in genere il metodo principale.</span><span class="sxs-lookup"><span data-stu-id="5a86a-252">This is normally the main method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingNamespace">
      <MemberSignature Language="C#" Value="public virtual void UsingNamespace (string fullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UsingNamespace(string fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UsingNamespace (fullName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UsingNamespace(System::String ^ fullName);" />
      <MemberSignature Language="F#" Value="abstract member UsingNamespace : string -&gt; unit&#xA;override this.UsingNamespace : string -&gt; unit" Usage="symWriter.UsingNamespace fullName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullName">
          <span data-ttu-id="5a86a-253">Nome completo dello spazio dei nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-253">The fully qualified name of the namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a86a-254">Specifica che il nome dello spazio dei nomi completo viene usato all'interno dell'ambito lessicale aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a86a-254">Specifies that the given, fully qualified namespace name is used within the open lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a86a-255">La chiusura dell'ambito corrente non può essere utilizzato con lo spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="5a86a-255">Closing the current scope prevents this scope from using the namespace.</span></span> <span data-ttu-id="5a86a-256">Lo spazio dei nomi viene usata in tutti gli ambiti che ereditano dall'ambito corrente aperto.</span><span class="sxs-lookup"><span data-stu-id="5a86a-256">The namespace remains in use in all scopes that inherit from the current open scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>