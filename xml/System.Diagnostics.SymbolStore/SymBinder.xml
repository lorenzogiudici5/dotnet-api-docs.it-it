<Type Name="SymBinder" FullName="System.Diagnostics.SymbolStore.SymBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4968d66cc658965bd0e51f43752ae43454a327f1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30397605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymBinder : System.Diagnostics.SymbolStore.SymBinderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolBinder, System.Diagnostics.SymbolStore.ISymbolBinder1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymBinder extends System.Diagnostics.SymbolStore.SymBinderBase implements class System.Diagnostics.SymbolStore.ISymbolBinder, class System.Diagnostics.SymbolStore.ISymbolBinder1, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymBinder" />
  <TypeSignature Language="VB.NET" Value="Public Class SymBinder&#xA;Inherits SymBinderBase&#xA;Implements IDisposable, ISymbolBinder, ISymbolBinder1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymBinder : System::Diagnostics::SymbolStore::SymBinderBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolBinder, System::Diagnostics::SymbolStore::ISymbolBinder1" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymBinderBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolBinder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolBinder1</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un raccoglitore di simboli per codice gestito.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter accedere a codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rilascia le risorse usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <see langword="true" /> per rilasciare le risorse gestite e non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Oggetto chiamato dai metodi <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" /> e <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" /> per rilasciare le risorse gestite e non gestite usate dall'istanza corrente della classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato solo dal pubblico <xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A> e <xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A> metodi; non chiamare questo metodo direttamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymBinder ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse contenute nell'istanza corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'override del metodo <xref:System.Object.Finalize%2A>. Il codice dell'applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che la finalizzazione del garbage collector non Ã¨ stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReader">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera l'interfaccia del visualizzatore dei simboli per il file corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (int importer, string filename, string searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolReader GetReader(int32 importer, string filename, string searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReader (importer As Integer, filename As String, searchPath As String) As ISymbolReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolReader ^ GetReader(int importer, System::String ^ filename, System::String ^ searchPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SymBinder.GetReader(IntPtr, String). ISymbolBinder1.GetReader takes the importer interface pointer as an IntPtr instead of an Int32, and thus works on both 32-bit and 64-bit architectures. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.Int32" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="searchPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importer">Intero a 32 bit che punta a un'interfaccia di importazione di metadati.</param>
        <param name="filename">Nome del file per cui Ã¨ richiesta l'interfaccia del visualizzatore.</param>
        <param name="searchPath">Percorso di ricerca usato per rilevare il file di simboli.</param>
        <summary>Ottiene l'interfaccia del lettore di simboli per il file corrente, usando il puntatore di tipo Integer a 32 bit a un'interfaccia di metadati, il nome di file e il percorso di ricerca specificati.</summary>
        <returns>Interfaccia che legge i simboli di debug.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene fornito un puntatore a un'interfaccia di metadati, un nome di file e un percorso di ricerca, il <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> metodo restituisce il <xref:System.Diagnostics.SymbolStore.ISymbolReader> interfaccia che legge i simboli di debug associati al modulo.  
  
> [!NOTE]
>  Intero a 32 bit come un puntatore non Ã¨ consigliabile usare. Utilizzare il <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> invece l'overload.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter accedere a codice non gestito. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (IntPtr importer, string filename, string searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolReader GetReader(native int importer, string filename, string searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReader (importer As IntPtr, filename As String, searchPath As String) As ISymbolReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolReader ^ GetReader(IntPtr importer, System::String ^ filename, System::String ^ searchPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="searchPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importer">Struttura che punta all'interfaccia di importazione dei metadati.</param>
        <param name="filename">Nome del file per cui Ã¨ richiesta l'interfaccia del visualizzatore.</param>
        <param name="searchPath">Percorso di ricerca usato per rilevare il file di simboli.</param>
        <summary>Ottiene l'interfaccia del lettore di simboli per il file corrente, usando il puntatore a un'interfaccia di metadati, il nome di file e il percorso di ricerca specificati.</summary>
        <returns>Interfaccia che legge i simboli di debug.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene fornito un puntatore a un'interfaccia di metadati, un nome di file e un percorso di ricerca, il <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> metodo restituisce il <xref:System.Diagnostics.SymbolStore.ISymbolReader> interfaccia che legge i simboli di debug associati al modulo.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter accedere a codice non gestito. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>