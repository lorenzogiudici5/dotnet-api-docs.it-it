<Type Name="ConcurrentStack&lt;T&gt;" FullName="System.Collections.Concurrent.ConcurrentStack&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b3e318570411e53e81c13a45678152be3a9ec35" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52252611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentStack&lt;T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentStack`1&lt;T&gt; extends System.Object implements class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentStack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentStack(Of T)&#xA;Implements IEnumerable(Of T), IProducerConsumerCollection(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ConcurrentStack : System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ConcurrentStack&lt;'T&gt; = class&#xA;    interface IProducerConsumerCollection&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="4faf4-101">Tipo di elementi contenuti nello stack.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4faf4-101">The type of the elements contained in the stack.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4faf4-102">Rappresenta un insieme LIFO (Last In, First Out) thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4faf4-102">Represents a thread-safe last in-first out (LIFO) collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4faf4-103"><xref:System.Collections.Concurrent.ConcurrentStack%601> implementa il <xref:System.Collections.Generic.IReadOnlyCollection%601> interfaccia inizia con il [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; nelle versioni precedenti di .NET Framework, il <xref:System.Collections.Concurrent.ConcurrentStack%601> non ha implementato questa interfaccia.</span><span class="sxs-lookup"><span data-stu-id="4faf4-103"><xref:System.Collections.Concurrent.ConcurrentStack%601> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentStack%601> class did not implement this interface.</span></span>  
  
 <span data-ttu-id="4faf4-104"><xref:System.Collections.Concurrent.ConcurrentStack%601> fornisce alcune operazioni principali:</span><span class="sxs-lookup"><span data-stu-id="4faf4-104"><xref:System.Collections.Concurrent.ConcurrentStack%601> provides a few main operations:</span></span>  
  
-   <span data-ttu-id="4faf4-105"><xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> Inserisce un elemento in cima il <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-105"><xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
-   <span data-ttu-id="4faf4-106"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> Rimuove un elemento dalla parte superiore della <xref:System.Collections.Concurrent.ConcurrentStack%601>, o restituisce `false` se l'elemento non può essere rimosso.</span><span class="sxs-lookup"><span data-stu-id="4faf4-106"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> removes an element from the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>, or returns `false` if the item cannot be removed.</span></span>  
  
-   <span data-ttu-id="4faf4-107"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPeek%2A> Restituisce un elemento che corrisponde all'inizio del <xref:System.Collections.Concurrent.ConcurrentStack%601> ma non lo rimuove dal <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-107"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPeek%2A> returns an element that is at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601> but does not remove it from the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
-   <span data-ttu-id="4faf4-108">Il <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPopRange%2A> e <xref:System.Collections.Concurrent.ConcurrentStack%601.PushRange%2A> metodi forniscono efficiente eseguire il push e si estraggono di più elementi in un'unica operazione.</span><span class="sxs-lookup"><span data-stu-id="4faf4-108">The <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPopRange%2A> and <xref:System.Collections.Concurrent.ConcurrentStack%601.PushRange%2A> methods provide efficient pushing and popping of multiple elements in a single operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4faf4-109">Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Collections.Concurrent.ConcurrentStack%601> a push e pull singoli elementi:</span><span class="sxs-lookup"><span data-stu-id="4faf4-109">The following example shows how to use a <xref:System.Collections.Concurrent.ConcurrentStack%601> to push and pop individual items:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentStack#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/cs/concstack_single.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentStack#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/vb/concstack_single.vb#1)]
  
 <span data-ttu-id="4faf4-110">Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Collections.Concurrent.ConcurrentStack%601> a push e pull gli intervalli di elementi:</span><span class="sxs-lookup"><span data-stu-id="4faf4-110">The following example shows how to use a <xref:System.Collections.Concurrent.ConcurrentStack%601> to push and pop ranges of items:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentStack#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/cs/concstack_range.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentStack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/vb/concstack_range.vb#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="4faf4-111">Tutti i membri pubblici e protetti di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> sono thread-safe e possono essere utilizzati contemporaneamente da più thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4faf4-111">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
      <span data-ttu-id="4faf4-112">Raccolte thread-safe</span>
      <span class="sxs-lookup">
        <span data-stu-id="4faf4-112">Thread-Safe Collections</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-113">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-113">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-114">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-114">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentStack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentStack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentStack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;" Usage="new System.Collections.Concurrent.ConcurrentStack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="4faf4-115">Raccolta i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-115">The collection whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-116">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> che contiene gli elementi copiati dalla raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-116">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> class that contains elements copied from the specified collection</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4faf4-117">L'argomento <paramref name="collection" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-117">The <paramref name="collection" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-118">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-118">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="concurrentStack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-119">Rimuove tutti gli oggetti da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-119">Removes all objects from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-120">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-120">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="concurrentStack.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4faf4-121">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-121">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="4faf4-122">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-122">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4faf4-123">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-123">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-124">Copia gli elementi di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-124">Copies the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4faf4-125">
            <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-125">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4faf4-126">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-126">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4faf4-127">
            <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nel <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-127">
              <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-128">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-128">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-129">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-129">Gets the number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4faf4-130">Il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-130">The number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-131">Per determinare se la raccolta contiene elementi, l'uso del <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> consiglia di proprietà invece di recuperare il numero di elementi dal <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> proprietà e il confronto con 0.</span><span class="sxs-lookup"><span data-stu-id="4faf4-131">For determining whether the collection contains any items, use of the <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> property and comparing it to 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="concurrentStack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-132">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-132">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-133">Enumeratore per l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-133">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-134">L'enumerazione rappresenta uno snapshot nel momento del contenuto dello stack.</span><span class="sxs-lookup"><span data-stu-id="4faf4-134">The enumeration represents a moment-in-time snapshot of the contents of the stack.</span></span> <span data-ttu-id="4faf4-135">Non riflette gli aggiornamenti nella raccolta dopo <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> è stato chiamato.</span><span class="sxs-lookup"><span data-stu-id="4faf4-135">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="4faf4-136">L'enumeratore è sicuro usare contemporaneamente da legge e scrive allo stack.</span><span class="sxs-lookup"><span data-stu-id="4faf4-136">The enumerator is safe to use concurrently with reads from and writes to the stack.</span></span> <span data-ttu-id="4faf4-137">L'enumeratore restituisce gli elementi in ordine LIFO (last in, First-Out).</span><span class="sxs-lookup"><span data-stu-id="4faf4-137">The enumerator returns items in LIFO (last-in, first-out) order.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-138">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-138">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-139">Ottiene un valore che indica se <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-139">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4faf4-140">True se <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> è vuoto; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-140">true if the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is empty; otherwise, false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-141">Per determinare se la raccolta contiene elementi, è consigliabile usare questa proprietà anziché il recupero del numero di elementi dal <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> proprietà e il confronto con 0.</span><span class="sxs-lookup"><span data-stu-id="4faf4-141">For determining whether the collection contains any items, use of this property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> property and comparing it to 0.</span></span> <span data-ttu-id="4faf4-142">Tuttavia, poiché questa raccolta deve essere eseguito contemporaneamente, può essere il caso che un altro thread modificherà la raccolta dopo <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> restituisce, invalidando in tal modo il risultato.</span><span class="sxs-lookup"><span data-stu-id="4faf4-142">However, as this collection is intended to be accessed concurrently, it may be the case that another thread will modify the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> returns, thus invalidating the result.</span></span>  
  
 <span data-ttu-id="4faf4-143">Per un esempio di codice, vedere <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-143">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-144">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-144">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="concurrentStack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="4faf4-145">Oggetto di cui effettuare il push in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-145">The object to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="4faf4-146">Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-146">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-147">Inserisce un oggetto all'inizio della classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-147">Inserts an object at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-148">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-148">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushRange">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <remarks />
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-149">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-149">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushRange">
      <MemberSignature Language="C#" Value="public void PushRange (T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushRange(!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushRange (items As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushRange(cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.PushRange : 'T[] -&gt; unit" Usage="concurrentStack.PushRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="4faf4-150">Oggetti di cui effettuare il push in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-150">The objects to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-151">Inserisce più oggetti all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo atomico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-151">Inserts multiple objects at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-152">Quando si aggiunge più elementi dello stack, usando PushRange è un meccanismo più efficiente rispetto all'uso di <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> un elemento alla volta.</span><span class="sxs-lookup"><span data-stu-id="4faf4-152">When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> one item at a time.</span></span> <span data-ttu-id="4faf4-153">Inoltre, PushRange garantisce che tutti gli elementi verranno aggiunti in modo atomico, vale a dire che nessun altro thread sarà in grado di inserire gli elementi tra gli elementi push.</span><span class="sxs-lookup"><span data-stu-id="4faf4-153">Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed.</span></span> <span data-ttu-id="4faf4-154">Gli elementi con indici più bassi nel `items` matrice verrà inserita prima degli elementi con gli indici superiori.</span><span class="sxs-lookup"><span data-stu-id="4faf4-154">Items at lower indices in the `items` array will be pushed before items at higher indices.</span></span>  
  
 <span data-ttu-id="4faf4-155">Per un esempio di codice, vedere <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-155">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4faf4-156">
            <paramref name="items" /> è un riferimento null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-156">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-157">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-157">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PushRange">
      <MemberSignature Language="C#" Value="public void PushRange (T[] items, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushRange(!T[] items, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushRange (items As T(), startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushRange(cli::array &lt;T&gt; ^ items, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.PushRange : 'T[] * int * int -&gt; unit" Usage="concurrentStack.PushRange (items, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="4faf4-158">Oggetti di cui effettuare il push in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-158">The objects to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4faf4-159">Offset in base zero in <paramref name="items" /> in corrispondenza del quale iniziare l'inserimento di elementi all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-159">The zero-based offset in <paramref name="items" /> at which to begin inserting elements onto the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4faf4-160">Numero di elementi da inserire all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-160">The number of elements to be inserted onto the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-161">Inserisce più oggetti all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo atomico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-161">Inserts multiple objects at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-162">Quando si aggiunge più elementi dello stack, usando PushRange è un meccanismo più efficiente rispetto all'uso di <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> un elemento alla volta.</span><span class="sxs-lookup"><span data-stu-id="4faf4-162">When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> one item at a time.</span></span> <span data-ttu-id="4faf4-163">Inoltre, PushRange garantisce che tutti gli elementi verranno aggiunti in modo atomico, vale a dire che nessun altro thread sarà in grado di inserire gli elementi tra gli elementi push.</span><span class="sxs-lookup"><span data-stu-id="4faf4-163">Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed.</span></span> <span data-ttu-id="4faf4-164">Gli elementi con indici più bassi nel `items` matrice verrà inserita prima degli elementi con gli indici superiori.</span><span class="sxs-lookup"><span data-stu-id="4faf4-164">Items at lower indices in the `items` array will be pushed before items at higher indices.</span></span>  
  
 <span data-ttu-id="4faf4-165">Per un esempio di codice, vedere <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-165">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4faf4-166">
            <paramref name="items" /> è un riferimento null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-166">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4faf4-167">
            <paramref name="startIndex" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-167">
              <paramref name="startIndex" /> or <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="4faf4-168">Oppure <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-168">Or <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4faf4-169">
            <paramref name="startIndex" /> + <paramref name="count" /> è maggiore della lunghezza di <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-169">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-170">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-170">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Function TryAdd (item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryAdd" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(T item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryAdd;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="4faf4-171">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-171">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
          <span data-ttu-id="4faf4-172">Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-172">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-173">Tenta di aggiungere un oggetto all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-173">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-174">È true se l'oggetto viene aggiunto correttamente; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-174">true if the object was added successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-175">Per la <xref:System.Collections.Concurrent.ConcurrentStack%601>, questa operazione viene sempre inserito l'oggetto all'inizio del <xref:System.Collections.Concurrent.ConcurrentStack%601> e restituire true.</span><span class="sxs-lookup"><span data-stu-id="4faf4-175">For <xref:System.Collections.Concurrent.ConcurrentStack%601>, this operation will always insert the object onto the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601> and return true.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-176">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-176">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Function TryTake (ByRef item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryTake" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([Runtime::InteropServices::Out] T % item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryTake;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="4faf4-177">Quando questo metodo viene restituito, se l'operazione è stata completata correttamente, <paramref name="item" /> contiene l'oggetto rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-177">When this method returns, if the operation was successful, <paramref name="item" /> contains the object removed.</span>
          </span>
          <span data-ttu-id="4faf4-178">Se non sono presenti oggetti disponibili per la rimozione, il valore non è specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-178">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-179">Tenta di rimuovere e restituire un oggetto dall'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-179">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-180">È true se un elemento è stato rimosso e restituito correttamente; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-180">true if an element was removed and returned succesfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-181">Per la <xref:System.Collections.Concurrent.ConcurrentStack%601>, questa operazione tenterà di inserire l'oggetto in cima il <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-181">For <xref:System.Collections.Concurrent.ConcurrentStack%601>, this operation will attempt to pop the object at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-182">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-182">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4faf4-183">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-183">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="4faf4-184">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-184">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4faf4-185">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-185">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-186">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-186">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4faf4-187">
            <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-187">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4faf4-188">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-188">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4faf4-189">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-189">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="4faf4-190">oppure <paramref name="array" /> non dispone di indicizzazione a base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-190">-or- <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="4faf4-191">o <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-191">-or- <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4faf4-192">oppure non è possibile eseguire automaticamente il cast del tipo dell'insieme <see cref="T:System.Collections.ICollection" /> di origine nel tipo dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-192">-or- The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-193">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-193">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-194">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato con SyncRoot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-194">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4faf4-195">True se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato con SyncRoot; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-195">true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot; otherwise, false.</span>
          </span>
          <span data-ttu-id="4faf4-196">Per <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />, questa proprietà restituisce sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-196">For <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />, this property always returns false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-197">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-197">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="4faf4-198">Questa proprietà non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-198">This property is not supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4faf4-199">Restituisce null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-199">Returns null (Nothing in Visual Basic).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4faf4-200">La proprietà SyncRoot non è supportata</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-200">The SyncRoot property is not supported</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-201">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-201">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-202">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-202">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-203">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-203">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-204">L'enumerazione rappresenta uno snapshot nel momento del contenuto dello stack.</span><span class="sxs-lookup"><span data-stu-id="4faf4-204">The enumeration represents a moment-in-time snapshot of the contents of the stack.</span></span> <span data-ttu-id="4faf4-205">Non riflette gli aggiornamenti nella raccolta dopo <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> è stato chiamato.</span><span class="sxs-lookup"><span data-stu-id="4faf4-205">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="4faf4-206">L'enumeratore è sicuro usare contemporaneamente da legge e scrive allo stack.</span><span class="sxs-lookup"><span data-stu-id="4faf4-206">The enumerator is safe to use concurrently with reads from and writes to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; 'T[]&#xA;override this.ToArray : unit -&gt; 'T[]" Usage="concurrentStack.ToArray " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4faf4-207">Copia gli elementi archiviati in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in una nuova matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-207">Copies the items stored in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-208">Nuova matrice contenente uno snapshot degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-208">A new array containing a snapshot of elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-209">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-209">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="concurrentStack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4faf4-210">Quando questo metodo termina, <paramref name="result" /> contiene un oggetto dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> o un valore non specificato se l'operazione ha esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-210">When this method returns, <paramref name="result" /> contains an object from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> or an unspecified value if the operation failed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-211">Tenta di restituire un oggetto dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> senza rimuoverlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-211">Attempts to return an object from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-212">È true se un oggetto è stato restituito correttamente; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-212">true if and object was returned successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-213">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-213">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="concurrentStack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4faf4-214">Quando questo metodo viene restituito, se l'operazione è stata completata correttamente, <paramref name="result" /> contiene l'oggetto rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-214">When this method returns, if the operation was successful, <paramref name="result" /> contains the object removed.</span>
          </span>
          <span data-ttu-id="4faf4-215">Se non sono presenti oggetti disponibili per la rimozione, il valore non è specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-215">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-216">Tenta di estrarre e restituire l'oggetto all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-216">Attempts to pop and return the object at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-217">True se un elemento è stato rimosso e restituito correttamente dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-217">true if an element was removed and returned from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-218">Per un esempio di codice, vedere <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-218">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryPopRange">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <remarks />
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-219">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-219">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryPopRange">
      <MemberSignature Language="C#" Value="public int TryPopRange (T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 TryPopRange(!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPopRange (items As T()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TryPopRange(cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.TryPopRange : 'T[] -&gt; int" Usage="concurrentStack.TryPopRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="4faf4-220">
            <see cref="T:System.Array" /> a cui verranno aggiunti gli oggetti estratti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-220">The <see cref="T:System.Array" /> to which objects popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> will be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-221">Tenta di estrarre e restituire più oggetti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo atomico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-221">Attempts to pop and return multiple objects from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-222">Numero di oggetti estratti correttamente dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> e inseriti in <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-222">The number of objects successfully popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> and inserted in <paramref name="items" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-223">Quando si estraggono più elementi, se è presente una contesa little nello stack, usando `TryPopRange` può essere più efficiente rispetto all'uso di <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> una volta per ogni elemento da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="4faf4-223">When popping multiple items, if there is little contention on the stack, using `TryPopRange` can be more efficient than using <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> once per item to be removed.</span></span> <span data-ttu-id="4faf4-224">Riempimento di nodi di `items` matrice con il primo elemento da estrarre da startIndex, il secondo elemento da estrarre da startIndex + 1 e così via.</span><span class="sxs-lookup"><span data-stu-id="4faf4-224">Nodes fill the `items` array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.</span></span>  
  
 <span data-ttu-id="4faf4-225">Per un esempio di codice, vedere <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="4faf4-225">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4faf4-226">
            <paramref name="items" /> è un argomento Null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-226">
              <paramref name="items" /> is a null argument (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-227">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-227">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPopRange">
      <MemberSignature Language="C#" Value="public int TryPopRange (T[] items, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 TryPopRange(!T[] items, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPopRange (items As T(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TryPopRange(cli::array &lt;T&gt; ^ items, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.TryPopRange : 'T[] * int * int -&gt; int" Usage="concurrentStack.TryPopRange (items, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="4faf4-228">
            <see cref="T:System.Array" /> a cui verranno aggiunti gli oggetti estratti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-228">The <see cref="T:System.Array" /> to which objects popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> will be added.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4faf4-229">Offset in base zero in <paramref name="items" /> in corrispondenza del quale iniziare l'inserimento di elementi dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-229">The zero-based offset in <paramref name="items" /> at which to begin inserting elements from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4faf4-230">Numero di elementi da estrarre dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> e inserire in <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-230">The number of elements to be popped from top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> and inserted into <paramref name="items" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4faf4-231">Tenta di estrarre e restituire più oggetti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo atomico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-231">Attempts to pop and return multiple objects from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4faf4-232">Numero di oggetti estratti correttamente dall'inizio dello stack e inseriti in <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-232">The number of objects successfully popped from the top of the stack and inserted in <paramref name="items" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4faf4-233">Quando si estraggono più elementi, se è presente una contesa little nello stack, usando TryPopRange può essere più efficiente rispetto all'uso di <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> una volta per ogni elemento da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="4faf4-233">When popping multiple items, if there is little contention on the stack, using TryPopRange can be more efficient than using <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> once per item to be removed.</span></span> <span data-ttu-id="4faf4-234">Riempimento di nodi di `items` matrice con il primo elemento da estrarre da startIndex, il secondo elemento da estrarre da startIndex + 1 e così via.</span><span class="sxs-lookup"><span data-stu-id="4faf4-234">Nodes fill the `items` array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4faf4-235">
            <paramref name="items" /> è un riferimento null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-235">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4faf4-236">
            <paramref name="startIndex" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-236">
              <paramref name="startIndex" /> or <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="4faf4-237">Oppure <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-237">Or <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4faf4-238">
            <paramref name="startIndex" /> + <paramref name="count" /> è maggiore della lunghezza di <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-238">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="4faf4-239">Raccolte thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="4faf4-239">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>