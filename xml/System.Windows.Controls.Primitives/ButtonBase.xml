<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fac81-101">Rappresenta la classe base per tutti i controlli <see cref="T:System.Windows.Controls.Button" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-102">Gestire il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento rispondere quando l'utente sceglie un <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="fac81-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="fac81-103">L'utente può generare il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento utilizzando un <xref:System.Windows.Controls.AccessText> o premendo INVIO o la barra spaziatrice quando il controllo ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="fac81-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="fac81-104">Quando l'utente preme la barra spaziatrice, il controllo imposta <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> a `true` e acquisisce il mouse.</span><span class="sxs-lookup"><span data-stu-id="fac81-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="fac81-105">Di conseguenza, il controllo genera gli eventi del mouse, ad esempio <xref:System.Windows.UIElement.MouseEnter> e <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="fac81-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="fac81-106">Si noti che l'utilizzo di <xref:System.Windows.Controls.AccessText> o invio non viene modificato <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> o acquisire il mouse, ma aumenta il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="fac81-107">Il <xref:System.Windows.Controls.Primitives.ButtonBase> imposta il <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> proprietà associata `true`.</span><span class="sxs-lookup"><span data-stu-id="fac81-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="fac81-108">Il <xref:System.Windows.Controls.Primitives.ButtonBase> imposta il <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="fac81-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="fac81-109">Oggetto <xref:System.Windows.Controls.Primitives.ButtonBase> è un <xref:System.Windows.Controls.ContentControl>, il che significa che può contenere un singolo oggetto di qualsiasi tipo (ad esempio una stringa, un'immagine o un pannello).</span><span class="sxs-lookup"><span data-stu-id="fac81-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="fac81-110">Per altre informazioni, vedere la classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="fac81-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac81-111">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.Primitives.ButtonBase" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-112">Si verifica quando viene fatto clic su un oggetto <see cref="T:System.Windows.Controls.Button" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-113">L'utente può generare il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento utilizzando un <xref:System.Windows.Controls.AccessText> o premendo INVIO o la barra spaziatrice quando il controllo ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="fac81-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="fac81-114">Quando l'utente preme la barra spaziatrice, il controllo imposta <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> a `true` e acquisisce il mouse.</span><span class="sxs-lookup"><span data-stu-id="fac81-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="fac81-115">Di conseguenza, il controllo genera gli eventi del mouse, ad esempio <xref:System.Windows.UIElement.MouseEnter> e <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="fac81-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="fac81-116">Si noti che l'utilizzo di <xref:System.Windows.Controls.AccessText> o invio non viene modificato <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> o acquisire il mouse, ma aumenta il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="fac81-117">Il <xref:System.Windows.Controls.Primitives.ButtonBase> segni di <xref:System.Windows.UIElement.MouseLeftButtonDown> evento come gestito nel <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> (metodo) e genera il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="fac81-118">Di conseguenza, il <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> evento non verrà mai eseguiti per un controllo che eredita da <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="fac81-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="fac81-119">In alternativa, collegare un gestore eventi per il <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento oppure chiamare <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="fac81-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="fac81-120">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="fac81-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fac81-121">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="fac81-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="fac81-122">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="fac81-122">Routing strategy</span></span>|<span data-ttu-id="fac81-123">Bubbling</span><span class="sxs-lookup"><span data-stu-id="fac81-123">Bubbling</span></span>|  
|<span data-ttu-id="fac81-124">delegato</span><span class="sxs-lookup"><span data-stu-id="fac81-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="fac81-125">Nell'esempio seguente mostra tre pulsanti che rispondono ai clic in tre modi diversi.</span><span class="sxs-lookup"><span data-stu-id="fac81-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="fac81-126">Al passaggio del mouse, il primo pulsante Cambia colore quando l'utente passa con il mouse sopra il pulsante</span><span class="sxs-lookup"><span data-stu-id="fac81-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="fac81-127">Premere - il secondo pulsante richiede che il mouse venga premuto mentre il puntatore del mouse si trova nel pulsante.</span><span class="sxs-lookup"><span data-stu-id="fac81-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="fac81-128">Rilascio - il terzo non reimposta il colore di sfondo del pulsante fino a quando il mouse viene premuto e rilasciato nel pulsante.</span><span class="sxs-lookup"><span data-stu-id="fac81-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-129">Identifica l'evento indirizzato <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-130">Questo evento corrisponde a un clic del pulsante sinistro del mouse.</span><span class="sxs-lookup"><span data-stu-id="fac81-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-131">Ottiene o imposta un valore che indica quando viene generato l'evento <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span></summary>
        <value><span data-ttu-id="fac81-132">Quando viene generato l'evento <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span> <span data-ttu-id="fac81-133">Il valore predefinito è <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fac81-134">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="fac81-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fac81-135">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="fac81-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="fac81-136">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="fac81-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="fac81-137">nessuno</span><span class="sxs-lookup"><span data-stu-id="fac81-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-138">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-139">Recupera o imposta il comando da richiamare in seguito alla pressione del pulsante.</span><span class="sxs-lookup"><span data-stu-id="fac81-139">Gets or sets the command to invoke when this button is pressed.</span></span></summary>
        <value><span data-ttu-id="fac81-140">Comando da richiamare quando viene premuto questo pulsante.</span><span class="sxs-lookup"><span data-stu-id="fac81-140">A command to invoke when this button is pressed.</span></span> <span data-ttu-id="fac81-141">Il valore predefinito è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-142">Questa proprietà viene utilizzata per associare un comando con una determinata istanza di pulsante.</span><span class="sxs-lookup"><span data-stu-id="fac81-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="fac81-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], questa proprietà viene spesso impostata per essere un valore di comando statico da una delle librerie di comandi esistenti, ad esempio <xref:System.Windows.Input.ApplicationCommands> o <xref:System.Windows.Input.NavigationCommands>.</span><span class="sxs-lookup"><span data-stu-id="fac81-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="fac81-144">Per informazioni dettagliate, vedere [panoramica dei comandi](~/docs/framework/wpf/advanced/commanding-overview.md) o <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="fac81-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="fac81-145">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="fac81-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="fac81-146">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="fac81-146">XAML Values</span></span>  
 <span data-ttu-id="fac81-147">*commandName*</span><span class="sxs-lookup"><span data-stu-id="fac81-147">*commandName*</span></span>  
 <span data-ttu-id="fac81-148">Il comando da richiamare quando viene premuto il pulsante.</span><span class="sxs-lookup"><span data-stu-id="fac81-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fac81-149">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="fac81-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fac81-150">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="fac81-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="fac81-151">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="fac81-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="fac81-152">nessuno</span><span class="sxs-lookup"><span data-stu-id="fac81-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-153">Ottiene o imposta il parametro da passare alla proprietà <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></summary>
        <value><span data-ttu-id="fac81-154">Parametro da passare alla proprietà <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-155">La maggior parte dei comandi esistenti dalle librerie di comando non utilizzano un parametro di comando.</span><span class="sxs-lookup"><span data-stu-id="fac81-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="fac81-156">I comandi che utilizzano un parametro di comando, la maggior parte di questi elementi accettano un parametro con un valore di tipo primitivo, ad esempio un numero intero o una stringa.</span><span class="sxs-lookup"><span data-stu-id="fac81-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="fac81-157">Tuttavia, è possibile creare un comando personalizzato che preveda un tipo non primitivo come parametro di comando.</span><span class="sxs-lookup"><span data-stu-id="fac81-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="fac81-158">Per un comando personalizzato in questo caso, l'impostazione <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> nel codice potrebbe richiedere un'istanza di oggetto nuovo o esistente.</span><span class="sxs-lookup"><span data-stu-id="fac81-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="fac81-159">Impostazione <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> nel markup potrebbe richiedere la sintassi degli elementi di proprietà, in cui l'elemento oggetto la sintassi è un nuovo elemento del tipo previsto dal comando.</span><span class="sxs-lookup"><span data-stu-id="fac81-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="fac81-160">In alternativa, l'impostazione nel markup potrebbe richiedere un riferimento a un'estensione di markup per un oggetto esistente (in genere questi riferimenti vengono eseguiti con [estensione di Markup Binding](~/docs/framework/wpf/advanced/binding-markup-extension.md) o [StaticResource estensione di Markup ](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span><span class="sxs-lookup"><span data-stu-id="fac81-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="fac81-161">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="fac81-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="fac81-162">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="fac81-162">XAML Values</span></span>  
 <span data-ttu-id="fac81-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="fac81-163">*commandParameter*</span></span>  
 <span data-ttu-id="fac81-164">Il valore dello stesso tipo di comando specificato nella <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> proprietà prevede.</span><span class="sxs-lookup"><span data-stu-id="fac81-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="fac81-165">Se si utilizza un comando di libreria esistente del comando, vedere la documentazione della libreria di comando per [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informazioni sull'utilizzo, incluso il tipo di <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> previsto dal comando.</span><span class="sxs-lookup"><span data-stu-id="fac81-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="fac81-166">Se si utilizza un comando personalizzato, vedere la sezione Osservazioni.</span><span class="sxs-lookup"><span data-stu-id="fac81-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fac81-167">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="fac81-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fac81-168">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="fac81-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="fac81-169">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="fac81-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="fac81-170">nessuno</span><span class="sxs-lookup"><span data-stu-id="fac81-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-171">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-172">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> indirizzata.</span><span class="sxs-lookup"><span data-stu-id="fac81-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-173">Recupera o imposta l'elemento su cui eseguire il comando specificato.</span><span class="sxs-lookup"><span data-stu-id="fac81-173">Gets or sets the element on which to raise the specified command.</span></span></summary>
        <value><span data-ttu-id="fac81-174">Elemento sul quale generare un comando.</span><span class="sxs-lookup"><span data-stu-id="fac81-174">Element on which to raise a command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-175">Il <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> proprietà non può essere utilizzata per definire un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="fac81-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="fac81-176">Il <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> proprietà fornisce un riferimento a un elemento che è già definito nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="fac81-177">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="fac81-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="fac81-178">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="fac81-178">XAML Values</span></span>  
 <span data-ttu-id="fac81-179">*elementName*</span><span class="sxs-lookup"><span data-stu-id="fac81-179">*elementName*</span></span>  
 <span data-ttu-id="fac81-180">Il nome di <xref:System.Windows.IInputElement> che riceve il comando.</span><span class="sxs-lookup"><span data-stu-id="fac81-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fac81-181">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="fac81-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fac81-182">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="fac81-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="fac81-183">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="fac81-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="fac81-184">nessuno</span><span class="sxs-lookup"><span data-stu-id="fac81-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-185">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-186">Ottiene il valore della proprietà <see cref="P:System.Windows.ContentElement.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="fac81-187"><see langword="true" /> se il controllo è abilitato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-187"><see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-188">Se si sceglie di eseguire l'override di questa implementazione, assicurarsi che si chiama il metodo di base.</span><span class="sxs-lookup"><span data-stu-id="fac81-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-189">Ottiene un valore che indica se un oggetto <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> è attualmente attivato.</span><span class="sxs-lookup"><span data-stu-id="fac81-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span></span></summary>
        <value>
          <span data-ttu-id="fac81-190"><see langword="true" /> se <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> è attivato, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-190"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span></span> <span data-ttu-id="fac81-191">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-191">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> è lo stato di un pulsante che indica il pulsante sinistro del mouse o si preme BARRA SPAZIATRICE su di esso.</span><span class="sxs-lookup"><span data-stu-id="fac81-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="fac81-193">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> è `true`, il controllo acquisisce il mouse.</span><span class="sxs-lookup"><span data-stu-id="fac81-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="fac81-194">Di conseguenza, il controllo genera gli eventi del mouse, ad esempio <xref:System.Windows.UIElement.MouseEnter> e <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="fac81-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="fac81-195">Si noti che l'utilizzo di <xref:System.Windows.Controls.AccessText> o invio non viene modificato <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> o acquisire il mouse, ma genera il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="fac81-196">A partire da .NET Framework versione 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ha un metodo di impostazione protetto.</span><span class="sxs-lookup"><span data-stu-id="fac81-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="fac81-197">Per usare questa funzionalità, l'applicazione deve essere destinata a .NET Framework versione 3.5.</span><span class="sxs-lookup"><span data-stu-id="fac81-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="fac81-198">Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="fac81-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fac81-199">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="fac81-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fac81-200">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="fac81-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="fac81-201">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="fac81-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="fac81-202">nessuno</span><span class="sxs-lookup"><span data-stu-id="fac81-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fac81-203">In questo esempio viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> proprietà in uno stile di trigger.</span><span class="sxs-lookup"><span data-stu-id="fac81-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fac81-204">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-205">Dati per l'evento <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span></span></param>
        <summary><span data-ttu-id="fac81-206">Risponde quando viene chiamata la proprietà <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> per questo controllo.</span><span class="sxs-lookup"><span data-stu-id="fac81-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-207">Se <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> è `true`, questo metodo chiama l'implementazione di base, che fornisce lo stato attivo per questo controllo.</span><span class="sxs-lookup"><span data-stu-id="fac81-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="fac81-208">In caso contrario, questo metodo genera il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac81-209">Genera l'evento <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> indirizzato.</span><span class="sxs-lookup"><span data-stu-id="fac81-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-210">Il controllo genera il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento chiamando <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="fac81-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="fac81-211">Per ulteriori informazioni, vedere [indirizzato Cenni preliminari sugli eventi](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fac81-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-212">Quando si esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> metodo in modo che i delegati registrati ricevano l'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-213">Dati per <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="fac81-214">Viene chiamato quando viene modificata la proprietà <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-215">Dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-215">The event data.</span></span></param>
        <summary><span data-ttu-id="fac81-216">Fornisce la gestione della classe per l'evento indirizzato <see cref="E:System.Windows.UIElement.KeyDown" /> che viene generato quando l'utente preme un tasto mentre il controllo ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="fac81-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-217">In questa implementazione il <xref:System.Windows.UIElement.KeyDown> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> non è impostata su <xref:System.Windows.Controls.ClickMode.Hover> e una delle seguenti condizioni sono vere:</span><span class="sxs-lookup"><span data-stu-id="fac81-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="fac81-218">L'utente preme la barra spaziatrice.</span><span class="sxs-lookup"><span data-stu-id="fac81-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="fac81-219">L'utente preme il tasto INVIO e <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> è `true` per questo controllo.</span><span class="sxs-lookup"><span data-stu-id="fac81-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="fac81-220">In tutti gli altri casi, questa implementazione non modifica lo stato gestito (il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà) del <xref:System.Windows.UIElement.KeyDown> dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-221">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-222">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-223">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-224">Dati per l'evento <see cref="E:System.Windows.UIElement.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="fac81-225">Fornisce la gestione della classe per l'evento indirizzato <see cref="E:System.Windows.UIElement.KeyUp" /> che viene generato quando l'utente rilascia un tasto mentre il controllo ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="fac81-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-226">In questa implementazione il <xref:System.Windows.UIElement.KeyUp> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` quando l'utente rilascia la barra spaziatrice.</span><span class="sxs-lookup"><span data-stu-id="fac81-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="fac81-227">In caso contrario, questa implementazione non modifica lo stato gestito (il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà) del <xref:System.Windows.UIElement.KeyUp> dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-228">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-229">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-230">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-231">Dati per l'evento <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="fac81-232">Chiamato quando un elemento perde lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="fac81-232">Called when an element loses keyboard focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-233">Dati per l'evento <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span></span></param>
        <summary><span data-ttu-id="fac81-234">Fornisce la gestione della classe per l'evento indirizzato <see cref="E:System.Windows.UIElement.LostMouseCapture" /> che viene generato quando il controllo non riceve più messaggi di eventi mouse.</span><span class="sxs-lookup"><span data-stu-id="fac81-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-235">Questa implementazione non modifica lo stato gestito (il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà) del <xref:System.Windows.UIElement.LostMouseCapture> dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-236">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-237">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-238">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-239">Dati per l'evento <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span></span></param>
        <summary><span data-ttu-id="fac81-240">Fornisce la gestione della classe per l'evento indirizzato <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> che viene generato quando il mouse viene posizionato sul controllo.</span><span class="sxs-lookup"><span data-stu-id="fac81-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-241">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> è impostato su <xref:System.Windows.Controls.ClickMode.Hover>, questa implementazione contrassegna il <xref:System.Windows.UIElement.MouseEnter> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` e genera il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-242">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-243">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-244">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-245">Dati per l'evento <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="fac81-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="fac81-246">Fornisce la gestione della classe per l'evento indirizzato <see cref="E:System.Windows.UIElement.MouseLeave" /> che viene generato quando il mouse viene spostato all'esterno di un elemento.</span><span class="sxs-lookup"><span data-stu-id="fac81-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-247">In questa implementazione il <xref:System.Windows.UIElement.MouseLeave> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> è impostato su <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="fac81-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-248">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-249">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-250">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-251">Dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-251">The event data.</span></span></param>
        <summary><span data-ttu-id="fac81-252">Fornisce la gestione della classe per l'evento indirizzato <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> che viene generato quando viene premuto il pulsante sinistro del mouse mentre il puntatore del mouse si trova nel controllo.</span><span class="sxs-lookup"><span data-stu-id="fac81-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-253">In questa implementazione il <xref:System.Windows.UIElement.MouseLeftButtonDown> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> non è impostata su <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="fac81-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="fac81-254">Per rispondere al <xref:System.Windows.UIElement.MouseLeftButtonDown> evento, collegare un gestore eventi per il <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento oppure chiamare <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="fac81-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="fac81-255">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> è impostato su <xref:System.Windows.Controls.ClickMode.Press>, questo metodo genera il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-256">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-257">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-258">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-259">Dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-259">The event data.</span></span></param>
        <summary><span data-ttu-id="fac81-260">Fornisce la gestione della classe per l'evento indirizzato <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> che viene generato quando viene rilasciato il pulsante sinistro del mouse mentre il puntatore del mouse si trova nel controllo.</span><span class="sxs-lookup"><span data-stu-id="fac81-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-261">In questa implementazione il <xref:System.Windows.UIElement.MouseLeftButtonUp> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> non è impostata su <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="fac81-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="fac81-262">Per rispondere al <xref:System.Windows.UIElement.MouseLeftButtonUp> evento, collegare un gestore eventi per il <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> evento oppure chiamare <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="fac81-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="fac81-263">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> è impostato su <xref:System.Windows.Controls.ClickMode.Release> è <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> è `true`, questo metodo genera il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-264">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-265">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-266">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fac81-267">Dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="fac81-267">The event data.</span></span></param>
        <summary><span data-ttu-id="fac81-268">Fornisce la gestione della classe per l'evento indirizzato <see cref="E:System.Windows.UIElement.MouseMove" /> che viene generato quando il puntatore del mouse viene spostato mentre si trova su questo elemento.</span><span class="sxs-lookup"><span data-stu-id="fac81-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-269">In questa implementazione il <xref:System.Windows.UIElement.MouseMove> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> non è impostata su <xref:System.Windows.Controls.ClickMode.Hover> e <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="fac81-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="fac81-270">Per rispondere al <xref:System.Windows.UIElement.MouseMove> evento, collegare un gestore eventi per il <xref:System.Windows.ContentElement.PreviewMouseMove> evento oppure chiamare <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="fac81-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fac81-271">Se esegue l'override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="fac81-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="fac81-272">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="fac81-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fac81-273">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="fac81-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo"><span data-ttu-id="fac81-274">Specifica le modifiche apportate alla dimensione.</span><span class="sxs-lookup"><span data-stu-id="fac81-274">Specifies the size changes.</span></span></param>
        <summary><span data-ttu-id="fac81-275">Chiamato quando viene modificata la dimensione sottoposta a rendering di un controllo.</span><span class="sxs-lookup"><span data-stu-id="fac81-275">Called when the rendered size of a control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac81-276">Esegue l'override di <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> metodo il <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="fac81-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>