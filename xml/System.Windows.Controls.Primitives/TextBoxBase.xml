<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88ba97aa8883e0642a6768a67d647bd207fb686c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36369173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="41bff-101">Classe di base astratta che fornisce la funzionalità per i controlli di modifica del testo, <see cref="T:System.Windows.Controls.TextBox" /> e <see cref="T:System.Windows.Controls.RichTextBox" /> inclusi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41bff-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-102">Nell'esempio seguente viene illustrato come utilizzare derivato <xref:System.Windows.Controls.TextBox> oggetto [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="41bff-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="41bff-103">Nell'esempio seguente viene illustrato come utilizzare derivato <xref:System.Windows.Controls.RichTextBox> oggetto nel codice.</span><span class="sxs-lookup"><span data-stu-id="41bff-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-104">Recupera o imposta un valore che indica la modalità di risposta del controllo di modifica del testo quando l'utente preme INVIO.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-105">
            <see langword="true" /> se premendo INVIO viene inserita una nuova riga in corrispondenza della posizione corrente del cursore. in caso contrario, il tasto INVIO viene ignorato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-105">
              <see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span>
          </span>
          <span data-ttu-id="41bff-106">Il valore predefinito è <see langword="false" /> per <see cref="T:System.Windows.Controls.TextBox" /> e <see langword="true" /> per <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-107">Il tasto INVIO corrisponde a `VK_RETURN` codice tasto virtuale.</span><span class="sxs-lookup"><span data-stu-id="41bff-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-108">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-109">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="41bff-110">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="41bff-111">nessuno</span><span class="sxs-lookup"><span data-stu-id="41bff-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsReturnProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-112">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-113">Recupera o imposta un valore che indica la modalità di risposta del controllo di modifica del testo quando l'utente preme TAB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-114">
            <see langword="true" /> se premendo il tasto TAB viene inserito un carattere di tabulazione nella posizione corrente del cursore; <see langword="false" /> se premendo il tasto TAB viene spostato lo stato attivo al controllo successivo contrassegnato come interruzione della tabulazione e non inserisce un carattere di tabulazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-114">
              <see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span>
          </span>
          <span data-ttu-id="41bff-115">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-115">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-116">Il tasto TAB corrisponde a **VK_TAB** codice tasto virtuale.</span><span class="sxs-lookup"><span data-stu-id="41bff-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-117">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-118">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="41bff-119">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="41bff-120">nessuno</span><span class="sxs-lookup"><span data-stu-id="41bff-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsTabProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-121">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="41bff-122">Stringa che specifica il testo da aggiungere al contenuto corrente del controllo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-122">A string that specifies the text to append to the current contents of the text control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-123">Aggiunge una stringa ai contenuti del controllo del testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-123">Appends a string to the contents of a text control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-124">Il <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> metodo consente all'utente di aggiungere testo al contenuto di un controllo di testo senza l'utilizzo della concatenazione di testo, che può garantire migliori prestazioni quando sono necessari molti concatenazioni.</span><span class="sxs-lookup"><span data-stu-id="41bff-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-125">Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A>.</span><span class="sxs-lookup"><span data-stu-id="41bff-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoWordSelection : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-126">Recupera o imposta un valore che determina se la selezione di parte di una parola tramite trascinamento del mouse causa la selezione automatica dell'intera parola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-127">
            <see langword="true" /> se la selezione automatica della parola è abilitata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-127">
              <see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-128">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-129">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> è abilitato, ogni volta che l'utente seleziona sulla parte di una parola utilizzando il mouse, la selezione viene automaticamente espanso per includere la parola intera.</span><span class="sxs-lookup"><span data-stu-id="41bff-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="41bff-130">È possibile ignorare la selezione automatica di un'intera parola momentaneamente invertendo la direzione in cui viene trascinato il puntatore del mouse quando viene effettuata la selezione.</span><span class="sxs-lookup"><span data-stu-id="41bff-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="41bff-131">Questa azione Annulla la selezione automatica dell'intera parola e consente all'utente di selezionare con precisione parzialmente o totalmente della parola.</span><span class="sxs-lookup"><span data-stu-id="41bff-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="41bff-132">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> è disabilitata, la selezione non viene espansa automaticamente per includere parole intere; in questo caso, la precisione della selezione sono sempre determinate manualmente.</span><span class="sxs-lookup"><span data-stu-id="41bff-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 <span data-ttu-id="41bff-133">**Nota:** selezione automatica non influenza la parola prima che l'utente trascina.</span><span class="sxs-lookup"><span data-stu-id="41bff-133">**Note:** Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="41bff-134">È solo dopo che viene superato questo confine di parola prima che la selezione automatica viene applicata.</span><span class="sxs-lookup"><span data-stu-id="41bff-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-135">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-136">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="41bff-137">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="41bff-138">nessuno</span><span class="sxs-lookup"><span data-stu-id="41bff-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoWordSelectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-139">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberSignature Language="F#" Value="member this.BeginChange : unit -&gt; unit" Usage="textBoxBase.BeginChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-140">Inizia il blocco della modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-140">Begins a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-141">**Nota:** quando si chiama <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, è necessario chiamare anche <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> per completare il blocco della modifica in caso contrario verrà generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="41bff-141">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="41bff-142">Un blocco della modifica in modo logico di raggruppare più modifiche in una sola unità di annullamento e impedisce il generata fino a dopo il blocco della modifica di eventi di modifica del contenuto o la selezione di testo.</span><span class="sxs-lookup"><span data-stu-id="41bff-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="41bff-143">In questo modo è possibile apportare più modifiche per l'elemento di testo senza il pericolo dell'elemento di testo viene modificata contemporaneamente da un altro listener.</span><span class="sxs-lookup"><span data-stu-id="41bff-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="41bff-144">Un blocco di modifica viene creato chiamando il <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="41bff-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="41bff-145">La chiamata di <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metodo fa sì che tutte le successive modifiche da includere nel blocco di modifica specificato fino a una chiamata corrispondente al <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metodo è costituito.</span><span class="sxs-lookup"><span data-stu-id="41bff-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-146">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> e <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metodi per creare un blocco di modifica.</span><span class="sxs-lookup"><span data-stu-id="41bff-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRedo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-147">Ottiene un valore che indica se è possibile ripetere l'azione di annullamento più recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-147">Gets a value that indicates whether the most recent undo action can be redone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-148">
            <see langword="true" /> se è possibile ripetere l'azione di annullamento più recente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-148">
              <see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-149">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-149">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-150">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> proprietà per determinare se è possibile ripetere l'ultima azione annullata.</span><span class="sxs-lookup"><span data-stu-id="41bff-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-151">Ottiene un valore che indica se è possibile annullare l'azione più recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-151">Gets a value that indicates whether the most recent action can be undone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-152">
            <see langword="true" /> Se l'azione più recente può essere annullata. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-152">
              <see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-153">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-153">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-154">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> proprietà per determinare se l'azione più recente può essere annullata.</span><span class="sxs-lookup"><span data-stu-id="41bff-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-155">Ottiene o imposta il pennello utilizzato per dipingere il cursore della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-155">Gets or sets the brush that is used to paint the caret of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-156">Pennello utilizzato per dipingere il cursore della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-156">The brush that is used to paint the caret of the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-157">Nell'esempio seguente viene creato un <xref:System.Windows.Controls.TextBox> e aggiunge il testo "This is a testo".</span><span class="sxs-lookup"><span data-stu-id="41bff-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="41bff-158">Nell'esempio viene impostata la <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> e <xref:System.Windows.Controls.Control.Foreground%2A> proprietà di un <xref:System.Windows.Controls.TextBox> impostandolo sul blu.</span><span class="sxs-lookup"><span data-stu-id="41bff-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="41bff-159">Nell'esempio precedente viene generato un output è simile alla figura seguente.</span><span class="sxs-lookup"><span data-stu-id="41bff-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="41bff-160">![TextBox con CaretBrush impostato su blu. ] (~/add/media/textboxcaretbrush.png "TextBox con CaretBrush impostato su blu.")</span><span class="sxs-lookup"><span data-stu-id="41bff-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="41bff-161">TextBox con CaretBrush impostato su blu</span><span class="sxs-lookup"><span data-stu-id="41bff-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CaretBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-162">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-163">Copia la selezione corrente del controllo di modifica del testo negli <see cref="T:System.Windows.Clipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-164">Un'operazione di copia copia il testo selezionato per il <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="41bff-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="41bff-165">Si noti che il testo selezionato non viene rimosso dal controllo del processo di modifica del testo.</span><span class="sxs-lookup"><span data-stu-id="41bff-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="41bff-166">Un metodo simile <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, consente di spostare la selezione corrente per il <xref:System.Windows.Clipboard> e rimuove il testo selezionato dal controllo del processo di modifica del testo.</span><span class="sxs-lookup"><span data-stu-id="41bff-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-167">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> metodo per copiare il testo selezionato in un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41bff-168">per l'attendibilità totale per gli eredi di.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-168">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="41bff-169">Questo membro non può essere ereditato da codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-169">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-170">Rimuove la selezione corrente dal controllo di modifica del testo e la copia in <see cref="T:System.Windows.Clipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-170">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-171">Un'operazione di taglio rimuove la selezione corrente dal controllo di modifica del testo e li copia per il <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="41bff-171">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="41bff-172">Si noti che il testo selezionato viene rimosso (taglio) dal controllo del processo di modifica del testo.</span><span class="sxs-lookup"><span data-stu-id="41bff-172">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="41bff-173">Un metodo simile, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copia la selezione corrente negli Appunti, ma non rimuove il testo selezionato dal controllo di modifica del testo.</span><span class="sxs-lookup"><span data-stu-id="41bff-173">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-174">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> metodo per eliminare il testo selezionato in un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-174">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41bff-175">per l'attendibilità totale per gli eredi di.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-175">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="41bff-176">Questo membro non può essere ereditato da codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-176">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberSignature Language="F#" Value="member this.DeclareChangeBlock : unit -&gt; IDisposable" Usage="textBoxBase.DeclareChangeBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-177">Crea il blocco della modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-177">Creates a change block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41bff-178">Oggetto <see cref="T:System.IDisposable" /> che fa riferimento a un nuovo blocco della modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-178">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-179">Un blocco della modifica raggruppa logicamente più modifiche in una sola unità di annullamento.</span><span class="sxs-lookup"><span data-stu-id="41bff-179">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="41bff-180">Un blocco di modifica viene creato chiamando il <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="41bff-180">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="41bff-181">La chiamata di <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metodo fa sì che tutte le successive modifiche da includere nel blocco di modifica specificato fino a una chiamata corrispondente al <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metodo è costituito.</span><span class="sxs-lookup"><span data-stu-id="41bff-181">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberSignature Language="F#" Value="member this.EndChange : unit -&gt; unit" Usage="textBoxBase.EndChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-182">Termina il blocco della modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-182">Ends a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-183">**Nota:** quando si chiama <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, è necessario chiamare anche <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> per completare il blocco della modifica in caso contrario verrà generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="41bff-183">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="41bff-184">Un blocco della modifica in modo logico di raggruppare più modifiche in una sola unità di annullamento e impedisce il generata fino a dopo il blocco della modifica di eventi di modifica del contenuto o la selezione di testo.</span><span class="sxs-lookup"><span data-stu-id="41bff-184">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="41bff-185">In questo modo è possibile apportare più modifiche per l'elemento di testo senza il pericolo dell'elemento di testo viene modificata contemporaneamente da un altro processo.</span><span class="sxs-lookup"><span data-stu-id="41bff-185">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="41bff-186">Un blocco di modifica viene creato chiamando il <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="41bff-186">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="41bff-187">La chiamata di <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metodo fa sì che tutte le successive modifiche da includere nel blocco di modifica specificato fino a una chiamata corrispondente al <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metodo è costituito.</span><span class="sxs-lookup"><span data-stu-id="41bff-187">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-188">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> e <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metodi per creare un blocco di modifica.</span><span class="sxs-lookup"><span data-stu-id="41bff-188">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-189">Ottiene la dimensione verticale dell'area del contenuto visibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-189">Gets the vertical size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-190">Valore a virgola mobile che specifica la dimensione verticale dell'area di contenuto visibile, in [! INCLUDE[TLA#tla_dipixel#plural](~/Includes/tlasharptla-dipixelsharpplural-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-190">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="41bff-191">Il valore di questa proprietà è 0,0 se il controllo di modifica del testo non viene configurato in modo da supportare lo scorrimento</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-191">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="41bff-192">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-192">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-193">Nell'esempio seguente viene illustrato come leggere il valore di <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="41bff-193">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-194">Ottiene la dimensione orizzontale dell'area del contenuto visibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-194">Gets the horizontal size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-195">Valore a virgola mobile che specifica la dimensione orizzontale dell'area di contenuto visibile, in [! INCLUDE[TLA#tla_dipixel#plural](~/Includes/tlasharptla-dipixelsharpplural-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-195">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="41bff-196">Il valore di questa proprietà è 0,0 se il controllo di modifica del testo non viene configurato in modo da supportare lo scorrimento</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-196">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="41bff-197">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-197">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-198">Nell'esempio seguente viene illustrato come leggere il valore di <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="41bff-198">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-199">Ottiene o imposta la posizione di scorrimento orizzontale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-199">Gets or sets the horizontal scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-200">Valore a virgola mobile che specifica la posizione di scorrimento orizzontale, in [! INCLUDE[TLA#tla_dipixel#plural](~/Includes/tlasharptla-dipixelsharpplural-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-200">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="41bff-201">L'impostazione di questa proprietà fa sì che il controllo di modifica del testo scorra fino all'offset orizzontale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-201">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span>
          </span>
          <span data-ttu-id="41bff-202">La lettura di questa proprietà restituisce l'offset orizzontale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-202">Reading this property returns the current horizontal offset.</span>
          </span>
          <span data-ttu-id="41bff-203">Il valore di questa proprietà è 0,0 se il controllo di modifica del testo non viene configurato in modo da supportare lo scorrimento</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-203">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="41bff-204">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-204">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-205">L'offset orizzontale viene misurato da destra dell'area di testo visibile se si lavora in modalità da destra a sinistra. in caso contrario, viene misurato dal lato sinistro.</span><span class="sxs-lookup"><span data-stu-id="41bff-205">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-206">Nell'esempio seguente viene illustrato come leggere il valore di <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="41bff-206">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41bff-207">Viene effettuato un tentativo per impostare questa proprietà su un valore negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-207">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-208">Ottiene o imposta un valore che indica se viene mostrata la barra di scorrimento orizzontale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-208">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-209">Valore definito dall'enumerazione <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-209">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="41bff-210">Il valore predefinito è <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-210">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-211">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-212">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-212">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="41bff-213">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-213">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="41bff-214">Nell'esempio seguente viene illustrato come impostare il valore di <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> proprietà utilizzando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="41bff-214">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-215">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-215">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInactiveSelectionHighlightEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-216">Ottiene o imposta un valore che indica se la casella di testo visualizza il testo selezionato quando non presenta lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-216">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-217">
            <see langword="true" /> se la casella di testo visualizza il testo selezionato quando la casella di testo non presenta lo stato attivo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-217">
              <see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-218">Il valore predefinito registrato è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-218">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-219">Per ulteriori informazioni sugli elementi che possono influenzare il valore, vedere [proprietà di dipendenza, valore Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-219">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-220">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-221">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-221">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="41bff-222">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="41bff-223">nessuno</span><span class="sxs-lookup"><span data-stu-id="41bff-223">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInactiveSelectionHighlightEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-224">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-224">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-225">Recupera o imposta un valore che indica se il controllo di modifica del testo è di sola lettura per gli utenti che interagiscono con il controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-225">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-226">
            <see langword="true" /> se i contenuti del controllo di modifica del testo sono di sola lettura per un utente; in caso contrario, i contenuti del controllo di modifica del testo possono essere modificati dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-226">
              <see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span>
          </span>
          <span data-ttu-id="41bff-227">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-227">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-228">Questo valore influisce solo su un utente che interagisca con il controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-228">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="41bff-229">Il contenuto di un controllo di modifica testo può sempre essere modificato a livello di codice.</span><span class="sxs-lookup"><span data-stu-id="41bff-229">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-230">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-230">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-231">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-231">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="41bff-232">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-232">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnlyCaretVisible : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-233">Ottiene o imposta un valore che indica se in una casella di testo di sola lettura viene visualizzato un cursore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-233">Gets or sets a value that indicates whether a read-only text box displays a caret.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-234">
            <see langword="true" /> se in una casella di testo di sola lettura viene visualizzato un cursore; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-234">
              <see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-235">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-235">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-236">Quando si <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> è `true`, un utente può comunque selezionare e copiare il testo.</span><span class="sxs-lookup"><span data-stu-id="41bff-236">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="41bff-237">Se il <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> è impostata anche su `true`, un punto di inserimento verrà visualizzato nella casella di testo quando la casella di testo ha lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="41bff-237">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="41bff-238">Quando si <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> viene `false`, il <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> proprietà non ha alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="41bff-238">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyCaretVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-239">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-239">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-240">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-240">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionActive : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-241">Ottiene un valore che indica se la casella di testo ha lo stato attivo e il testo selezionato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-241">Gets a value that indicates whether the text box has focus and selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-242">
            <see langword="true" /> se la casella di testo presenta lo stato attivo e il testo selezionato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-242">
              <see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-243">Il valore predefinito registrato è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-243">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-244">Per ulteriori informazioni sugli elementi che possono influenzare il valore, vedere [proprietà di dipendenza, valore Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-244">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-245">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-246">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-246">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="41bff-247">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="41bff-248">nessuno</span><span class="sxs-lookup"><span data-stu-id="41bff-248">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-249">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-249">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUndoEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-250">Recupera o imposta un valore che indica se il supporto dell'annullamento è attivato per il controllo di modifica del testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-250">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-251">
            <see langword="true" /> se il supporto per l'annullamento è attivato, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-251">
              <see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-252">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-252">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-253">Impostando questa proprietà su `false` pulisce lo stack di annullamento.</span><span class="sxs-lookup"><span data-stu-id="41bff-253">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="41bff-254">Pertanto, se si disabilita l'annullamento e quindi riattivarla, annullamento ancora non funziona perché lo stack di annullamento è stato svuotato al momento della disabilitazione dell'annullamento.</span><span class="sxs-lookup"><span data-stu-id="41bff-254">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-255">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-256">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-256">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="41bff-257">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-257">Metadata properties set to `true`</span></span>|<span data-ttu-id="41bff-258">nessuno</span><span class="sxs-lookup"><span data-stu-id="41bff-258">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="41bff-259">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> proprietà [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="41bff-259">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsUndoEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-260">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-260">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberSignature Language="F#" Value="member this.LineDown : unit -&gt; unit" Usage="textBoxBase.LineDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-261">Scorre verso il basso, di una riga, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-261">Scrolls the contents of the control down by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-262">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberSignature Language="F#" Value="member this.LineLeft : unit -&gt; unit" Usage="textBoxBase.LineLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-263">Scorre verso sinistra, di una riga, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-263">Scrolls the contents of the control to the left by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-264">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberSignature Language="F#" Value="member this.LineRight : unit -&gt; unit" Usage="textBoxBase.LineRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-265">Scorre verso destra, di una riga, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-265">Scrolls the contents of the control to the right by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-266">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-266">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberSignature Language="F#" Value="member this.LineUp : unit -&gt; unit" Usage="textBoxBase.LineUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-267">Scorre verso l'alto, di una riga, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-267">Scrolls the contents of the control upward by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-268">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-268">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberSignature Language="F#" Value="member this.LockCurrentUndoUnit : unit -&gt; unit" Usage="textBoxBase.LockCurrentUndoUnit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-269">Blocca la più recente unità di annullamento dello stack di annullamento dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-269">Locks the most recent undo unit of the undo stack of the application.</span>
          </span>
          <span data-ttu-id="41bff-270">Impedisce che l'unità bloccata possa essere unita con unità di annullamento aggiunte successivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-270">This prevents the locked unit from being merged with undo units that are added subsequently.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-271">Chiamare questo metodo quando un'unità di annullamento non di testo viene aggiunto allo stack di annullamento principale dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="41bff-271">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="41bff-272">Impedisce che l'unità bloccata possa essere unita con unità di annullamento aggiunte successivamente.</span><span class="sxs-lookup"><span data-stu-id="41bff-272">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="textBoxBase.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-273">Viene chiamato quando viene applicato il modello di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-273">Is called when a control template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-274">Esegue l'override di <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="41bff-274">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="41bff-275">
            <para>Una volta implementato in una classe derivata, questo metodo viene richiamato ogni volta che il codice dell'applicazione o i processi interni chiamano <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-275">
              <para>When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="textBoxBase.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-276">Argomenti dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-276">Arguments of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-277">Viene chiamato ogni qualvolta un evento indirizzato non gestito di <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> arriva a questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-277">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-278">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-278">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-279">Questo metodo non è Nessuna implementazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="41bff-279">This method has no default implementation.</span></span> <span data-ttu-id="41bff-280">È comunque necessario chiamare l'implementazione di base nel caso in cui una classe intermedia nell'ereditarietà abbia implementato questo metodo.</span><span class="sxs-lookup"><span data-stu-id="41bff-280">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="41bff-281">Lo scopo di questo metodo è simile a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] schema di eventi in \* metodi: consente di gestire l'evento corrispondente dalle classi derivate tramite un gestore di classe anziché un gestore di istanza.</span><span class="sxs-lookup"><span data-stu-id="41bff-281">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="41bff-282">In questo caso, l'evento corrispondente è un evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41bff-282">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="41bff-283">Il modello di implementazione dei metodi On \* è diverso per gli eventi indirizzati perché l'evento indirizzato potrebbe essere generato da un elemento figlio, che non è necessariamente l'elemento che richiama i gestori.</span><span class="sxs-lookup"><span data-stu-id="41bff-283">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="41bff-284">Pertanto, l'implementazione deve prendere in considerazione le proprietà di origine degli argomenti di evento (e non deve tentare di generare nuovamente l'evento nella maggior parte dei casi).</span><span class="sxs-lookup"><span data-stu-id="41bff-284">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="41bff-285">Le sottoclassi di <xref:System.Windows.Controls.Primitives.TextBoxBase> può chiamare metodi del gestore di classe privata quando viene ricevuto l'evento lungo la route.</span><span class="sxs-lookup"><span data-stu-id="41bff-285">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="41bff-286">Uno scenario prevede accettano gli argomenti dell'evento e contrassegnare intenzionalmente l'evento come gestito.</span><span class="sxs-lookup"><span data-stu-id="41bff-286">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-287">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-287">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-288">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.DragDrop.DragEnter" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-288">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-289">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-289">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-290">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-290">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-291">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.DragDrop.DragLeave" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-291">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-292">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-292">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-293">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-293">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-294">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.DragDrop.DragOver" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-294">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-295">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-295">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-296">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-296">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-297">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.DragDrop.DragEnter" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-297">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-298">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-298">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="textBoxBase.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-299">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-299">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-300">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.DragDrop.GiveFeedback" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-300">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-301">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-301">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-302">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-302">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-303">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-303">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-304">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-304">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-305">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-305">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-306">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-306">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-307">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-307">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-308">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-308">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-309">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-309">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-310">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-310">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-311">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-311">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-312">Genera l'evento <see cref="E:System.Windows.UIElement.LostFocus" />, utilizzando gli argomenti forniti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-312">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-313">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-313">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-314">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-314">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-315">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-315">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-316">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-316">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-317">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.Mouse.MouseDown" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-317">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-318">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-318">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-319">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-319">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-320">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.Mouse.MouseMove" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-321">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-321">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-322">Argomenti dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-322">Arguments of the event.</span>
          </span>
          <span data-ttu-id="41bff-323">Questi argomenti includeranno i dettagli su quale pulsante del mouse è stato premuto e lo stato gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-323">These arguments will include details about which mouse button was depressed, and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-324">Viene richiamato ogni qualvolta un evento indirizzato <see cref="E:System.Windows.Input.Mouse.MouseUp" /> non gestito associato raggiunge un elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-324">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-325">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-325">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="textBoxBase.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-326">Argomenti della rotella del mouse associati a questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-326">The mouse wheel arguments that are associated with this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-327">Viene chiamato quando l'evento <see cref="E:System.Windows.UIElement.MouseWheel" /> viene indirizzato a questa classe o alla classe che da essa eredita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-327">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-328">Il <xref:System.Windows.UIElement.MouseWheel> evento si verifica quando viene eseguito il rollback la rotellina del mouse.</span><span class="sxs-lookup"><span data-stu-id="41bff-328">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="41bff-329">Esegue l'override di <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span><span class="sxs-lookup"><span data-stu-id="41bff-329">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-330">Dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-330">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-331">Chiamato quando si verifica l'eccezione <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-331">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="textBoxBase.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-332">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-332">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-333">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-333">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-334">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-334">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-335">Questo metodo non è Nessuna implementazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="41bff-335">This method has no default implementation.</span></span> <span data-ttu-id="41bff-336">La chiamata di base () nell'implementazione è comunque consigliabile nel caso in cui una classe intermedia nell'ereditarietà implementato questo metodo.</span><span class="sxs-lookup"><span data-stu-id="41bff-336">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="41bff-337">È possibile chiamare base () prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="41bff-337">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="41bff-338">Lo scopo di questo metodo è simile a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] schema di eventi in \* metodi: consente di gestire l'evento corrispondente dalle classi derivate tramite un gestore di classe anziché un gestore di istanza.</span><span class="sxs-lookup"><span data-stu-id="41bff-338">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="41bff-339">In questo caso, l'evento corrispondente è un evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41bff-339">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="41bff-340">Il modello di implementazione dei metodi On \* è diverso per gli eventi indirizzati poiché l'evento indirizzato potrebbe essere stato generato da un elemento figlio che non è necessariamente l'elemento che richiama i gestori.</span><span class="sxs-lookup"><span data-stu-id="41bff-340">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="41bff-341">Pertanto, l'implementazione deve prendere in considerazione le proprietà di origine degli argomenti di evento (e non deve tentare di generare nuovamente l'evento nella maggior parte dei casi).</span><span class="sxs-lookup"><span data-stu-id="41bff-341">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="41bff-342">Le sottoclassi di <xref:System.Windows.Controls.Primitives.TextBoxBase> possibile scegliere di chiamare metodi del gestore di classe privata quando viene ricevuto l'evento lungo la route.</span><span class="sxs-lookup"><span data-stu-id="41bff-342">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="41bff-343">Uno scenario prevede accettano gli argomenti dell'evento e contrassegnare l'evento come gestito.</span><span class="sxs-lookup"><span data-stu-id="41bff-343">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="textBoxBase.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-344">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-344">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-345">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-345">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-346">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-346">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-347">Argomenti associati all'evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-347">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-348">Viene chiamato quando il cursore o la selezione corrente modificano la posizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-348">Is called when the caret or current selection changes position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-349">Questo metodo genera un <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="41bff-349">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="textBoxBase.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">
          <span data-ttu-id="41bff-350">Oggetto <see cref="T:System.Windows.Controls.ControlTemplate" /> che specifica il modello del controllo correntemente attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span>
          </span>
        </param>
        <param name="newTemplate">
          <span data-ttu-id="41bff-351">Oggetto <see cref="T:System.Windows.Controls.ControlTemplate" /> che specifica il nuovo modello del controllo da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-352">Viene chiamato quando viene modificato il modello del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-352">Is called when the control template changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-353">Esegue l'override di <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="41bff-353">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit&#xA;override this.OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-354">Argomenti associati all'evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-354">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-355">Viene chiamato quando cambia il contenuto in questo controllo di modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-355">Is called when content in this editing control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-356">Questo metodo genera un <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="41bff-356">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="textBoxBase.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41bff-357">Fornisce i dati sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-357">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-358">Viene chiamato ogni qualvolta l'evento indirizzato <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> non gestito associato raggiunge l'elemento derivato da questa classe nella relativa route.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-358">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="41bff-359">Implementare questo metodo per aggiungere la gestione delle classi per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-359">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberSignature Language="F#" Value="member this.PageDown : unit -&gt; unit" Usage="textBoxBase.PageDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-360">Scorre verso il basso, di una pagina, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-360">Scrolls the contents of the control down by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-361">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberSignature Language="F#" Value="member this.PageLeft : unit -&gt; unit" Usage="textBoxBase.PageLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-362">Scorre verso sinistra, di una pagina, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-362">Scrolls the contents of the control to the left by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-363">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberSignature Language="F#" Value="member this.PageRight : unit -&gt; unit" Usage="textBoxBase.PageRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-364">Scorre verso destra, di una pagina, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-364">Scrolls the contents of the control to the right by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-365">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberSignature Language="F#" Value="member this.PageUp : unit -&gt; unit" Usage="textBoxBase.PageUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-366">Scorre verso l'alto, di una pagina, i contenuti del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-366">Scrolls the contents of the control up by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-367">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-367">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-368">Incolla il contenuto degli Appunti sulla selezione corrente nel controllo di modifica di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-368">Pastes the contents of the Clipboard over the current selection in the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-369">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> metodo per incollare il contenuto selezionato in un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-369">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; bool" Usage="textBoxBase.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-370">Annulla il comando di annullamento più recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-370">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="41bff-371">In altre parole, ripete la più recente unità di annullamento nello stack di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-371">In other words, redoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41bff-372">
            <see langword="true" /> se l'operazione di ripetizione ha avuto esito positivo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-372">
              <see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-373">Questo metodo restituisce <see langword="false" /> se non è disponibile il comando di annullamento, ossia se lo stack di annullamento è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-373">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-374">Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A>.</span><span class="sxs-lookup"><span data-stu-id="41bff-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberSignature Language="F#" Value="member this.ScrollToEnd : unit -&gt; unit" Usage="textBoxBase.ScrollToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-375">Scorre la visualizzazione del controllo di modifica fino alla fine del contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-375">Scrolls the view of the editing control to the end of the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-376">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-376">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberSignature Language="F#" Value="member this.ScrollToHome : unit -&gt; unit" Usage="textBoxBase.ScrollToHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-377">Scorre la visualizzazione del controllo di modifica fino all'inizio del riquadro di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-377">Scrolls the view of the editing control to the beginning of the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-378">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> metodo per scorrere il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-378">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToHorizontalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToHorizontalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="41bff-379">Valore double che specifica l'offset orizzontale per lo scorrimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-379">A double value that specifies the horizontal offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-380">Scorre il contenuto del controllo di modifica in base all'offset orizzontale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-380">Scrolls the contents of the editing control to the specified horizontal offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToVerticalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToVerticalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="41bff-381">Valore Double che specifica l'offset verticale per lo scorrimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-381">A double value that specifies the vertical offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41bff-382">Scorre il contenuto del controllo di modifica in base all'offset verticale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-382">Scrolls the contents of the editing control to the specified vertical offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-383">Seleziona l'intero contenuto del controllo di modifica del testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-383">Selects all the contents of the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-384">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> metodo per selezionare tutto il contenuto di un <xref:System.Windows.Controls.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="41bff-384">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-385">Ottiene o imposta il pennello che evidenzia il testo selezionato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-385">Gets or sets the brush that highlights selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-386">Pennello che evidenzia il testo selezionato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-386">The brush that highlights selected text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-387">È possibile specificare il pennello che evidenzia il testo selezionato impostando il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> e <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="41bff-387">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="41bff-388">Il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> proprietà specifica l'opacità del <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span><span class="sxs-lookup"><span data-stu-id="41bff-388">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-389">Nell'esempio seguente viene creato un <xref:System.Windows.Controls.TextBox> e aggiunge il testo "This is a testo".</span><span class="sxs-lookup"><span data-stu-id="41bff-389">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="41bff-390">Nell'esempio viene impostata la <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> proprietà in rosso e il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> proprietà su 0,5 per personalizzare l'aspetto del testo selezionato.</span><span class="sxs-lookup"><span data-stu-id="41bff-390">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="41bff-391">La figura seguente mostra il <xref:System.Windows.Controls.TextBox> dell'esempio precedente con il testo selezionato.</span><span class="sxs-lookup"><span data-stu-id="41bff-391">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="41bff-392">![Casella di testo con un oggetto SelectionBrush rosso](~/add/media/textboxselectionbrush.png "TextBox con un oggetto SelectionBrush rosso")</span><span class="sxs-lookup"><span data-stu-id="41bff-392">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="41bff-393">Testo selezionato in una casella di testo con SelectionBrush impostato su rosso</span><span class="sxs-lookup"><span data-stu-id="41bff-393">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-394">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-394">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : System.Windows.RoutedEventHandler " Usage="member this.SelectionChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-395">Si verifica in seguito alla modifica della selezione di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-395">Occurs when the text selection has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41bff-396">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41bff-396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-397">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-397">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="41bff-398">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41bff-398">Routing strategy</span></span>|<span data-ttu-id="41bff-399">Bubbling</span><span class="sxs-lookup"><span data-stu-id="41bff-399">Bubbling</span></span>|  
|<span data-ttu-id="41bff-400">delegato</span><span class="sxs-lookup"><span data-stu-id="41bff-400">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="41bff-401">Nell'esempio seguente viene illustrato come gestire il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> evento tramite codice.</span><span class="sxs-lookup"><span data-stu-id="41bff-401">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-402">Identifica l'evento indirizzato <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-402">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionOpacity : double with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-403">Ottiene o imposta l'opacità di <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-403">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-404">Opacità di <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-404">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
          <span data-ttu-id="41bff-405">Il valore predefinito è 0,4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-405">The default is 0.4.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-406">Se <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> è impostato su 0, il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> è trasparente e non è visibile.</span><span class="sxs-lookup"><span data-stu-id="41bff-406">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="41bff-407">Se <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> è impostato su 1.0 o superiore, il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> è opaco e il testo non è visibile.</span><span class="sxs-lookup"><span data-stu-id="41bff-407">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-408">Nell'esempio seguente viene creato un <xref:System.Windows.Controls.TextBox> e aggiunge il testo "This is a testo".</span><span class="sxs-lookup"><span data-stu-id="41bff-408">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="41bff-409">Nell'esempio viene impostata la <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> proprietà in rosso e il <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> proprietà su 0,5 per personalizzare l'aspetto del testo selezionato.</span><span class="sxs-lookup"><span data-stu-id="41bff-409">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="41bff-410">La figura seguente mostra il <xref:System.Windows.Controls.TextBox> dell'esempio precedente con il testo selezionato.</span><span class="sxs-lookup"><span data-stu-id="41bff-410">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="41bff-411">![Casella di testo con un oggetto SelectionBrush rosso](~/add/media/textboxselectionbrush.png "TextBox con un oggetto SelectionBrush rosso")</span><span class="sxs-lookup"><span data-stu-id="41bff-411">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="41bff-412">Testo selezionato in una casella di testo con SelectionOpacity impostato su 0,5</span><span class="sxs-lookup"><span data-stu-id="41bff-412">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionOpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-413">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpellCheck : System.Windows.Controls.SpellCheck" Usage="System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-414">Ottiene un oggetto <see cref="T:System.Windows.Controls.SpellCheck" /> che fornisce accesso agli errori di ortografia nei contenuti di testo di <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> o <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-414">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-415">Oggetto <see cref="T:System.Windows.Controls.SpellCheck" /> che fornisce l'accesso agli errori di ortografia nei contenuti di testo di <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> o <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-415">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
          <span data-ttu-id="41bff-416">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-416">This property has no default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " Usage="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-417">Si verifica in seguito alla modifica del contenuto nell'elemento di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-417">Occurs when content changes in the text element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-418">Per un <xref:System.Windows.Controls.TextBox>, questo evento si verifica quando cambia il relativo testo; per un <xref:System.Windows.Controls.RichTextBox>, questo evento si verifica quando un pacchetto di contenuto o la formattazione delle modifiche (ad esempio, immagini, tabella o il colore di sfondo).</span><span class="sxs-lookup"><span data-stu-id="41bff-418">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41bff-419">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41bff-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-420">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-420">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="41bff-421">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41bff-421">Routing strategy</span></span>|<span data-ttu-id="41bff-422">Bubbling</span><span class="sxs-lookup"><span data-stu-id="41bff-422">Bubbling</span></span>|  
|<span data-ttu-id="41bff-423">delegato</span><span class="sxs-lookup"><span data-stu-id="41bff-423">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-424">Identifica l'evento indirizzato <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-424">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; bool" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41bff-425">Annulla il comando di annullamento più recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-425">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="41bff-426">In altre parole, annulla la più recente unità di annullamento nello stack di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-426">In other words, undoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41bff-427">
            <see langword="true" /> se l'operazione di annullamento ha avuto esito positivo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-427">
              <see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41bff-428">Questo metodo restituisce <see langword="false" /> se lo stack di annullamento è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-428">This method returns <see langword="false" /> if the undo stack is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-429">Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A>.</span><span class="sxs-lookup"><span data-stu-id="41bff-429">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UndoLimit : int with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-430">Ottiene o imposta il numero di azioni memorizzate nella coda di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-430">Gets or sets the number of actions stored in the undo queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-431">Numero di azioni memorizzate nella coda di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-431">The number of actions stored in the undo queue.</span>
          </span>
          <span data-ttu-id="41bff-432">Il valore predefinito è –1, il che significa che la coda di annullamento è limitata alla memoria disponibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-432">The default is –1, which means the undo queue is limited to the memory that is available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-433">Impostazione <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> Cancella la coda di annullamento.</span><span class="sxs-lookup"><span data-stu-id="41bff-433">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="41bff-434">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> è impostato su -1, la coda di annullamento è limitata soltanto dalla memoria disponibile.</span><span class="sxs-lookup"><span data-stu-id="41bff-434">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to –1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="41bff-435">Quando si <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> è impostata su 0, l'annullamento è disabilitato nel <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="41bff-435">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="41bff-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> è stato introdotto in .NET Framework versione 3.5.</span><span class="sxs-lookup"><span data-stu-id="41bff-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="41bff-437">Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="41bff-437">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="41bff-438">L'oggetto <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> viene impostato dopo aver chiamato <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> e prima di chiamare <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-438">
              <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UndoLimitProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-439">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-439">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> è stato introdotto in .NET Framework versione 3.5.</span><span class="sxs-lookup"><span data-stu-id="41bff-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="41bff-441">Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="41bff-441">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-442">Ottiene o imposta la posizione di scorrimento verticale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-442">Gets or sets the vertical scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-443">Valore a virgola mobile che specifica la posizione di scorrimento verticale, in [! INCLUDE[TLA#tla_dipixel#plural](~/Includes/tlasharptla-dipixelsharpplural-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-443">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="41bff-444">L'impostazione di questa proprietà consente al controllo della modifica di testo di scorrere fino all'offset verticale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-444">Setting this property causes the text editing control to scroll to the specified vertical offset.</span>
          </span>
          <span data-ttu-id="41bff-445">La lettura di questa proprietà restituisce l'offset verticale corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-445">Reading this property returns the current vertical offset.</span>
          </span>
          <span data-ttu-id="41bff-446">Il valore di questa proprietà è 0,0 se il controllo di modifica del testo non viene configurato in modo da supportare lo scorrimento</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-446">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="41bff-447">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-447">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41bff-448">L'offset verticale viene misurato dalla parte superiore dell'area di testo visibile.</span><span class="sxs-lookup"><span data-stu-id="41bff-448">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41bff-449">Nell'esempio seguente viene illustrato come leggere il valore di <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="41bff-449">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41bff-450">Viene effettuato un tentativo per impostare questa proprietà su un valore negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-450">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-451">Ottiene o imposta un valore che indica se è visualizzata una barra di scorrimento verticale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-451">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-452">Valore definito dall'enumerazione <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-452">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="41bff-453">Il valore predefinito è <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-453">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="41bff-454">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="41bff-454">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41bff-455">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41bff-455">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="41bff-456">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="41bff-456">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-457">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-457">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-458">Ottiene le dimensioni verticali dell'area di contenuto scorrevole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-458">Gets the vertical size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-459">Valore a virgola mobile che specifica la dimensione verticale dell'area di contenuto scorrevole, in [! INCLUDE[TLA#tla_dipixel#plural](~/Includes/tlasharptla-dipixelsharpplural-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-459">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="41bff-460">Il valore di questa proprietà è 0,0 se il controllo di modifica del testo non viene configurato in modo da supportare lo scorrimento</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-460">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="41bff-461">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-461">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-462">Nell'esempio seguente viene illustrato come leggere il valore di <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="41bff-462">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41bff-463">Ottiene le dimensioni orizzontali dell'area di contenuto scorrevole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-463">Gets the horizontal size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41bff-464">Valore a virgola mobile che specifica la dimensione orizzontale dell'area di contenuto scorrevole, in [! INCLUDE[TLA#tla_dipixel#plural](~/Includes/tlasharptla-dipixelsharpplural-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-464">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="41bff-465">Il valore di questa proprietà è 0,0 se il controllo di modifica del testo non viene configurato in modo da supportare lo scorrimento</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-465">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="41bff-466">Nessun valore predefinito per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41bff-466">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41bff-467">Nell'esempio seguente viene illustrato come leggere il valore di <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="41bff-467">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>