<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionSecurityTokenHandler.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c115a52489fd77750e537edfe5b3127ffc36e982.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c115a52489fd77750e537edfe5b3127ffc36e982</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> that processes security tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> che elabora i token di sicurezza di tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes, deserializes, and validates session tokens.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> classe serializza deserializza e convalida i token di sessione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are tokens of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</source>
          <target state="translated">I token di sessione sono token di tipo <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes the tokens to and from cookie format.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> classe serializza i token da e verso il formato di cookie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elements.</source>
          <target state="translated">Per impostazione predefinita, la classe serializza i token in WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elementi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are used by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) to store information about a session, this is primarily the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> associated with the authenticated user and the session start and expiration times.</source>
          <target state="translated">I token di sessione vengono utilizzati per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) e <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) per archiviare le informazioni relative a una sessione, si tratta principalmente il <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> associato con l'utente autenticato e gli orari di inizio e di scadenza della sessione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In passive scenarios, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> calls into the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) from the authentication pipeline to create a session token from the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> that represents the authenticated user.</source>
          <target state="translated">In scenari passivi, il <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> chiama il <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) dalla pipeline di autenticazione per creare un token di sessione dal <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> che rappresenta l'utente autenticato.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses its configured <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</source>
          <target state="translated">Il modulo SAM utilizza configurati <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> per creare il token e di eseguirne la serializzazione in un cookie (e per deserializzare il token da un cookie nelle richieste successive).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses an instance of its configured <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> class to write the cookie back to the HTTP Response.</source>
          <target state="translated">Il modulo SAM utilizza un'istanza di configurati <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> classe per scrivere il cookie di risposta HTTP.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</source>
          <target state="translated">Questo cookie viene quindi restituito al client e nelle richieste successive, il client può presentare il cookie, piuttosto che effettua un round trip al provider di identità per ottenere nuovamente un token di sicurezza.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about how sessions operate with WIF, see <bpt id="p1">[</bpt>WIF Session Management<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sul funzionano delle sessioni con WIF, vedere <bpt id="p1">[</bpt>gestione delle sessioni WIF<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">\&lt;</ph>securityTokenHandlers&gt; configuration element can be used to specify a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has the responsibility for securing the application’s sessions.</source>
          <target state="translated">Il <ph id="ph1">\&lt;</ph>securityTokenHandlers &gt; elemento di configurazione può essere usato per specificare un <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> che ha la responsabilità per la protezione delle sessioni dell'applicazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</source>
          <target state="translated">Gli sviluppatori devono prestare attenzione quando si modifica questa impostazione di configurazione, come un sistema con configurazione non valida potrebbe causare la compromissione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, specifying a derived  HYPERLINK "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t "_blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</source>
          <target state="translated">Ad esempio, specificando un collegamento ipertestuale derivato "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> e passando un insieme di trasformazioni (CookieTransform) vuoto per la base darà all'identità dell'utente serializzato in un cookie che non è stato protetto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This could allow an attacker to modify the identity and therefore change access privileges.</source>
          <target state="translated">Ciò potrebbe consentire un attacco per modificare l'identità e quindi modificare i privilegi di accesso.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is in reference mode, that is, its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</source>
          <target state="translated">Se il token di sessione è in modalità di riferimento, vale a dire il relativo <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> proprietà è <ph id="ph2">`true`</ph>gestore dei token serializza solo le proprietà del token di sessione che sono necessari per rigenerare la chiave di sessione, il <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> class is used to represent cache keys, and the token handler writes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> properties of the token.</source>
          <target state="translated">Nel caso predefinito, il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> classe viene utilizzata per rappresentare le chiavi della cache e scrive il gestore dei token di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> le proprietà del token.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is not in reference mode, that is, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, then, in addition to the properties mentioned previously, the handler invokes the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</source>
          <target state="translated">Se il token di sessione è non in modalità di riferimento, vale a dire il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> proprietà è <ph id="ph2">`false`</ph>, quindi, oltre alle proprietà indicata in precedenza, richiama il gestore di <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metodo in una matrice di byte serializzata il token e archiviarlo il valore risultante nel cookie anche.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more details about how the token is serialized, see the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Per ulteriori informazioni sulle modalità di serializzazione del token, vedere il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property gets the list of transforms that are applied to the session token in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> proprietà ottiene il token nell'elenco di trasformazioni applicate a una sessione di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>All transforms derive from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> class.</source>
          <target state="translated">Tutte le trasformazioni derivano il <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case the <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> are applied.</source>
          <target state="translated">Nel caso predefinito di <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> vengono applicate.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> uses the Data Protection API (DPAPI) to protect the cookie material.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> Usa l'API di protezione dati (DPAPI) per proteggere il materiale di cookie.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</source>
          <target state="translated">DPAPI utilizza una chiave specifica per il computer in cui è in esecuzione in algoritmi di protezione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</source>
          <target state="translated">Per questo motivo, il gestore di token di sessione predefinito non infatti può essere usato in scenari Web farm, in questi scenari, potrebbe essere necessario token scritti in un computer da leggere in un altro computer.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can use many strategies to circumvent this issue.</source>
          <target state="translated">È possibile utilizzare molte strategie per aggirare questo problema.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, you can:</source>
          <target state="translated">Ad esempio, è possibile eseguire queste operazioni:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Replace the default <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> with the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</source>
          <target state="translated">Sostituire il valore predefinito <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> con il <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> enables you to specify signing and encryption keys under the ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> element in the configuration file.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> consente di specificare le chiavi di crittografia e firma in ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> elemento nel file di configurazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Provide a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and replace the default session token handler with an instance of <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has a list of transforms that includes the <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> and the <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</source>
          <target state="translated">Fornire un gestore per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> evento nel file global.asax.cs e sostituire la sessione predefinita del gestore con un'istanza di token <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> che dispone di un elenco di trasformazioni che include il <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> e <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can create the new instance by invoking one of the constructors that takes a list of transforms.</source>
          <target state="translated">È possibile creare la nuova istanza chiamando uno dei costruttori che accettano un elenco di trasformazioni.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom transform from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> base class and use the method above to include it in the list of transforms to be applied.</source>
          <target state="translated">Derivare una trasformazione personalizzata dalla <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> classe di base e utilizzare il metodo precedente per includerlo nell'elenco di trasformazioni da applicare.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom token handler from <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and implement your own mechanism.</source>
          <target state="translated">Derivare un gestore di token personalizzato da <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> e implementare un meccanismo personalizzato.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about using sessions in Web farm scenarios, see <bpt id="p1">[</bpt>WIF and Web Farms<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'utilizzo di sessioni in scenari Web farm, vedere <bpt id="p1">[</bpt>WIF e Web farm<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>remove<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> element under the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> element to remove the default handler from the collection and then adding your custom token handler using the <bpt id="p3">[</bpt><ph id="ph6">&amp;lt;</ph>add<ph id="ph7">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> è incluso nella raccolta gestore dei token predefinita; è tuttavia possibile sostituirlo con un gestore di token di sessione personalizzate prima specificando un <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>rimuovere<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> elemento sotto il <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> elemento da rimuovere il gestore predefinito dalla raccolta, quindi aggiungere il gestore di token personalizzato utilizzando la <bpt id="p3">[</bpt> <ph id="ph6">&amp;lt;</ph>aggiungere<ph id="ph7">&amp;gt;</ph> <ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, you can specify the default token lifetime by including the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element under the <ph id="ph3">`&lt;add&gt;`</ph> element.</source>
          <target state="translated">Per impostazione predefinita, è possibile specificare la durata del token predefinito, includendo il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elemento sotto il <ph id="ph3">`&lt;add&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can design a custom token handler to take custom configuration elements under the <ph id="ph1">`&lt;add&gt;`</ph> element by overriding the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method to provide the logic to process them.</source>
          <target state="translated">È possibile progettare un gestore di token personalizzato per eseguire gli elementi di configurazione personalizzata nel <ph id="ph1">`&lt;add&gt;`</ph> elemento eseguendo l'override di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> metodo per fornire la logica per l'elaborazione.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> class in configuration.</source>
          <target state="translated">Il codice XML seguente viene illustrato come sostituire il gestore token di sicurezza della sessione predefinito in una raccolta di gestore del token con un'istanza di <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> classe nella configurazione.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the default cookie transforms and token lifetime.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> che utilizza le trasformazioni cookie predefinite e la durata del token.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> properties are initialized to <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> and <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> vengono inizializzate per <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> e <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">Trasformazioni da applicare nella codifica o decodifica dei cookie.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">Imposta la proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> che utilizza le trasformazioni dei cookie specificate.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> viene inizializzata su <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">Trasformazioni da applicare nella codifica o decodifica dei cookie.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">Imposta la proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The default lifetime for a token.</source>
          <target state="translated">Durata del token predefinita.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> property.</source>
          <target state="translated">Imposta la proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms and token lifetime.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> che utilizza le trasformazioni cookie specificate e la durata del token.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> is less than or equal to <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> è minore o uguale a <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The cookie that will be transformed.</source>
          <target state="translated">Cookie che verrà trasformato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cookie should be encoded; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the cookie should be decoded.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il cookie deve essere codificato; <ph id="ph2">&lt;see langword="false" /&gt;</ph> se il cookie deve essere decodificato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Applies the transforms specified by the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property to either encode or decode the specified cookie.</source>
          <target state="translated">Applica le trasformazioni specificate dalla proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> per codificare o decodificare il cookie specificato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The encoded or decoded cookie.</source>
          <target state="translated">Cookie codificato o decodificato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When encoding a cookie transforms are applied in the order in which they appear in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">Quando un cookie di codifica Trasforma vengono applicate nell'ordine in cui appaiono nella <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When decoding a cookie, they are applied in the reverse order.</source>
          <target state="translated">Quando si decodificano un cookie, vengono applicate nell'ordine inverso.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to encode and decode the cookie material.</source>
          <target state="translated">Chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> metodi per codificare e decodificare il materiale di cookie.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> sull'oggetto <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> in ingresso.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The reader should be positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Il lettore dovrebbe essere posizionato in corrispondenza di un elemento <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the reader is positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Restituisce un valore che indica se il lettore viene posizionato in corrispondenza di un elemento <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader points to a <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il lettore punta a <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether this handler supports validation of tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Ottiene un valore che indica se il gestore supporta la convalida di token di tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler supports validation of tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il gestore supporta la convalida dei token di tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can write tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Ottiene un valore che indica se il gestore può scrivere i token di tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler can write tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il gestore può scrivere i token di tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>Gets the name for the cookie element.</source>
          <target state="translated">Ottiene il nome per l'elemento Cookie.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The name for the cookie element.</source>
          <target state="translated">Nome dell'elemento Cookie.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The default element name is "Cookie".</source>
          <target state="translated">Il nome dell'elemento predefinito è "Cookie".</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the element under which the encoded token material should be written or read.</source>
          <target state="translated">Questa proprietà viene utilizzata la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> metodi per determinare l'elemento in cui il materiale di token codificato deve scritto o leggere.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>Gets the namespace for the cookie element.</source>
          <target state="translated">Ottiene lo spazio dei nomi dell'elemento Cookie.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The namespace for the cookie element.</source>
          <target state="translated">Spazio dei nomi dell'elemento Cookie.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The default namespace is "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</source>
          <target state="translated">Spazio dei nomi predefinito è "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the namespace of the element under which the encoded token material should be written or read.</source>
          <target state="translated">Questa proprietà viene utilizzata la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> metodi per determinare lo spazio dei nomi dell'elemento in cui il materiale di token codificato deve scritto o leggere.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The claims principal.</source>
          <target state="translated">L'entità delle attestazioni.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>A caller-defined context string.</source>
          <target state="translated">Stringa di contesto definito dal chiamante.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">ID dell'endpoint che è l'ambito di questo token.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant at which the token becomes valid.</source>
          <target state="translated">Istante temporale in cui il token diventa valido.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant after which the token is no longer valid.</source>
          <target state="translated">Istante temporale dopo il quale il token non è più valido.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> based on the specified claims principal and time range during which the token is valid.</source>
          <target state="translated">Crea <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> in base all'entità attestazioni specificata e all'intervallo di tempo durante il quale il token è valido.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The session security token that was created.</source>
          <target state="translated">Token di sicurezza della sessione creato.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The properties on the new session token are set according to the specified parameters.</source>
          <target state="translated">Le proprietà di questo nuovo token di sessione sono impostate in base ai parametri specificati.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor from which to create the token.</source>
          <target state="translated">Descrittore del token da cui creare il token.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a security token based on the specified token descriptor.</source>
          <target state="translated">Crea un token di sicurezza basato sul descrittore del token specificato.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The security token that was created.</source>
          <target state="translated">Token di sicurezza creato.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This will be an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Sarà un'istanza di <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates and returns a session security token by using the following properties in the token descriptor: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Crea e restituisce un token di sicurezza della sessione utilizzando le proprietà seguenti nel descrittore di token: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> property is set <ph id="ph2">`true`</ph> on the token handler configuration specified by the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property, the bootstrap context is created from the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> property and is saved in the session token.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> impostata <ph id="ph2">`true`</ph> alla configurazione del gestore del token specificato dal <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> proprietà, il contesto di bootstrap viene creato dal <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> proprietà e viene salvata nel token di sessione.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms">
          <source>A read only collection that contains the list of default transforms to be applied to cookies, the <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> and the <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</source>
          <target state="translated">Una raccolta di sola lettura che contiene l'elenco delle trasformazioni predefinite da applicare ai cookie, a <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> e a <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime">
          <source>A constant that specifies the default lifetime for cookies, ten hours.</source>
          <target state="translated">Costante che specifica la durata predefinita per i cookie, dieci ore.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Gets the default token lifetime.</source>
          <target state="translated">Ottiene la durata del token predefinita.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>The default token lifetime.</source>
          <target state="translated">La durata del token predefinita.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Always <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the token type URIs for the token types that can be processed by this handler.</source>
          <target state="translated">Ottiene gli URI dei tipi di token per i tipi di token che possono essere elaborati da questo gestore.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The token type identifier URIs for token types that can be processed by this handler.</source>
          <target state="translated">URI degli identificatori per i tipi di token che possono essere elaborati da questo gestore.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The following type URIs are supported: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>", "<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", and "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</source>
          <target state="translated">Il seguente tipo di URI supportati: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>","<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", e "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">Elementi di configurazione personalizzati.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">Carica la configurazione personalizzata da XML.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Called by the configuration infrastructure to initialize the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> instance.</source>
          <target state="translated">Chiamato dall'infrastruttura di configurazione per inizializzare il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> istanza.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property from the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element in the configuration file.</source>
          <target state="translated">Inizializza il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> proprietà il <ph id="ph2">`lifetime`</ph> attributo del <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elemento nel file di configurazione.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The configuration specified by <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is not valid.</source>
          <target state="translated">La configurazione specificata da <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> non è valida.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For example, it does not contain a <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, it contains more than one <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, a valid <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value cannot be read from the <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> attribute, or the <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> attribute specifies a value that is less than <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">Ad esempio, non contiene un elemento di <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph>, contiene più di un elemento <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph>, un valore valido di <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> non può essere letto dall'attributo di <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph>, o l'attributo di <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> specifica un valore minore di <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Legge un oggetto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">L'implementazione predefinita deserializza il token da WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> sull'oggetto <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> in ingresso.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader.</source>
          <target state="translated">Legge <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> utilizzando il lettore XML specificato.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Token di sicurezza della sessione che è stato letto, istanza di <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">Il lettore deve essere posizionato in un Feb2005 conversazione WS-Secure o un 1.3 conversazione WS-Secure <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The default implementation invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method using a default token resolver.</source>
          <target state="translated">Richiama l'implementazione predefinita di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> metodo mediante un resolver dei token.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">Il lettore non è posizionato in corrispondenza di <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> o l'oggetto <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> non può essere letto.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The stream of bytes that contains the token.</source>
          <target state="translated">Flusso di byte contenente il token.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The token resolver to use.</source>
          <target state="translated">Resolver di token da utilizzare.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a stream of bytes by using the specified token resolver.</source>
          <target state="translated">Legge l'oggetto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> da un flusso di byte utilizzando il resolver di token specificato.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> that was read.</source>
          <target state="translated">Oggetto della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> letto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The default implementation creates an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> over the token and invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L'implementazione predefinita crea un <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> tramite il token e richiama il <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> sull'oggetto <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> in ingresso.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> that can used to resolve the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> che può essere utilizzato per risolvere il <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader and token resolver.</source>
          <target state="translated">Legge l'oggetto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> utilizzando il lettore XML e il resolver di token specificati.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Token di sicurezza della sessione che è stato letto, istanza di <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">Il lettore deve essere posizionato in un Feb2005 conversazione WS-Secure o un 1.3 conversazione WS-Secure <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>If the token material is cached, it is read from the token cache, which is an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> class.</source>
          <target state="translated">Se il materiale di token è memorizzato nella cache, viene letto dalla cache dei token, che è un'istanza del <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Otherwise, the token material is read from the child element of the <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element that is specified by the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method is invoked to decode the cookie.</source>
          <target state="translated">In caso contrario, il materiale di token è di lettura dall'elemento figlio del <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento specificato da di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> proprietà e <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metodo viene richiamato per decodificare il cookie.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>For more information about how session tokens are serialized into a <ph id="ph1">`&lt;SecurityContextToken`</ph> element, see the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Per ulteriori informazioni su come vengono serializzati i token di sessione in un <ph id="ph1">`&lt;SecurityContextToken`</ph> elemento, vedere il <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">Il lettore non è posizionato in corrispondenza di <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> o l'oggetto <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> non può essere letto.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>The transforms to use.</source>
          <target state="translated">Trasformazioni da utilizzare.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the transforms that will be applied to cookies.</source>
          <target state="translated">Imposta le trasformazioni che verranno applicate ai cookie.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the list of transforms returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">Imposta l'elenco di trasformazioni restituito dal <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</source>
          <target state="translated">Verranno applicate nell'ordine in cui compaiono nell'elenco per la codifica di un cookie e nell'ordine inverso durante la decodifica di un cookie.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>If the <ph id="ph1">`transforms`</ph> parameter is <ph id="ph2">`null`</ph>, an exception will be thrown from the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method when it is called to encode or decode the cookie.</source>
          <target state="translated">Se il <ph id="ph1">`transforms`</ph> parametro <ph id="ph2">`null`</ph>, verrà generata un'eccezione dal <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metodo quando viene chiamato per codificare o decodificare il cookie.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>Gets or sets the token lifetime.</source>
          <target state="translated">Ottiene o imposta la durata del token.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The token lifetime.</source>
          <target state="translated">Durata del token.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>By default, if the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element is specified in the configuration file, the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to the value of the <ph id="ph4">`lifetime`</ph> attribute by the <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">Per impostazione predefinita, se il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elemento viene specificato nel file di configurazione, il <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> proprietà viene inizializzata sul valore del <ph id="ph4">`lifetime`</ph> attributo per il <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>An attempt to set a time span that is less than or equal to zero occurs.</source>
          <target state="translated">Si è verificato un tentativo di impostare un in intervallo di tempo inferiore o uguale a zero.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>Gets the type of the tokens that this handler processes.</source>
          <target state="translated">Ottiene il tipo dei token che questo gestore elabora.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> dell'oggetto <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>Gets the transforms that will be applied to the cookie.</source>
          <target state="translated">Ottiene le trasformazioni che saranno applicate al cookie.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The list of transforms that will be applied to the cookie.</source>
          <target state="translated">L'elenco delle trasformazioni che saranno applicate al cookie.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The transforms are applied in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated">Vengono applicate nel <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to be checked.</source>
          <target state="translated">Token da controllare.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Determines whether the session associated with the specified token is still valid.</source>
          <target state="translated">Determina se la sessione associata al token specificato è ancora valida.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validity is determined by checking the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> properties of the specified token.</source>
          <target state="translated">La validità è determinata controllando le proprietà di <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> e di <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> del token specificato.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An exception is thrown if the session is no longer valid.</source>
          <target state="translated">Se la sessione non è più valida viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token is not valid if its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> property is set to a value that occurs later than <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, or if its <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> property is set to a value that occurs earlier than <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</source>
          <target state="translated">Il token non è valido se relativo <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> è impostata su un valore che si verifica in seguito rispetto <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, o se il relativo <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> è impostata su un valore che si verifica precedenti a <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> methods to validate the session.</source>
          <target state="translated">Chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> metodi per convalidare la sessione.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> property of the token is later than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> del token è successiva a <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> property of the token is earlier than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> del token è precedente a <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Validates a token and returns its claims.</source>
          <target state="translated">Convalida un token e ne restituisce le richieste.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to be validated.</source>
          <target state="translated">Token da convalidare.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Deve essere assegnabile da <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the specified token and returns its claims.</source>
          <target state="translated">Convalida il token specificato e restituisce le relative attestazioni.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">Identità contenute nel token.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> method to validate the token.</source>
          <target state="translated">Richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> metodo per convalidare il token.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Impossibile assegnare <ph id="ph1">&lt;paramref name="token" /&gt;</ph> da <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The token to be validated.</source>
          <target state="translated">Token da convalidare.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Deve essere assegnabile da <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">ID dell'endpoint che è l'ambito di questo token.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Validates the specified session token and returns its claims.</source>
          <target state="translated">Convalida il token della sessione specifica e ne restituisce le richieste.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">Identità contenute nel token.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method; otherwise, throws a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</source>
          <target state="translated">Esegue una verifica per accertarsi che il token specificato ha ambito per l'ID dell'endpoint specificato e, in caso affermativo, richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metodo; in caso contrario, genera un <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Session tokens that have an <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property that is <ph id="ph2">`null`</ph> or empty are considered to be globally scoped.</source>
          <target state="translated">Token di sessione che hanno un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> proprietà <ph id="ph2">`null`</ph> o vuoti vengono considerati per essere un ambito globale.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>This presents a potential security risk.</source>
          <target state="translated">Ciò rappresenta un potenziale rischio di sicurezza.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>For this reason you should make sure that the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property is set in your session tokens.</source>
          <target state="translated">Per questo motivo è necessario assicurarsi che sia il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> dei token di sessione è impostata.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Impossibile assegnare <ph id="ph1">&lt;paramref name="token" /&gt;</ph> da <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> property of the specified token is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or empty and its value is different than that specified by the <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> parameter.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> del token specificato non è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o vuota e il relativo valore è diverso da quello specificato dal parametro <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Serializes a token.</source>
          <target state="translated">Serializza un token.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">L'implementazione predefinita serializza il token in WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to write.</source>
          <target state="translated">Token da scrivere.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token into a byte array.</source>
          <target state="translated">Serializza il token specificato in una matrice di byte.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An encoded byte array.</source>
          <target state="translated">Matrice di byte codificata.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token by creating and XML writer over a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> and invoking the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Serializza il token specificato tramite la creazione e di writer XML su una <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> e richiamando il <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>See that overload for more details.</source>
          <target state="translated">Tale overload per ulteriori informazioni, vedere.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer with which to serialize the token.</source>
          <target state="translated">Writer XML col quale serializzare il token.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to serialize.</source>
          <target state="translated">Token da serializzare.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Serializes the specified token by using the specified XML writer.</source>
          <target state="translated">Serializza il token di sicurezza specificato utilizzando il writer XML specificato.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element, depending on the value of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">L'implementazione predefinita serializza il token specificato sotto forma di WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento, in base al valore di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`Id`</ph> attribute.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> proprietà viene serializzata come il <ph id="ph2">`Id`</ph> attributo.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`&lt;Identifier&gt;`</ph> child element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> proprietà viene serializzata come il <ph id="ph2">`&lt;Identifier&gt;`</ph> elemento figlio.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If not <ph id="ph1">`null`</ph> the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> property is serialized as an <ph id="ph3">`&lt;Instance&gt;`</ph> element.</source>
          <target state="translated">In caso contrario <ph id="ph1">`null`</ph> il <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> proprietà viene serializzata come un <ph id="ph3">`&lt;Instance&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Finally, if the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, the entire token is serialized into binary array which is passed to the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method to be encoded.</source>
          <target state="translated">Infine, se il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> proprietà è <ph id="ph2">`false`</ph>, l'intero token viene serializzato in matrice binaria che viene passato per il <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metodo da codificare.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The encoded token is then written as a base64 encoded value to the element and namespace specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties.</source>
          <target state="translated">Il token codificato viene quindi scritta come un valore con codificata base64 per l'elemento e spazio dei nomi specificato per il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the token is not serialized.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> proprietà <ph id="ph2">`true`</ph>, il token non è serializzato.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Impossibile assegnare <ph id="ph1">&lt;paramref name="token" /&gt;</ph> da <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> del token specifica una versione di WS-Secure Conversation che non è supportata dal gestore.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>