<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c115a52489fd77750e537edfe5b3127ffc36e982" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419955" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d6563-101">
        <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> che elabora i token di sicurezza di tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6563-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-102">La <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe serializza deserializza e convalida i token di sessione.</span><span class="sxs-lookup"><span data-stu-id="d6563-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="d6563-103">I token di sessione sono token di tipo <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="d6563-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="d6563-104">La <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe serializza i token da e verso il formato di cookie.</span><span class="sxs-lookup"><span data-stu-id="d6563-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="d6563-105">Per impostazione predefinita, la classe serializza i token in WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elementi.</span><span class="sxs-lookup"><span data-stu-id="d6563-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="d6563-106">I token di sessione vengono utilizzati per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) e <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) per archiviare le informazioni relative a una sessione, si tratta principalmente il <xref:System.Security.Claims.ClaimsPrincipal> associato con l'utente autenticato e gli orari di inizio e di scadenza della sessione.</span><span class="sxs-lookup"><span data-stu-id="d6563-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="d6563-107">In scenari passivi, il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> chiama il <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) dalla pipeline di autenticazione per creare un token di sessione dal <xref:System.Security.Claims.ClaimsPrincipal> che rappresenta l'utente autenticato.</span><span class="sxs-lookup"><span data-stu-id="d6563-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="d6563-108">Il modulo SAM utilizza configurati <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> per creare il token e di eseguirne la serializzazione in un cookie (e per deserializzare il token da un cookie nelle richieste successive).</span><span class="sxs-lookup"><span data-stu-id="d6563-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="d6563-109">Il modulo SAM utilizza un'istanza di configurati <xref:System.IdentityModel.Services.CookieHandler> classe per scrivere il cookie di risposta HTTP.</span><span class="sxs-lookup"><span data-stu-id="d6563-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="d6563-110">Questo cookie viene quindi restituito al client e nelle richieste successive, il client può presentare il cookie, piuttosto che effettua un round trip al provider di identità per ottenere nuovamente un token di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="d6563-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="d6563-111">Per ulteriori informazioni sul funzionano delle sessioni con WIF, vedere [gestione delle sessioni WIF](~/docs/framework/security/wif-session-management.md).</span><span class="sxs-lookup"><span data-stu-id="d6563-111">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6563-112">Il \<securityTokenHandlers > elemento di configurazione può essere usato per specificare un <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> che ha la responsabilità per la protezione delle sessioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d6563-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application’s sessions.</span></span> <span data-ttu-id="d6563-113">Gli sviluppatori devono prestare attenzione quando si modifica questa impostazione di configurazione, come un sistema con configurazione non valida potrebbe causare la compromissione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d6563-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="d6563-114">Ad esempio, specificando un collegamento ipertestuale derivato "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> e passando un insieme di trasformazioni (CookieTransform) vuoto per la base darà all'identità dell'utente serializzato in un cookie che non è stato protetto.</span><span class="sxs-lookup"><span data-stu-id="d6563-114">For example, specifying a derived  HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="d6563-115">Ciò potrebbe consentire un attacco per modificare l'identità e quindi modificare i privilegi di accesso.</span><span class="sxs-lookup"><span data-stu-id="d6563-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="d6563-116">Se il token di sessione è in modalità di riferimento, vale a dire il relativo <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> proprietà è `true`gestore dei token serializza solo le proprietà del token di sessione che sono necessari per rigenerare la chiave di sessione, il <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span><span class="sxs-lookup"><span data-stu-id="d6563-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="d6563-117">Nel caso predefinito, il <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> classe viene utilizzata per rappresentare le chiavi della cache e scrive il gestore dei token di <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> e <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> le proprietà del token.</span><span class="sxs-lookup"><span data-stu-id="d6563-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="d6563-118">Se il token di sessione è non in modalità di riferimento, vale a dire il <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> proprietà è `false`, quindi, oltre alle proprietà indicata in precedenza, richiama il gestore di <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metodo in una matrice di byte serializzata il token e archiviarlo il valore risultante nel cookie anche.</span><span class="sxs-lookup"><span data-stu-id="d6563-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="d6563-119">Per ulteriori informazioni sulle modalità di serializzazione del token, vedere il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="d6563-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d6563-120">Il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> proprietà ottiene il token nell'elenco di trasformazioni applicate a una sessione di <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d6563-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="d6563-121">Tutte le trasformazioni derivano il <xref:System.IdentityModel.CookieTransform> classe.</span><span class="sxs-lookup"><span data-stu-id="d6563-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="d6563-122">Nel caso predefinito di <xref:System.IdentityModel.DeflateCookieTransform> e <xref:System.IdentityModel.ProtectedDataCookieTransform> vengono applicate.</span><span class="sxs-lookup"><span data-stu-id="d6563-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="d6563-123">Il <xref:System.IdentityModel.ProtectedDataCookieTransform> Usa l'API di protezione dati (DPAPI) per proteggere il materiale di cookie.</span><span class="sxs-lookup"><span data-stu-id="d6563-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="d6563-124">DPAPI utilizza una chiave specifica per il computer in cui è in esecuzione in algoritmi di protezione.</span><span class="sxs-lookup"><span data-stu-id="d6563-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="d6563-125">Per questo motivo, il gestore di token di sessione predefinito non infatti può essere usato in scenari Web farm, in questi scenari, potrebbe essere necessario token scritti in un computer da leggere in un altro computer.</span><span class="sxs-lookup"><span data-stu-id="d6563-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="d6563-126">È possibile utilizzare molte strategie per aggirare questo problema.</span><span class="sxs-lookup"><span data-stu-id="d6563-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="d6563-127">Ad esempio, è possibile eseguire queste operazioni:</span><span class="sxs-lookup"><span data-stu-id="d6563-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="d6563-128">Sostituire il valore predefinito <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> con il <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span><span class="sxs-lookup"><span data-stu-id="d6563-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="d6563-129">Il <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> consente di specificare le chiavi di crittografia e firma in ASP.NET `<machineKey>` elemento nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="d6563-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="d6563-130">Fornire un gestore per il <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> evento nel file global.asax.cs e sostituire la sessione predefinita del gestore con un'istanza di token <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> che dispone di un elenco di trasformazioni che include il <xref:System.IdentityModel.RsaSignatureCookieTransform> e <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span><span class="sxs-lookup"><span data-stu-id="d6563-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="d6563-131">È possibile creare la nuova istanza chiamando uno dei costruttori che accettano un elenco di trasformazioni.</span><span class="sxs-lookup"><span data-stu-id="d6563-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="d6563-132">Derivare una trasformazione personalizzata dalla <xref:System.IdentityModel.CookieTransform> classe di base e utilizzare il metodo precedente per includerlo nell'elenco di trasformazioni da applicare.</span><span class="sxs-lookup"><span data-stu-id="d6563-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="d6563-133">Derivare un gestore di token personalizzato da <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> e implementare un meccanismo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="d6563-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="d6563-134">Per ulteriori informazioni sull'utilizzo di sessioni in scenari Web farm, vedere [WIF e Web farm](~/docs/framework/security/wif-and-web-farms.md).</span><span class="sxs-lookup"><span data-stu-id="d6563-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="d6563-135">Il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> è incluso nella raccolta gestore dei token predefinita; è tuttavia possibile sostituirlo con un gestore di token di sessione personalizzate prima specificando un [ &lt;rimuovere&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) elemento sotto il [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) elemento da rimuovere il gestore predefinito dalla raccolta, quindi aggiungere il gestore di token personalizzato utilizzando la [ &lt;aggiungere&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="d6563-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element.</span></span> <span data-ttu-id="d6563-136">Per impostazione predefinita, è possibile specificare la durata del token predefinito, includendo il [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento sotto il `<add>` elemento.</span><span class="sxs-lookup"><span data-stu-id="d6563-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element.</span></span> <span data-ttu-id="d6563-137">È possibile progettare un gestore di token personalizzato per eseguire gli elementi di configurazione personalizzata nel `<add>` elemento eseguendo l'override di <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> metodo per fornire la logica per l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="d6563-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6563-138">Il codice XML seguente viene illustrato come sostituire il gestore token di sicurezza della sessione predefinito in una raccolta di gestore del token con un'istanza di <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> classe nella configurazione.</span><span class="sxs-lookup"><span data-stu-id="d6563-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-139">Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-139">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6563-140">Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> che utilizza le trasformazioni cookie predefinite e la durata del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-141">Il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> vengono inizializzate per <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span><span class="sxs-lookup"><span data-stu-id="d6563-141">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="d6563-142">Trasformazioni da applicare nella codifica o decodifica dei cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-142">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="d6563-143">Imposta la proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-143">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-144">Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> che utilizza le trasformazioni dei cookie specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-144">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-145">La proprietà <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> viene inizializzata su <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span><span class="sxs-lookup"><span data-stu-id="d6563-145">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-146">
            <paramref name="transforms" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-146">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="d6563-147">Trasformazioni da applicare nella codifica o decodifica dei cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-147">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="d6563-148">Imposta la proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-148">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <param name="tokenLifetime">
          <span data-ttu-id="d6563-149">Durata del token predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-149">The default lifetime for a token.</span>
          </span>
          <span data-ttu-id="d6563-150">Imposta la proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-150">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-151">Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> che utilizza le trasformazioni cookie specificate e la durata del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-152">
            <paramref name="transforms" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-152">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-153">
            <paramref name="tokenLifetime" /> è minore o uguale a <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-153">
              <paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="d6563-154">Cookie che verrà trasformato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-154">The cookie that will be transformed.</span>
          </span>
        </param>
        <param name="outbound">
          <span data-ttu-id="d6563-155">
            <see langword="true" /> se il cookie deve essere codificato; <see langword="false" /> se il cookie deve essere decodificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-155">
              <see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-156">Applica le trasformazioni specificate dalla proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> per codificare o decodificare il cookie specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-156">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-157">Cookie codificato o decodificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-157">The encoded or decoded cookie.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-158">Quando un cookie di codifica Trasforma vengono applicate nell'ordine in cui appaiono nella <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d6563-158">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="d6563-159">Quando si decodificano un cookie, vengono applicate nell'ordine inverso.</span><span class="sxs-lookup"><span data-stu-id="d6563-159">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="d6563-160">Chiamato dal <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> metodi per codificare e decodificare il materiale di cookie.</span><span class="sxs-lookup"><span data-stu-id="d6563-160">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-161">La proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-161">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="d6563-162">Oggetto <see cref="T:System.Xml.XmlReader" /> sull'oggetto <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-162">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
          <span data-ttu-id="d6563-163">Il lettore dovrebbe essere posizionato in corrispondenza di un elemento <see langword="&lt;wsc:SecurityContextToken&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-163">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-164">Restituisce un valore che indica se il lettore viene posizionato in corrispondenza di un elemento <see langword="&lt;wsc:SecurityContextToken&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-164">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-165">
            <see langword="true" /> se il lettore punta a <see langword="&lt;wsc:SecurityContextToken&gt;" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-165">
              <see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-166">
            <paramref name="reader" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-166">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-167">Ottiene un valore che indica se il gestore supporta la convalida di token di tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-167">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-168">
            <see langword="true" /> se il gestore supporta la convalida dei token di tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-168">
              <see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d6563-169">Sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-169">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-170">Ottiene un valore che indica se il gestore può scrivere i token di tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-170">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-171">
            <see langword="true" /> se il gestore può scrivere i token di tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-171">
              <see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d6563-172">Sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-172">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-173">Ottiene il nome per l'elemento Cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-173">Gets the name for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-174">Nome dell'elemento Cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-174">The name for the cookie element.</span>
          </span>
          <span data-ttu-id="d6563-175">Il nome dell'elemento predefinito è "Cookie".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-175">The default element name is "Cookie".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-176">Questa proprietà viene utilizzata la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> metodi per determinare l'elemento in cui il materiale di token codificato deve scritto o leggere.</span><span class="sxs-lookup"><span data-stu-id="d6563-176">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-177">Ottiene lo spazio dei nomi dell'elemento Cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-177">Gets the namespace for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-178">Spazio dei nomi dell'elemento Cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-178">The namespace for the cookie element.</span>
          </span>
          <span data-ttu-id="d6563-179">Spazio dei nomi predefinito è "http://schemas.microsoft.com/ws/2006/05/security".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-179">The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-180">Questa proprietà viene utilizzata la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> metodi per determinare lo spazio dei nomi dell'elemento in cui il materiale di token codificato deve scritto o leggere.</span><span class="sxs-lookup"><span data-stu-id="d6563-180">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="d6563-181">L'entità delle attestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-181">The claims principal.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d6563-182">Stringa di contesto definito dal chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-182">A caller-defined context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="d6563-183">ID dell'endpoint che è l'ambito di questo token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-183">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="d6563-184">Istante temporale in cui il token diventa valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-184">The time instant at which the token becomes valid.</span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="d6563-185">Istante temporale dopo il quale il token non è più valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-185">The time instant after which the token is no longer valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-186">Crea <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> in base all'entità attestazioni specificata e all'intervallo di tempo durante il quale il token è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-186">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-187">Token di sicurezza della sessione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-187">The session security token that was created.</span>
          </span>
          <span data-ttu-id="d6563-188">Le proprietà di questo nuovo token di sessione sono impostate in base ai parametri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-188">The properties on the new session token are set according to the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-189">
            <paramref name="principal" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-189">
              <paramref name="principal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-190">La proprietà <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-190">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="d6563-191">Descrittore del token da cui creare il token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-191">The token descriptor from which to create the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-192">Crea un token di sicurezza basato sul descrittore del token specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-192">Creates a security token based on the specified token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-193">Token di sicurezza creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-193">The security token that was created.</span>
          </span>
          <span data-ttu-id="d6563-194">Sarà un'istanza di <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-194">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-195">Crea e restituisce un token di sicurezza della sessione utilizzando le proprietà seguenti nel descrittore di token: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, e <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d6563-195">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d6563-196">Se il <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> impostata `true` alla configurazione del gestore del token specificato dal <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> proprietà, il contesto di bootstrap viene creato dal <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> proprietà e viene salvata nel token di sessione.</span><span class="sxs-lookup"><span data-stu-id="d6563-196">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-197">
            <paramref name="tokenDescriptor" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-197">
              <paramref name="tokenDescriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-198">La proprietà <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-198">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-199">Una raccolta di sola lettura che contiene l'elenco delle trasformazioni predefinite da applicare ai cookie, a <see cref="T:System.IdentityModel.DeflateCookieTransform" /> e a <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-199">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-200">Costante che specifica la durata predefinita per i cookie, dieci ore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-200">A constant that specifies the default lifetime for cookies, ten hours.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-201">Ottiene la durata del token predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-201">Gets the default token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-202">La durata del token predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-202">The default token lifetime.</span>
          </span>
          <span data-ttu-id="d6563-203">Sempre <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-203">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6563-204">Ottiene gli URI dei tipi di token per i tipi di token che possono essere elaborati da questo gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-204">Gets the token type URIs for the token types that can be processed by this handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-205">URI degli identificatori per i tipi di token che possono essere elaborati da questo gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-205">The token type identifier URIs for token types that can be processed by this handler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-206">Il seguente tipo di URI supportati: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation","http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", e "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span><span class="sxs-lookup"><span data-stu-id="d6563-206">The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements">
          <span data-ttu-id="d6563-207">Elementi di configurazione personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-207">The custom configuration elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-208">Carica la configurazione personalizzata da XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-208">Loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-209">Chiamato dall'infrastruttura di configurazione per inizializzare il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> istanza.</span><span class="sxs-lookup"><span data-stu-id="d6563-209">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="d6563-210">Inizializza il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> proprietà il `lifetime` attributo del [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="d6563-210">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-211">
            <paramref name="customConfigElements" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-211">
              <paramref name="customConfigElements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-212">La configurazione specificata da <paramref name="customConfigElements" /> non è valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-212">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span>
          </span>
          <span data-ttu-id="d6563-213">Ad esempio, non contiene un elemento di <see langword="&lt;sessionTokenRequirement&gt;" />, contiene più di un elemento <see langword="&lt;sessionTokenRequirement&gt;" />, un valore valido di <see cref="T:System.TimeSpan" /> non può essere letto dall'attributo di <see langword="lifetime" />, o l'attributo di <see langword="lifetime" /> specifica un valore minore di <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-213">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-214">Legge un oggetto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-214">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-215">L'implementazione predefinita deserializza il token da WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="d6563-215">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="d6563-216">Oggetto <see cref="T:System.Xml.XmlReader" /> sull'oggetto <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-216">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-217">Legge <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> utilizzando il lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-217">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-218">Token di sicurezza della sessione che è stato letto, istanza di <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-218">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-219">Il lettore deve essere posizionato in un Feb2005 conversazione WS-Secure o un 1.3 conversazione WS-Secure `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="d6563-219">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="d6563-220">Richiama l'implementazione predefinita di <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> metodo mediante un resolver dei token.</span><span class="sxs-lookup"><span data-stu-id="d6563-220">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-221">
            <paramref name="reader" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-221">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="d6563-222">Il lettore non è posizionato in corrispondenza di <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> o l'oggetto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> non può essere letto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-222">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="d6563-223">Flusso di byte contenente il token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-223">The stream of bytes that contains the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="d6563-224">Resolver di token da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-224">The token resolver to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-225">Legge l'oggetto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> da un flusso di byte utilizzando il resolver di token specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-225">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-226">Oggetto della classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> letto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-226">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-227">L'implementazione predefinita crea un <xref:System.Xml.XmlDictionaryReader> tramite il token e richiama il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="d6563-227">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="d6563-228">Oggetto <see cref="T:System.Xml.XmlReader" /> sull'oggetto <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-228">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="d6563-229">
            <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> che può essere utilizzato per risolvere il <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-230">Legge l'oggetto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> utilizzando il lettore XML e il resolver di token specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-231">Token di sicurezza della sessione che è stato letto, istanza di <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-231">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-232">Il lettore deve essere posizionato in un Feb2005 conversazione WS-Secure o un 1.3 conversazione WS-Secure `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="d6563-232">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="d6563-233">Se il materiale di token è memorizzato nella cache, viene letto dalla cache dei token, che è un'istanza del <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> classe.</span><span class="sxs-lookup"><span data-stu-id="d6563-233">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="d6563-234">In caso contrario, il materiale di token è di lettura dall'elemento figlio del `<wsc:SecurityContextToken>` elemento specificato da di <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> proprietà e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metodo viene richiamato per decodificare il cookie.</span><span class="sxs-lookup"><span data-stu-id="d6563-234">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="d6563-235">Per ulteriori informazioni su come vengono serializzati i token di sessione in un `<SecurityContextToken` elemento, vedere il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="d6563-235">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-236">
            <paramref name="reader" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-236">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d6563-237">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-237">-or-</span>
          </span>
          <span data-ttu-id="d6563-238">
            <paramref name="tokenResolver" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-238">
              <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="d6563-239">Il lettore non è posizionato in corrispondenza di <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> o l'oggetto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> non può essere letto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-239">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="d6563-240">Trasformazioni da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-240">The transforms to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-241">Imposta le trasformazioni che verranno applicate ai cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-241">Sets the transforms that will be applied to cookies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-242">Imposta l'elenco di trasformazioni restituito dal <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d6563-242">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="d6563-243">Verranno applicate nell'ordine in cui compaiono nell'elenco per la codifica di un cookie e nell'ordine inverso durante la decodifica di un cookie.</span><span class="sxs-lookup"><span data-stu-id="d6563-243">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d6563-244">Se il `transforms` parametro `null`, verrà generata un'eccezione dal <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metodo quando viene chiamato per codificare o decodificare il cookie.</span><span class="sxs-lookup"><span data-stu-id="d6563-244">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-245">Ottiene o imposta la durata del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-245">Gets or sets the token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-246">Durata del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-246">The token lifetime.</span>
          </span>
          <span data-ttu-id="d6563-247">Il valore predefinito è <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-247">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-248">Per impostazione predefinita, se il [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento viene specificato nel file di configurazione, il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> proprietà viene inizializzata sul valore del `lifetime` attributo per il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d6563-248">By default, if the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6563-249">Si è verificato un tentativo di impostare un in intervallo di tempo inferiore o uguale a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-249">An attempt to set a time span that is less than or equal to zero occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-250">Ottiene il tipo dei token che questo gestore elabora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-250">Gets the type of the tokens that this handler processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-251">Oggetto <see cref="T:System.Type" /> dell'oggetto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-251">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-252">Ottiene le trasformazioni che saranno applicate al cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-252">Gets the transforms that will be applied to the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6563-253">L'elenco delle trasformazioni che saranno applicate al cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-253">The list of transforms that will be applied to the cookie.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-254">Vengono applicate nel <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d6563-254">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="d6563-255">Token da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-255">The token to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-256">Determina se la sessione associata al token specificato è ancora valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-256">Determines whether the session associated with the specified token is still valid.</span>
          </span>
          <span data-ttu-id="d6563-257">La validità è determinata controllando le proprietà di <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> e di <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> del token specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-257">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span>
          </span>
          <span data-ttu-id="d6563-258">Se la sessione non è più valida viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-258">An exception is thrown if the session is no longer valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-259">Il token non è valido se relativo <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> è impostata su un valore che si verifica in seguito rispetto <xref:System.DateTime.UtcNow%2A>, o se il relativo <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> è impostata su un valore che si verifica precedenti a <xref:System.DateTime.UtcNow%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6563-259">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="d6563-260">Chiamato dal <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> metodi per convalidare la sessione.</span><span class="sxs-lookup"><span data-stu-id="d6563-260">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-261">
            <paramref name="securityToken" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-261">
              <paramref name="securityToken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-262">La proprietà <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-262">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
          <span data-ttu-id="d6563-263">La proprietà <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> del token è successiva a <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-263">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
          <span data-ttu-id="d6563-264">La proprietà <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> del token è precedente a <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-264">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-265">Convalida un token e ne restituisce le richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-265">Validates a token and returns its claims.</span>
          </span>
        </summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="d6563-266">Token da convalidare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-266">The token to be validated.</span>
          </span>
          <span data-ttu-id="d6563-267">Deve essere assegnabile da <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-267">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-268">Convalida il token specificato e restituisce le relative attestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-268">Validates the specified token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-269">Identità contenute nel token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-269">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-270">Richiama il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> metodo per convalidare il token.</span><span class="sxs-lookup"><span data-stu-id="d6563-270">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-271">
            <paramref name="token" />
            <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-271">
              <paramref name="token" />
              <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-272">Impossibile assegnare <paramref name="token" /> da <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-272">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="d6563-273">Token da convalidare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-273">The token to be validated.</span>
          </span>
          <span data-ttu-id="d6563-274">Deve essere assegnabile da <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-274">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="d6563-275">ID dell'endpoint che è l'ambito di questo token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-275">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-276">Convalida il token della sessione specifica e ne restituisce le richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-276">Validates the specified session token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-277">Identità contenute nel token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-277">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-278">Esegue una verifica per accertarsi che il token specificato ha ambito per l'ID dell'endpoint specificato e, in caso affermativo, richiama il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metodo; in caso contrario, genera un <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span><span class="sxs-lookup"><span data-stu-id="d6563-278">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d6563-279">Token di sessione che hanno un <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> proprietà `null` o vuoti vengono considerati per essere un ambito globale.</span><span class="sxs-lookup"><span data-stu-id="d6563-279">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="d6563-280">Ciò rappresenta un potenziale rischio di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="d6563-280">This presents a potential security risk.</span></span> <span data-ttu-id="d6563-281">Per questo motivo è necessario assicurarsi che sia il <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> dei token di sessione è impostata.</span><span class="sxs-lookup"><span data-stu-id="d6563-281">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-282">
            <paramref name="token" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-282">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d6563-283">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-283">-or-</span>
          </span>
          <span data-ttu-id="d6563-284">
            <paramref name="endpointId" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-284">
              <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-285">Impossibile assegnare <paramref name="token" /> da <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-285">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="d6563-286">La proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> del token specificato non è <see langword="null" /> o vuota e il relativo valore è diverso da quello specificato dal parametro <paramref name="endpointId" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-286">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d6563-287">Serializza un token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-287">Serializes a token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-288">L'implementazione predefinita serializza il token in WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="d6563-288">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="d6563-289">Token da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-289">The token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-290">Serializza il token specificato in una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-290">Serializes the specified token into a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6563-291">Matrice di byte codificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-291">An encoded byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-292">Serializza il token specificato tramite la creazione e di writer XML su una <xref:System.IO.MemoryStream> e richiamando il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="d6563-292">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d6563-293">Tale overload per ulteriori informazioni, vedere.</span><span class="sxs-lookup"><span data-stu-id="d6563-293">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-294">
            <paramref name="sessiontoken" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-294">
              <paramref name="sessiontoken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="d6563-295">Writer XML col quale serializzare il token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-295">The XML writer with which to serialize the token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="d6563-296">Token da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-296">The token to serialize.</span>
          </span>
          <span data-ttu-id="d6563-297">Istanza di <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-297">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6563-298">Serializza il token di sicurezza specificato utilizzando il writer XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-298">Serializes the specified token by using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6563-299">L'implementazione predefinita serializza il token specificato sotto forma di WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento, in base al valore di <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d6563-299">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d6563-300">Il <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> proprietà viene serializzata come il `Id` attributo.</span><span class="sxs-lookup"><span data-stu-id="d6563-300">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="d6563-301">Il <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> proprietà viene serializzata come il `<Identifier>` elemento figlio.</span><span class="sxs-lookup"><span data-stu-id="d6563-301">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="d6563-302">In caso contrario `null` il <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> proprietà viene serializzata come un `<Instance>` elemento.</span><span class="sxs-lookup"><span data-stu-id="d6563-302">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="d6563-303">Infine, se il <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> proprietà è `false`, l'intero token viene serializzato in matrice binaria che viene passato per il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metodo da codificare.</span><span class="sxs-lookup"><span data-stu-id="d6563-303">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="d6563-304">Il token codificato viene quindi scritta come un valore con codificata base64 per l'elemento e spazio dei nomi specificato per il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> e <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d6563-304">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="d6563-305">Se il <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> proprietà `true`, il token non è serializzato.</span><span class="sxs-lookup"><span data-stu-id="d6563-305">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6563-306">
            <paramref name="writer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-306">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d6563-307">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-307">-or-</span>
          </span>
          <span data-ttu-id="d6563-308">
            <paramref name="token" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-308">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d6563-309">Impossibile assegnare <paramref name="token" /> da <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-309">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
          <span data-ttu-id="d6563-310">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-310">-or-</span>
          </span>
          <span data-ttu-id="d6563-311">La proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> del token specifica una versione di WS-Secure Conversation che non è supportata dal gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6563-311">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>