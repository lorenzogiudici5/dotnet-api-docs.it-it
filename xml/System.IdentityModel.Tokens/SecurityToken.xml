<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="391857e7b05c1db570c745e1f792d2bfd8f85f60" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37650345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una classe di base utilizzata per implementare tutti i token di sicurezza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare un token di sicurezza per fornire credenziali di autenticazione o proteggere un messaggio.  
  
 Un token di sicurezza può essere usato per fornire le credenziali di autenticazione, chiavi crittografiche, o, nel caso di un token di sicurezza emesso da un servizio token di sicurezza (STS), una raccolta di attestazioni su un soggetto. Tutti i token di sicurezza derivano dal <xref:System.IdentityModel.Tokens.SecurityToken> classe.  
  
 A partire da .NET 4.5, Windows Identity Foundation (WIF) è stato completamente integrato in .NET Framework e le classi esposte da WIF sono il metodo preferito di gestire i token di sicurezza nel codice. In WIF i token di sicurezza vengono serializzati e deserializzati in e da loro XML rappresentazione e vengono convalidati tramite le classi derivate dal <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe di base. Convalidare un token riguarda non soltanto accertare che il token sia valido, ma anche restituendo un <xref:System.Security.Claims.ClaimsIdentity> istanza dal token che può essere usato per prendere decisioni di autenticazione e autorizzazione. Il <xref:System.Security.Claims.ClaimsIdentity> viene costruito dall'implementazione del gestore del token il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo dalle attestazioni contenute nel token come anche da attestazioni che sono intrinseche al token di tipo stesso.  
  
 WIF viene fornito con il supporto per i tipi di token di sicurezza seguenti:  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Rappresenta un token di sicurezza basato su un'asserzione di SAML 2.0. Questo tipo di token viene solitamente generato da un servizio token di sicurezza in risposta a una WS-Trust o WS-Federation sicurezza richiesta di token (RST).  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>: Rappresenta un token di sicurezza basato su un'asserzione di SAML 1.1. Questo tipo di token viene solitamente generato da un servizio token di sicurezza in risposta a una WS-Trust o WS-Federation sicurezza richiesta di token (RST).  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> e <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: rappresenta un token di sicurezza che si basa su un ticket Kerberos che viene ricevuto o inviato un messaggio SOAP  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Rappresenta un token di sicurezza basato su chiave creata utilizzando l'algoritmo RSA.  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Rappresenta un token di sicurezza che contiene le informazioni relative a una sessione.  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Rappresenta un token di sicurezza basato su un nome utente e password.  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Rappresenta un token di sicurezza basata sull'identità di un account di dominio o utente di Windows.  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Rappresenta un token di sicurezza basato su un certificato X.509.  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Rappresenta un token di sicurezza che si basa su un certificato X.509 che viene eseguito il mapping a un utente di dominio Windows o un account utente del computer locale.  
  
 Due altre security token classi <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> e <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, può essere utilizzato per la gestione di casi generali.  
  
 Parlando in sicurezza i token possono essere suddivise in tre categorie principali:  
  
-   I token che contengono o fanno riferimento a servizio di crittografia della chiave di materiale. Ad esempio la <xref:System.IdentityModel.Tokens.RsaSecurityToken> e <xref:System.IdentityModel.Tokens.X509SecurityToken> tipi vengono spesso usati per questo scopo.  
  
-   Token che rappresentano le credenziali per gli utenti che sono già stati autenticati. Ad esempio, il <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>e, nel caso di un utente autenticato tramite un certificato, il <xref:System.IdentityModel.Tokens.X509SecurityToken> tipi.  
  
-   Token emessi da un servizio token di sicurezza (STS) in risposta a una richiesta di token di sicurezza utilizzando il protocollo WS-Federation o WS-Trust. In genere questi dati vengono restituiti un `wst:RequestSecurityTokenResponse` frammento XML. Il <xref:System.IdentityModel.Tokens.Saml2SecurityToken> e <xref:System.IdentityModel.Tokens.SamlSecurityToken> tipi vengono spesso usati per rappresentare questi token.  
  
 Un tipo speciale di token, il <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contiene informazioni necessarie per ricreare un'entità quando si usano le sessioni in scenari attivi o passivi.  
  
 Per aggiungere funzionalità a tipi di token esistenti è possibile derivare dal tipo specifico e il relativo gestore di token associato per supportare eventuali nuovi elementi aggiunti al token. Per aggiungere supporto per nuovi tipi di token, è possibile derivare direttamente dal <xref:System.IdentityModel.Tokens.SecurityToken> classe. Quando si esegue questa operazione, è necessario anche creare una classe di gestore dei token mediante la derivazione da di <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe. A seconda del modo in cui il token deve essere utilizzato, è necessario anche creare un resolver di token personalizzato mediante derivazione dal <xref:System.IdentityModel.Tokens.IssuerTokenResolver> classe anche come uno o più tipi di clausola identificatore di chiave personalizzato mediante derivazione da di <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> classe.  
  
   
  
## Examples  
 Gli esempi di codice usati nel <xref:System.IdentityModel.Tokens.SecurityToken> argomenti vengono forniti dalla `Custom Token` esempio. Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT). Include un'implementazione di un `SimpleWebToken` classe e un `SimpleWebTokenHandler` classe, nonché altre classi che supportano i token SWT. Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e su come eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente viene illustrata l'implementazione del `SimpleWebToken` classe. Questa classe estende <xref:System.IdentityModel.Tokens.SecurityToken>.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>È necessario eseguire l'override di <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, e <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> proprietà. Il <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, e <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> tutti i metodi supportano gli identificatori di chiave di tipo <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />. È necessario eseguire l'override di questi metodi per supportare altri tipi di identificatore di chiave nella classe derivata.</para>
    </block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Chiamato dai costruttori nelle classi derivate per inizializzare la classe <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Classe <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> che specifica l'identificatore di chiave da creare.</typeparam>
        <summary>Ottiene un valore che indica se questo token di sicurezza è in grado di creare l'identificatore di chiave specificato.</summary>
        <returns>
          <see langword="true" /> quando <paramref name="T" /> è di tipo <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />. In caso contrario, <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> per determinare se un token di sicurezza è in grado di creare un identificatore di chiave specifico. Per creare l'identificatore di chiave, chiamare il metodo <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 L'implementazione predefinita supporta le clausole identificatore di chiave di tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Classe <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> che specifica l'identificatore di chiave da creare.</typeparam>
        <summary>Crea la clausola identificatore di chiave specificata.</summary>
        <returns>Classe <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> che rappresenta una clausola dell'identificatore di chiave per il token di sicurezza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> per determinare se un token di sicurezza è in grado di creare un identificatore di chiave specifico. Per creare l'identificatore di chiave, chiamare il metodo <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 L'implementazione predefinita supporta le clausole identificatore di chiave di tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. Se una clausola identificatore di chiave di tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> non può essere creato, un <xref:System.NotSupportedException> viene generata un'eccezione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un identificatore univoco del token di sicurezza.</summary>
        <value>Identificatore univoco del token di sicurezza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, quando un token di sicurezza viene serializzato in XML, l'attributo `Id` per il token di sicurezza viene impostato sul valore della proprietà <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>.  
  
   
  
## Examples  
 Gli esempi di codice usati nel <xref:System.IdentityModel.Tokens.SecurityToken> argomenti vengono forniti dalla `Custom Token` esempio. Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT). Include un'implementazione di un `SimpleWebToken` classe e un `SimpleWebTokenHandler` classe, nonché altre classi che supportano i token SWT. Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e su come eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente illustra l'override del <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> proprietà.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> proprietà.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">To be added.</param>
        <param name="skiClause">To be added.</param>
        <summary>Restituisce un valore che indica se l'identificatore di chiave per l'istanza può essere risolto nell'identificatore di chiave specificato.</summary>
        <returns>
          <see langword="true" /> se <paramref name="keyIdentifierClause" /> è una classe <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> e ha lo stesso identificatore univoco della proprietà <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita supporta le clausole identificatore di chiave di tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">To be added.</param>
        <param name="skiClause">To be added.</param>
        <summary>Ottiene la chiave per la clausola dell'identificatore di chiave specificata.</summary>
        <returns>Classe <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> che rappresenta la chiave.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> chiama <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> per determinare prima se la clausola dell'identificatore di chiave specificata corrisponde a questa istanza.  
  
 L'implementazione predefinita restituisce il primo elemento della <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> raccolta se la raccolta non è vuota e se <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> restituisce `true`; in caso contrario, restituisce `null`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita da <see cref="T:System.IdentityModel.Tokens.SecurityToken" />e implementare le <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> (metodo) e <paramref name="keyIdentifierClause" /> non può essere risolto, restituire <see langword="null" />. Non deve essere generata un'eccezione dal <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> (metodo).</para>
        </block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le chiavi di crittografia associate al token di sicurezza.</summary>
        <value>Classe <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> di tipo <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> che contiene un set di chiavi associato al token di sicurezza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> proprietà per impostare le chiavi di crittografia per questo token di sicurezza proteggere i token o un messaggio SOAP. Le chiavi possono essere utilizzate, tra le altre cose, per firmare digitalmente o crittografare i token o i messaggi SOAP.  
  
   
  
## Examples  
 Gli esempi di codice usati nel <xref:System.IdentityModel.Tokens.SecurityToken> argomenti vengono forniti dalla `Custom Token` esempio. Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT). Include un'implementazione di un `SimpleWebToken` classe e un `SimpleWebTokenHandler` classe, nonché altre classi che supportano i token SWT. Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e su come eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente illustra l'override del <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> proprietà.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> proprietà.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indicazione del momento a partire dal quale il token di sicurezza è valido.</summary>
        <value>Struttura <see cref="T:System.DateTime" /> che rappresenta l'indicazione del momento a partire dal quale il token di sicurezza è valido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare il periodo di validità di un token <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>, utilizzare le proprietà <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> e <xref:System.IdentityModel.Tokens.SecurityToken>. Le proprietà <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> e <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> rappresentano rispettivamente i limiti di tempo iniziale e finale dell'intervallo di validità del token di sicurezza.  
  
   
  
## Examples  
 Gli esempi di codice usati nel <xref:System.IdentityModel.Tokens.SecurityToken> argomenti vengono forniti dalla `Custom Token` esempio. Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT). Include un'implementazione di un `SimpleWebToken` classe e un `SimpleWebTokenHandler` classe, nonché altre classi che supportano i token SWT. Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e su come eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente illustra l'override del <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> proprietà.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> proprietà.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indicazione del momento fino al quale il token di sicurezza è valido.</summary>
        <value>Struttura <see cref="T:System.DateTime" /> che rappresenta l'indicazione del momento fino al quale il token di sicurezza è valido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare il periodo di validità di un token <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>, utilizzare le proprietà <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> e <xref:System.IdentityModel.Tokens.SecurityToken>. Le proprietà <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> e <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> rappresentano rispettivamente i limiti di tempo iniziale e finale dell'intervallo di validità del token di sicurezza.  
  
   
  
## Examples  
 Gli esempi di codice usati nel <xref:System.IdentityModel.Tokens.SecurityToken> argomenti vengono forniti dalla `Custom Token` esempio. Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT). Include un'implementazione di un `SimpleWebToken` classe e un `SimpleWebTokenHandler` classe, nonché altre classi che supportano i token SWT. Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e su come eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente illustra l'override del <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> proprietà.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> proprietà.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>