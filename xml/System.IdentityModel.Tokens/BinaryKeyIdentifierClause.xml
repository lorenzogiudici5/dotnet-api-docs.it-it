<Type Name="BinaryKeyIdentifierClause" FullName="System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38244f3abb2552896ac3d5dab70ef4775e9003cf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36481818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BinaryKeyIdentifierClause extends System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BinaryKeyIdentifierClause&#xA;Inherits SecurityKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryKeyIdentifierClause abstract : System::IdentityModel::Tokens::SecurityKeyIdentifierClause" />
  <TypeSignature Language="F#" Value="type BinaryKeyIdentifierClause = class&#xA;    inherit SecurityKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una classe di base per clausole identificatore di chiave basate su dati binari.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere non occorre utilizzare la classe <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause>, tranne quando si crea un servizio token di sicurezza personalizzato. Quando un servizio token di sicurezza restituisce un token di sicurezza, il token di sicurezza emesso contiene riferimenti a token di sicurezza associati e non associati. I riferimenti associati si riferiscono ai token di sicurezza contenuti all'interno dell'intestazione di sicurezza di un messaggio SOAP e i riferimenti non associati sono token di sicurezza che non sono inclusi nell'intestazione di sicurezza del messaggio SOAP. Questi riferimenti confermano in genere l'autenticità del token di sicurezza emesso.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, identificationData As Byte(), cloneBuffer As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ identificationData, bool cloneBuffer);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause : string * byte[] * bool -&gt; System.IdentityModel.Tokens.BinaryKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause (clauseType, identificationData, cloneBuffer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clauseType">Tipo della clausola identificatore di chiave. Imposta il valore della proprietà <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</param>
        <param name="identificationData">Matrice di <see cref="T:System.Byte" /> che contiene i dati binari che rappresentano l’identificatore di chiave.</param>
        <param name="cloneBuffer">
          <see langword="true" /> per duplicare la matrice passata nel parametro <c>identificationData</c>; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> utilizzando il tipo di clausola identificatore di chiave specificato, i dati binari e un valore che indica se i dati binari devono essere duplicati.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identificationData" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="identificationData" /> è di lunghezza zero.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, identificationData As Byte(), cloneBuffer As Boolean, derivationNonce As Byte(), derivationLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ identificationData, bool cloneBuffer, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause : string * byte[] * bool * byte[] * int -&gt; System.IdentityModel.Tokens.BinaryKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause (clauseType, identificationData, cloneBuffer, derivationNonce, derivationLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" />
        <Parameter Name="derivationLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="clauseType">Tipo della clausola identificatore di chiave. Imposta il valore della proprietà <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</param>
        <param name="identificationData">Matrice di <see cref="T:System.Byte" /> che contiene i dati binari che rappresentano l’identificatore di chiave. Imposta i dati binari che vengono restituiti dal metodo <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />.</param>
        <param name="cloneBuffer">
          <see langword="true" /> per duplicare la matrice passata nel parametro <c>identificationData</c>; in caso contrario, <see langword="false" />.</param>
        <param name="derivationNonce">Matrice di <see cref="T:System.Byte" /> che contiene il parametro nonce utilizzato per creare una chiave derivata. Imposta il valore restituito dal metodo <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</param>
        <param name="derivationLength">Dimensione della chiave derivata. Imposta il valore della proprietà <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> utilizzando il tipo di clausola identificatore di chiave specificato, i dati binari, un valore che indica se i dati binari devono essere duplicati, un parametro nonce e la lunghezza della chiave.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando vengono specificati i parametri `derivationNonce` e `derivationLength`, anziché la chiave di sicurezza diretta del token viene utilizzata la chiave derivata implicita.  
  
 Indipendentemente dal valore passato nel parametro `cloneBuffer`, il metodo <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> restituisce sempre un clone della matrice passato nel parametro `identificationData`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identificationData" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="identificationData" /> è di lunghezza zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBuffer">
      <MemberSignature Language="C#" Value="public byte[] GetBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBuffer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBuffer();" />
      <MemberSignature Language="F#" Value="member this.GetBuffer : unit -&gt; byte[]" Usage="binaryKeyIdentifierClause.GetBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene i dati binari che rappresentano l'identificatore di chiave.</summary>
        <returns>Matrice di <see cref="T:System.Byte" /> che contiene i dati binari che rappresentano l’identificatore di chiave.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indipendentemente dal valore passato nel parametro `cloneBuffer` del costruttore, il metodo <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> restituisce sempre un clone della matrice passato nel parametro `identificationData` del costruttore.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
      </Docs>
    </Member>
    <Member MemberName="GetRawBuffer">
      <MemberSignature Language="C#" Value="protected byte[] GetRawBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetRawBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetRawBuffer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetRawBuffer();" />
      <MemberSignature Language="F#" Value="member this.GetRawBuffer : unit -&gt; byte[]" Usage="binaryKeyIdentifierClause.GetRawBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene i dati binari che rappresentano l'identificatore di chiave.</summary>
        <returns>Matrice di <see cref="T:System.Byte" /> che contiene i dati binari che rappresentano l’identificatore di chiave.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La matrice restituita dal metodo <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> è un clone del parametro `identificationData` del costruttore quando il valore passato nel parametro `cloneBuffer` è `true`. In caso contrario, è la stessa matrice.  
  
 Il metodo <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> restituisce sempre un clone della matrice passata nel parametro `identificationData` del costruttore.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un valore che indica se l'identificatore di chiave per l'istanza corrisponde all'oggetto specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (data As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.Matches : byte[] -&gt; bool" Usage="binaryKeyIdentifierClause.Matches data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">Matrice di <see cref="T:System.Byte" /> con la quale eseguire il confronto.</param>
        <summary>Restituisce un valore che indica se i dati binari dell'istanza corrente corrispondono ai dati binari specificati.</summary>
        <returns>
          <see langword="true" /> se <paramref name="data" />è equivalente ai dati binari restituiti dal metodo <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (data As Byte(), offset As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ data, int offset);" />
      <MemberSignature Language="F#" Value="override this.Matches : byte[] * int -&gt; bool" Usage="binaryKeyIdentifierClause.Matches (data, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">Matrice di <see cref="T:System.Byte" /> con la quale eseguire il confronto.</param>
        <param name="offset">Indice della matrice a partire dal quale viene avviato il confronto.</param>
        <summary>Restituisce un valore che indica se i dati binari dell'istanza corrente sono equivalenti ai dati binari specificati all'offset specificato.</summary>
        <returns>
          <see langword="true" /> se i dati binari nel parametro <paramref name="data" /> a partire dall'indice specificato nel parametro <paramref name="offset" /> sono equivalenti ai dati binari restituiti dal metodo <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> (a partire dall'indice zero); in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="binaryKeyIdentifierClause.Matches clause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">To be added.</param>
        <param name="clause">To be added.</param>
        <summary>Restituisce un valore che indica se l'identificatore di chiave per l'istanza è equivalente alla clausola dell'identificatore della chiave.</summary>
        <returns>
          <see langword="true" /> se <paramref name="keyIdentifierClause" /> è di tipo <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> e i dati binari restituiti dal metodo <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> sono identici per il parametro <paramref name="keyIdentifierClause" /> e per l'istanza corrente. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>