<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InMemorySymmetricSecurityKey.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456c1575e6f2055f7b35e82d28cce7cb3ddc0fe3a65.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1575e6f2055f7b35e82d28cce7cb3ddc0fe3a65</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
          <source>Represents keys that are generated using symmetric algorithms and are only stored in the local computer's random access memory.</source>
          <target state="translated">Rappresenta le chiavi generate utilizzando algoritmi simmetrici e che vengono archiviate solo nella RAM del computer locale.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
          <source>Typically, this class is only used by the infrastructure to transform XML using a symmetric key.</source>
          <target state="translated">Questa classe viene in genere utilizzata solo dall'infrastruttura per trasformare i dati XML utilizzando una chiave simmetrica.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /&gt;</ph> class using the specified symmetric key.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /&gt;</ph> utilizzando la chiave simmetrica specificata.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> is zero length.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> è di lunghezza zero.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /&gt;</ph> class using the specified symmetric key and a value that indicates whether the binary data must be cloned.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /&gt;</ph> utilizzando la chiave simmetrica specificata e un valore che indica se i dati binari devono essere clonati.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> is zero length.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="symmetricKey" /&gt;</ph> è di lunghezza zero.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The cryptographic algorithm that was used to encrypt the key.</source>
          <target state="translated">L'algoritmo di crittografia che è stato utilizzato per crittografare la chiave.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the encrypted key.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene la chiave crittografata.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>Decrypts the specified encrypted key.</source>
          <target state="translated">Esegue la decrittografia della chiave crittografata specificata.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the decrypted key.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene la chiave decrittografata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>Use the static fields of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilizzare i campi statici della classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> per specificare l'algoritmo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph>, and <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph>.</source>
          <target state="translated">Gli algoritmi supportati sono <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph> e <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>The cryptographic algorithm to encrypt the key with.</source>
          <target state="translated">L'algoritmo di crittografia con cui crittografare la chiave.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the key.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene la chiave.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>Encrypts the specified key.</source>
          <target state="translated">Esegue la crittografia della chiave specificata.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the encrypted key.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene la chiave crittografata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>Use the static fields of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilizzare i campi statici della classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> per specificare l'algoritmo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph>.</source>
          <target state="translated">Gli algoritmi supportati sono <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph> o <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>A URI that represents the cryptographic algorithm to use to generate the derived key.</source>
          <target state="translated">URI che rappresenta l'algoritmo di crittografia da utilizzare per generare la chiave derivata.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the label parameter for the cryptographic algorithm.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene il parametro etichetta per l'algoritmo di crittografia.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that is used to create a derived key.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene il parametro nonce utilizzato per creare una chiave derivata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">Dimensione della chiave derivata.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The position at which the derived key is located in the byte array that is returned from this method.</source>
          <target state="translated">Posizione in cui si trova la chiave derivata nella matrice di byte che viene restituita da questo metodo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>Generates a derived key using the specified cryptographic algorithm and parameters for the current key.</source>
          <target state="translated">Genera una chiave derivata utilizzando l'algoritmo di crittografia specificato e i parametri per la chiave corrente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the derived key.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene la chiave derivata.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>To specify P-SHA1 as the cryptographic algorithm, use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph> field.</source>
          <target state="translated">Per specificare P-SHA1 come algoritmo di crittografia, utilizzare il campo <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The supported algorithms is <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" /&gt;</ph>.</source>
          <target state="translated">L'algoritmo supportato è <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</source>
          <target state="translated">Algoritmo di crittografia che esegue la decrittografia di testo crittografato, ad esempio XML crittografato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene il vettore di inizializzazione (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) per l'algoritmo specificato.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>Gets a transform that decrypts cipher text using the specified cryptographic algorithm.</source>
          <target state="translated">Ottiene una trasformazione che esegue la decrittografia del testo crittografato utilizzando l'algoritmo di crittografia specificato.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the decryption transform.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> che rappresenta la trasformazione di decrittografia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent decryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Per specificare l'algoritmo, utilizzare i campi che rappresentano algoritmi di decrittografia appartenenti alla classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph>, and <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>.</source>
          <target state="translated">Gli algoritmi supportati sono <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph> e <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that encrypts XML.</source>
          <target state="translated">Algoritmo di crittografia che esegue la crittografia di XML.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene il vettore di inizializzazione (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) per l'algoritmo specificato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>Gets a transform that encrypts XML using the specified cryptographic algorithm.</source>
          <target state="translated">Ottiene una trasformazione che esegue la crittografia XML utilizzando l'algoritmo di crittografia specificato.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the encryption transform.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> che rappresenta la trasformazione di crittografia.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent encryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilizzare i campi che rappresentano algoritmi di crittografia nella classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> per specificare l'algoritmo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph>, and <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>.</source>
          <target state="translated">Gli algoritmi supportati sono <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph> e <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
          <source>The cryptographic algorithm to get the size of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>).</source>
          <target state="translated">Algoritmo di crittografia che consente di ottenere la dimensione del vettore di inizializzazione (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
          <source>Gets the size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the specified cryptographic algorithm.</source>
          <target state="translated">Ottiene la dimensione, in bit, del vettore di inizializzazione (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) richiesto per l'algoritmo di crittografia specificato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
          <source>The size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the cryptographic algorithm specified in the <ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph> parameter.</source>
          <target state="translated">Dimensione, in bit, del vettore di inizializzazione (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) richiesto per l'algoritmo di crittografia specificato nel parametro <ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
          <source>Use the fields that represent encryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilizzare i campi che rappresentano algoritmi di crittografia nella classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> per specificare l'algoritmo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph>, and <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>.</source>
          <target state="translated">Gli algoritmi supportati sono <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph> e <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>The keyed hash algorithm to get an instance of.</source>
          <target state="translated">Algoritmo hash con chiave di cui ottenere un'istanza.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>Gets an instance of the specified keyed hash algorithm.</source>
          <target state="translated">Ottiene un'istanza dell'algoritmo hash con chiave specificato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph> that represents the keyed hash algorithm.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph> che rappresenta l'algoritmo hash con chiave specificato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>The supported algorithms is <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" /&gt;</ph>.</source>
          <target state="translated">L'algoritmo supportato è <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>The symmetric algorithm to get an instance of.</source>
          <target state="translated">Algoritmo simmetrico di cui ottenere un'istanza.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>Gets an instance of the specified symmetric algorithm.</source>
          <target state="translated">Ottiene un'istanza dell'algoritmo simmetrico specificato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph> that represents the symmetric algorithm.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph> che rappresenta l'algoritmo simmetrico.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph>,  <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>, <ph id="ph7">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph>, and <ph id="ph8">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph></source>
          <target state="translated">Gli algoritmi supportati sono <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>, <ph id="ph7">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph> e <ph id="ph8">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey">
          <source>Gets the bytes that represent the symmetric key.</source>
          <target state="translated">Ottiene i byte che rappresentano la chiave simmetrica.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the symmetric key.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene la chiave simmetrica.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
          <source>The cryptographic algorithm.</source>
          <target state="translated">Algoritmo di crittografia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
          <source>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</source>
          <target state="translated">Ottiene un valore che indica se l'algoritmo specificato utilizza chiavi asimmetriche.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when the specified algorithm uses asymmetric keys; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> quando l'algoritmo specificato utilizza chiavi asimmetriche; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>The cryptographic algorithm.</source>
          <target state="translated">Algoritmo di crittografia.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>Gets a value that indicates whether the specified algorithm is supported by this class.</source>
          <target state="translated">Ottiene un valore che indica se l'algoritmo specificato è supportato da questa classe.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when the specified algorithm is supported by this class; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> quando l'algoritmo specificato è supportato da questa classe. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>The symmetric algorithms that are supported by this class are the algorithms represented by the following fields:</source>
          <target state="translated">Gli algoritmi simmetrici supportati da questa classe sono gli algoritmi rappresentati dai campi seguenti:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
          <source>The cryptographic algorithm.</source>
          <target state="translated">Algoritmo di crittografia.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
          <source>Gets a value that indicates whether the specified algorithm uses symmetric keys.</source>
          <target state="translated">Ottiene un valore che indica se l'algoritmo specificato utilizza chiavi simmetriche.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when the specified algorithm uses symmetric keys; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> quando l'algoritmo specificato utilizza chiavi simmetriche; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize">
          <source>Gets the size, in bits, of the key.</source>
          <target state="translated">Ottiene la dimensione, in bit, della chiave.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize">
          <source>The size, in bits, of the key.</source>
          <target state="translated">Dimensione in bit della chiave.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>