<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a225e68f793277ffff772b6148f50d2f6f4d235" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36557747" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Classe di base astratta per un registro dei nomi delle autorità emittenti. Un registro dei nomi dell'autorità emittente viene utilizzato per associare un nome mnemonico al materiale di crittografia che è necessario per verificare le firme dei token prodotti dall'autorità emittente corrispondente. Il Registro di sistema dei nomi delle autorità emittenti gestisce un elenco di emittenti che sono considerati attendibili da un'applicazione relying party (RP).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il registro dei nomi dell'autorità di certificazione viene utilizzato per associare un nome mnemonico al materiale di crittografia necessario per verificare le firme dei token prodotti dall'autorità emittente corrispondente. Questo nome viene quindi usato per impostare il <xref:System.Security.Claims.Claim.Issuer%2A> o il <xref:System.Security.Claims.Claim.OriginalIssuer%2A> proprietà di un'attestazione. I metodi esposti dal <xref:System.IdentityModel.Tokens.IssuerNameRegistry> classe vengono chiamati dalla pipeline dal gestore di token di sicurezza che elabora i token. I token firmati da materiale che non è mappata a un registro dei nomi dell'autorità di certificazione vengono ignorati come non attendibile. Il nome restituito dal Registro di sistema di nome dell'autorità di certificazione deve essere univoco all'interno del contesto di un'applicazione relying Party.  
  
 Nel codice, è possibile specificare il registro dei nomi dell'autorità di certificazione da utilizzare impostando il <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> proprietà. In un file di configurazione, è possibile specificare il registro dei nomi dell'autorità di certificazione, specificando il [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento sotto il [ &lt;securityTokenHandlerConfiguration &gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) elemento.  
  
 Windows Identity Foundation (WIF) fornisce un'implementazione del <xref:System.IdentityModel.Tokens.IssuerNameRegistry> classe predefiniti: il <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> classe. Quando si utilizza questa implementazione è possibile specificare l'elenco di autorità emittenti attendibili nel file di configurazione dell'applicazione relying Party sotto il [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) elemento, che è un elemento figlio del `<issuerNameRegistry>`elemento quando il <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>Class viene fatto riferimento in tale elemento `type` attributo. Sotto il `<trustedIssuers>` elemento, ogni nome di autorità di certificazione viene eseguito il mapping al certificato X.509 da usare per verificare la firma.  
  
 Per creare un registro dei nomi dell'autorità di certificazione personalizzati, è necessario eseguire l'override di <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> (metodo). Questo metodo restituisce il nome dell'autorità emittente del token di sicurezza specificato. Facoltativamente, è possibile sostituire il <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> metodo per fornire un meccanismo dell'hint durante il recupero dei nomi dell'autorità emittente e la <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> è diverso dal metodo, se si desidera fornire un nome dell'autorità di certificazione per Windows token <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Eseguire l'override di <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> metodo per abilitare il registro dei nomi dell'autorità di certificazione da inizializzare da un file di configurazione.  
  
   
  
## Examples  
 Il codice seguente viene illustrata un'implementazione del <xref:System.IdentityModel.Tokens.IssuerNameRegistry> classe che accetta solo autorità di certificazione che utilizzano certificati con soggetto "CN = localhost".  
  
> [!WARNING]
>  Il codice seguente è solo a scopo illustrativo. La convalida dei certificati in base al nome soggetto non è buona norma. Questo codice non deve essere utilizzato perché è in fase di produzione.  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 Di seguito viene illustrato il codice XML necessario per configurare un'applicazione con il registro dei nomi delle autorità emittenti attendibili.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Se sottoposto a override in una classe derivata, restituisce il nome dell'emittente del token di sicurezza specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dalla pipeline di elaborazione dal gestore di token di sicurezza che elabora i token. Il metodo deve restituire un nome univoco per l'autorità di certificazione all'interno del contesto dell'applicazione relying Party.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">Token di sicurezza per cui restituire il nome dell'autorità emittente.</param>
        <summary>Se sottoposto a override in una classe derivata, restituisce il nome dell'emittente del token di sicurezza specificato.</summary>
        <returns>Nome dell'autorità emittente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le implementazioni devono restituire una stringa non null e non vuoto per identificare un'autorità di certificazione riconosciuta o una stringa null per identificare un'autorità di certificazione non riconosciuta.  
  
 Chiamato dalla pipeline di elaborazione dal gestore di token di sicurezza che elabora i token. Il metodo deve restituire un nome univoco per l'autorità di certificazione all'interno del contesto dell'applicazione relying Party.  
  
   
  
## Examples  
 Il codice seguente illustra il <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> metodo per un registro dei nomi dell'autorità di certificazione. L'esempio completo è nel <xref:System.IdentityModel.Tokens.IssuerNameRegistry> Cenni preliminari sulla classe.  
  
> [!WARNING]
>  Il codice seguente è solo a scopo illustrativo. La convalida dei certificati in base al nome soggetto non è buona norma. Questo codice non deve essere utilizzato perché è in fase di produzione.  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">Token di sicurezza per cui restituire il nome dell'autorità emittente.</param>
        <param name="requestedIssuerName">Nome dell'autorità emittente da considerare nella richiesta.</param>
        <summary>Se sottoposto a override in una classe derivata, restituisce il nome dell'emittente del token di sicurezza specificato. Il nome specificato dell'autorità emittente può essere considerato per determinare il nome dell'autorità da restituire.</summary>
        <returns>Nome dell'autorità emittente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita ignora le `requestedIssuerName` parametro e chiama semplicemente il <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> (metodo).  
  
 Chiamato dalla pipeline di elaborazione dal gestore di token di sicurezza che elabora i token. Il metodo deve restituire un nome univoco per l'autorità di certificazione all'interno del contesto dell'applicazione relying Party.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il nome dell'autorità emittente predefinito da utilizzare per le attestazioni di windows.</summary>
        <returns>Il nome predefinito dell'autorità emittente per le attestazioni di windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.  
  
 Chiamato dalla pipeline di elaborazione dal gestore di token di sicurezza che elabora i token. Il metodo deve restituire un nome univoco per l'autorità di certificazione all'interno del contesto dell'applicazione relying Party.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Elementi di configurazione XML. Ogni nodo nell'elenco è del tipo <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>Quando sottoposto a override in una classe derivata, carica la configurazione personalizzata dall'XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> viene chiamato dall'infrastruttura di configurazione. Quando questo metodo viene chiamato, il `nodelist` conterrà gli elementi figlio di primo livello del [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento dal file di configurazione. Ognuna di queste può, a sua volta, contengono attributi o elementi figlio a seconda dello schema di configurazione che definisce per la classe derivata.  
  
 L'implementazione predefinita genera un <xref:System.NotImplementedException>. Eseguire l'override di questo metodo nella classe derivata per abilitare l'inizializzazione del registro da un file di configurazione nome dell'autorità di certificazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>