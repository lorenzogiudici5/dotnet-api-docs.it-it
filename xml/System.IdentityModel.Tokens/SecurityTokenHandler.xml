<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c79f213d3f161955116c54a6c327ec3259dc61c" />
    <Meta Name="ms.sourcegitcommit" Value="1afcc8f9041ff3093fd13fb0afda92ac188878a9" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/06/2018" />
    <Meta Name="ms.locfileid" Value="43850450" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenHandler = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a28dd-101">La classe di base astratta per i gestori del token di sicurezza.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a28dd-101">The abstract base class for security token handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-102">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe è la classe base dalla quale tutta la sicurezza derivano i gestori di token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="a28dd-103">Un gestore di token di sicurezza è responsabile per:</span><span class="sxs-lookup"><span data-stu-id="a28dd-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="a28dd-104">La convalida dei token di sicurezza (<xref:System.IdentityModel.Tokens.SecurityToken>) del tipo è progettato per elaborare e packaging le attestazioni contenute nel token in un <xref:System.Security.Claims.ClaimsIdentity> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a28dd-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="a28dd-105">Serializzare e deserializzare i token di sicurezza del tipo è progettato per l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="a28dd-106">Serializzare e deserializzare le clausole identificatore di chiave (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) che si riferiscono ai token del tipo è progettato per elaborare in e da `<wsse:SecurityTokenReference>` elementi.</span><span class="sxs-lookup"><span data-stu-id="a28dd-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="a28dd-107">Creazione di token di sicurezza da un <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> oggetto passato per le implementazioni del <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="a28dd-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="a28dd-108">Creazione di clausole identificatore di chiave da un token di sicurezza per le implementazioni del <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="a28dd-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="a28dd-109">Windows Identity Foundation (WIF) sono disponibili i seguenti gestori di token di sicurezza predefiniti:</span><span class="sxs-lookup"><span data-stu-id="a28dd-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="a28dd-110">La maggior parte di queste classi espongono membri aggiuntivi che implementano funzionalità che è specifico per l'elaborazione dei token per il quale la classe è progettata.</span><span class="sxs-lookup"><span data-stu-id="a28dd-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="a28dd-111">In molti casi può risultare più efficace derivare da una di queste classi anziché direttamente dal <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="a28dd-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="a28dd-112">Un gestore di token di sicurezza può essere aggiunti o rimossi da una raccolta di gestori di token, specificando il [ &lt;aggiungere&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;rimuovere&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), o [ &lt;cancellare&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elementi sotto il [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) elemento in un file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="a28dd-113">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> oggetto che contiene le impostazioni di configurazione per la raccolta di gestori sono accessibili tramite il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> proprietà e la raccolta di gestori che il gestore di token è un membro di è possibile accedere dal <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a28dd-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="a28dd-114">È possibile eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> metodo per elaborare eventuali elementi di configurazione personalizzata che accetta il gestore.</span><span class="sxs-lookup"><span data-stu-id="a28dd-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="a28dd-115">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe espone molte altre proprietà e metodi.</span><span class="sxs-lookup"><span data-stu-id="a28dd-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="a28dd-116">A seconda della funzionalità che si sceglie di implementare, è possibile eseguire l'override di alcuni o tutti questi membri.</span><span class="sxs-lookup"><span data-stu-id="a28dd-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="a28dd-117">È necessario eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> proprietà e il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> metodo per fornire l'infrastruttura WIF con informazioni sul tipo di token di sicurezza che la classe è progettato per l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="a28dd-118">Convalida, la serializzazione e deserializzazione funzionalità viene esposta tramite proprietà o metodi che indicano se il gestore può eseguire una funzione specifica combinata con il metodo o i metodi che implementano la funzionalità.</span><span class="sxs-lookup"><span data-stu-id="a28dd-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="a28dd-119">Le seguenti coppie di proprietà o metodi che indicano la funzionalità con i metodi che implementano tale funzionalità:</span><span class="sxs-lookup"><span data-stu-id="a28dd-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="a28dd-120">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> proprietà e i <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo: convalida un token e i pacchetti le attestazioni contenute nel token in un <xref:System.Security.Claims.ClaimsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="a28dd-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="a28dd-121">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> proprietà e il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> metodi: serializzazione dei Token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="a28dd-122">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> metodi e le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> metodi: la deserializzazione del Token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="a28dd-123">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> metodo e il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> metodo: deserializzazione di clausole identificatore di chiave.</span><span class="sxs-lookup"><span data-stu-id="a28dd-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="a28dd-124">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> metodo e il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> metodo: serializzazione di clausole identificatore di chiave.</span><span class="sxs-lookup"><span data-stu-id="a28dd-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="a28dd-125">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> e il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> metodi vengono chiamati dalla pipeline nelle implementazioni del <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="a28dd-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="a28dd-126">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> viene chiamato dall'infrastruttura di WIF per determinare se è già stato ricevuto il token specificato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="a28dd-127">Per impostazione predefinita, questo metodo restituisce `false`, che indica che il token non è già stato ricevuto.</span><span class="sxs-lookup"><span data-stu-id="a28dd-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="a28dd-128">È possibile eseguire l'override del metodo e fornire la logica per rilevare i token riprodotti.</span><span class="sxs-lookup"><span data-stu-id="a28dd-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-129">Gli esempi di codice in tutti i <xref:System.IdentityModel.Tokens.SecurityTokenHandler> argomenti vengono forniti dalla `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-130">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-131">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="a28dd-132">Il codice XML seguente viene illustrato come aggiungere il gestore dei token SWT per la raccolta di gestori di token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-133">Viene chiamato dai costruttori nelle classi derivate per inizializzare la classe <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a28dd-134">Lettore XML posizionato presso l'elemento iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-134">An XML reader positioned at the start element.</span>
          </span>
          <span data-ttu-id="a28dd-135">Il lettore non deve essere anticipato in base a questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-135">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-136">Restituisce un valore che indica se l'elemento XML a cui il lettore XML specificato fa riferimento è una clausola dell'identificatore di chiave che può essere deserializzata da questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-137">
            <see langword="true" /> se il metodo <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> può leggere l'elemento; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-137">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a28dd-138">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-138">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-139">L'implementazione predefinita restituisce `false` per indicare che la clausola identificatore di chiave non può essere letto.</span><span class="sxs-lookup"><span data-stu-id="a28dd-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="a28dd-140">Una classe derivata controlla l'elemento che fa riferimento il lettore per determinare se l'istanza può deserializzare una clausola identificatore di chiave.</span><span class="sxs-lookup"><span data-stu-id="a28dd-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="a28dd-141">Questa operazione viene in genere eseguita tramite una chiamata al <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> metodo con le stringhe appropriate di elemento e lo spazio dei nomi specificato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="a28dd-142">Se esegue l'override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, è anche necessario eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> metodo per fornire la logica per deserializzare la clausola identificatore di chiave.</span><span class="sxs-lookup"><span data-stu-id="a28dd-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-143">Restituisce un valore che indica se il token specificato può essere deserializzato come token del tipo elaborato da questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : string -&gt; bool&#xA;override this.CanReadToken : string -&gt; bool" Usage="securityTokenHandler.CanReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="a28dd-144">La stringa del token da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-144">The token string to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-145">Restituisce un valore che indica se la stringa specificata può essere deserializzata come un token del tipo elaborato da questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-146">
            <see langword="true" /> se il metodo <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> può leggere l'elemento; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-146">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a28dd-147">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-147">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-148">L'implementazione predefinita restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="a28dd-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="a28dd-149">Se si esegue l'override di questo metodo, è inoltre necessario sostituire il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> metodo per fornire la logica per deserializzare il token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a28dd-150">Lettore XML posizionato presso un elemento iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-150">An XML reader positioned at a start element.</span>
          </span>
          <span data-ttu-id="a28dd-151">Il lettore non deve essere anticipato in base a questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-151">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-152">Restituisce un valore che indica se l'elemento XML a cui il lettore XML specificato fa riferimento può essere letto come token del tipo elaborato da questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-153">
            <see langword="true" /> se il metodo <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> può leggere l'elemento; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-153">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a28dd-154">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-154">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-155">L'implementazione predefinita restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="a28dd-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="a28dd-156">Una classe derivata controlla l'elemento che fa riferimento il lettore per determinare se l'istanza può deserializzare un token di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="a28dd-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="a28dd-157">Questa operazione viene in genere eseguita tramite una chiamata al <xref:System.Xml.XmlReader.IsStartElement%2A> metodo con le stringhe appropriate di elemento e lo spazio dei nomi specificato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="a28dd-158">Se esegue l'override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, è anche necessario eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> metodo o il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> metodo per fornire la logica per deserializzare la clausola identificatore di chiave.</span><span class="sxs-lookup"><span data-stu-id="a28dd-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-159">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> metodo per determinare se un token può essere letto da un gestore.</span><span class="sxs-lookup"><span data-stu-id="a28dd-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="a28dd-160">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-161">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-162">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-163">Ottiene un valore che indica se il gestore supporta la convalida dei token di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-163">Gets a value that indicates whether the handler supports validation of security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a28dd-164">
            <see langword="true" /> se la classe consente di convalidare i token di sicurezza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-164">
              <see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a28dd-165">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-166">Per implementare la convalida in una classe derivata, esegue l'override questa proprietà per restituire `true` ed eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo per implementare la logica di convalida.</span><span class="sxs-lookup"><span data-stu-id="a28dd-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-167">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> proprietà per indicare che un gestore personalizzato può convalidare i token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="a28dd-168">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-169">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-170">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenHandler.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="a28dd-171">Clausola dell'identificatore di chiave da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-171">The key identifier clause to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-172">Restituisce un valore che indica se la clausola dell'identificatore chiave specificata può essere serializzata da questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-173">
            <see langword="true" /> se è possibile serializzare la clausola dell'identificatore di chiave; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-173">
              <see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a28dd-174">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-174">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-175">L'implementazione predefinita restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="a28dd-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="a28dd-176">Se esegue l'override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, è anche necessario eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> metodo per fornire la logica per serializzare la clausola dell'identificatore di chiave.</span><span class="sxs-lookup"><span data-stu-id="a28dd-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-177">Ottiene un valore che indica se il gestore può serializzare i token di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-177">Gets a value that indicates whether the handler can serialize security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a28dd-178">
            <see langword="true" /> se la classe consente di serializzare i token; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-178">
              <see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a28dd-179">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-180">Per implementare la serializzazione in una classe derivata, esegue l'override questa proprietà per restituire `true` ed eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> metodi per implementare la logica di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-181">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> proprietà per indicare che un gestore personalizzato può serializzare i token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="a28dd-182">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-183">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-184">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Configuration : System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration with get, set" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-185">Ottiene o imposta l'oggetto <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> che fornisce la configurazione per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a28dd-186">Oggetto configurazione per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-186">The configuration object for the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-187">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> viene impostata in genere dall'infrastruttura di configurazione dal [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) iniziale per l'elemento nel file di configurazione durante l'applicazione di.</span><span class="sxs-lookup"><span data-stu-id="a28dd-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="a28dd-188">Nelle classi derivate, si utilizza il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> proprietà per accedere alle impostazioni di configurazione, ad esempio il registro dei nomi dell'autorità di certificazione da utilizzare nel <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo è accessibile dal <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> proprietà dell'oggetto di configurazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainingCollection : System.IdentityModel.Tokens.SecurityTokenHandlerCollection" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-189">Ottiene la raccolta di gestori di token che contiene l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-189">Gets the token handler collection that contains the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a28dd-190">La raccolta di gestori di token che contiene l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-190">The token handler collection that contains the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-191">Quando il gestore dei token viene aggiunto a un <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> istanza, questa proprietà viene impostata automaticamente.</span><span class="sxs-lookup"><span data-stu-id="a28dd-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.CreateSecurityTokenReference (token, attached)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a28dd-192">Token per cui deve essere creato il riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-192">The token for which the reference is to be created.</span>
          </span>
        </param>
        <param name="attached">
          <span data-ttu-id="a28dd-193">
            <see langword="true" /> se un riferimento associato deve essere creato; <see langword="false" /> se un riferimento non associato deve essere creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-193">
              <see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-194">Una volta eseguito l'override in una classe derivata, crea il riferimento del token di sicurezza per i token elaborati da quella classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span>
          </span>
          <span data-ttu-id="a28dd-195">Questo metodo in genere viene chiamato da un servizio token di sicurezza (STS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-195">This method is typically called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-196">Clausola dell'identificatore di chiave a cui fa riferimento il token specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-196">A key identifier clause that references the specified token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-197">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-198">Le classi derivate di eseguire l'override del metodo per restituire una clausola identificatore di chiave (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) che può essere utilizzato per creare un `<wsse:SecurityTokenReference>` (elemento) per il token specificato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="a28dd-199">Chiamato dalle implementazioni del <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="a28dd-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="a28dd-200">In genere, un <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> non dovrà essere utilizzata solo quando viene creato un servizio token di sicurezza personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="a28dd-201">Quando un servizio token di sicurezza restituisce un token di sicurezza, il token di sicurezza emesso contiene riferimenti a token di sicurezza associati e non associati.</span><span class="sxs-lookup"><span data-stu-id="a28dd-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="a28dd-202">I riferimenti associati fanno riferimento a token di sicurezza contenuti nell'intestazione di sicurezza di un messaggio SOAP, mentre i riferimenti non associati fanno riferimento a token di sicurezza che non sono inclusi nell'intestazione di sicurezza di un messaggio SOAP.</span><span class="sxs-lookup"><span data-stu-id="a28dd-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="a28dd-203">Questi riferimenti confermano in genere l'autenticità del token di sicurezza emesso.</span><span class="sxs-lookup"><span data-stu-id="a28dd-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-204">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> metodo per creare una clausola dell'identificatore di chiave dal token specificato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="a28dd-205">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-206">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-207">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="a28dd-208">Descrittore del token di sicurezza da cui il token deve essere creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-208">The security token descriptor from which the token is to be created.</span>
          </span>
          <span data-ttu-id="a28dd-209">Le proprietà del descrittore di token vengono impostate prima della chiamata a questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-209">Properties of the token descriptor are set before this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-210">Quando è sottoposto a override in una classe derivata, crea un nuovo token di sicurezza utilizzando il descrittore di token specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span>
          </span>
          <span data-ttu-id="a28dd-211">Questo metodo viene chiamato da un servizio token di sicurezza (STS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-211">This method is called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-212">Token di sicurezza che corrisponde alle proprietà del descrittore dei token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-212">A security token that matches the properties of the token descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-213">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-214">Chiamato dalle implementazioni del <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="a28dd-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-215">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> metodo per creare e restituire un token da un descrittore del token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="a28dd-216">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-217">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-218">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.DetectReplayedToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a28dd-219">Token da verificare per la riproduzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-219">The token to check for replay.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-220">Una volta eseguito l'override in una classe derivata, viene generata un'eccezione se il token specificato viene rilevato come ripetuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-221">L'implementazione predefinita non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="a28dd-222">Le classi derivate devono generare un <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> se il token è già stato utilizzato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="a28dd-223">Windows Identity Foundation (WIF) fornisce il <xref:System.IdentityModel.Tokens.TokenReplayCache> classe dalla quale riproduzione può essere derivata memorizza nella cache e il [ &lt;tokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) elemento di configurazione, che può essere usato per configurare il cache di riproduzione utilizzata dai gestori di token in un'applicazione. Tuttavia, l'implementazione corretta di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> metodo spetta la finestra di progettazione della classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a28dd-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="securityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-224">Una volta eseguito l'override in una classe derivata, restituisce il set di URI utilizzati nelle richieste per identificare un token del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-225">Set di URI che identificano il tipo di token supportato da questo gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-225">The set of URIs that identify the token type that this handler supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-226">Il <xref:System.Type> del token elaborate dall'istanza corrente è accessibile tramite il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a28dd-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="a28dd-227">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> metodo restituisce il set di identificatori accettabili che possono essere utilizzati nei messaggi per fare riferimento al tipo di token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="a28dd-228">Ad esempio, il valore dell'URI usato nel `<wst:TokenType>` elemento sotto il `<wst:RequestSecurityToken>` elemento per richiedere un tipo specifico di token (rappresentato dal <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> proprietà nel modello a oggetti).</span><span class="sxs-lookup"><span data-stu-id="a28dd-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-229">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> metodo per restituire gli identificatori di tipo di token per un token personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="a28dd-230">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-231">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-232">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenHandler.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="a28dd-233">Elementi di configurazione XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-233">The configuration XML elements.</span>
          </span>
          <span data-ttu-id="a28dd-234">Ogni nodo nell'elenco è del tipo <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-235">Quando sottoposto a override in una classe derivata, carica la configurazione personalizzata dall'XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-235">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-236">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> viene chiamato dall'infrastruttura di configurazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="a28dd-237">Quando questo metodo viene chiamato, il `nodelist` conterrà gli elementi figlio di primo livello del gestore di token [ &lt;aggiungere&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) elemento dal file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler’s [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="a28dd-238">Ognuna di queste può, a sua volta, contengono attributi o elementi figlio a seconda dello schema di configurazione che definisce per la classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a28dd-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="a28dd-239">L'implementazione predefinita genera un <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="a28dd-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="a28dd-240">Eseguire l'override di questo metodo nella classe derivata per abilitare l'inizializzazione del gestore di token di sicurezza da un file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a28dd-241">Lettore XML posizionato presso l'elemento iniziale del codice XML da deserializzare nell'identificatore della chiave</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-242">Quando viene sottoposto a override in una classe derivata, deserializza l'XML a cui fa riferimento il lettore XML specificato a una clausola dell'identificatore di chiave che si riferisce a un token elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-243">La clausola identificatore di chiave che è stata deserializzata da XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-243">The key identifier clause that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-244">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-245">Eseguire l'override di questo metodo per fornire la logica per deserializzare una clausola identificatore di chiave da XML.</span><span class="sxs-lookup"><span data-stu-id="a28dd-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="a28dd-246">Se si esegue l'override di questo metodo, è consigliabile anche eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a28dd-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-247">Una volta eseguito l'override in una classe derivata, deserializza l'XML specificato in un token del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="a28dd-248">Stringa da deserializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-248">The string to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-249">Una volta eseguito l'override in una classe derivata, deserializza la stringa specificata in un token del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-250">Token di sicurezza deserializzato dalla stringa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-250">The security token that was deserialized from the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a28dd-251">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-251">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-252">Eseguire l'override di questo metodo per fornire una funzionalità che può deserializzare un token di sicurezza da una stringa.</span><span class="sxs-lookup"><span data-stu-id="a28dd-252">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="a28dd-253">Se si esegue l'override, questo metodo, è consigliabile anche eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a28dd-253">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a28dd-254">Lettore XML posizionato presso l'elemento iniziale del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-254">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-255">Una volta eseguito l'override in una classe derivata, deserializza l'XML cui si fa riferimento dal lettore XML specificato in un token del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-255">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-256">Token di sicurezza deserializzato dal codice XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-256">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a28dd-257">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-257">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-258">Eseguire l'override di questo metodo per fornire la logica per deserializzare un token di sicurezza da XML.</span><span class="sxs-lookup"><span data-stu-id="a28dd-258">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="a28dd-259">Se si esegue l'override di questo metodo, è consigliabile anche eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a28dd-259">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a28dd-260">In genere, nelle classi derivate, se il metodo non è possibile deserializzare il token dal file XML cui si fa riferimento, viene generata un' <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="a28dd-260">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-261">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> metodo per leggere un token personalizzato dal lettore XML specificato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-261">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="a28dd-262">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-262">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-263">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-263">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-264">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-264">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a28dd-265">Lettore XML posizionato presso l'elemento iniziale del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-265">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="a28dd-266">Resolver di token che contiene i token fuori banda e memorizzati nella cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-266">A token resolver that contains out-of-band and cached tokens.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-267">Una volta eseguito l'override in una classe derivata, deserializza l'XML cui si fa riferimento dal lettore XML specificato in un token del tipo elaborato dalla classe derivata utilizzando il resolver di token specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-267">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-268">Token di sicurezza deserializzato dal codice XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-268">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a28dd-269">L'implementazione predefinita ignora le `tokenResolver` parametro e delega la chiamata al <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a28dd-269">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a28dd-270">Eseguire l'override di questo metodo per fornire la logica per deserializzare un token di sicurezza da XML.</span><span class="sxs-lookup"><span data-stu-id="a28dd-270">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="a28dd-271">Se si esegue l'override di questo metodo, è consigliabile anche eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a28dd-271">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a28dd-272">In genere, nelle classi derivate, se il metodo non è possibile deserializzare il token dal file XML cui si fa riferimento, viene generata un' <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="a28dd-272">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-273">Se sottoposta a override in una classe derivata, ottiene il tipo di token di sicurezza elaborato dall'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-273">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a28dd-274">Tipo di token di sicurezza elaborato da questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-274">The type of the security token that is processed by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-275">È necessario eseguire l'override di questa proprietà nelle classi derivate e restituire il <xref:System.Type> del token di sicurezza (<xref:System.IdentityModel.Tokens.SecurityToken>) che viene elaborato dalla classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a28dd-275">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-276">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> proprietà per restituire il <xref:System.Type> dei token di sicurezza che vengono elaborati da un gestore personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-276">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="a28dd-277">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-277">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-278">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-278">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-279">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-279">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationFailure : System.IdentityModel.Tokens.SecurityToken * string -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationFailure (token, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a28dd-280">Il token di sicurezza da convalidare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-280">The security token that is being validated.</span>
          </span>
        </param>
        <param name="errorMessage">
          <span data-ttu-id="a28dd-281">Messaggio da scrivere nella traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-281">The message to write to the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-282">Traccia l'evento di errore durante la convalida dei token di sicurezza se è abilitata la tracciatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-282">Traces the failure event during the validation of security tokens when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-283">Questo metodo deve essere chiamato dal <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo quando si verifica un errore di convalida del token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-283">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationSuccess : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationSuccess token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a28dd-284">Il token convalidato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-284">The token that was validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-285">Traccia la convalida dell'evento dei token di sicurezza se è abilitata la tracciatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-285">Traces the successful validation of security tokens event when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-286">Questo metodo deve essere chiamato dal <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo dopo che il token non è stato convalidato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-286">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;&#xA;override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="securityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a28dd-287">Token da convalidare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-287">The token to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-288">Una volta eseguito l'override in una classe derivata, convalida il token di sicurezza specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-288">When overridden in a derived class, validates the specified security token.</span>
          </span>
          <span data-ttu-id="a28dd-289">Il token deve essere del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-289">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-290">Identità contenute nel token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-290">The identities contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-291">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-291">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-292">Il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> viene chiamato dall'infrastruttura per convalidare ed estrarre le attestazioni dal token di sicurezza deserializzato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-292">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="a28dd-293">Queste attestazioni vengono restituite nella raccolta di <xref:System.Security.Claims.ClaimsIdentity> gli oggetti restituiti dal metodo.</span><span class="sxs-lookup"><span data-stu-id="a28dd-293">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="a28dd-294">In genere, questa raccolta conterrà una singola identità.</span><span class="sxs-lookup"><span data-stu-id="a28dd-294">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="a28dd-295">Nelle classi derivate, convalida include in genere i destinatari specificati nel token per l'audience URI specificati nella convalida la <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> proprietà dell'oggetto di configurazione gestore di token specificato nella <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a28dd-295">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="a28dd-296">Questi URI vengono in genere impostati nel file di configurazione sotto il [ &lt;audienceUris&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="a28dd-296">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="a28dd-297">Se i destinatari non possono essere convalidati, un <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> deve essere generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-297">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="a28dd-298">Durante l'elaborazione del token, l'autorità di certificazione viene convalidato in genere passando il token dell'autorità di certificazione a uno del <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> metodi sul <xref:System.IdentityModel.Tokens.IssuerNameRegistry> oggetto configurato per il gestore tramite i <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a28dd-298">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="a28dd-299">Il registro dei nomi dell'autorità emittente viene in genere configurato tramite il [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-299">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="a28dd-300">Il <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> restituisce il nome dell'autorità emittente.</span><span class="sxs-lookup"><span data-stu-id="a28dd-300">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="a28dd-301">Questo nome deve essere utilizzato per impostare il <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> proprietà nelle attestazioni contenute nel token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-301">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="a28dd-302">Se il registro dei nomi dell'autorità di certificazione non contiene una voce per il token dell'autorità emittente <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="a28dd-302">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="a28dd-303">In questo caso un <xref:System.IdentityModel.Tokens.SecurityTokenException> viene in genere generata nelle classi derivate, ma questo comportamento dipende dalla finestra di progettazione della classe.</span><span class="sxs-lookup"><span data-stu-id="a28dd-303">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-304">Il codice seguente viene illustrato un override del <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo per un gestore di token di sicurezza che elabora i token web semplice (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-304">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="a28dd-305">Il codice è tratto dal `CustomToken` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-305">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="a28dd-306">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-306">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="a28dd-307">Il codice seguente illustra `CreateClaims` che viene richiamata dall'override del metodo di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo nell'esempio precedente.</span><span class="sxs-lookup"><span data-stu-id="a28dd-307">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="a28dd-308">Questo metodo restituisce un <xref:System.Security.Claims.ClaimsIdentity> oggetto creato dalle attestazioni nel token.</span><span class="sxs-lookup"><span data-stu-id="a28dd-308">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="a28dd-309">Il codice è tratto dal `CustomToken` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-309">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="a28dd-310">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-310">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="a28dd-311">Il codice seguente illustra `ValidateSignature` che viene richiamata dall'override del metodo di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo nel gestore token web semplice.</span><span class="sxs-lookup"><span data-stu-id="a28dd-311">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="a28dd-312">Questo metodo convalida la firma sul token usando l'applicazione configurata <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="a28dd-312">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="a28dd-313">Il codice è tratto dal `CustomToken` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-313">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="a28dd-314">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-314">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="a28dd-315">Il codice seguente illustra `ValidateAudience` che viene richiamata dall'override del metodo di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metodo nel gestore token web semplice.</span><span class="sxs-lookup"><span data-stu-id="a28dd-315">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="a28dd-316">Questo metodo convalida i destinatari contenuti nel token per l'audience URI a cui sono stati specificati nella configurazione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-316">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="a28dd-317">Il codice è tratto dal `CustomToken` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-317">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="a28dd-318">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-318">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit&#xA;override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenHandler.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a28dd-319">Writer XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-319">The XML writer.</span>
          </span>
        </param>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="a28dd-320">Clausola dell'identificatore di chiave da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-320">The key identifier clause to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-321">Una volta eseguito l'override in una classe derivata, serializza la clausola identificatore chiave specificata in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-321">When overridden in a derived class, serializes the specified key identifier clause to XML.</span>
          </span>
          <span data-ttu-id="a28dd-322">La clausola identificatore di chiave deve essere di tipo supportato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-322">The key identifier clause must be of the type supported by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-323">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-323">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-324">Eseguire l'override di questo metodo per fornire la logica per la serializzazione di una clausola identificatore di chiave in formato XML.</span><span class="sxs-lookup"><span data-stu-id="a28dd-324">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="a28dd-325">Se si esegue l'override di questo metodo, è consigliabile anche eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a28dd-325">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a28dd-326">Una volta eseguito l'override in una classe derivata, serializza il token di sicurezza specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-326">When overridden in a derived class, serializes the specified security token.</span>
          </span>
          <span data-ttu-id="a28dd-327">Il token deve essere del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-327">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string&#xA;override this.WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="securityTokenHandler.WriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a28dd-328">Token da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-328">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-329">Una volta eseguito l'override in una classe derivata, serializza il token di sicurezza specificato in una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-329">When overridden in a derived class, serializes the specified security token to a string.</span>
          </span>
          <span data-ttu-id="a28dd-330">Il token deve essere del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-330">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a28dd-331">Token da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-331">The serialized token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-332">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-333">Eseguire l'override di questo metodo per fornire la logica per serializzare un token di sicurezza in formato XML.</span><span class="sxs-lookup"><span data-stu-id="a28dd-333">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="a28dd-334">Se si esegue l'override di questo metodo, è consigliabile anche eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a28dd-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a28dd-335">Writer XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-335">The XML writer.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="a28dd-336">Token da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-336">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a28dd-337">Una volta eseguito l'override in una classe derivata, serializza il token di sicurezza specificato in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-337">When overridden in a derived class, serializes the specified security token to XML.</span>
          </span>
          <span data-ttu-id="a28dd-338">Il token deve essere del tipo elaborato dalla classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a28dd-338">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a28dd-339">Per impostazione predefinita, questo metodo genera un <xref:System.NotImplementedException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="a28dd-339">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="a28dd-340">Eseguire l'override di questo metodo per fornire la logica per serializzare un token di sicurezza in formato XML.</span><span class="sxs-lookup"><span data-stu-id="a28dd-340">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="a28dd-341">Se si esegue l'override di questo metodo, è consigliabile anche eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a28dd-341">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a28dd-342">Il codice seguente illustra come eseguire l'override di <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> metodo per serializzare un token personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a28dd-342">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="a28dd-343">Il codice è tratto dal `Custom Token` esempio.</span><span class="sxs-lookup"><span data-stu-id="a28dd-343">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="a28dd-344">Questo esempio fornisce le classi personalizzate che consentono l'elaborazione di Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="a28dd-344">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="a28dd-345">Per informazioni su questo esempio e altri esempi disponibili per Windows Identity Foundation e la posizione in cui eseguirne il download, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="a28dd-345">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>