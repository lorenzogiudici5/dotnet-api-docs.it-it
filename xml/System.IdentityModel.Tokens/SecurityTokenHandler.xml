<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityTokenHandler.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cbb9943aefb6ba2f295be7ff7f864be1ec607810.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbb9943aefb6ba2f295be7ff7f864be1ec607810</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The abstract base class for security token handlers.</source>
          <target state="translated">La classe di base astratta per i gestori del token di sicurezza.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> class is the base class from which all security token handlers derive.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> classe è la classe base dalla protezione tutti i gestori di token derivano.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>A security token handler is responsible for:</source>
          <target state="translated">Un gestore di token di sicurezza è responsabile per:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Validating security tokens (<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph>) of the type it is designed to process and packaging the claims contained in the token into a <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> object.</source>
          <target state="translated">Convalida dei token di sicurezza (<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph>) del tipo è progettato per elaborare e creazione di pacchetti le attestazioni contenute nel token in un <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Serializing and deserializing security tokens of the type it is designed to process.</source>
          <target state="translated">La serializzazione e deserializzazione del tipo che è progettato per elaborare i token di sicurezza.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Serializing and deserializing key identifier clauses (<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph>) that refer to tokens of the type it is designed to process to and from <ph id="ph2">`&lt;wsse:SecurityTokenReference&gt;`</ph> elements.</source>
          <target state="translated">La serializzazione e deserializzazione di clausole identificatore di chiave (<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph>) che si riferiscono ai token del tipo è progettato per elaborare in e da <ph id="ph2">`&lt;wsse:SecurityTokenReference&gt;`</ph> elementi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Creating security tokens from a <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;</ph> object passed by implementations of the <ph id="ph2">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> class.</source>
          <target state="translated">Creazione di token di sicurezza da un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;</ph> oggetto passato per le implementazioni del <ph id="ph2">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Creating key identifier clauses from a security token for implementations of the <ph id="ph1">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> class.</source>
          <target state="translated">Creazione di clausole identificatore di chiave da un token di sicurezza per le implementazioni della <ph id="ph1">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</source>
          <target state="translated">Windows Identity Foundation (WIF) sono disponibili i seguenti gestori di token di sicurezza predefinita:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</source>
          <target state="translated">La maggior parte di queste classi espone membri aggiuntivi che implementano funzionalità specifiche per l'elaborazione dei token per il quale la classe è progettata.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>In many cases it may be better to derive from one of these classes rather than directly from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> class.</source>
          <target state="translated">In molti casi potrebbe essere preferibile derivare da una di queste classi, anziché direttamente nella <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>A security token handler can be added or removed from  a token handler collection by specifying the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>add<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept>, <bpt id="p2">[</bpt><ph id="ph3">&amp;lt;</ph>remove<ph id="ph4">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept>, or <bpt id="p3">[</bpt><ph id="ph5">&amp;lt;</ph>clear<ph id="ph6">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md)</ept> elements under the <bpt id="p4">[</bpt><ph id="ph7">&amp;lt;</ph>securityTokenHandlers<ph id="ph8">&amp;gt;</ph><ept id="p4">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> element in a configuration file.</source>
          <target state="translated">Un gestore di token di sicurezza può essere aggiunti o rimossi da una raccolta di gestore del token, specificando il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>aggiungere<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept>, <bpt id="p2">[</bpt> <ph id="ph3">&amp;lt;</ph>rimuovere<ph id="ph4">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept>, o <bpt id="p3">[</bpt> <ph id="ph5">&amp;lt;</ph>deselezionare<ph id="ph6">&amp;gt;</ph> <ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md)</ept> elementi sotto il <bpt id="p4">[</bpt> <ph id="ph7">&amp;lt;</ph>securityTokenHandlers<ph id="ph8">&amp;gt;</ph> <ept id="p4">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> elemento in un file di configurazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&gt;</ph> object that contains the configuration settings for the handler collection can be accessed through the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property and the handler collection that the token handler is a member of can be accessed from the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&gt;</ph> oggetto che contiene le impostazioni di configurazione per la raccolta di gestori sono accessibili tramite il <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> proprietà e che il gestore dei token è un membro della raccolta di gestori sono accessibili dal <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>You can override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method to process any custom configuration elements that your handler takes.</source>
          <target state="translated">È possibile eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> metodo per elaborare elementi di configurazione personalizzata che accetta il gestore.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> class exposes several other properties and methods.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> classe espone molte altre proprietà e metodi.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Depending on the functionality that you choose to implement, you may override some or all of these members.</source>
          <target state="translated">A seconda della funzionalità che si sceglie di implementare, è possibile eseguire l'override di alcuni o tutti questi membri.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>You must override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A&gt;</ph> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</source>
          <target state="translated">È necessario eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;</ph> proprietà e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A&gt;</ph> metodo per fornire l'infrastruttura WIF con informazioni sul tipo di token di sicurezza che la classe è progettato per l'elaborazione.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</source>
          <target state="translated">Convalida, la serializzazione e deserializzazione funzionalità viene esposta tramite i metodi che indicano se il gestore può eseguire una funzione specifica, combinata con i metodi che implementano la funzionalità o un metodo o proprietà.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</source>
          <target state="translated">Nell'elenco seguente le coppie di metodi che indicano la funzionalità con i metodi che implementano tale funzionalità o le proprietà:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A&gt;</ph> property and  the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method: Validates a token and packages the claims contained in the token into a <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A&gt;</ph> proprietà e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo: convalida un token e le attestazioni contenute nel token in pacchetti un <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</ph> methods: Token serialization.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> proprietà e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</ph> metodi: serializzazione del Token.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A&gt;</ph> methods and the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A&gt;</ph> methods: Token deserialization.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A&gt;</ph> metodi e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A&gt;</ph> metodi: la deserializzazione del Token.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;</ph> method: Deserializing key identifier clauses.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</ph> (metodo) e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;</ph> metodo: deserializzazione di clausole identificatore di chiave.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;</ph> method: Serializing key identifier clauses.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</ph> (metodo) e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;</ph> metodo: serializzazione di clausole identificatore di chiave.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A&gt;</ph> methods are called from the pipeline in implementations of the <ph id="ph3">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A&gt;</ph> metodi vengono chiamati dalla pipeline nelle implementazioni del <ph id="ph3">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A&gt;</ph> method is called by the WIF infrastructure to determine whether the specified token has already been received.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A&gt;</ph> metodo viene chiamato dall'infrastruttura di WIF per determinare se è già stato ricevuto il token specificato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>By default this method returns <ph id="ph1">`false`</ph>, which indicates that the token has not already been received.</source>
          <target state="translated">Per impostazione predefinita, questo metodo restituisce <ph id="ph1">`false`</ph>, che indica che il token non è già stato ricevuto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>You can override the method and provide logic to detect replayed tokens.</source>
          <target state="translated">È possibile eseguire l'override del metodo e fornire la logica per il rilevamento riproduzione token.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The code examples in all of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> topics are taken from the <ph id="ph2">`Custom Token`</ph> sample.</source>
          <target state="translated">Gli esempi di codice in tutti i <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> argomenti vengono prelevati il <ph id="ph2">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The following XML shows how to add the SWT token handler to the token handlers collection.</source>
          <target state="translated">Il codice XML seguente viene illustrato come aggiungere il gestore dei token SWT per la raccolta di gestori di token.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor">
          <source>Called from constructors in derived classes to initialize the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">Viene chiamato dai costruttori nelle classi derivate per inizializzare la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>An XML reader positioned at the start element.</source>
          <target state="translated">Lettore XML posizionato presso l'elemento iniziale.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">Il lettore non deve essere anticipato in base a questo metodo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</source>
          <target state="translated">Restituisce un valore che indica se l'elemento XML a cui il lettore XML specificato fa riferimento è una clausola dell'identificatore di chiave che può essere deserializzata da questa istanza.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /&gt;</ph> method can read the element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il metodo <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /&gt;</ph> può leggere l'elemento; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The default implementation returns <ph id="ph1">`false`</ph> to indicate that the key identifier clause cannot be read.</source>
          <target state="translated">L'implementazione predefinita restituisce <ph id="ph1">`false`</ph> per indicare che la clausola identificatore di chiave non può essere letto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</source>
          <target state="translated">Una classe derivata controlla l'elemento a cui fa riferimento il lettore per determinare se l'istanza può deserializzare una clausola identificatore di chiave.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>This is typically accomplished through a call to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType&gt;</ph> method with the appropriate element and namespace strings specified.</source>
          <target state="translated">Questa operazione viene in genere eseguita tramite una chiamata al <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType&gt;</ph> metodo con le stringhe appropriate di elemento e lo spazio dei nomi specificato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>If you override <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</ph>, you must also override the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;</ph> method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">Se esegue l'override <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</ph>, inoltre, è necessario eseguire l'override di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;</ph> metodo per fornire la logica per deserializzare la clausola identificatore di chiave.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</source>
          <target state="translated">Restituisce un valore che indica se il token specificato può essere deserializzato come token del tipo elaborato da questa istanza.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)">
          <source>The token string to read.</source>
          <target state="translated">La stringa del token da leggere.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)">
          <source>Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</source>
          <target state="translated">Restituisce un valore che indica se la stringa specificata può essere deserializzata come un token del tipo elaborato da questa istanza.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /&gt;</ph> method can read the element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il metodo <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /&gt;</ph> può leggere l'elemento; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">L'implementazione predefinita restituisce sempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)">
          <source>If you override this method, you must also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> method to provide the logic to deserialize the token.</source>
          <target state="translated">Se si esegue l'override di questo metodo, è inoltre necessario sostituire il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> metodo per fornire la logica per deserializzare il token.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>An XML reader positioned at a start element.</source>
          <target state="translated">Lettore XML posizionato presso un elemento iniziale.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">Il lettore non deve essere anticipato in base a questo metodo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</source>
          <target state="translated">Restituisce un valore che indica se l'elemento XML a cui il lettore XML specificato fa riferimento può essere letto come token del tipo elaborato da questa istanza.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /&gt;</ph> method can read the element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il metodo <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /&gt;</ph> può leggere l'elemento; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">L'implementazione predefinita restituisce sempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</source>
          <target state="translated">Una classe derivata controlla l'elemento a cui fa riferimento il lettore per determinare se l'istanza può deserializzare un token di sicurezza.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>This is typically accomplished through a call to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> method with the appropriate element and namespace strings specified.</source>
          <target state="translated">Questa operazione viene in genere eseguita tramite una chiamata al <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> metodo con le stringhe appropriate di elemento e lo spazio dei nomi specificato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>If you override <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</ph>, you must also override the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">Se esegue l'override <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</ph>, è inoltre necessario eseguire l'override di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> metodo o <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> metodo per fornire la logica per deserializzare la clausola identificatore di chiave.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A&gt;</ph> method to determine whether a token can be read by a handler.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A&gt;</ph> metodo per determinare se un token può essere letto da un gestore.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether the handler supports validation of security tokens.</source>
          <target state="translated">Ottiene un valore che indica se il gestore supporta la convalida dei token di sicurezza.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class is capable of validating security tokens; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la classe consente di convalidare i token di sicurezza; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source>To implement validation in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method to implement the validation logic.</source>
          <target state="translated">Per implementare la convalida in una classe derivata, eseguire l'override di questa proprietà per restituire <ph id="ph1">`true`</ph> ed eseguire l'override di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo per implementare la logica di convalida.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A&gt;</ph> property to indicate that a custom handler can validate tokens.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A&gt;</ph> proprietà per indicare che un gestore personalizzato è possibile convalidare i token.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to be checked.</source>
          <target state="translated">Clausola dell'identificatore di chiave da selezionare.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</source>
          <target state="translated">Restituisce un valore che indica se la clausola dell'identificatore chiave specificata può essere serializzata da questa istanza.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key identifier clause can be serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è possibile serializzare la clausola dell'identificatore di chiave; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">L'implementazione predefinita restituisce sempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>If you override <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</ph>, you must also override the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;</ph> method to provide the logic to serialize the key identifier clause.</source>
          <target state="translated">Se esegue l'override <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</ph>, inoltre, è necessario eseguire l'override di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;</ph> metodo per fornire la logica per la serializzazione della clausola dell'identificatore di chiave.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether the handler can serialize security tokens.</source>
          <target state="translated">Ottiene un valore che indica se il gestore può serializzare i token di sicurezza.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class is capable of serializing tokens; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la classe consente di serializzare i token; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source>To implement serialization in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</ph> methods to implement the serialization logic.</source>
          <target state="translated">Per implementare la serializzazione in una classe derivata, eseguire l'override di questa proprietà per restituire <ph id="ph1">`true`</ph> ed eseguire l'override di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</ph> metodi per implementare la logica di serializzazione.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> property to indicate that a custom handler can serialize tokens.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> proprietà per indicare che un gestore personalizzato può serializzare i token.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> object that provides configuration for the current instance.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> che fornisce la configurazione per l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration">
          <source>The configuration object for the current instance.</source>
          <target state="translated">Oggetto configurazione per l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property is typically set by the configuration infrastructure from the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>securityTokenHandlerConfiguration<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)</ept> element in the configuration file during application start up.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> proprietà in genere è impostata tramite l'infrastruttura di configurazione di <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>securityTokenHandlerConfiguration<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)</ept> elemento nel file di configurazione durante l'applicazione di avvio.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration">
          <source>In derived classes, you use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property to access configuration settings; for example, the issuer name registry to use in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method can be accessed from the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType&gt;</ph> property of the configuration object.</source>
          <target state="translated">Nelle classi derivate, utilizzare il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> proprietà per accedere alle impostazioni di configurazione, ad esempio, il Registro di sistema nome autorità emittente da utilizzare nel <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo è possibile accedere dal <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType&gt;</ph> proprietà dell'oggetto di configurazione.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection">
          <source>Gets the token handler collection that contains the current instance.</source>
          <target state="translated">Ottiene la raccolta di gestori di token che contiene l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection">
          <source>The token handler collection that contains the current instance.</source>
          <target state="translated">La raccolta di gestori di token che contiene l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection">
          <source>When the token handler is added to a <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;</ph> instance, this property is automatically set.</source>
          <target state="translated">Quando il gestore dei token viene aggiunto a un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;</ph> istanza, questa proprietà viene impostata automaticamente.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>The token for which the reference is to be created.</source>
          <target state="translated">Token per cui deve essere creato il riferimento.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attached reference should be created; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if an unattached reference should be created.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un riferimento associato deve essere creato; <ph id="ph2">&lt;see langword="false" /&gt;</ph> se un riferimento non associato deve essere creato.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>When overridden in a derived class, creates the security token reference for tokens processed by that class.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, crea il riferimento del token di sicurezza per i token elaborati da quella classe.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>This method is typically called by a security token service (STS).</source>
          <target state="translated">Questo metodo in genere viene chiamato da un servizio token di sicurezza (STS).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>A key identifier clause that references the specified token.</source>
          <target state="translated">Clausola dell'identificatore di chiave a cui fa riferimento il token specificato.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>Derived classes override this method to return a key identifier clause (<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph>) that can be used to create a <ph id="ph2">`&lt;wsse:SecurityTokenReference&gt;`</ph> element for the specified token.</source>
          <target state="translated">Le classi derivate di eseguire l'override del metodo per restituire una clausola identificatore di chiave (<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph>) che può essere utilizzato per creare un <ph id="ph2">`&lt;wsse:SecurityTokenReference&gt;`</ph> elemento per il token specificato.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>Called from implementations of the <ph id="ph1">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> class.</source>
          <target state="translated">Chiamato dalle implementazioni del <ph id="ph1">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>Typically, a <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">In genere, un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> non dovrà essere utilizzata solo quando viene creato un servizio token di sicurezza personalizzato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">Quando un servizio token di sicurezza restituisce un token di sicurezza, il token di sicurezza emesso contiene riferimenti a token di sicurezza associati e non associati.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">I riferimenti associati fanno riferimento a token di sicurezza contenuti nell'intestazione di sicurezza di un messaggio SOAP, mentre i riferimenti non associati fanno riferimento a token di sicurezza che non sono inclusi nell'intestazione di sicurezza di un messaggio SOAP.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">Questi riferimenti confermano in genere l'autenticità del token di sicurezza emesso.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A&gt;</ph> method to create a key identifier clause from the specified token.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A&gt;</ph> metodo per creare una clausola dell'identificatore di chiave dal token specificato.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The security token descriptor from which the token is to be created.</source>
          <target state="translated">Descrittore del token di sicurezza da cui il token deve essere creato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Properties of the token descriptor are set before this method is called.</source>
          <target state="translated">Le proprietà del descrittore di token vengono impostate prima della chiamata a questo metodo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>When overridden in a derived class, creates a security token using the specified token descriptor.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, crea un nuovo token di sicurezza utilizzando il descrittore di token specificato.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This method is called by a security token service (STS).</source>
          <target state="translated">Questo metodo viene chiamato da un servizio token di sicurezza (STS).</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A security token that matches the properties of the token descriptor.</source>
          <target state="translated">Token di sicurezza che corrisponde alle proprietà del descrittore dei token.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Called from implementations of the <ph id="ph1">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> class.</source>
          <target state="translated">Chiamato dalle implementazioni del <ph id="ph1">&lt;xref:System.IdentityModel.SecurityTokenService&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A&gt;</ph> method to create and return a token from a token descriptor.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A&gt;</ph> per creare e restituire un token da un descrittore del token.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to check for replay.</source>
          <target state="translated">Token da verificare per la riproduzione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, viene generata un'eccezione se il token specificato viene rilevato come ripetuto.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The default implementation does nothing.</source>
          <target state="translated">L'implementazione predefinita non esegue alcuna operazione.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Derived classes should throw a <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException&gt;</ph> if the token has already been used.</source>
          <target state="translated">Le classi derivate devono generare un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException&gt;</ph> se il token è già stato utilizzato.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Windows Identity Foundation (WIF) provides the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.TokenReplayCache&gt;</ph> class from which replay caches may be derived and the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>tokenReplayCache<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md)</ept> configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A&gt;</ph> method is up to the designer of the derived class.</source>
          <target state="translated">Windows Identity Foundation (WIF) fornisce il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.TokenReplayCache&gt;</ph> classe dalla quale riproduzione può essere derivata memorizza nella cache e <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>tokenReplayCache<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md)</ept> elemento di configurazione, che può essere usato per configurare il cache di riproduzione utilizzata dai gestori di token in un'applicazione. Tuttavia, l'implementazione esatta del <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A&gt;</ph> metodo dipende dalla finestra di progettazione della classe derivata.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, restituisce il set di URI utilizzati nelle richieste per identificare un token del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The set of URIs that identify the token type that this handler supports.</source>
          <target state="translated">Set di URI che identificano il tipo di token supportato da questo gestore.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> of the token processed by the current instance is accessed through the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Type&gt;</ph> del token elaborate dall'istanza corrente è possibile accedere mediante il <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A&gt;</ph> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A&gt;</ph> metodo restituisce il set di identificatori accettabili che può essere utilizzato nei messaggi per fare riferimento al tipo di token.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>For example, the URI value used in the <ph id="ph1">`&lt;wst:TokenType&gt;`</ph> element under the <ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph> element to request a specific kind of token (represented by the <ph id="ph3">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType&gt;</ph> property in the object model).</source>
          <target state="translated">Ad esempio, il valore dell'URI utilizzato nel <ph id="ph1">`&lt;wst:TokenType&gt;`</ph> elemento sotto il <ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph> elemento per richiedere un tipo specifico di token (rappresentato dal <ph id="ph3">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType&gt;</ph> proprietà nel modello a oggetti).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A&gt;</ph> method to return the token type identifiers for a custom token.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A&gt;</ph> per restituire gli identificatori di tipo di token per un token personalizzato.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The configuration XML elements.</source>
          <target state="translated">Elementi di configurazione XML.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each node in the list is of type <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">Ogni nodo nell'elenco è del tipo <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, carica la configurazione personalizzata dall'XML.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> viene chiamato dall'infrastruttura di configurazione.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the token handler’s <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>add<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> element from the configuration file.</source>
          <target state="translated">Quando questo metodo viene chiamato, il <ph id="ph1">`nodelist`</ph> conterrà gli elementi figlio di livello superiore del gestore dei token <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>aggiungere<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> elemento dal file di configurazione.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
          <target state="translated">Ognuna di queste a sua volta, può contenere attributi o elementi figlio a seconda dello schema di configurazione che definisce per la classe derivata.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">L'implementazione predefinita genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Override this method in your derived class to enable initialization of your security token handler from a configuration file.</source>
          <target state="translated">Eseguire l'override di questo metodo nella classe derivata per abilitare l'inizializzazione del gestore del token di sicurezza da un file di configurazione.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</source>
          <target state="translated">Lettore XML posizionato presso l'elemento iniziale del codice XML da deserializzare nell'identificatore della chiave</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</source>
          <target state="translated">Quando viene sottoposto a override in una classe derivata, deserializza l'XML a cui fa riferimento il lettore XML specificato a una clausola dell'identificatore di chiave che si riferisce a un token elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The key identifier clause that was deserialized from the XML.</source>
          <target state="translated">La clausola identificatore di chiave che è stata deserializzata da XML.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Override this method to provide the logic to deserialize a key identifier clause from XML.</source>
          <target state="translated">Eseguire l'override di questo metodo per fornire la logica per deserializzare una clausola identificatore di chiave da XML.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>If you override this method, you should also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Se si esegue l'override di questo metodo, di eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, deserializza l'XML specificato in un token del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>The string to be deserialized.</source>
          <target state="translated">Stringa da deserializzare.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, deserializza la stringa specificata in un token del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>The security token that was deserialized from the specified string.</source>
          <target state="translated">Token di sicurezza deserializzato dalla stringa specificata.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">Chiamare questo metodo con dati non attendibili implica un rischio di sicurezza.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">Chiamare questo metodo solo con dati attendibili.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>la convalida dei dati<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>Override this method to provide functionality that can deserialize a security token from a string.</source>
          <target state="translated">Eseguire l'override di questo metodo per fornire una funzionalità che può deserializzare un token di sicurezza da una stringa.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
          <source>If you override, this method, you should also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Se si esegue l'override, questo metodo, di eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">Lettore XML posizionato presso l'elemento iniziale del token.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, deserializza l'XML cui si fa riferimento dal lettore XML specificato in un token del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">Token di sicurezza deserializzato dal codice XML.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">Chiamare questo metodo con dati non attendibili implica un rischio di sicurezza.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">Chiamare questo metodo solo con dati attendibili.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>la convalida dei dati<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">Eseguire l'override di questo metodo per fornire la logica per deserializzare un token di sicurezza da XML.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>If you override this method, you should also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Se si esegue l'override di questo metodo, di eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</source>
          <target state="translated">In genere, nelle classi derivate, se il metodo non è possibile deserializzare il token da XML a cui fa riferimento, viene generata una <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A&gt;</ph> method to read a custom token from the specified XML reader.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A&gt;</ph> metodo per leggere un token personalizzato dal lettore XML specificato.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">Lettore XML posizionato presso l'elemento iniziale del token.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A token resolver that contains out-of-band and cached tokens.</source>
          <target state="translated">Resolver di token che contiene i token fuori banda e memorizzati nella cache.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, deserializza l'XML cui si fa riferimento dal lettore XML specificato in un token del tipo elaborato dalla classe derivata utilizzando il resolver di token specificato.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">Token di sicurezza deserializzato dal codice XML.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">Chiamare questo metodo con dati non attendibili implica un rischio di sicurezza.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">Chiamare questo metodo solo con dati attendibili.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>la convalida dei dati<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The default implementation ignores the <ph id="ph1">`tokenResolver`</ph> parameter and delegates the call to the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ignora l'implementazione predefinita di <ph id="ph1">`tokenResolver`</ph> parametro e delega la chiamata per il <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">Eseguire l'override di questo metodo per fornire la logica per deserializzare un token di sicurezza da XML.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>If you override this method, you should also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Se si esegue l'override di questo metodo, di eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</source>
          <target state="translated">In genere, nelle classi derivate, se il metodo non è possibile deserializzare il token da XML a cui fa riferimento, viene generata una <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <source>When overridden in a derived class, gets the type of the security token that is processed by this instance.</source>
          <target state="translated">Se sottoposta a override in una classe derivata, ottiene il tipo di token di sicurezza elaborato dall'istanza.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <source>The type of the security token that is processed by this instance.</source>
          <target state="translated">Tipo di token di sicurezza elaborato da questa istanza.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <source>You must override this property in derived classes and return the <ph id="ph1">&lt;xref:System.Type&gt;</ph> of the security token (<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph>) that is processed by the derived class.</source>
          <target state="translated">È necessario eseguire l'override di questa proprietà nelle classi derivate e restituire il <ph id="ph1">&lt;xref:System.Type&gt;</ph> del token di sicurezza (<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph>) che viene elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;</ph> property to return the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the security tokens that are processed by a custom handler.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;</ph> proprietà per restituire il <ph id="ph2">&lt;xref:System.Type&gt;</ph> dei token di sicurezza che vengono elaborati da un gestore personalizzato.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)">
          <source>The security token that is being validated.</source>
          <target state="translated">Il token di sicurezza da convalidare.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)">
          <source>The message to write to the trace.</source>
          <target state="translated">Messaggio da scrivere nella traccia.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)">
          <source>Traces the failure event during the validation of security tokens when tracing is enabled.</source>
          <target state="translated">Traccia l'evento di errore durante la convalida dei token di sicurezza se è abilitata la tracciatura.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)">
          <source>This method should be called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method when validation of the token fails.</source>
          <target state="translated">Questo metodo deve essere chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo quando si verifica un errore di convalida del token.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token that was validated.</source>
          <target state="translated">Il token convalidato.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)">
          <source>Traces the successful validation of security tokens event when tracing is enabled.</source>
          <target state="translated">Traccia la convalida dell'evento dei token di sicurezza se è abilitata la tracciatura.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)">
          <source>This method should be called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method after the token has been successfully validated.</source>
          <target state="translated">Questo metodo deve essere chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo dopo il token non è stato convalidato.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to validate.</source>
          <target state="translated">Token da convalidare.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, validates the specified security token.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, convalida il token di sicurezza specificato.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">Il token deve essere del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities contained in the token.</source>
          <target state="translated">Identità contenute nel token.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo viene chiamato dall'infrastruttura per convalidare ed estrarre le attestazioni del token di sicurezza deserializzato.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>These claims are returned in the collection of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> objects returned by the method.</source>
          <target state="translated">Queste attestazioni vengono restituite nella raccolta di <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> gli oggetti restituiti dal metodo.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>In the typical case, this collection will contain a single identity.</source>
          <target state="translated">In genere, questa raccolta conterrà una singola identità.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType&gt;</ph> property of the token handler configuration object specified on the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property.</source>
          <target state="translated">Nelle classi derivate, convalida include in genere i destinatari specificati nel token con il gruppo di destinatari URI specificati nella convalida il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType&gt;</ph> proprietà dell'oggetto di configurazione di gestore del token specificato nella <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>These URIs are typically set in the configuration file under the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>audienceUris<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md)</ept> element.</source>
          <target state="translated">Gli URI vengono in genere impostati nel file di configurazione sotto il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>audienceUris<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>If the audience cannot be validated, an <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException&gt;</ph> exception should be thrown.</source>
          <target state="translated">Se non è possibile convalidare il gruppo di destinatari, un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException&gt;</ph> deve essere generata l'eccezione.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>When processing the token, the issuer is typically validated by passing the issuer token to one of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A&gt;</ph> methods on the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry&gt;</ph> object that is configured for the handler through the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property.</source>
          <target state="translated">Quando l'elaborazione del token, l'autorità emittente viene in genere convalidato passando il token dell'autorità di certificazione a uno del <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A&gt;</ph> metodi sul <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry&gt;</ph> oggetto che è configurato per il gestore tramite il <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The issuer name registry is typically configured through the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>issuerNameRegistry<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element in the configuration file.</source>
          <target state="translated">Il Registro di sistema di nome dell'autorità emittente viene in genere configurato tramite il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>issuerNameRegistry<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> elemento nel file di configurazione.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A&gt;</ph> returns the name of the issuer.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A&gt;</ph> restituisce il nome dell'autorità di certificazione.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>This name should be used to set the <ph id="ph1">&lt;xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType&gt;</ph> property in claims contained in the token.</source>
          <target state="translated">Questo nome deve essere utilizzato per impostare il <ph id="ph1">&lt;xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType&gt;</ph> proprietà nelle attestazioni contenute nel token.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>If the issuer name registry does not contain an entry for the issuer token, <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A&gt;</ph> returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se il Registro di sistema di nome dell'autorità di certificazione non contiene una voce per il token dell'autorità di certificazione, <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A&gt;</ph> restituisce <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>In this case a <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph> is typically thrown in derived classes, but this behavior is up to the designer of the class.</source>
          <target state="translated">In questo caso un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph> viene in genere generata nelle classi derivate, ma questo comportamento dipende dalla finestra di progettazione della classe.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The following code shows an override of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method for a security token handler that processes simple web tokens (SWT).</source>
          <target state="translated">Il codice seguente viene illustrato un override del <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo per un gestore di token di sicurezza che elabora i token web semplice (SWT).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The code is taken from the <ph id="ph1">`CustomToken`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`CustomToken`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The following code shows <ph id="ph1">`CreateClaims`</ph> method that is invoked from the override of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method in the previous example.</source>
          <target state="translated">Il codice seguente illustra <ph id="ph1">`CreateClaims`</ph> metodo che viene richiamato da override del <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo nell'esempio precedente.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>This method returns a <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> object that is created from the claims in the token.</source>
          <target state="translated">Questo metodo restituisce un <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> oggetto creato dalle attestazioni nel token.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The code is taken from the <ph id="ph1">`CustomToken`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`CustomToken`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The following code shows <ph id="ph1">`ValidateSignature`</ph> method that is invoked from the override of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method in the simple web token handler.</source>
          <target state="translated">Il codice seguente illustra <ph id="ph1">`ValidateSignature`</ph> metodo che viene richiamato da override del <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo nel gestore di token web semplice.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>This method validates the signature on the token by using the configured <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerTokenResolver&gt;</ph>.</source>
          <target state="translated">Questo metodo convalida la firma sul token utilizzando l'applicazione configurata <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerTokenResolver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The code is taken from the <ph id="ph1">`CustomToken`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`CustomToken`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The following code shows <ph id="ph1">`ValidateAudience`</ph> method that is invoked from the override of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method in the simple web token handler.</source>
          <target state="translated">Il codice seguente illustra <ph id="ph1">`ValidateAudience`</ph> metodo che viene richiamato da override del <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> metodo nel gestore di token web semplice.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>This method validates the audience contained in the token against the audience URIs that were specified in configuration.</source>
          <target state="translated">Questo metodo convalida i destinatari contenuti nel token con il gruppo di destinatari URI specificati nella configurazione.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The code is taken from the <ph id="ph1">`CustomToken`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`CustomToken`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The XML writer.</source>
          <target state="translated">Writer XML.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to serialize.</source>
          <target state="translated">Clausola dell'identificatore di chiave da serializzare.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>When overridden in a derived class, serializes the specified key identifier clause to XML.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, serializza la clausola identificatore chiave specificata in XML.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause must be of the type supported by the derived class.</source>
          <target state="translated">La clausola identificatore di chiave deve essere di tipo supportato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Override this method to provide the logic to serialize a key identifier clause to XML.</source>
          <target state="translated">Eseguire l'override di questo metodo per fornire la logica per la serializzazione di una clausola identificatore di chiave in formato XML.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>If you override this method, you should also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</ph> method.</source>
          <target state="translated">Se si esegue l'override di questo metodo, di eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>When overridden in a derived class, serializes the specified security token.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, serializza il token di sicurezza specificato.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityTokenHandler">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">Il token deve essere del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to serialize.</source>
          <target state="translated">Token da serializzare.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, serializes the specified security token to a string.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, serializza il token di sicurezza specificato in una stringa.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">Il token deve essere del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The serialized token.</source>
          <target state="translated">Token da serializzare.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">Eseguire l'override di questo metodo per fornire la logica per serializzare un token di sicurezza in formato XML.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>If you override this method, you should also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> property.</source>
          <target state="translated">Se si esegue l'override di questo metodo, di eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer.</source>
          <target state="translated">Writer XML.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to serialize.</source>
          <target state="translated">Token da serializzare.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, serializes the specified security token to XML.</source>
          <target state="translated">Una volta eseguito l'override in una classe derivata, serializza il token di sicurezza specificato in XML.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">Il token deve essere del tipo elaborato dalla classe derivata.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>By default this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
          <target state="translated">Per impostazione predefinita, questo metodo genera un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">Eseguire l'override di questo metodo per fornire la logica per serializzare un token di sicurezza in formato XML.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If you override this method, you should also override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> property.</source>
          <target state="translated">Se si esegue l'override di questo metodo, di eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The following code shows how to override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</ph> method to serialize a custom token.</source>
          <target state="translated">Nel codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</ph> metodo per serializzare un token personalizzato.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The code is taken from the <ph id="ph1">`Custom Token`</ph> sample.</source>
          <target state="translated">Il codice è tratto dal <ph id="ph1">`Custom Token`</ph> esempio.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</source>
          <target state="translated">In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web).</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>For information about this sample and other samples available for WIF and where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Per informazioni su questo esempio e altri esempi disponibili per WIF e scaricarli, vedere <bpt id="p1">[</bpt>indice degli esempi di codice WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>