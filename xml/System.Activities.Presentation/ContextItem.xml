<Type Name="ContextItem" FullName="System.Activities.Presentation.ContextItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f6a8979fbc7b9581966f58c1ec4a6f43ef73269" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36652173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ContextItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContextItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ContextItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ContextItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextItem abstract" />
  <TypeSignature Language="F#" Value="type ContextItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta la classe di base dalla quale devono derivare tutti gli elementi di contesto. Questa classe è astratta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un elemento di contesto rappresenta uno stato temporaneo in una finestra di progettazione. Gli elementi di contesto sono gestiti da un oggetto <xref:System.Activities.Presentation.ContextItemManager> che è parte di un oggetto <xref:System.Activities.Presentation.EditingContext> utilizzato da <xref:System.Activities.Presentation.WorkflowDesigner> in caso di rappresentazione visiva del modello del flusso di lavoro. L'oggetto <xref:System.Activities.Presentation.ContextItemManager> viene restituito dalla proprietà <xref:System.Activities.Presentation.EditingContext.Items%2A> che contiene i dati condivisi tra un host e la finestra di progettazione.  Questi dati forniscono il meccanismo necessario per effettuare l'hook nella sottoscrizione e modificare la notifica.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContextItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Avvia una nuova istanza della classe <see cref="T:System.Activities.Presentation.ContextItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.ContextItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Activities.Presentation.ContextItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>In caso di implementazione in una classe derivata, ottiene il tipo dell'elemento derivato dalla classe del contesto di modifica.</summary>
        <value>Elemento <see cref="T:System.Type" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è implementato per la classe <xref:System.Activities.Presentation.ContextItem> di base.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem previousItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem previousItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChanged (context As EditingContext, previousItem As ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChanged(System::Activities::Presentation::EditingContext ^ context, System::Activities::Presentation::ContextItem ^ previousItem);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChanged : System.Activities.Presentation.EditingContext * System.Activities.Presentation.ContextItem -&gt; unit&#xA;override this.OnItemChanged : System.Activities.Presentation.EditingContext * System.Activities.Presentation.ContextItem -&gt; unit" Usage="contextItem.OnItemChanged (context, previousItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="previousItem" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Activities.Presentation.EditingContext" /> in cui viene eseguita la modifica.</param>
        <param name="previousItem">Oggetto <see cref="T:System.Activities.Presentation.ContextItem" /> precedentemente attivo.</param>
        <summary>Rappresenta un metodo chiamato su un elemento di contesto prima di essere archiviato nel gestore di elementi di contesto. L'elemento precedente nel gestore di elementi di contesto viene passato come parametro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché gli elementi devono avere costruttori predefiniti, quando un elemento viene passato nel contesto la prima volta, viene creato un elemento predefinito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>