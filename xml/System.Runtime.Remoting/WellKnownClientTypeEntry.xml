<Type Name="WellKnownClientTypeEntry" FullName="System.Runtime.Remoting.WellKnownClientTypeEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7059b6bc2c667e70f985fe9602244c6a468d805c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WellKnownClientTypeEntry : System.Runtime.Remoting.TypeEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WellKnownClientTypeEntry extends System.Runtime.Remoting.TypeEntry" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class WellKnownClientTypeEntry&#xA;Inherits TypeEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class WellKnownClientTypeEntry : System::Runtime::Remoting::TypeEntry" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Remoting.TypeEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0bd22-101">Contiene i valori per un tipo di oggetto registrato sul client come tipo attivato dal server (a chiamata singola o Singleton).</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bd22-101">Holds values for an object type registered on the client as a server-activated type (single call or singleton).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bd22-102">Tipi di server attivato possono essere chiamata singola o singleton.</span><span class="sxs-lookup"><span data-stu-id="0bd22-102">Server-activated types can be either single call or singleton.</span></span> <span data-ttu-id="0bd22-103">Se una classe è registrata come un singola chiamata tipo, viene creata una nuova istanza ogni volta che arriva una chiamata dal client.</span><span class="sxs-lookup"><span data-stu-id="0bd22-103">If a class is registered as a single call type, a new instance is created each time a call from the client arrives.</span></span> <span data-ttu-id="0bd22-104">Tutte le chiamate a un oggetto singleton sono gestite da un'istanza di tale oggetto, a meno che tale oggetto siano stati raccolti.</span><span class="sxs-lookup"><span data-stu-id="0bd22-104">All calls to a singleton object are handled by one instance of that object, unless that object has been collected.</span></span>  
  
 <span data-ttu-id="0bd22-105">Qualsiasi client che conosca l'URI di un oggetto attivato dal server registrato può ottenere un proxy per questo oggetto registrando il canale preferito con <xref:System.Runtime.Remoting.Channels.ChannelServices> e l'attivazione dell'oggetto chiamando `new` o <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0bd22-105">Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0bd22-106">Per attivare un oggetto server attivato con `new`, è innanzitutto necessario registrare il tipo di oggetto attivato dal server sul client utilizzando il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="0bd22-106">To activate a server-activated object with `new`, you must first register the server-activated object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> method.</span></span> <span data-ttu-id="0bd22-107">Chiamando <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, vengono concesse l'infrastruttura remota la posizione dell'oggetto remoto, che consente di `new` parola chiave per la sua creazione.</span><span class="sxs-lookup"><span data-stu-id="0bd22-107">By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, you are giving the remoting infrastructure the location of the remote object, which allows the `new` keyword to create it.</span></span> <span data-ttu-id="0bd22-108">Se, invece, si utilizza il <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodo per attivare un oggetto server attivato, è necessario fornire tale URL dell'oggetto come argomento, è necessaria alcuna registrazione precedente nel client.</span><span class="sxs-lookup"><span data-stu-id="0bd22-108">If, on the other hand, you use the <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary.</span></span>  
  
 <span data-ttu-id="0bd22-109">Per una descrizione dettagliata di oggetti attivati dal server e attivazione remota oggetti, vedere [ &#91; \<topic://cpconActivation >&#93;](http://msdn.microsoft.com/library/e90d0c64-00da-4080-ae78-a6c558825c25).</span><span class="sxs-lookup"><span data-stu-id="0bd22-109">For a detailed description of server-activated objects and remote object activation, see [&#91;\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/library/e90d0c64-00da-4080-ae78-a6c558825c25).</span></span>  
  
   
  
## Examples  
 [!code-cpp[WellKnownClientTypeEntry_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/CPP/wellknownclienttypeentry_client.cpp#1)]
 [!code-csharp[WellKnownClientTypeEntry_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/CS/wellknownclienttypeentry_client.cs#1)]
 [!code-vb[WellKnownClientTypeEntry_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/VB/wellknownclienttypeentry_client.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0bd22-110">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-110">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WellKnownClientTypeEntry (Type type, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WellKnownClientTypeEntry(Type ^ type, System::String ^ objectUrl);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0bd22-111">
            <see cref="T:System.Type" /> del tipo attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-111">The <see cref="T:System.Type" /> of the server-activated type.</span>
          </span>
        </param>
        <param name="objectUrl">
          <span data-ttu-id="0bd22-112">URL del tipo attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-112">The URL of the server-activated type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bd22-113">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> con il tipo e l'URL specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-113">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> class with the given type and URL.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WellKnownClientTypeEntry (string typeName, string assemblyName, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string assemblyName, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, assemblyName As String, objectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WellKnownClientTypeEntry(System::String ^ typeName, System::String ^ assemblyName, System::String ^ objectUrl);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="0bd22-114">Nome di tipo del tipo attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-114">The type name of the server-activated type.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="0bd22-115">Nome di assembly del tipo attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-115">The assembly name of the server-activated type.</span>
          </span>
        </param>
        <param name="objectUrl">
          <span data-ttu-id="0bd22-116">URL del tipo attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-116">The URL of the server-activated type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bd22-117">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> con il tipo, il nome dell'assembly e l'URL specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> class with the given type, assembly name, and URL.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationUrl">
      <MemberSignature Language="C#" Value="public string ApplicationUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationUrl" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bd22-118">Ottiene o imposta l'URL dell'applicazione in cui attivare il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-118">Gets or sets the URL of the application to activate the type in.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bd22-119">URL dell'applicazione in cui attivare il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-119">The URL of the application to activate the type in.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bd22-120">L'URL dell'applicazione è facoltativo e deve essere impostato per l'URL dell'applicazione corrispondente all'oggetto server attivato.</span><span class="sxs-lookup"><span data-stu-id="0bd22-120">The application URL is optional and should be set to the URL of the application corresponding to the server-activated object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectType">
      <MemberSignature Language="C#" Value="public Type ObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ObjectType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bd22-121">Ottiene l'oggetto <see cref="T:System.Type" /> del tipo di client attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-121">Gets the <see cref="T:System.Type" /> of the server-activated client type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bd22-122">Ottiene l'oggetto <see cref="T:System.Type" /> del tipo di client attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-122">Gets the <see cref="T:System.Type" /> of the server-activated client type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectUrl">
      <MemberSignature Language="C#" Value="public string ObjectUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ObjectUrl" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ObjectUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bd22-123">Ottiene l'URL dell'oggetto del client attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-123">Gets the URL of the server-activated client object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bd22-124">URL dell'oggetto del client attivato dal server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-124">The URL of the server-activated client object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.WellKnownClientTypeEntry.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bd22-125">Restituisce il nome completo del tipo, il nome dell'assembly e l'URL del tipo di client attivato dal server come oggetto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-125">Returns the full type name, assembly name, and object URL of the server-activated client type as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bd22-126">Nome completo del tipo, il nome dell'assembly e l'URL del tipo di client attivato dal server come oggetto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd22-126">The full type name, assembly name, and object URL of the server-activated client type as a <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bd22-127">Se <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A> non `null`, viene restituito alla fine della stringa.</span><span class="sxs-lookup"><span data-stu-id="0bd22-127">If <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A> is not `null`, it is returned at the end of the string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>