<Type Name="RemotingConfiguration" FullName="System.Runtime.Remoting.RemotingConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91def6fd83ceb69f172d51cba04bfbe924727d95" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39878469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RemotingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RemotingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.RemotingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class RemotingConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class RemotingConfiguration abstract sealed" />
  <TypeSignature Language="F#" Value="type RemotingConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce diversi metodi statici per la configurazione dell'infrastruttura remota.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static string ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : string" Usage="System.Runtime.Remoting.RemotingConfiguration.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ID dell'applicazione attualmente in esecuzione.</summary>
        <value>Classe <see cref="T:System.String" /> che contiene l'ID dell'applicazione attualmente in esecuzione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ID dell'applicazione viene anteposto l'URI degli oggetti creati dall'applicazione attualmente in esecuzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato non dispone dell'autorizzazione di infrastruttura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con il codice dell'infrastruttura. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Runtime.Remoting.RemotingConfiguration.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di un'applicazione remota.</summary>
        <value>Nome di un'applicazione remota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nome di un'applicazione può impostare una sola volta, tramite la proprietà corrente o tramite un file di configurazione. Se un'applicazione è in esecuzione all'interno di un ambiente ospitato, ad esempio Internet Information Services (IIS), questo valore sia già stato impostato (in genere per la directory virtuale). La proprietà current restituirà `null` se il nome dell'applicazione non è stato impostato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Runtime.Remoting.RemotingConfiguration.ApplicationName%2A> proprietà per indicare il nome dell'applicazione .NET remoting. Per il codice di esempio completo, vedere gli esempi per la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> e <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> metodi.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
  
 Esempio di codice seguente viene illustrato come accedere a un oggetto remoto da un'applicazione denominata.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
 [!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti. L'eccezione viene generata solo quando viene impostato il valore della proprietà.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="static member Configure : string -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.Configure filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use Configure(String,Boolean)")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Use System.Runtime.Remoting.RemotingConfiguration.Configure(string fileName, bool ensureSecurity) instead.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nome del file di configurazione remota. Può essere <see langword="null" />.</param>
        <summary>Legge il file di configurazione e configura l'infrastruttura remota. <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" /> è obsoleto. Usare invece <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%29> è obsoleto. Usare invece <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.  
  
 Il passaggio `null` come il `filename` parametro provoca l'inizializzazione di .NET remoting predefinito senza richiedere l'esistenza di un file di configurazione.  
  
 Per informazioni sulla sintassi del file di configurazione, vedere [Schema delle impostazioni remote](http://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  
  
> [!NOTE]
>  Oggetti marshalling per riferimento (MBR) non risiedono per sempre in memoria. In alternativa, a meno che non esegue l'override di tipo <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> per controllare i propri criteri di durata, ogni MBR ha una durata limitata, prima che il sistema di .NET Framework remoting inizi il processo di eliminazione e recupero della memoria. Per altre informazioni, vedere [lease di durata](http://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#1)]
 [!code-vb[RemotingConfiguration_Configure_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename, bool ensureSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename, bool ensureSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String, ensureSecurity As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename, bool ensureSecurity);" />
      <MemberSignature Language="F#" Value="static member Configure : string * bool -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.Configure (filename, ensureSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="ensureSecurity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Nome del file di configurazione remota. Può essere <see langword="null" />.</param>
        <param name="ensureSecurity">Se impostato su <see langword="true" /> è richiesta la sicurezza. Se impostato su <see langword="false" />, la sicurezza non è richiesta ma può comunque essere utilizzata.</param>
        <summary>Legge il file di configurazione e configura l'infrastruttura remota.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il passaggio `null` come il `filename` parametro provoca l'inizializzazione di .NET remoting predefinito senza richiedere l'esistenza di un file di configurazione. Per altre informazioni sulla sicurezza e comunicazione remota di vedere [sicurezza in .NET Remoting.](http://msdn.microsoft.com/library/9574262c-d4b1-41c5-8600-24ff147c0add)  
  
 Per informazioni sulla sintassi del file di configurazione, vedere [Schema delle impostazioni remote](http://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  
  
> [!NOTE]
>  Oggetti marshalling per riferimento (MBR) non risiedono per sempre in memoria. In alternativa, a meno che non esegue l'override di tipo <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> per controllare i propri criteri di durata, ogni MBR ha una durata limitata, prima che il sistema di .NET Framework remoting inizi il processo di eliminazione e recupero della memoria. Per altre informazioni, vedere [lease di durata](http://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsEnabled">
      <MemberSignature Language="C#" Value="public static bool CustomErrorsEnabled (bool isLocalRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CustomErrorsEnabled(bool isLocalRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomErrorsEnabled (isLocalRequest As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CustomErrorsEnabled(bool isLocalRequest);" />
      <MemberSignature Language="F#" Value="static member CustomErrorsEnabled : bool -&gt; bool" Usage="System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled isLocalRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isLocalRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isLocalRequest">
          <see langword="true" /> per specificare i chiamanti locali; <see langword="false" /> per specificare i chiamanti remoti.</param>
        <summary>Indica se i canali del server nel dominio di applicazione corrente restituiscono informazioni filtrate o complete sulle eccezioni ai chiamanti locali o remoti.</summary>
        <returns>
          <see langword="true" /> se ai chiamanti locali o remoti vengono restituite solo informazioni filtrate sulle eccezioni, come specificato dal parametro<paramref name="isLocalRequest" />; <see langword="false" /> se vengono restituite informazioni complete sulle eccezioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le informazioni complete sulle eccezioni includono l'esatta eccezione del server e la traccia dello stack del server. Le informazioni filtrate includono un'eccezione remota standard senza la traccia dello stack del server.  
  
 Il `CustomErrorsEnabled` metodo riflette le impostazioni di configurazione che sono state specificate nel `mode` attributo del `<customErrors>` elemento del file di configurazione dell'applicazione. Per altre informazioni sulle opzioni di configurazione, vedere [ &#91; \<topic://cpconconfiguration >&#93;](http://msdn.microsoft.com/library/92c0c097-d984-4315-835b-7490ecdf1097).  
  
 Nella tabella seguente illustra il canale tre server valori di proprietà che specificano quali chiamanti riceveranno informazioni sull'eccezione e il tipo di informazioni che ricevono.  
  
|Valore|Descrizione|  
|-----------|-----------------|  
|`off`|Tutti i chiamanti ricevono informazioni complete sulle eccezioni.|  
|`on`|Tutti i chiamanti ricevono informazioni filtrate sulle eccezioni.|  
|`remoteOnly`|I chiamanti locali ricevono informazioni complete sulle eccezioni, mentre i chiamanti remoti ricevono informazioni filtrate.|  
  
 La tabella seguente illustra l'interazione tra il `isLocalRequest` parametro e il server di proprietà del canale.  
  
|Valore|isLocalRequest|Valore restituito|Descrizione|  
|-----------|--------------------|------------------|-----------------|  
|`on`|`true`|`true`|I chiamanti locali ricevono informazioni filtrate sulle eccezioni.|  
|`on`|`false`|`true`|I chiamanti remoti ricevono informazioni filtrate sulle eccezioni.|  
|`off`|`true`|`false`|I chiamanti locali ricevono informazioni complete sulle eccezioni.|  
|`off`|`false`|`false`|I chiamanti remoti ricevono informazioni complete sulle eccezioni.|  
|`remoteOnly`|`true`|`false`|I chiamanti locali ricevono informazioni complete sulle eccezioni.|  
|`remoteOnly`|`false`|`true`|I chiamanti remoti ricevono informazioni filtrate sulle eccezioni.|  
  
 Per informazioni sull'uso di file di configurazione dell'applicazione per la restituzione di informazioni sulle eccezioni ai chiamanti di controllo, vedere il `<customErrors>` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CustomErrorsMode As CustomErrorsModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Remoting::CustomErrorsModes CustomErrorsMode { System::Runtime::Remoting::CustomErrorsModes get(); void set(System::Runtime::Remoting::CustomErrorsModes value); };" />
      <MemberSignature Language="F#" Value="member this.CustomErrorsMode : System.Runtime.Remoting.CustomErrorsModes with get, set" Usage="System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.CustomErrorsModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore che indica come vengono gestiti gli errori personalizzati.</summary>
        <value>Membro dell'enumerazione <see cref="T:System.Runtime.Remoting.CustomErrorsModes" /> che indica come vengono gestiti gli errori personalizzati.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedClientTypes () As ActivatedClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedClientTypeEntry ^&gt; ^ GetRegisteredActivatedClientTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredActivatedClientTypes : unit -&gt; System.Runtime.Remoting.ActivatedClientTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matrice di tipi di oggetti registrati sul client come tipi che verranno attivati in remoto.</summary>
        <returns>Matrice di tipi di oggetti registrati sul client per l'attivazione in remoto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per una descrizione dettagliata di oggetti attivati dal client, vedere [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedServiceTypes () As ActivatedServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedServiceTypeEntry ^&gt; ^ GetRegisteredActivatedServiceTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredActivatedServiceTypes : unit -&gt; System.Runtime.Remoting.ActivatedServiceTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matrice di tipi di oggetti registrati sul lato servizio e attivabili su richiesta da un client.</summary>
        <returns>Matrice di tipi di oggetti registrati sul lato servizio e attivabili su richiesta da un client.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per una descrizione dettagliata di oggetti attivati dal client, vedere [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#2)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownClientTypes () As WellKnownClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownClientTypeEntry ^&gt; ^ GetRegisteredWellKnownClientTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredWellKnownClientTypes : unit -&gt; System.Runtime.Remoting.WellKnownClientTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matrice di tipi di oggetti registrati sul lato client come tipi noti.</summary>
        <returns>Matrice di tipi di oggetti registrati sul lato client come tipi noti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipi di oggetti noti possono essere chiamata singola o singleton. Se un tipo di oggetto è una singola chiamata, una nuova istanza di esso viene creata ogni volta che viene ricevuta una chiamata dal client. Tutte le chiamate a un oggetto singleton vengono gestite da un'istanza dell'oggetto.  
  
 Per una descrizione più dettagliata di oggetti noti, vedere [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CPP/remotingconfiguration_getregisteredwellknownclient_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CS/remotingconfiguration_getregisteredwellknownclient_client.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/VB/remotingconfiguration_getregisteredwellknownclient_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownServiceTypes () As WellKnownServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownServiceTypeEntry ^&gt; ^ GetRegisteredWellKnownServiceTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredWellKnownServiceTypes : unit -&gt; System.Runtime.Remoting.WellKnownServiceTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matrice di tipi di oggetti registrati sul lato servizio come tipi noti.</summary>
        <returns>Matrice di tipi di oggetti registrati sul lato servizio come tipi noti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipi di oggetti noti possono essere chiamata singola o singleton. Se un tipo di oggetto è una singola chiamata, una nuova istanza di esso viene creata ogni volta che viene ricevuta una chiamata dal client. Tutte le chiamate a un oggetto singleton vengono gestite da un'istanza dell'oggetto.  
  
 Per una descrizione più dettagliata di oggetti noti, vedere [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#2)]
 [!code-vb[RemotingConfiguration_Configure_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsActivationAllowed">
      <MemberSignature Language="C#" Value="public static bool IsActivationAllowed (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsActivationAllowed(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsActivationAllowed (svrType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsActivationAllowed(Type ^ svrType);" />
      <MemberSignature Language="F#" Value="static member IsActivationAllowed : Type -&gt; bool" Usage="System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed svrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Oggetto <see cref="T:System.Type" /> da verificare.</param>
        <summary>Restituisce un valore Boolean che indica se per la classe <see cref="T:System.Type" /> specificata è consentita l'attivazione dal client.</summary>
        <returns>
          <see langword="true" /> se per l'oggetto <see cref="T:System.Type" /> specificato è consentita l'attivazione dal client; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo corrente viene utilizzato sul lato server per determinare se l'attivazione dell'oggetto <xref:System.Type> è consentito in modo esplicito dal server.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsRemotelyActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica se il tipo di oggetto specificato è registrato per l'attivazione remota dal client.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (svrType As Type) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(Type ^ svrType);" />
      <MemberSignature Language="F#" Value="static member IsRemotelyActivatedClientType : Type -&gt; System.Runtime.Remoting.ActivatedClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType svrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Tipo di oggetto da verificare.</param>
        <summary>Verifica se l'oggetto <see cref="T:System.Type" /> specificato è registrato per l'attivazione remota dal client.</summary>
        <returns>Classe <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> corrispondente al tipo di oggetto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CS/remotingconfiguration_isremotelyactivatedclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/VB/remotingconfiguration_isremotelyactivatedclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (typeName As String, assemblyName As String) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="static member IsRemotelyActivatedClientType : string * string -&gt; System.Runtime.Remoting.ActivatedClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType (typeName, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nome del tipo dell'oggetto da verificare.</param>
        <param name="assemblyName">Nome dell'assembly dell'oggetto da verificare.</param>
        <summary>Verifica se l'oggetto specificato in base al nome del tipo e al nome dell'assembly è registrato per l'attivazione remota dal client.</summary>
        <returns>Classe <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> corrispondente al tipo di oggetto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CS/remotingconfiguration_isremotelyactivatedclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/VB/remotingconfiguration_isremotelyactivatedclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica se il tipo di oggetto specificato è registrato come tipo del client noto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (svrType As Type) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(Type ^ svrType);" />
      <MemberSignature Language="F#" Value="static member IsWellKnownClientType : Type -&gt; System.Runtime.Remoting.WellKnownClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType svrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Oggetto <see cref="T:System.Type" /> da verificare.</param>
        <summary>Verifica se l'oggetto <see cref="T:System.Type" /> specificato è registrato come tipo del client noto.</summary>
        <returns>Classe <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> corrispondente al tipo di oggetto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CPP/remotingconfiguration_iswellknownclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CS/remotingconfiguration_iswellknownclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/VB/remotingconfiguration_iswellknownclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (typeName As String, assemblyName As String) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="static member IsWellKnownClientType : string * string -&gt; System.Runtime.Remoting.WellKnownClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType (typeName, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nome del tipo dell'oggetto da verificare.</param>
        <param name="assemblyName">Nome dell'assembly dell'oggetto da verificare.</param>
        <summary>Verifica se l'oggetto specificato in base al nome del tipo e al nome dell'assembly è registrato come tipo del client noto.</summary>
        <returns>Classe <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> corrispondente al tipo di oggetto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CPP/remotingconfiguration_iswellknownclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CS/remotingconfiguration_iswellknownclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/VB/remotingconfiguration_iswellknownclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public static string ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ProcessId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : string" Usage="System.Runtime.Remoting.RemotingConfiguration.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ID del processo attualmente in esecuzione.</summary>
        <value>Classe <see cref="T:System.String" /> che contiene l'ID del processo attualmente in esecuzione.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato non dispone dell'autorizzazione di infrastruttura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con il codice dell'infrastruttura. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra un oggetto <see cref="T:System.Type" /> sul lato client come tipo attivabile sul server.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (System.Runtime.Remoting.ActivatedClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Runtime.Remoting.ActivatedClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Runtime.Remoting.ActivatedClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedClientType (entry As ActivatedClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(System::Runtime::Remoting::ActivatedClientTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedClientType : System.Runtime.Remoting.ActivatedClientTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Impostazioni di configurazione per il tipo attivato dal client.</param>
        <summary>Registra un oggetto <see cref="T:System.Type" /> registrato nell'oggetto <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> specificato sul lato client come tipo attivabile sul server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un'istanza di un oggetto attivato dal client nel server, è necessario conoscere relativa <xref:System.Type> e deve essere registrato sul lato server tramite il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> (metodo). Per ottenere un proxy per una nuova istanza dell'oggetto attivato dal client, il client deve innanzitutto registrare un canale con <xref:System.Runtime.Remoting.Channels.ChannelServices> e quindi attivare l'oggetto chiamando `new`.  
  
 Per attivare un tipo di oggetto attivato dal client con il `new` parola chiave, è innanzitutto necessario registrare il tipo dell'oggetto sul lato client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> metodo offre l'infrastruttura .NET remoting il percorso dell'applicazione remota dove `new` cercherà di crearla. Se, d'altra parte, si usa il <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metodo per creare una nuova istanza dell'oggetto attivato dal client, è necessario fornire l'URL dell'applicazione remota come un parametro, in modo che non è necessaria alcuna registrazione precedente sul lato client. Per fornire il <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metodo con l'URL del server in cui si desidera creare l'oggetto, è necessario incapsulare l'URL in un'istanza del <xref:System.Runtime.Remoting.Activation.UrlAttribute> classe.  
  
 Per una descrizione dettagliata di oggetti attivati dal client, vedere [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (Type type, string appUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Type type, string appUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(Type ^ type, System::String ^ appUrl);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedClientType : Type * string -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType (type, appUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="appUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" />.</param>
        <param name="appUrl">URL dell'applicazione in cui è attivato questo tipo.</param>
        <summary>Registra un oggetto <see cref="T:System.Type" /> sul lato client come tipo attivabile sul server utilizzando i parametri specificati per inizializzare una nuova istanza della classe <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un'istanza di un oggetto attivato dal client nel server, è necessario conoscere relativa <xref:System.Type> e deve essere registrato sul lato server tramite il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> (metodo). Per ottenere un proxy per una nuova istanza dell'oggetto attivato dal client, il client deve innanzitutto registrare un canale con <xref:System.Runtime.Remoting.Channels.ChannelServices> e quindi attivare l'oggetto chiamando `new`.  
  
 Per attivare un tipo di oggetto attivato dal client con il `new` parola chiave, è innanzitutto necessario registrare il tipo dell'oggetto sul lato client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> metodo offre l'infrastruttura .NET remoting il percorso dell'applicazione remota dove `new` cercherà di crearla. Se, d'altra parte, si usa il <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metodo per creare una nuova istanza dell'oggetto attivato dal client, è necessario fornire l'URL dell'applicazione remota come un parametro, in modo che non è necessaria alcuna registrazione precedente sul lato client. Per fornire il <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metodo con l'URL del server in cui si desidera creare l'oggetto, è necessario incapsulare l'URL in un'istanza del <xref:System.Runtime.Remoting.Activation.UrlAttribute> classe.  
  
 Per una descrizione dettagliata di oggetti attivati dal client, vedere [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a)  
  
   
  
## Examples  
 Esempio di codice seguente illustra la registrazione di un tipo di oggetto sul lato client come tipo attivabile sul server. Per il codice server che corrisponde al codice client presentata, vedere l'esempio per il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> (metodo).  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/client.cpp#1)]
 [!code-csharp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/client.cs#1)]
 [!code-vb[RemotingConfiguration.ClientActivation#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="typeName" /> o il parametro <paramref name="URI" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra un oggetto <see cref="T:System.Type" /> sul lato servizio come tipo attivabile su richiesta da un client.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (System.Runtime.Remoting.ActivatedServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Runtime.Remoting.ActivatedServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Runtime.Remoting.ActivatedServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedServiceType (entry As ActivatedServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(System::Runtime::Remoting::ActivatedServiceTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedServiceType : System.Runtime.Remoting.ActivatedServiceTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Impostazioni di configurazione per il tipo attivato dal client.</param>
        <summary>Registra un tipo di oggetto registrato nell'oggetto <see cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" /> fornito sul lato servizio come tipo attivabile su richiesta da un client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un'istanza di un oggetto attivato dal client nel server, è necessario conoscere relativa <xref:System.Type> e deve essere registrato sul lato server tramite il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> (metodo). Per ottenere un proxy per una nuova istanza dell'oggetto attivato dal client, il client deve innanzitutto registrare un canale con <xref:System.Runtime.Remoting.Channels.ChannelServices> e quindi attivare l'oggetto chiamando `new` o <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>.  
  
 Per attivare un tipo di oggetto attivato dal client con il `new` parola chiave, è innanzitutto necessario registrare il tipo dell'oggetto sul lato client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> metodo offre l'infrastruttura .NET remoting il percorso dell'applicazione remota, in cui `new` cercherà di crearla. Se, d'altra parte, si usa il <xref:System.Activator.CreateInstance%2A> metodo per creare una nuova istanza dell'oggetto attivato dal client, è necessario fornire l'URL dell'applicazione remota come un parametro, in modo che non è necessaria alcuna registrazione precedente sul lato client. Per fornire il <xref:System.Activator.CreateInstance%2A> metodo con l'URL del server in cui si desidera creare l'oggetto, è necessario incapsulare l'URL in un'istanza del <xref:System.Runtime.Remoting.Activation.UrlAttribute> classe.  
  
 Per una descrizione dettagliata di oggetti attivati dal client, vedere [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedServiceType : Type -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> dell'oggetto da registrare.</param>
        <summary>Registra un tipo di oggetto specificato sul lato servizio come tipo attivabile su richiesta da un client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un'istanza di un oggetto attivato dal client nel server, è necessario conoscere relativa <xref:System.Type> e deve essere registrato sul lato server tramite il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> (metodo). Per ottenere un proxy per una nuova istanza dell'oggetto attivato dal client, il client deve innanzitutto registrare un canale con <xref:System.Runtime.Remoting.Channels.ChannelServices> e quindi attivare l'oggetto chiamando `new` o <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>.  
  
 Per attivare un tipo di oggetto attivato dal client con il `new` parola chiave, è innanzitutto necessario registrare il tipo dell'oggetto sul lato client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> metodo offre l'infrastruttura .NET remoting il percorso dell'applicazione remota, in cui `new` cercherà di crearla. Se, d'altra parte, si usa il <xref:System.Activator.CreateInstance%2A> metodo per creare una nuova istanza dell'oggetto attivato dal client, è necessario fornire l'URL dell'applicazione remota come un parametro, in modo che non è necessaria alcuna registrazione precedente sul lato client. Per fornire il <xref:System.Activator.CreateInstance%2A> metodo con l'URL del server in cui si desidera creare l'oggetto, è necessario incapsulare l'URL in un'istanza del <xref:System.Runtime.Remoting.Activation.UrlAttribute> classe.  
  
 Per una descrizione dettagliata di oggetti attivati dal client, vedere [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
   
  
## Examples  
 Esempio di codice seguente illustra la registrazione di un tipo di oggetto nel server come un tipo che può essere attivato dal client. Per il codice client che corrisponde al codice presentato server, vedere l'esempio per il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> (metodo).  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ClientActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/server.vb#2)]  
  
 Esempio di codice seguente mostra l'oggetto servizio registrato nell'esempio di codice riportato sopra.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/service.cpp#3)]
 [!code-csharp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/service.cs#3)]
 [!code-vb[RemotingConfiguration.ClientActivation#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra un oggetto <see cref="T:System.Type" /> sul lato client come tipo noto (a chiamata singola o Singleton).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (System.Runtime.Remoting.WellKnownClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Runtime.Remoting.WellKnownClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Runtime.Remoting.WellKnownClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownClientType (entry As WellKnownClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(System::Runtime::Remoting::WellKnownClientTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownClientType : System.Runtime.Remoting.WellKnownClientTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Impostazioni di configurazione per il tipo noto.</param>
        <summary>Registra un oggetto <see cref="T:System.Type" /> registrato nell'oggetto <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> fornito sul lato client come tipo noto e attivabile sul server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi client che conosca l'URI di un oggetto conosciuto registrato possono ottenere un proxy per l'oggetto registrando il canale preferito con <xref:System.Runtime.Remoting.Channels.ChannelServices>e l'attivazione dell'oggetto chiamando `new` o <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>. Per attivare un oggetto noto con `new`, è innanzitutto necessario registrare il tipo di oggetto noto sul client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metodo fornisce l'infrastruttura .NET remoting la posizione dell'oggetto remoto, che consente la `new` parola chiave per la sua creazione. Se, d'altra parte, si usa il <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodo per attivare l'oggetto noto, è necessario fornire tale URL dell'oggetto come argomento, in modo che non è necessaria alcuna registrazione precedente sul lato client.  
  
 Per una descrizione dettagliata di oggetti noti, vedere [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (Type type, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Type type, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(Type ^ type, System::String ^ objectUrl);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownClientType : Type * string -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType (type, objectUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" />.</param>
        <param name="objectUrl">URL di un oggetto del client noto.</param>
        <summary>Registra un oggetto <see cref="T:System.Type" /> sul lato client come tipo noto attivabile sul server utilizzando i parametri specificati per inizializzare una nuova istanza della classe <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi client che conosca l'URI di un oggetto conosciuto registrato possono ottenere un proxy per l'oggetto registrando il canale preferito con <xref:System.Runtime.Remoting.Channels.ChannelServices>e l'attivazione dell'oggetto chiamando `new` o <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>. Per attivare un oggetto noto con `new`, è innanzitutto necessario registrare il tipo di oggetto noto sul client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metodo fornisce l'infrastruttura .NET remoting la posizione dell'oggetto remoto, che consente la `new` parola chiave per la sua creazione. Se, d'altra parte, si usa il <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodo per attivare l'oggetto noto, è necessario fornire tale URL dell'oggetto come argomento, in modo che non è necessaria alcuna registrazione precedente sul lato client.  
  
 Per una descrizione dettagliata di oggetti noti, vedere [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 Esempio di codice seguente illustra la registrazione di un tipo di oggetto sul lato client come tipo noto. Per il codice server che corrisponde al codice client presentata, vedere l'esempio per il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> (metodo).  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#5)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#5)]
 [!code-vb[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#5)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
[!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
[!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#7)]
[!code-csharp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#7)]
[!code-vb[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra un oggetto <see cref="T:System.Type" /> sul lato servizio come tipo noto (a chiamata singola o Singleton).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (System.Runtime.Remoting.WellKnownServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Runtime.Remoting.WellKnownServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Runtime.Remoting.WellKnownServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownServiceType (entry As WellKnownServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(System::Runtime::Remoting::WellKnownServiceTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownServiceType : System.Runtime.Remoting.WellKnownServiceTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Impostazioni di configurazione per il tipo noto.</param>
        <summary>Registra un oggetto <see cref="T:System.Type" /> registrato nell'oggetto <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" /> fornito sul lato servizio come tipo noto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi client che conosca l'URI di un oggetto conosciuto registrato possono ottenere un proxy per l'oggetto registrando il canale preferito con <xref:System.Runtime.Remoting.Channels.ChannelServices>e l'attivazione dell'oggetto chiamando `new` o il <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> (metodo). Per attivare un oggetto noto con `new`, è innanzitutto necessario registrare il tipo di oggetto noto sul client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metodo fornisce l'infrastruttura .NET remoting la posizione dell'oggetto remoto, che consente la `new` parola chiave per la sua creazione. Se, d'altra parte, si usa il <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodo per attivare l'oggetto noto, è necessario fornire tale URL dell'oggetto come argomento, in modo che non è necessaria alcuna registrazione precedente sul lato client.  
  
 Quando la chiamata arriva al server, .NET Framework l'URI viene estratto dal messaggio, vengono esaminate le tabelle di .NET remoting per individuare le informazioni di riferimento per l'oggetto che corrisponde all'URI specificato e quindi un'istanza dell'oggetto se necessario, inoltrare la chiamata di metodo all'oggetto. Se l'oggetto è registrato come <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, viene eliminato definitivamente dopo aver completata la chiamata al metodo. Per ogni metodo chiamato viene creata una nuova istanza dell'oggetto. L'unica differenza tra <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> e `new` precedente consente di specificare un URL come parametro, mentre quest'ultimo Ottiene l'URL dalla configurazione.  
  
 L'oggetto remoto stesso non viene creata dal processo di registrazione. Solo ciò accade quando un client prova a chiamare un metodo sull'oggetto o si attiva l'oggetto dal lato client.  
  
 Per una descrizione dettagliata di oggetti noti, vedere [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef2/CPP/example.cpp#2)]
 [!code-csharp[CreateObjRef2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef2/CS/example.cs#2)]
 [!code-vb[CreateObjRef2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CreateObjRef2/VB/example.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (Type type, string objectUri, System.Runtime.Remoting.WellKnownObjectMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Type type, string objectUri, valuetype System.Runtime.Remoting.WellKnownObjectMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(Type ^ type, System::String ^ objectUri, System::Runtime::Remoting::WellKnownObjectMode mode);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownServiceType : Type * string * System.Runtime.Remoting.WellKnownObjectMode -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType (type, objectUri, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUri" Type="System.String" />
        <Parameter Name="mode" Type="System.Runtime.Remoting.WellKnownObjectMode" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" />.</param>
        <param name="objectUri">URI dell'oggetto.</param>
        <param name="mode">Modalità di attivazione del tipo di oggetto noto di cui è in corso la registrazione. Per informazioni, vedere <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />.</param>
        <summary>Registra un oggetto <see cref="T:System.Type" /> sul lato servizio come tipo noto utilizzando i parametri specificati per inizializzare una nuova istanza della classe <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi client che conosca l'URI di un oggetto conosciuto registrato possono ottenere un proxy per l'oggetto registrando il canale preferito con <xref:System.Runtime.Remoting.Channels.ChannelServices>e l'attivazione dell'oggetto chiamando `new` o il <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> (metodo). Per attivare un oggetto noto con `new`, è innanzitutto necessario registrare il tipo di oggetto noto sul client utilizzando la <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> (metodo). Chiama il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metodo fornisce l'infrastruttura .NET remoting la posizione dell'oggetto remoto, che consente la `new` parola chiave per la sua creazione. Se, d'altra parte, si usa il <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodo per attivare l'oggetto noto, è necessario fornire tale URL dell'oggetto come argomento, in modo che non è necessaria alcuna registrazione precedente sul lato client.  
  
 Quando la chiamata arriva al server, .NET Framework l'URI viene estratto dal messaggio, vengono esaminate le tabelle di .NET remoting per individuare le informazioni di riferimento per l'oggetto che corrisponde all'URI specificato e quindi un'istanza dell'oggetto se necessario, inoltrare la chiamata di metodo all'oggetto. Se l'oggetto è registrato come <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, viene eliminato definitivamente dopo aver completata la chiamata al metodo. Per ogni metodo chiamato viene creata una nuova istanza dell'oggetto. L'unica differenza tra <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> e `new` precedente consente di specificare un URL come parametro, mentre quest'ultimo Ottiene l'URL dalla configurazione.  
  
 L'oggetto remoto stesso non viene creata dal processo di registrazione. Solo ciò accade quando un client prova a chiamare un metodo sull'oggetto o si attiva l'oggetto dal lato client.  
  
 Per una descrizione dettagliata di oggetti noti, vedere [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 Esempio di codice seguente illustra la registrazione di un tipo di oggetto nel server come tipo di oggetto noto. Per il codice client che corrisponde al codice presentato server, vedere l'esempio per il <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> (metodo).  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#1)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#1)]
 [!code-vb[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#1)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
[!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
[!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#3)]
[!code-csharp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#3)]
[!code-vb[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#3)]  
  
 Esempio di codice seguente mostra l'oggetto servizio registrato nell'esempio di codice riportato sopra.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/service.cpp#4)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/service.cs#4)]
 [!code-vb[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Almeno uno dei chiamanti in posizione più elevata nello stack di chiamate non dispone delle autorizzazioni alla configurazione di canali e tipi remoti.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per la configurazione dell'infrastruttura .NET remoting. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
  </Members>
</Type>