<Type Name="IObjectHandle" FullName="System.Runtime.Remoting.IObjectHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f22f62e2fa910cf6e55cafb1fe3d73ae4b2ef57" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39878290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObjectHandle" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObjectHandle" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.IObjectHandle" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObjectHandle" />
  <TypeSignature Language="C++ CLI" Value="public interface class IObjectHandle" />
  <TypeSignature Language="F#" Value="type IObjectHandle = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("C460E2B4-E199-412a-8456-84DC3E4838C3")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d5f73-101">Definisce l'interfaccia per annullare il wrapping in un riferimento indiretto di oggetti marshalling per valore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5f73-101">Defines the interface for unwrapping marshal-by-value objects from indirection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f73-102">Oggetti marshalling per valore possono essere restituiti tramite un riferimento indiretto, consentendo al chiamante di controllo quando l'oggetto viene caricato nel relativo dominio.</span><span class="sxs-lookup"><span data-stu-id="d5f73-102">Marshal-by-value objects can be returned through an indirection, allowing the caller to control when the object is loaded into their domain.</span></span> <span data-ttu-id="d5f73-103">Il chiamante può annullare il wrapping l'oggetto di riferimento indiretto tramite questa interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d5f73-103">The caller can unwrap the object from the indirection through this interface.</span></span>  
  
 <span data-ttu-id="d5f73-104">Classe che implementa il <xref:System.Runtime.Remoting.IObjectHandle> interfaccia può essere utilizzata per passare un oggetto (in uno stato sottoposto a wrapping) tra più domini dell'applicazione senza caricare i metadati per l'oggetto di cui viene eseguito il wrapping in ogni <xref:System.AppDomain> attraverso il quale il <xref:System.Runtime.Remoting.IObjectHandle> viaggia.</span><span class="sxs-lookup"><span data-stu-id="d5f73-104">The class implementing the <xref:System.Runtime.Remoting.IObjectHandle> interface can be used to pass an object (in a wrapped state) between multiple application domains without loading the metadata for the wrapped object in each <xref:System.AppDomain> through which the <xref:System.Runtime.Remoting.IObjectHandle> travels.</span></span> <span data-ttu-id="d5f73-105">Di conseguenza, il <xref:System.Runtime.Remoting.IObjectHandle> classe fornisce al chiamante il controllo dei casi in cui il <xref:System.Type> dell'oggetto remoto viene caricato nel medesimo dominio.</span><span class="sxs-lookup"><span data-stu-id="d5f73-105">Thus, the <xref:System.Runtime.Remoting.IObjectHandle> class gives the caller control of when the <xref:System.Type> of the remote object is loaded into their domain.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public object Unwrap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Unwrap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.IObjectHandle.Unwrap" />
      <MemberSignature Language="VB.NET" Value="Public Function Unwrap () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Unwrap();" />
      <MemberSignature Language="F#" Value="abstract member Unwrap : unit -&gt; obj" Usage="iObjectHandle.Unwrap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5f73-106">Annulla il wrapping dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5f73-106">Unwraps the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5f73-107">Oggetto di cui è stato annullato il wrapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5f73-107">The unwrapped object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="d5f73-108">
            <para>Oggetto <see cref="T:System.Runtime.Remoting.ObjectHandle" /> è una classe remota <see cref="T:System.MarshalByRefObject" /> e viene controllata dal servizio remoto di durata. Una chiamata al metodo corrente potrebbe non riuscire se il lease di durata nel <see cref="T:System.Runtime.Remoting.ObjectHandle" /> scade.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d5f73-108">
              <para>A <see cref="T:System.Runtime.Remoting.ObjectHandle" /> is a remoted <see cref="T:System.MarshalByRefObject" /> and is tracked by the remoting lifetime service. A call to the current method might fail if the lifetime lease on the <see cref="T:System.Runtime.Remoting.ObjectHandle" /> expires.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>