<Type Name="Forest" FullName="System.DirectoryServices.ActiveDirectory.Forest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5a30e20f8e7ae0041ad7b432d068ed96f35c195" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37661869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Forest : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Forest extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.Forest" />
  <TypeSignature Language="VB.NET" Value="Public Class Forest&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Forest : IDisposable" />
  <TypeSignature Language="F#" Value="type Forest = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>La classe <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> rappresenta un insieme di strutture di Servizi di dominio Active Directory.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Valore della richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName="ApplicationPartitions">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPartitions As ApplicationPartitionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ ApplicationPartitions { System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPartitions : System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta di tutte le partizioni di applicazione nella foresta.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" /> che contiene tutte le partizioni applicative nell'insieme di strutture.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateLocalSideOfTrustRelationship (targetForestName As String, direction As TrustDirection, trustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection direction, System::String ^ trustPassword);" />
      <MemberSignature Language="F#" Value="member this.CreateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.CreateLocalSideOfTrustRelationship (targetForestName, direction, trustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="trustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome DNS della foresta creata con la relazione di trust.</param>
        <param name="direction">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> che determina la direzione della relazione di trust rispetto a questa foresta.</param>
        <param name="trustPassword">Password del trust.</param>
        <summary>Crea il lato locale di una relazione di trust con la foresta specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea un lato di una relazione di trust. La relazione di trust è stabilito fino a quando non sono stati creati entrambi i lati del trust.  
  
 Il `trustPassword` parametro associa una password di trust creato. Quando viene creato l'altro lato della relazione di trust, viene fornita la stessa password e le due relazioni di trust locale vengono quindi associati tra loro.  
  
 Per creare a livello di programmazione entrambi i lati di una relazione di trust in una singola chiamata al metodo, usare il <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">Relazione di trust già esistente.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il nome <paramref name="targetForest" /> o la stringa <paramref name="trustPassword" /> è vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForest" /> o <paramref name="trustPassword" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> non è un valore valido di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="CreateTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.CreateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.CreateTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> che rappresenta la foresta con cui viene creata la relazione di trust.</param>
        <param name="direction">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> che determina la direzione della relazione di trust rispetto a questa foresta.</param>
        <summary>Crea entrambi i lati di una relazione di trust con la foresta specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea entrambi i lati di una relazione di trust con una singola chiamata al metodo. Il <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> metodo viene utilizzato per creare un solo lato di una relazione di trust.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">Relazione di trust già esistente.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForest" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> non è un valore valido di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="DeleteLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteLocalSideOfTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLocalSideOfTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLocalSideOfTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLocalSideOfTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.DeleteLocalSideOfTrustRelationship : string -&gt; unit" Usage="forest.DeleteLocalSideOfTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome DNS della foresta con cui esiste il trust.</param>
        <summary>Elimina il lato locale di una relazione di trust.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene eliminato un lato di una relazione di trust, il trust non risulta più stabilito.  
  
 Per eliminare entrambi i lati di una relazione di trust con una chiamata al metodo, usare il <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="targetForestName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.DeleteTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.DeleteTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest">Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> che rappresenta la foresta con cui esiste la relazione di trust.</param>
        <summary>Elimina entrambi i lati di una relazione di trust.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per eliminare un solo lato di una relazione di trust, usare il <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> specificato.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForest" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rilascia le risorse contenute nell'oggetto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="forest.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera tutte le risorse gestite e non gestite contenute dall'oggetto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="member this.Dispose : bool -&gt; unit" Usage="forest.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Valore di <see cref="T:System.Boolean" /> che determina se le risorse gestite devono essere rilasciate. <see langword="true" /> se le risorse gestite devono essere rilasciate. <see langword="false" /> se devono essere rilasciate solo le risorse non gestite.</param>
        <summary>Rilascia le risorse gestite usate dall'oggetto ed eventualmente le risorse non gestite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Domains">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainCollection Domains" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Domains As DomainCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainCollection ^ Domains { System::DirectoryServices::ActiveDirectory::DomainCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Domains : System.DirectoryServices.ActiveDirectory.DomainCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta di tutti i domini nella foresta.</summary>
        <value>Raccolta <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> che contiene i domini <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> nell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> corrente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDiscoverableGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trova tutti i cataloghi globali individuabili nella foresta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Trova tutti i cataloghi globali individuabili nella foresta.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> che contiene l'insieme di cataloghi globali trovati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile trovare i controller di dominio individuabili cercando i record SRV in DNS.  Da questo metodo vengono restituiti solo i cataloghi globali che registrano un generico, non specifico del sito, i record SRV di Garbage Collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nome del sito di cui eseguire la ricerca.</param>
        <summary>Trova tutti i cataloghi globali individuabili nella foresta in un sito specificato.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> che contiene l'insieme di cataloghi globali trovati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile trovare i cataloghi globali individuabili cercando i record SRV in DNS.  Se un catalogo globale non registra un record SRV di catalogo globale per il sito specificato, non viene restituito da questo metodo, anche se il catalogo globale è situato fisicamente all'interno di tale sito.  
  
 Tutti i cataloghi globali che registrano un record SRV di catalogo globale per il sito specificato verranno restituiti da questo metodo, anche se potrebbero non essere situati fisicamente all'interno di tale sito.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="siteName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trova tutti i cataloghi globali in questa foresta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Trova tutti i cataloghi globali in questa foresta.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> che contiene l'insieme di cataloghi globali trovati.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nome del sito di cui eseguire la ricerca.</param>
        <summary>Trova tutti i cataloghi globali nella foresta per un determinato sito.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> che contiene l'insieme di cataloghi globali trovati.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="siteName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindGlobalCatalog">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trova un singolo catalogo globale nella foresta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog () As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog();" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Trova i cataloghi globali nella foresta.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> di <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non è possibile trovare un catalogo globale.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="flag">Valore di <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> che specifica il criterio di individuazione.</param>
        <summary>Trova un catalogo globale nella foresta per i criteri di posizione specificati.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> per il criterio di individuazione specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non è possibile trovare un catalogo globale.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nome del sito di cui eseguire la ricerca.</param>
        <summary>Trova un catalogo globale nella foresta per un sito specificato.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> per il sito specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non è possibile trovare un catalogo globale.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="siteName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String, flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string * System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog (siteName, flag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="siteName">Nome del sito di cui eseguire la ricerca.</param>
        <param name="flag">Valore di <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> che specifica il criterio di individuazione.</param>
        <summary>Trova un catalogo globale nella foresta per i criteri di sito e posizione specificati.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> per il sito e il criterio di individuazione specificati.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non è possibile trovare un catalogo globale.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="siteName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="ForestMode">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ActiveDirectory.ForestMode ForestMode" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestMode As ForestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ForestMode ForestMode { System::DirectoryServices::ActiveDirectory::ForestMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestMode : System.DirectoryServices.ActiveDirectory.ForestMode" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la modalità operativa della foresta.</summary>
        <value>Valore di <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> che rappresenta la modalità dell'insieme di strutture corrente dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="ForestModeLevel">
      <MemberSignature Language="C#" Value="public int ForestModeLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ForestModeLevel" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestModeLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ForestModeLevel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestModeLevel : int" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il livello della modalità operativa della foresta.</summary>
        <value>Livello della modalità operativa della foresta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllTrustRelationships">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllTrustRelationships () As TrustRelationshipInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformationCollection ^ GetAllTrustRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetAllTrustRelationships : unit -&gt; System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" Usage="forest.GetAllTrustRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene una raccolta di relazioni di trust della foresta corrente.</summary>
        <returns>Insieme <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> contenente oggetti <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> che rappresenta le relazioni di trust dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> corrente.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentForest () As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetCurrentForest();" />
      <MemberSignature Language="F#" Value="static member GetCurrentForest : unit -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> per il contesto utente corrente.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> che rappresenta l'insieme di strutture corrente.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetForest(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetForest (context As DirectoryContext) As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetForest(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetForest : System.DirectoryServices.ActiveDirectory.DirectoryContext -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetForest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> che contiene la destinazione e le credenziali da utilizzare per recuperare l'oggetto.</param>
        <summary>Ottiene un oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> per il contesto specificato.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> che rappresenta l'insieme di strutture recuperato dal metodo.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non è stato possibile stabilire una connessione alla destinazione specificata in <paramref name="context" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> non è valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public bool GetSelectiveAuthenticationStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectiveAuthenticationStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectiveAuthenticationStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelectiveAuthenticationStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSelectiveAuthenticationStatus : string -&gt; bool" Usage="forest.GetSelectiveAuthenticationStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome DNS dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> con il quale esiste la relazione di trust in ingresso.</param>
        <summary>Ottiene un valore booleano che indica se l'autenticazione selettiva è abilitata per la relazione di trust in ingresso con la foresta specificata.  <see langword="true" /> se è attivata l'autenticazione selettiva; in caso contrario, <see langword="false" />.</summary>
        <returns>
          <see langword="true" /> se è attivata l'autenticazione selettiva; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un trust tra foreste, se si opta per l'autenticazione selettiva, le autorizzazioni devono essere abilitate manualmente in ogni dominio e risorsa nella foresta locale a cui si desidera che gli utenti in altra foresta ha accesso.  
  
 Quando un utente esegue l'autenticazione in una relazione di trust per il quale selettiva è abilitata l'autenticazione, viene aggiunta un'altra organizzazione ID di sicurezza (SID) per i dati di autorizzazione dell'utente. La presenza di questo SID determina un controllo nel dominio della risorsa allo scopo di verificare che all'utente sia consentita l'autenticazione per il servizio specifico. Dopo che l'utente viene autenticato, il server che autentica l'utente aggiunge questo SID organizzazione se SID altra organizzazione non è già presente. Nel contesto dell'utente autenticato possono essere presenti solo questi SID speciali.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">La chiamata a LsaQueryTrustedDomainInfoByName non è riuscita. Per altre informazioni, vedere l'argomento [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in MSDN Library all'indirizzo [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="targetForestName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto corrente è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public bool GetSidFilteringStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSidFilteringStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSidFilteringStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSidFilteringStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSidFilteringStatus : string -&gt; bool" Usage="forest.GetSidFilteringStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome DNS dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> con il quale esiste la relazione di trust.</param>
        <summary>Ottiene lo stato del filtro SID di un trust.</summary>
        <returns>
          <see langword="true" /> se il filtro SID è attivato, in caso contrario <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="targetForestName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto corrente è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetTrustRelationship">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrustRelationship (targetForestName As String) As ForestTrustRelationshipInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ForestTrustRelationshipInformation ^ GetTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetTrustRelationship : string -&gt; System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" Usage="forest.GetTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> per il quale sono ottenute le informazioni sulla relazione di trust.</param>
        <summary>Ottiene la relazione di trust tra la foresta corrente e quella specificata.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> che rappresenta la relazione di trust tra l'insieme di strutture corrente e l'insieme di strutture specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="targetForestName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto corrente è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalCatalogs As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ GlobalCatalogs { System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalCatalogs : System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta di tutti i cataloghi globali nella foresta.</summary>
        <value>Insieme <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> che contiene i cataloghi globali <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> nell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> corrente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome della foresta.</summary>
        <value>Nome di <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ NamingRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamingRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il controller di dominio che detiene il ruolo di master per la denominazione FSMO per la foresta.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> che rappresenta il controller di dominio con il ruolo di master per la denominazione FSMO dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionality">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionality(valuetype System.DirectoryServices.ActiveDirectory.ForestMode forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionality(System::DirectoryServices::ActiveDirectory::ForestMode forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionality : System.DirectoryServices.ActiveDirectory.ForestMode -&gt; unit" Usage="forest.RaiseForestFunctionality forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Parameters>
      <Docs>
        <param name="forestMode">Valore dell'enumerazione <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> che specifica il nuovo livello di funzionalità dell'insieme di strutture.</param>
        <summary>Aumenta la modalità operativa per la foresta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DirectoryServices.ActiveDirectory.ForestMode> valore può essere generato ma non ridotto. Ciò significa che l'aumento del livello di funzionalità della foresta non è reversibile e la decisione di eseguire questa operazione deve essere apportata con attenzione.  
  
 Per altre informazioni sulle modalità operative di foresta, vedere [funzionalità del dominio e foresta](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).  
  
 Nella tabella seguente definisce i valori validi per `forestMode` in base alla modalità operativa corrente della foresta.  
  
|Modalità corrente|Modalità può essere generata per|  
|------------------|---------------------------|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|nessuno|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">In base alla modalità operativa corrente dell'insieme di strutture, il valore specificato per <paramref name="forestMode" /> non è valido.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="forestMode" /> non è un valore di enumerazione <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> valido.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionalityLevel">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionalityLevel (int forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionalityLevel(int32 forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseForestFunctionalityLevel (forestMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionalityLevel(int forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionalityLevel : int -&gt; unit" Usage="forest.RaiseForestFunctionalityLevel forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="forestMode">Eleva a questo livello.</param>
        <summary>Eleva il livello di funzionalità della foresta all'impostazione specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairTrustRelationship">
      <MemberSignature Language="C#" Value="public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RepairTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepairTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepairTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.RepairTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.RepairTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest">Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> che rappresenta l'insieme di strutture con il quale esiste il trust.</param>
        <summary>Corregge una relazione di trust.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> specificato dal parametro <paramref name="targetForest" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForest" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDomain">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain RootDomain" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootDomain As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Domain ^ RootDomain { System::DirectoryServices::ActiveDirectory::Domain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootDomain : System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il primo dominio creato in una foresta.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> che rappresenta il primo dominio creato in questo oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As ActiveDirectorySchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ Schema { System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" Usage="System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo schema della foresta.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> che rappresenta lo schema dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> corrente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ SchemaRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il controller di dominio che detiene il ruolo di master schema FSMO per la foresta.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> che rappresenta il controller di dominio con il ruolo di master dello schema FSMO dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectiveAuthenticationStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectiveAuthenticationStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectiveAuthenticationStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSelectiveAuthenticationStatus : string * bool -&gt; unit" Usage="forest.SetSelectiveAuthenticationStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome DNS dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> con il quale esiste la relazione di trust in ingresso.</param>
        <param name="enable">
          <see langword="true" /> se è necessario attivare l'autenticazione selettiva; in caso contrario, <see langword="false" />.</param>
        <summary>Abilita o disabilita l'autenticazione selettiva per un trust in ingresso.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'insieme di strutture specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="targetForestName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto corrente è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public void SetSidFilteringStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSidFilteringStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSidFilteringStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSidFilteringStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSidFilteringStatus : string * bool -&gt; unit" Usage="forest.SetSidFilteringStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome DNS dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> con il quale esiste la relazione di trust.</param>
        <param name="enable">
          <see langword="true" /> se è il filtro SID deve essere attivato, in caso contrario <see langword="false" />.</param>
        <summary>Imposta lo stato del filtro degli identificatori di sicurezza (SID) con la foresta specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, esterno nuovo e foresta trust in [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] impongono il filtro SID Active Directory Domain Services.  Il filtro SID viene utilizzato per impedire gli attacchi da utenti malintenzionati che potrebbero provare a concedere diritti utente elevati per un altro account utente.  Applicando il filtro SID su trust tra foreste non impedisce le migrazioni a domini all'interno della stessa foresta con cronologia SID e non influenzerà la strategia di controllo di accesso gruppi universali.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'insieme di strutture specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="targetForestName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto corrente è stato eliminato.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Sites">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sites As ReadOnlySiteCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ Sites { System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sites : System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta di siti contenuti nella foresta.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> che contiene i siti <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> nell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> corrente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="forest.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione di stringa della foresta corrente.</summary>
        <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome DNS dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateLocalSideOfTrustRelationship">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiorna la password per il lato locale di una relazione di trust.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> per il quale è necessario modificare la password della relazione di trust locale.</param>
        <param name="newTrustPassword">Nuova password per la relazione di trust.</param>
        <summary>Aggiorna la password per il lato locale di una relazione di trust.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'insieme di strutture specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetForestName" /> o <paramref name="newTrustPassword" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> o <paramref name="newTrustPassword" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustDirection As TrustDirection, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustDirection, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome dell'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> per il quale è necessario modificare la password e la direzione del trust locale.</param>
        <param name="newTrustDirection">Valore di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> per la nuova direzione della relazione di trust.</param>
        <param name="newTrustPassword">Nuova password per la relazione di trust.</param>
        <summary>Aggiorna la password e la direzione di trust per il lato locale di una relazione di trust.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetForestName" /> o <paramref name="newTrustPassword" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> o <paramref name="newTrustPassword" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il parametro <paramref name="newTrustDirection" /> non è un valore di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> valido.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTrustRelationship (targetForest As Forest, newTrustDirection As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection);" />
      <MemberSignature Language="F#" Value="member this.UpdateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.UpdateTrustRelationship (targetForest, newTrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> per il quale è necessario modificare le direzioni del trust.</param>
        <param name="newTrustDirection">Valore di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> che specifica la nuova direzione della relazione di trust.</param>
        <summary>Aggiorna la direzione di trust di una relazione di trust. Le direzioni di trust vengono aggiornate su entrambi i lati del trust.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'insieme di strutture specificato dal parametro <paramref name="targetForest" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForest" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="newTrustDirection" /> non è un valore valido di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="VerifyOutboundTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyOutboundTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyOutboundTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyOutboundTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyOutboundTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.VerifyOutboundTrustRelationship : string -&gt; unit" Usage="forest.VerifyOutboundTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nome DNS del dominio con il quale esiste la relazione di trust.</param>
        <summary>Verifica la validità di una relazione di trust in uscita stabilita in precedenza con la foresta specificata.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust in uscita con l'insieme di strutture specificato dal parametro <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="targetForestName" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForestName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Forest" />
      </Docs>
    </Member>
    <Member MemberName="VerifyTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.VerifyTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.VerifyTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> per il quale verificare la relazione di trust.</param>
        <param name="direction">Valore di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> che specifica la direzione del trust, rispetto all'insieme di strutture.</param>
        <summary>Verifica la validità di una relazione di trust stabilita in precedenza con la foresta specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo verifica che una relazione di trust è stata stabilita completamente. La relazione di trust è stabilito fino a quando non sono stati creati entrambi i lati del trust.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Non esiste alcuna relazione di trust con l'insieme di strutture specificato dal parametro <paramref name="targetForest" /> o la direzione del trust dell'insieme di strutture di destinazione è diversa da quella specificata da <paramref name="direction" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Una chiamata al servizio directory sottostante ha restituito un errore.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Il server di destinazione è occupato o non disponibile.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForest" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il parametro <paramref name="direction" /> non è un valore di <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> valido.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'account specificato non ha l'autorizzazione per eseguire questa operazione.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
  </Members>
</Type>