<Type Name="ActiveDirectorySchedule" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fda4343f67ee23a6d2987b38d4f2b18073bf87b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37662086" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectorySchedule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchedule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySchedule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySchedule" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySchedule = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La classe <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> rappresenta la pianificazione settimanale di una replica di Servizi di dominio Active Directory.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schedule As ActiveDirectorySchedule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule(System::DirectoryServices::ActiveDirectory::ActiveDirectorySchedule ^ schedule);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" Usage="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schedule" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </Parameters>
      <Docs>
        <param name="schedule">Oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> copiato in questo oggetto.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> tramite l'oggetto <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> specificato.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schedule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RawSchedule">
      <MemberSignature Language="C#" Value="public bool[,,] RawSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool[,,] RawSchedule" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property RawSchedule As Boolean(,,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;bool, 3&gt; ^ RawSchedule { cli::array &lt;bool, 3&gt; ^ get(); void set(cli::array &lt;bool, 3&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RawSchedule : bool[,,] with get, set" Usage="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[,,]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una matrice tridimensionale che indica in che momento della settimana l'origine è disponibile per la replica.</summary>
        <value>Matrice tridimensionale di elementi <see cref="T:System.Boolean" /> in cui l'elemento è <see langword="true" /> se l'origine è disponibile per la replica durante l'intervallo di 15 minuti specifico. L'elemento è <see langword="false" /> se l'origine non è disponibile per la replica.  La matrice è nel formato RawSchedule [&lt;day of week&gt;, &lt;ora&gt;, &lt;intervallo di 15 minuti&gt;]. Tutti i valori sono con base zero e la settimana inizia alle 00:00 di domenica mattina, ora UTC (Coordinated Universal Time).  DI seguito vengono riportati i valori validi per giorno-della-settimana.  
  
 <list type="table"><listheader><term> Valore di Day of week </term><description> indica giorno della settimana.  </description></listheader><item><term> 0 </term><description> domenica </description></item><item><term> 1 </term><description> lunedì </description></item><item><term> 2 </term><description> Martedì </description></item><item><term> 3 </term><description> mercoledì </description></item><item><term> 4 </term><description> Giovedì </description></item><item><term> 5 </term><description> venerdì </description></item><item><term> 6 </term><description> Sabato </description></item></list> è l'ora in base zero e specificata nel formato a 24 ore. Ad esempio, 2 P.M. potrebbe essere specificate come 14. I valori validi sono compresi tra 0 e 23.  L'intervallo di 15 minuti specifica il blocco di 15 minuti nell'ora in cui l'origine è disponibile per la replica. La seguente tabella identifica i valori possibile per l'intervallo di 15 minuti.  
  
 <list type="table"><listheader><term> intervallo di 15 minuti </term><description> Description </description></listheader><item><term> 0 </term><description> l'origine è disponibile per la replica da 0 a 14 minuti dopo l'ora.  </description></item><item><term> 1 </term><description> l'origine è disponibile per la replica da 15 a 29 minuti dopo l'ora.  </description></item><item><term> 2 </term><description> l'origine è disponibile per la replica da 30 a 44 minuti dopo l'ora.  </description></item><item><term> 3 </term><description> l'origine è disponibile per la replica dai 45 a 59 minuti dopo l'ora.  </description></item></list>  Nell'esempio c# seguente viene illustrato come utilizzare questa proprietà per determinare se l'origine è disponibile per la replica alle 15:50 ora UTC di martedì.  ' ' csharp booleano isAvailable scheduleObject.RawSchedule[2, 15, 3 =]; ' ' Nell'esempio c# seguente viene illustrato come utilizzare questa proprietà per calcolare l'intervallo di 15 minuti in fase di esecuzione dividendo i minuti per 15.  ' ' csharp booleano isAvailable scheduleObject.RawSchedule[2, 15, (Int32) = 15/50]; ```</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSchedule">
      <MemberSignature Language="C#" Value="public void ResetSchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSchedule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSchedule ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSchedule();" />
      <MemberSignature Language="F#" Value="member this.ResetSchedule : unit -&gt; unit" Usage="activeDirectorySchedule.ResetSchedule " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta l'intera pianificazione su non disponibile.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDailySchedule">
      <MemberSignature Language="C#" Value="public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDailySchedule(valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDailySchedule (fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDailySchedule(System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetDailySchedule : System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetDailySchedule (fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="fromHour">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> che specifica la prima ora in cui l'origine sarà disponibile per la replica.</param>
        <param name="fromMinute">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> che specifica i primi 15 minuti in cui l'origine sarà disponibile per la replica.</param>
        <param name="toHour">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> che specifica l'ora finale in cui l'origine sarà disponibile per la replica.</param>
        <param name="toMinute">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> che specifica gli ultimi 15 minuti in cui l'origine sarà disponibile per la replica.</param>
        <summary>Aggiunge alla pianificazione un intervallo di tempo per ogni giorno della settimana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i parametri in questo metodo sono inclusivi.  
  
 Questo metodo è cumulativo e non rimuove le informazioni sulla pianificazione esistente. Se una pianificazione esistente e la nuova pianificazione si sovrappongono, il risultato continuerà a essere cumulativo. Per cancellare la pianificazione, usare il <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSchedule">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge alla pianificazione un intervallo di tempo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek day, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (day As DayOfWeek, fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(DayOfWeek day, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (day, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="day" Type="System.DayOfWeek" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="day">Uno dei membri <see cref="T:System.DayOfWeek" /> che specifica il giorno della settimana in cui l'origine sarà disponibile per la replica.</param>
        <param name="fromHour">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> che specifica la prima ora in cui l'origine sarà disponibile per la replica.</param>
        <param name="fromMinute">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> che specifica i primi 15 minuti in cui l'origine sarà disponibile per la replica.</param>
        <param name="toHour">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> che specifica l'ora finale in cui l'origine sarà disponibile per la replica.</param>
        <param name="toMinute">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> che specifica gli ultimi 15 minuti in cui l'origine sarà disponibile per la replica.</param>
        <summary>Aggiunge alla pianificazione un intervallo di tempo per un solo giorno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i parametri in questo metodo sono inclusivi.  
  
 Questo metodo è cumulativo e non rimuove le informazioni sulla pianificazione esistente. Se una pianificazione esistente e la nuova pianificazione si sovrappongono, il risultato continuerà a essere cumulativo. Per cancellare la pianificazione, usare il <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'ora di avvio è posteriore all'ora finale.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Uno o più parametri non sono validi.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="days" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek[] days, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (days As DayOfWeek(), fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(cli::array &lt;DayOfWeek&gt; ^ days, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek[] * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (days, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.DayOfWeek[]" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="days">Uno dei membri <see cref="T:System.DayOfWeek" /> che specifica il giorno della settimana in cui l'origine sarà disponibile per la replica.</param>
        <param name="fromHour">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> che specifica la prima ora in cui l'origine sarà disponibile per la replica.</param>
        <param name="fromMinute">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> che specifica i primi 15 minuti in cui l'origine sarà disponibile per la replica.</param>
        <param name="toHour">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> che specifica l'ora finale in cui l'origine sarà disponibile per la replica.</param>
        <param name="toMinute">Uno dei membri <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> che specifica gli ultimi 15 minuti in cui l'origine sarà disponibile per la replica.</param>
        <summary>Aggiunge alla pianificazione un intervallo di tempo per più giorni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i parametri in questo metodo sono inclusivi.  
  
 Questo metodo è cumulativo e non rimuove le informazioni sulla pianificazione esistente. Se una pianificazione esistente e la nuova pianificazione si sovrappongono, il risultato continuerà a essere cumulativo. Per cancellare la pianificazione, usare il <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'ora di avvio è posteriore all'ora finale.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Uno o più parametri non sono validi.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="days" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
  </Members>
</Type>