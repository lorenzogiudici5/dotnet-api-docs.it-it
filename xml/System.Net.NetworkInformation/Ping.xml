<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Ping.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac589c7670ac2e8752f3871807db8003afd9d743db4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89c7670ac2e8752f3871807db8003afd9d743db4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.NetworkInformation.Ping">
          <source>Allows an application to determine whether a remote computer is accessible over the network.</source>
          <target state="translated">Consente a un'applicazione di determinare se un computer remoto è accessibile sulla rete.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Applications use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class to detect whether a remote computer is reachable.</source>
          <target state="translated">Le applicazioni utilizzano la <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> classe per determinare se un computer remoto è raggiungibile.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Network topology can determine whether <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> can successfully contact a remote host.</source>
          <target state="translated">Topologia di rete è possibile determinare se <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> in grado di contattare un host remoto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The presence and configuration of proxies, network address translation (NAT) equipment, or firewalls can prevent <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> from succeeding.</source>
          <target state="translated">Presenza e la configurazione del proxy, apparecchiature translation (NAT) indirizzo di rete o firewall può impedire <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> dai successivi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>A successful <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> indicates only that the remote host can be reached on the network; the presence of higher level services (such as a Web server) on the remote host is not guaranteed.</source>
          <target state="translated">Una corretta <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> indica solo che il computer remoto sulla rete, è possibile raggiungere l'host; non è garantita che la presenza di servizi di livello superiore (ad esempio un server Web) nell'host remoto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>This class provides functionality similar to the Ping.exe command line tool.</source>
          <target state="translated">Questa classe fornisce funzionalità simili per lo strumento da riga di comando Ping.exe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods send an Internet Control Message Protocol (ICMP) echo request message to a remote computer and waits for an ICMP echo reply message from that computer.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi inviano un messaggio di richiesta echo Internet controllo Message Protocol (ICMP) da un computer remoto e attende un messaggio di risposta echo ICMP da tale computer.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>For a detailed description of ICMP messages, see RFC 792, available at <bpt id="p1">[</bpt><ph id="ph1">http://www.ietf.org</ph><ept id="p1">](http://www.ietf.org/)</ept>.</source>
          <target state="translated">Per una descrizione dettagliata delle ICMP, vedere il documento RFC 792, disponibile all'indirizzo <bpt id="p1">[</bpt> <ph id="ph1">http://www.ietf.org</ph> <ept id="p1">](http://www.ietf.org/)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The following types are used with the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class and are described in detail below.</source>
          <target state="translated">I tipi seguenti vengono utilizzati con la <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> classe e sono descritte dettagliatamente di seguito.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source><bpt id="p1">**</bpt>Type name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Nome del tipo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrizione<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Defines status codes that describe the outcome of an ICMP echo request message.</source>
          <target state="translated">Definisce i codici di stato che descrivono il risultato di un messaggio di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Allows you to configure or retrieve the settings that control how many times the request packet can be forwarded (<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph>), and whether it can be fragmented (<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> ).</source>
          <target state="translated">Consente di configurare o recuperare le impostazioni che controllano il numero di volte il pacchetto di richiesta possono essere inoltrate (<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph>), e se possono essere frammentato (<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> ).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Contains the results of an ICMP echo request.</source>
          <target state="translated">Contiene i risultati di una richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Thrown if an unrecoverable error occurs.</source>
          <target state="translated">Generata se si verifica un errore irreversibile.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Contains the data associated with <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> events, which are raised when a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call completes or is canceled.</source>
          <target state="translated">Contiene i dati associati <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> eventi che vengono generati quando un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamata completata o annullata.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The delegate that provides the callback method invoked when a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call completes or is canceled.</source>
          <target state="translated">Il delegato che fornisce il metodo di callback richiamato quando un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamata completata o annullata.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods return the reply in a <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi restituiscono la risposta in un <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType&gt;</ph> property returns an <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus&gt;</ph> value to indicate the outcome of the request.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType&gt;</ph> proprietà restituisce un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus&gt;</ph> valore per indicare il risultato della richiesta.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>When sending the request, you must specify the remote computer.</source>
          <target state="translated">Quando si invia la richiesta, è necessario specificare il computer remoto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>You can do this by providing a host name string, an IP address in string format, or an <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> object.</source>
          <target state="translated">È possibile farlo, fornendo di stringa del nome di un indirizzo IP in formato stringa, un host o un <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>You can also specify any of the following types of information:</source>
          <target state="translated">È inoltre possibile specificare uno dei seguenti tipi di informazioni:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Data to accompany the request.</source>
          <target state="translated">Dati da associare alla richiesta.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Specifying <ph id="ph1">`buffer`</ph> allows you to learn the amount of time required for a packet of a particular size to travel to and from the remote host and the maximum transmission unit of the network path.</source>
          <target state="translated">Specifica <ph id="ph1">`buffer`</ph> , è possibile conoscere la quantità di tempo necessario per un pacchetto di una determinata dimensione trasmessi da e verso l'host remoto e l'unità massima di trasmissione del percorso di rete.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>(See the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overloads that take a <ph id="ph3">`buffer`</ph> parameter.)</source>
          <target state="translated">(Vedere il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accettano un <ph id="ph3">`buffer`</ph> parametro.)</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Whether the ICMP Echo packet can be fragmented in transit.</source>
          <target state="translated">Se il pacchetto Echo ICMP può essere frammentato in transito.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>(See the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overloads that take an <ph id="ph4">`options`</ph> parameter.)</source>
          <target state="translated">(Vedere il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accettano un <ph id="ph4">`options`</ph> parametro.)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>How many times routing nodes, such as routers or gateways, can forward the packet before it either reaches the destination computer or is discarded.</source>
          <target state="translated">Il numero di volte nodi di routing, ad esempio router o un gateway per inoltrare il pacchetto prima che raggiunga il computer di destinazione o viene eliminato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>(See <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overloads that take an <ph id="ph4">`options`</ph> parameter.)</source>
          <target state="translated">(Vedere <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accettano un <ph id="ph4">`options`</ph> parametro.)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The time limit within which the reply must be received.</source>
          <target state="translated">Il limite di tempo entro il quale deve essere ricevuta la risposta.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>(See the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overloads that take a <ph id="ph3">`timeout`</ph> parameter.</source>
          <target state="translated">(Vedere il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accettano un <ph id="ph3">`timeout`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class offers both synchronous and asynchronous methods for sending the request.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> classe offre metodi sincroni e asincroni per l'invio della richiesta.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>If your application should block while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocchi durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>If your application should not block, use the asynchronous <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods.</source>
          <target state="translated">Se l'applicazione non deve bloccare, utilizzare asincrona <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>A call to <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> executes in its own thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Una chiamata a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> viene eseguita nel proprio thread allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Applications use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to specify the method that is called for <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> events.</source>
          <target state="translated">Le applicazioni utilizzano un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato per specificare il metodo che viene chiamato per <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>You must add a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">È necessario aggiungere un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>You cannot use the same instance of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class to generate multiple simultaneous ICMP Echo requests.</source>
          <target state="translated">Non è possibile utilizzare la stessa istanza del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> classe deve generare più richieste Echo ICMP contemporaneamente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Calling <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> while a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call is in progress or calling <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> multiple times before all previous calls have completed causes an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> mentre un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamata è in corso o chiamare <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> più volte prima di tutte le chiamate precedenti siano completate, verrà un <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class synchronously.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> classe in modo sincrono.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class asynchronously.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> classe in modo asincrono.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.Ping" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.Ping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.#ctor">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> instance.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> istanza.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.#ctor">
          <source>The complete example is available in the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">L'esempio completo è disponibile nel <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.Ping" /&gt;</ph> object, and optionally disposes of the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.Ping" /&gt;</ph> ed eventualmente elimina le risorse gestite.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.ComponentModel.Component.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">&lt;xref:System.ComponentModel.Component.Finalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
          <source>The public <ph id="ph1">`Dispose()`</ph> method invokes the protected <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Pubblico <ph id="ph1">`Dispose()`</ph> metodo richiama il metodo protetto <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Dispose%2A&gt;</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Finalize%2A&gt;</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> object references.</source>
          <target state="translated">Quando il <ph id="ph1">`disposing`</ph> parametro <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> i riferimenti all'oggetto.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /&gt;</ph> object that contains event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /&gt;</ph> contenente i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class can override this method to perform additional tasks, such as logging the data contained in the <ph id="ph2">`e`</ph> parameter.</source>
          <target state="translated">Le classi che ereditano dal <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> può eseguire l'override di questo metodo per eseguire attività aggiuntive, ad esempio la registrazione dei dati contenuti nella classe di <ph id="ph2">`e`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /&gt;</ph> metodo in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="E:System.Net.NetworkInformation.Ping.PingCompleted">
          <source>Occurs when an asynchronous operation to send an Internet Control Message Protocol (ICMP) echo message and receive the corresponding ICMP echo reply message completes or is canceled.</source>
          <target state="translated">Si verifica quando un'operazione di l'invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) e relativa ricezione di un messaggio di risposta echo ICMP viene completata o annullata.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.NetworkInformation.Ping.PingCompleted">
          <source>Applications use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event to get information about the completion status and data collected by a call to one of the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods.</source>
          <target state="translated">Le applicazioni utilizzano il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento per ottenere informazioni sullo stato di completamento e dati raccolti da una chiamata a uno del <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.NetworkInformation.Ping.PingCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate provides the call back method invoked when <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises this event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato fornisce il metodo di callback richiamato quando <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera questo evento.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.NetworkInformation.Ping.PingCompleted">
          <source>The following code example demonstrates specifying a callback method for the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la specifica di un metodo di callback per la <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.NetworkInformation.Ping.PingCompleted">
          <source>The complete example is available in the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">L'esempio completo è disponibile nel <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Net.NetworkInformation.Ping">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message to a remote computer and receive a corresponding ICMP echo reply message from the remote computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) a un computer remoto e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The IP address returned by any of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overloads can originate from a malicious remote computer.</source>
          <target state="translated">L'indirizzo IP restituito da uno qualsiasi del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> gli overload possono provenire da un computer remoto non autorizzato.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Do not connect to the remote computer using this.</source>
          <target state="translated">Non si connettono al computer remoto utilizzando questo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Use DNS to determine the IP address of the machine to which you want to connect.</source>
          <target state="translated">Usare DNS per determinare l'indirizzo IP del computer in cui si desidera connettersi.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) a un computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message, if one was received, or describes the reason for the failure if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>This method sends to the host that is specified by <ph id="ph1">`address`</ph> a 32 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> data buffer with the ICMP echo message.</source>
          <target state="translated">Questo metodo invia all'host specificato da <ph id="ph1">`address`</ph> un 32 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> buffer dei dati con il messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>The method waits five seconds for an ICMP echo reply message.</source>
          <target state="translated">Il metodo attende cinque secondi per un messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>If it does not receive a reply in that time, the method returns and the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se non riceve una risposta in quel momento, il metodo restituisce e <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>This method sends a 32 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> data buffer with the ICMP echo message.</source>
          <target state="translated">Questo metodo invia un 32 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> buffer dei dati con il messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>The method waits five seconds for an ICMP echo reply message.</source>
          <target state="translated">Il metodo attende cinque secondi per un messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>If it does not receive a reply in that time, the method returns and the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se non riceve una risposta in quel momento, il metodo restituisce e <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>This method allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo metodo consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>If the ICMP echo reply message is not received within the time specified in the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>For an example that demonstrates calling a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio in cui viene illustrata la chiamata un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodo, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>This method allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo metodo consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>If the ICMP echo reply message is not received within the time specified in the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>For an example that demonstrates calling a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio in cui viene illustrata la chiamata un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodo, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The method will return <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /&gt;</ph> if the packet exceeds the Maximum Transmission Unit (MTU).</source>
          <target state="translated">Il metodo restituisce il valore <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /&gt;</ph> se il pacchetto supera l'unità di trasmissione massima (MTU, Maximum Transmission Unit).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>If the ICMP echo reply message is not received within the time specified in the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The following code example demonstrates how to call this method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> size is greater than 65500 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o la dimensione di <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> è superiore a 65.500 byte.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>If the ICMP echo reply message is not received within the time specified in the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>For an example that demonstrates how to call a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overload, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio che illustra come chiamare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> di overload, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> size is greater than 65500 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o la dimensione di <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> è superiore a 65.500 byte.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> utilizzato per controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione e di controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The method will return <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /&gt;</ph> if the packet exceeds the Maximum Transmission Unit (MTU).</source>
          <target state="translated">Il metodo restituisce il valore <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /&gt;</ph> se il pacchetto supera l'unità di trasmissione massima (MTU, Maximum Transmission Unit).</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The following code example demonstrates how to call this method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> size is greater than 65500 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o la dimensione di <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> è superiore a 65.500 byte.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> utilizzato per controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione e di controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto ICMP.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingReply" /&gt;</ph> che fornisce informazioni sul messaggio di risposta echo ICMP, se ne è stato ricevuto uno, o descrive il motivo dell'esito negativo in caso contrario.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The following code example demonstrates how to call this method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is a zero length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa di lunghezza zero.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> size is greater than 65500 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o la dimensione di <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> è superiore a 65.500 byte.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Net.NetworkInformation.Ping">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to a computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) a un computer remoto e riceve il messaggio di risposta echo ICMP corrispondente dal quel computer.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>These methods do not cause your application's main thread to block.</source>
          <target state="translated">Questi metodi non causano il thread dell'applicazione principale bloccare.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>If you want to block while waiting for the ICMP echo reply message, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods.</source>
          <target state="translated">Se si desidera bloccare durante l'attesa del messaggio di risposta echo ICMP, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>The IP address returned by any of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods can originate from a malicious remote computer.</source>
          <target state="translated">L'indirizzo IP restituito da uno qualsiasi del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi possono provenire da un computer remoto non autorizzato.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Do not connect to the remote computer using this.</source>
          <target state="translated">Non si connettono al computer remoto utilizzando questo.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.Ping">
          <source>Use DNS to determine the IP address of the machine to which you want to connect.</source>
          <target state="translated">Usare DNS per determinare l'indirizzo IP del computer in cui si desidera connettersi.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) a un computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo invia il messaggio echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application should not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando l'applicazione non deve bloccare.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata a questo metodo viene eseguito in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>To specify the method that is called when <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event, you must add a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">Per specificare il metodo da chiamata quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento, è necessario aggiungere un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>If your application should block while waiting for a reply, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocchi durante l'attesa di una risposta, utilizzare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>This method sends a 32 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> data buffer with the ICMP echo message.</source>
          <target state="translated">Questo metodo invia un 32 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> buffer dei dati con il messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>The method waits five seconds for an ICMP echo reply message.</source>
          <target state="translated">Il metodo attende cinque secondi per un messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>If it does not receive a reply in that time, the method returns and the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se non riceve una risposta in quel momento, il metodo restituisce e <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>For a code example that demonstrates calling a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio di codice viene illustrata la chiamata un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>A call to the <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> method is in progress.</source>
          <target state="translated">È in corso una chiamata al metodo <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> non è un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo invia il messaggio echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application should not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando l'applicazione non deve bloccare.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata a questo metodo viene eseguito in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>To specify the method that is called when <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event, you must add a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">Per specificare il metodo da chiamata quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento, è necessario aggiungere un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>If your application should block while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocchi durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>This method sends a 32 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> data buffer with the ICMP echo message.</source>
          <target state="translated">Questo metodo invia un 32 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> buffer dei dati con il messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>The method waits five seconds for an ICMP echo reply message.</source>
          <target state="translated">Il metodo attende cinque secondi per un messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>If it does not receive a reply in that time the method returns and the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se non riceve una risposta in quel momento il metodo restituisce e <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>For a code example that demonstrates calling the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio di codice viene illustrata la chiamata di <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>A call to <ph id="ph1">&lt;see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /&gt;</ph> method is in progress.</source>
          <target state="translated">È in corso una chiamata al metodo <ph id="ph1">&lt;see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> could not be resolved to a valid IP address.</source>
          <target state="translated">Non è possibile risolvere <ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> in un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) a un computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application should not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando l'applicazione non deve bloccare.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>Each call executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>Applications use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to specify the method that is called when <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event.</source>
          <target state="translated">Le applicazioni utilizzano un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato per specificare il metodo da chiamata quando <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>You must add a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">È necessario aggiungere un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>If your application should block while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocchi durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>For a code example that demonstrates calling a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio di codice viene illustrata la chiamata un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> di overload, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>A call to <ph id="ph1">&lt;see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /&gt;</ph> method is in progress.</source>
          <target state="translated">È in corso una chiamata al metodo <ph id="ph1">&lt;see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> non è un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application should not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando l'applicazione non deve bloccare.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>Each call executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>Applications use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to specify the method that is called when <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event.</source>
          <target state="translated">Le applicazioni utilizzano un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato per specificare il metodo da chiamata quando <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>You must add a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">È necessario aggiungere un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>If your application should block while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocchi durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>For a code example that demonstrates calling the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio di codice viene illustrata la chiamata di <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> could not be resolved to a valid IP address.</source>
          <target state="translated">Non è possibile risolvere <ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> in un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>This method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Questo metodo invia il messaggio echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application should not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando l'applicazione non deve bloccare.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>Each call executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>To specify the method that is called when <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event, you must add a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">Per specificare il metodo da chiamata quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento, è necessario aggiungere un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>If your application blocks while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocca durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>For a code example that demonstrates calling a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Per un esempio di codice viene illustrata la chiamata un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> di overload, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> non è un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application should not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando l'applicazione non deve bloccare.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>Each call executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>Applications use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to specify the method that is called when <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event.</source>
          <target state="translated">Le applicazioni utilizzano un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato per specificare il metodo da chiamata quando <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>You must add a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">È necessario aggiungere un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object containing a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>If your application should block while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocchi durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>This overload uses default settings for packet fragmentation and packet forwarding.</source>
          <target state="translated">Questo overload utilizza le impostazioni predefinite per la frammentazione e l'inoltro dei pacchetti.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</source>
          <target state="translated">Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>To prevent fragmentation, use one of the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Per evitare la frammentazione, usare uno del <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodi che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>When <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> è <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</source>
          <target state="translated">Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>To change this setting, use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload that takes an <ph id="ph2">`options`</ph> parameter, and set the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to the desired value.</source>
          <target state="translated">Per modificare questa impostazione, utilizzare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload che accetta un <ph id="ph2">`options`</ph> parametro, quindi impostare il <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà sul valore desiderato.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The following code example demonstrates how to call a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> overload, see the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class overview.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> di overload, vedere il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> could not be resolved to a valid IP address.</source>
          <target state="translated">Non è possibile risolvere <ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> in un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> utilizzato per controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione e di controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application must not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando non è necessario bloccare l'applicazione.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Each call executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Applications use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to specify the method that is called when <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event.</source>
          <target state="translated">Le applicazioni utilizzano un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato per specificare il metodo da chiamata quando <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>You must add a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">È necessario aggiungere un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If your application blocks while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocca durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The following code example demonstrates how to call this method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>For an implementation of the callback method, see the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method overload example section.</source>
          <target state="translated">Per un'implementazione del metodo di callback, vedere il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> sezione esempio di metodo di overload.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The following code example requires the following namespaces:</source>
          <target state="translated">Esempio di codice seguente richiede spazi dei nomi seguenti:</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The following code example sends an ICMP echo message asynchronously.</source>
          <target state="translated">Esempio di codice seguente invia un messaggio echo ICMP in modo asincrono.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> non è un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che specifica il numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> utilizzato per controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>An object that is passed to the method invoked when the asynchronous operation completes.</source>
          <target state="translated">Oggetto passato al metodo richiamato al completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</source>
          <target state="translated">Esegue un tentativo di invio in modalità asincrona di un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione e di controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto ICMP.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell'operazione (con esito positivo o negativo), restituisce lo stato dell'applicazione.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> method when your application must not block.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> metodo quando non è necessario bloccare l'applicazione.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Each call executes in a separate thread that is automatically allocated from the thread pool.</source>
          <target state="translated">Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When the asynchronous operation completes, it raises the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> event.</source>
          <target state="translated">Al termine dell'operazione asincrona, genera il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.PingCompleted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Applications use a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to specify the method that is called when <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> raises the event.</source>
          <target state="translated">Le applicazioni utilizzano un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato per specificare il metodo da chiamata quando <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> genera l'evento.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>You must add a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegate to the event before calling <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</source>
          <target state="translated">È necessario aggiungere un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> delegato all'evento prima di chiamare <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The delegate's method receives a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object that contains a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> object that describes the result of the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Il metodo del delegato riceve un <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto che contiene un <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> oggetto che descrive il risultato del <ph id="ph3">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> object inherits the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> oggetto eredita le <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>This property contains the <ph id="ph1">`userToken`</ph> object passed into the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> call.</source>
          <target state="translated">Questa proprietà contiene il <ph id="ph1">`userToken`</ph> oggetto passato il <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If your application should block while waiting for a reply, use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods; these methods are synchronous.</source>
          <target state="translated">Se l'applicazione si blocchi durante l'attesa di una risposta, utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> metodi; questi metodi sono sincroni.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If the ICMP echo reply message is not received within the time specified by the <ph id="ph1">`timeout`</ph> parameter, the ICMP echo fails, and the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</source>
          <target state="translated">Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il <ph id="ph1">`timeout`</ph> parametro, l'echo ICMP non riesce e <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.TimedOut&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When specifying very small numbers for <ph id="ph1">`timeout`</ph>, the Ping reply can be received even if <ph id="ph2">`timeout`</ph> milliseconds have elapsed.</source>
          <target state="translated">Quando si specificano numeri molto piccoli per <ph id="ph1">`timeout`</ph>, è possibile ricevere la risposta Ping anche se <ph id="ph2">`timeout`</ph> millisecondi trascorsi.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> property is <ph id="ph2">`true`</ph> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph> e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.Ttl%2A&gt;</ph> proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</source>
          <target state="translated">Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> è impostato su <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.TtlExpired&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The following code example demonstrates how to call this method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> o è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è un indirizzo IPv6 e il computer locale esegue un sistema operativo precedente a Windows 2000.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source><ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> could not be resolved to a valid IP address.</source>
          <target state="translated">Non è possibile risolvere <ph id="ph1">&lt;paramref name="hostNameOrAddress" /&gt;</ph> in un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano i 65.500 byte.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>To send an ICMP echo message.</source>
          <target state="translated">Per inviare un messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendAsyncCancel">
          <source>Cancels all pending asynchronous requests to send an Internet Control Message Protocol (ICMP) echo message and receives a corresponding ICMP echo reply message.</source>
          <target state="translated">Annulla tutte le richieste di invio in modalità asincrona di messaggi echo ICMP (Internet Control Message Protocol) in sospeso e riceve un messaggio di risposta echo ICMP corrispondente.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendAsyncCancel">
          <source>Call this method to terminate any calls to <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> that have not completed.</source>
          <target state="translated">Chiamare questo metodo per interrompere tutte le chiamate a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> che non sono state completate.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="T:System.Net.NetworkInformation.Ping">
          <source>Sends an Internet Control Message Protocol (ICMP) echo message to a computer, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) a un computer remoto e riceve il messaggio di risposta echo ICMP corrispondente dal quel computer come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>An IP address that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Indirizzo IP che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> non è un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)">
          <source>The computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Computer che è la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)">
          <source>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>An IP address that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Indirizzo IP che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>The computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Computer che è la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>This overload allows you to specify a time-out value for the operation.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>An IP address that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Indirizzo IP che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione e un buffer da utilizzare per inviare e ricevere.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> non è un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65,500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano 65.500 byte.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>The computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Computer che è la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione e un buffer da utilizzare per inviare e ricevere.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>An IP address that identifies the computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Indirizzo IP che identifica il computer di destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> utilizzato per controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer con il <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> specificato e riceve il messaggio di risposta echo ICMP corrispondente da quel computer come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione, un buffer da utilizzare per inviare, ricevere e controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A call to <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /&gt;</ph> is in progress.</source>
          <target state="translated">È in corso una chiamata a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>An exception was thrown while sending or receiving the ICMP messages.</source>
          <target state="translated">È stata generata un'eccezione durante l'invio o la ricezione di messaggi ICMP.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>See the inner exception for the exact exception that was thrown.</source>
          <target state="translated">Per conoscere l'eccezione esatta generata, vedere l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> non è un indirizzo IP valido.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This object has been disposed.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The size of <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> exceeds 65,500 bytes.</source>
          <target state="translated">Le dimensioni di <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> superano 65.500 byte.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The computer that is the destination for the ICMP echo message.</source>
          <target state="translated">Computer che è la destinazione del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The value specified for this parameter can be a host name or a string representation of an IP address.</source>
          <target state="translated">Il valore specificato per il parametro può essere un nome host o una rappresentazione in forma di stringa di un indirizzo IP.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</source>
          <target state="translated">Numero massimo di millisecondi durante i quali attendere il messaggio di risposta echo ICMP dopo l'invio del messaggio echo.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare con il messaggio echo ICMP e restituiti nel messaggio di risposta echo ICMP.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The array cannot contain more than 65,500 bytes.</source>
          <target state="translated">La matrice non può contenere più di 65.500 byte.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> utilizzato per controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</source>
          <target state="translated">Invia un messaggio echo ICMP (Internet Control Message Protocol) con il buffer di dati specificato al computer remoto specificato e riceve il messaggio di risposta echo ICMP corrispondente da quest'ultimo come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</source>
          <target state="translated">Questo overload consente di specificare un valore di timeout per l'operazione, un buffer da utilizzare per inviare, ricevere e controllare la frammentazione e i valori TTL (Time-to-Live) per il pacchetto del messaggio echo ICMP.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the ICMP packet has been sent and the response has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>