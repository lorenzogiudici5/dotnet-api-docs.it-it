<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bb7ea-101">Fornisce informazioni relative allo stato e ai dati che risultano da un'operazione <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> o <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-101">Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb7ea-102">La <xref:System.Net.NetworkInformation.Ping> classe tenta di inviare una richiesta echo Internet controllo Message Protocol (ICMP) a un computer remoto e ricevere informazioni dal computer tramite un messaggio di risposta echo ICMP.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-102">The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</span></span> <span data-ttu-id="bb7ea-103">Il <xref:System.Net.NetworkInformation.Ping> classe utilizza istanze di <xref:System.Net.NetworkInformation.PingReply> classe per restituire informazioni sull'operazione, ad esempio lo stato e il tempo impiegato per inviare la richiesta e la ricezione della risposta.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-103">The <xref:System.Net.NetworkInformation.Ping> class uses instances of the <xref:System.Net.NetworkInformation.PingReply> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</span></span>  
  
 <span data-ttu-id="bb7ea-104">Il <xref:System.Net.NetworkInformation.Ping.Send%2A> restituiscono istanze di <xref:System.Net.NetworkInformation.PingReply> direttamente alla classe.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-104">The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the <xref:System.Net.NetworkInformation.PingReply> class directly.</span></span> <span data-ttu-id="bb7ea-105">Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> i metodi restituiscono un <xref:System.Net.NetworkInformation.PingReply> nel <xref:System.Net.NetworkInformation.PingCompletedEventHandler> del metodo <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parametro.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-105">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a <xref:System.Net.NetworkInformation.PingReply> in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter.</span></span> <span data-ttu-id="bb7ea-106">Il <xref:System.Net.NetworkInformation.PingReply> si accede tramite il <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-106">The <xref:System.Net.NetworkInformation.PingReply> is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.</span></span>  
  
 <span data-ttu-id="bb7ea-107">Se il valore di <xref:System.Net.NetworkInformation.PingReply.Status%2A> non <xref:System.Net.NetworkInformation.IPStatus.Success>, i valori restituiti da non utilizzare il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-107">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="bb7ea-108">Il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> proprietà restituirà zero, il <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà restituirà una matrice vuota e <xref:System.Net.NetworkInformation.PingReply.Options%2A> restituirà `null`.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-108">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb7ea-109">Esempio di codice seguente viene illustrato come utilizzare <xref:System.Net.NetworkInformation.Ping> classe per inviare una richiesta echo ICMP in modo sincrono e visualizzare la risposta.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-109">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb7ea-110">Ottiene l'indirizzo dell'host che invia la riposta echo del protocollo ICMP.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-110">Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</span></span></summary>
        <value><span data-ttu-id="bb7ea-111"><see cref="T:System.Net.IPAddress" /> contenente la destinazione del messaggio echo del protocollo ICMP.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-111">An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb7ea-112">Il <xref:System.Net.NetworkInformation.PingReply.Address%2A> restituito da uno del <xref:System.Net.NetworkInformation.Ping.Send%2A> gli overload possono provenire da un computer remoto non autorizzato.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-112">The <xref:System.Net.NetworkInformation.PingReply.Address%2A> returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="bb7ea-113">Non si connettono al computer remoto utilizzando questo indirizzo.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-113">Do not connect to the remote computer using this address.</span></span> <span data-ttu-id="bb7ea-114">Usare DNS per determinare l'indirizzo IP del computer in cui si desidera connettersi.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-114">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb7ea-115">Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-115">The following code example sends an ICMP echo request synchronously and displays the value of this property.</span></span>  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb7ea-116">Ottiene il buffer dei dati ricevuti in un messaggio di risposta echo del protocollo ICMP.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-116">Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</span></span></summary>
        <value><span data-ttu-id="bb7ea-117">Matrice <see cref="T:System.Byte" /> contenente i dati ricevuti in un messaggio di risposta echo del protocollo ICMP, oppure matrice vuota nel caso in cui non sia stato ricevuto alcun messaggio.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-117">A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb7ea-118">Il buffer dei dati inviato con la richiesta echo ICMP viene restituito al mittente nella risposta echo, pertanto è possibile calcolare il tempo impiegato di andata e ritorno per un pacchetto di dimensioni note.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-118">The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</span></span> <span data-ttu-id="bb7ea-119">Buffer di dati, combinati con il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> opzione, può essere utilizzato per individuare l'unità massima di trasmissione per il percorso di rete tra il computer di origine e destinazione.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-119">The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</span></span> <span data-ttu-id="bb7ea-120">Per ulteriori informazioni, vedere "Traceroute" in 1574 RFC, sezione 3.2, disponibile all'indirizzo [ https://www.ietf.org ](https://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="bb7ea-120">For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
 <span data-ttu-id="bb7ea-121">Il buffer predefinito utilizzato con <xref:System.Net.NetworkInformation.Ping.Send%2A> e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contiene 32 byte di dati.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-121">The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb7ea-122">Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza le dimensioni del buffer restituito da questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-122">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb7ea-123">Ottiene le opzioni utilizzate per trasmettere la risposta a una richiesta echo del protocollo ICMP.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-123">Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</span></span></summary>
        <value><span data-ttu-id="bb7ea-124">Oggetto <see cref="T:System.Net.NetworkInformation.PingOptions" /> che contiene la durata (TTL, Time to Live) e la direttiva di frammentazione usata per trasmettere la risposta se la proprietà <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> e <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; altrimenti, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb7ea-125">La durata (TTL) definisce il numero di volte in cui i nodi possono inoltrare un pacchetto durante la trasmissione tra l'origine e destinazione.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-125">The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</span></span> <span data-ttu-id="bb7ea-126">Se il numero di inoltri, noto anche come hop, supera il valore specificato per la durata (TTL), il pacchetto viene considerato non recapitabile e verrà ignorato.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-126">If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</span></span>  
  
 <span data-ttu-id="bb7ea-127">Il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> valore specificato nella richiesta echo l'ICMP controlla la frammentazione del pacchetto.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-127">The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation.</span></span> <span data-ttu-id="bb7ea-128">Se <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> è `true` e le dimensioni del pacchetto superano l'unità massima di trasmissione del percorso di rete del pacchetto, questo viene scartato e <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> viene restituito l'errore.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-128">If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> error is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb7ea-129">Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza i valori archiviati nel <xref:System.Net.NetworkInformation.PingOptions> oggetto restituito da questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-129">The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb7ea-130">Ottiene il numero di millisecondi impiegati per inviare una richiesta echo ICMP (Internet Control Message Protocol) e per ricevere il messaggio di risposta echo ICMP corrispondente.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-130">Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="bb7ea-131">Oggetto <see cref="T:System.Int64" /> che specifica il tempo di round trip in millisecondi.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-131">An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb7ea-132">Se la richiesta Echo non riesce, il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> volta che viene segnalato come 0, che è anche un valore valido quando la richiesta ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-132">If the Echo request fails, the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> time is reported as 0, which is also a valid value when the request succeeds.</span></span> <span data-ttu-id="bb7ea-133">È necessario controllare il <xref:System.Net.NetworkInformation.PingReply.Status%2A> per determinare se il valore restituito da questa proprietà deve essere ignorato.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-133">You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb7ea-134">Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza le dimensioni del buffer restituito da questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-134">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb7ea-135">Ottiene lo stato di un tentativo di inviare una richiesta echo del protocollo ICMP e ricevere il rispettivo messaggio di risposta echo del protocollo ICMP.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-135">Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="bb7ea-136">Valore <see cref="T:System.Net.NetworkInformation.IPStatus" /> che indica il risultato della richiesta.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-136">An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb7ea-137">Se il valore di <xref:System.Net.NetworkInformation.PingReply.Status%2A> non <xref:System.Net.NetworkInformation.IPStatus.Success>, i valori restituiti da non utilizzare il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-137">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="bb7ea-138">Il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> e <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà restituirà zero e <xref:System.Net.NetworkInformation.PingReply.Options%2A> restituirà `null`.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-138">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb7ea-139">Esempio di codice seguente viene illustrato come utilizzare <xref:System.Net.NetworkInformation.Ping> classe per inviare una richiesta echo ICMP in modo sincrono e visualizzare la risposta.</span><span class="sxs-lookup"><span data-stu-id="bb7ea-139">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>