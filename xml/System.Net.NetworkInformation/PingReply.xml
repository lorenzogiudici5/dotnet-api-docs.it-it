<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bbe843af9ff93fe334a4540428a9889d10750cb3" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33678573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce informazioni relative allo stato e ai dati che risultano da un'operazione <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> o <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Net.NetworkInformation.Ping> classe tenta di inviare una richiesta echo Internet controllo Message Protocol (ICMP) a un computer remoto e ricevere informazioni dal computer tramite un messaggio di risposta echo ICMP. Il <xref:System.Net.NetworkInformation.Ping> classe utilizza istanze di <xref:System.Net.NetworkInformation.PingReply> classe per restituire informazioni sull'operazione, ad esempio lo stato e il tempo impiegato per inviare la richiesta e la ricezione della risposta.  
  
 Il <xref:System.Net.NetworkInformation.Ping.Send%2A> restituiscono istanze di <xref:System.Net.NetworkInformation.PingReply> direttamente alla classe. Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> i metodi restituiscono un <xref:System.Net.NetworkInformation.PingReply> nel <xref:System.Net.NetworkInformation.PingCompletedEventHandler> del metodo <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parametro. Il <xref:System.Net.NetworkInformation.PingReply> si accede tramite il <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> proprietà.  
  
 Se il valore di <xref:System.Net.NetworkInformation.PingReply.Status%2A> non <xref:System.Net.NetworkInformation.IPStatus.Success>, i valori restituiti da non utilizzare il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà. Il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> proprietà restituirà zero, il <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà restituirà una matrice vuota e <xref:System.Net.NetworkInformation.PingReply.Options%2A> restituirà `null`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare <xref:System.Net.NetworkInformation.Ping> classe per inviare una richiesta echo ICMP in modo sincrono e visualizzare la risposta.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indirizzo dell'host che invia la riposta echo del protocollo ICMP.</summary>
        <value>
          <see cref="T:System.Net.IPAddress" /> contenente la destinazione del messaggio echo del protocollo ICMP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.NetworkInformation.PingReply.Address%2A> restituito da uno del <xref:System.Net.NetworkInformation.Ping.Send%2A> gli overload possono provenire da un computer remoto non autorizzato. Non si connettono al computer remoto utilizzando questo indirizzo. Usare DNS per determinare l'indirizzo IP del computer in cui si desidera connettersi.  
  
   
  
## Examples  
 Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza il valore di questa proprietà.  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il buffer dei dati ricevuti in un messaggio di risposta echo del protocollo ICMP.</summary>
        <value>Matrice <see cref="T:System.Byte" /> contenente i dati ricevuti in un messaggio di risposta echo del protocollo ICMP, oppure matrice vuota nel caso in cui non sia stato ricevuto alcun messaggio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il buffer dei dati inviato con la richiesta echo ICMP viene restituito al mittente nella risposta echo, pertanto è possibile calcolare il tempo impiegato di andata e ritorno per un pacchetto di dimensioni note. Buffer di dati, combinati con il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> opzione, può essere utilizzato per individuare l'unità massima di trasmissione per il percorso di rete tra il computer di origine e destinazione. Per ulteriori informazioni, vedere "Traceroute" in 1574 RFC, sezione 3.2, disponibile all'indirizzo [ https://www.ietf.org ](https://www.ietf.org).  
  
 Il buffer predefinito utilizzato con <xref:System.Net.NetworkInformation.Ping.Send%2A> e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contiene 32 byte di dati.  
  
   
  
## Examples  
 Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza le dimensioni del buffer restituito da questa proprietà.  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le opzioni utilizzate per trasmettere la risposta a una richiesta echo del protocollo ICMP.</summary>
        <value>Oggetto <see cref="T:System.Net.NetworkInformation.PingOptions" /> che contiene la durata (TTL, Time to Live) e la direttiva di frammentazione usata per trasmettere la risposta se la proprietà <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> e <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; altrimenti, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La durata (TTL) definisce il numero di volte in cui i nodi possono inoltrare un pacchetto durante la trasmissione tra l'origine e destinazione. Se il numero di inoltri, noto anche come hop, supera il valore specificato per la durata (TTL), il pacchetto viene considerato non recapitabile e verrà ignorato.  
  
 Il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> valore specificato nella richiesta echo l'ICMP controlla la frammentazione del pacchetto. Se <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> è `true` e le dimensioni del pacchetto superano l'unità massima di trasmissione del percorso di rete del pacchetto, questo viene scartato e <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> viene restituito l'errore.  
  
   
  
## Examples  
 Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza i valori archiviati nel <xref:System.Net.NetworkInformation.PingOptions> oggetto restituito da questa proprietà.  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di millisecondi impiegati per inviare una richiesta echo ICMP (Internet Control Message Protocol) e per ricevere il messaggio di risposta echo ICMP corrispondente.</summary>
        <value>Oggetto <see cref="T:System.Int64" /> che specifica il tempo di round trip in millisecondi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la richiesta Echo non riesce, il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> volta che viene segnalato come 0, che è anche un valore valido quando la richiesta ha esito positivo. È necessario controllare il <xref:System.Net.NetworkInformation.PingReply.Status%2A> per determinare se il valore restituito da questa proprietà deve essere ignorato.  
  
   
  
## Examples  
 Esempio di codice seguente invia una richiesta echo ICMP in modo sincrono e visualizza le dimensioni del buffer restituito da questa proprietà.  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato di un tentativo di inviare una richiesta echo del protocollo ICMP e ricevere il rispettivo messaggio di risposta echo del protocollo ICMP.</summary>
        <value>Valore <see cref="T:System.Net.NetworkInformation.IPStatus" /> che indica il risultato della richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il valore di <xref:System.Net.NetworkInformation.PingReply.Status%2A> non <xref:System.Net.NetworkInformation.IPStatus.Success>, i valori restituiti da non utilizzare il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà. Il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> e <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> proprietà restituirà zero e <xref:System.Net.NetworkInformation.PingReply.Options%2A> restituirà `null`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare <xref:System.Net.NetworkInformation.Ping> classe per inviare una richiesta echo ICMP in modo sincrono e visualizzare la risposta.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>