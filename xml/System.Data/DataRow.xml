<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a1ebaf276e9456fa08b213088c22df0f3afc38e" />
    <Meta Name="ms.sourcegitcommit" Value="ad09e88f48ca55b181e8d272cfc3742eadc3f939" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/08/2018" />
    <Meta Name="ms.locfileid" Value="35231138" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una riga di dati in un oggetto <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataRow> e <xref:System.Data.DataColumn> gli oggetti sono i componenti principali di un <xref:System.Data.DataTable>. Utilizzare il <xref:System.Data.DataRow> oggetto e la relativa proprietà e metodi per recuperare e valutare; e inserire, eliminare e aggiornare i valori di <xref:System.Data.DataTable>. Il <xref:System.Data.DataRowCollection> rappresenta l'effettivo <xref:System.Data.DataRow> gli oggetti il <xref:System.Data.DataTable>e <xref:System.Data.DataColumnCollection> contiene il <xref:System.Data.DataColumn> oggetti che descrivono lo schema del <xref:System.Data.DataTable>. Utilizzare il metodo di overload <xref:System.Data.DataRow.Item%2A> per restituire o impostare il valore di un <xref:System.Data.DataColumn>.  
  
 Utilizzare il <xref:System.Data.DataRow.HasVersion%2A> e <xref:System.Data.DataRow.IsNull%2A> le proprietà per determinare lo stato di un valore particolare riga e <xref:System.Data.DataRow.RowState*> proprietà per determinare lo stato della riga rispetto al padre <xref:System.Data.DataTable>.  
  
 Per creare un nuovo <xref:System.Data.DataRow>, utilizzare il <xref:System.Data.DataTable.NewRow%2A> metodo il <xref:System.Data.DataTable> oggetto. Dopo aver creato un nuovo <xref:System.Data.DataRow>, utilizzare il <xref:System.Data.DataRowCollection.Add%2A> metodo per aggiungere il nuovo <xref:System.Data.DataRow> per il <xref:System.Data.DataRowCollection>. Infine, chiamare il <xref:System.Data.DataRow.AcceptChanges%2A> metodo il <xref:System.Data.DataTable> oggetto per confermare l'aggiunta. Per ulteriori informazioni sull'aggiunta di dati da un <xref:System.Data.DataTable>, vedere [aggiunta di dati a un oggetto DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 È possibile eliminare un <xref:System.Data.DataRow> dal <xref:System.Data.DataRowCollection> chiamando il <xref:System.Data.DataRowCollection.Remove%2A> metodo il <xref:System.Data.DataRowCollection>, o chiamando il <xref:System.Data.DataRow.Delete%2A> metodo il <xref:System.Data.DataRow> oggetto. Il <xref:System.Data.DataRowCollection.Remove%2A> metodo rimuove la riga dalla raccolta. Al contrario, <xref:System.Data.DataRow.Delete%2A> segni di <xref:System.Data.DataRow> per la rimozione. La rimozione effettiva si verifica quando si chiama <xref:System.Data.DataRow.AcceptChanges%2A> metodo. Chiamando <xref:System.Data.DataRow.Delete%2A>, è possibile controllare a livello di codice le righe contrassegnate per la rimozione prima di eliminarle effettivamente. Per ulteriori informazioni, vedere [l'eliminazione di DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 L'esempio seguente crea un nuovo <xref:System.Data.DataRow> chiamando il <xref:System.Data.DataTable.NewRow%2A> metodo il <xref:System.Data.DataTable> oggetto.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Questo tipo è sicuro per le operazioni di lettura con multithreading. È necessario sincronizzare le operazioni di scrittura.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">generatore</param>
        <summary>Inizializza un' istanza nuova di DataRow. Costruisce una riga dal generatore. Solo per uso interno.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Conferma tutte le modifiche apportate a questa riga dall'ultima chiamata al metodo <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si richiama <xref:System.Data.DataRow.AcceptChanges%2A>, <xref:System.Data.DataRow.EndEdit%2A> metodo viene chiamato in modo implicito per terminare tutte le modifiche. Se il <xref:System.Data.DataRow.RowState*> della riga è stato aggiunto o modificato, il <xref:System.Data.DataRow.RowState*> diventa Unchanged. Se il <xref:System.Data.DataRow.RowState*> è stato eliminato, la riga viene rimossa.  
  
 Per altre informazioni, vedere il metodo <xref:System.Data.DataRow.BeginEdit%2A>.  
  
 Il <xref:System.Data.DataTable> classe include inoltre un <xref:System.Data.DataTable.AcceptChanges%2A> metodo che influisce sulle modifiche apportate all'intera tabella. Per ulteriori informazioni e un esempio di codice viene illustrato come accettare e rifiutare le modifiche alle singole righe di dati, vedere [AcceptChanges e RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene innanzitutto creata una nuova <xref:System.Data.DataTable> con una sola colonna, quindi viene creato un singolo <xref:System.Data.DataRow>. Come il <xref:System.Data.DataRow> viene creato, aggiunto, modificato ed eliminato, relativo <xref:System.Data.DataRow.RowState*> viene stampato.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia un'operazione di modifica su un oggetto <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Data.DataRow.BeginEdit%2A> metodo per inserire un <xref:System.Data.DataRow> in modalità di modifica. In questa modalità, gli eventi sono temporaneamente sospese, consentendo all'utente di apportare modifiche a più di una riga senza attivare le regole di convalida. Ad esempio, se è necessario assicurarsi che il valore della colonna per un importo totale è uguale ai valori per il lato debito e colonne in una riga del credito, è possibile inserire ogni riga in modalità di modifica per sospendere la convalida dei valori di riga fino a quando l'utente tenta di eseguire il commit di valori.  
  
 Il <xref:System.Data.DataRow.BeginEdit%2A> metodo viene chiamato in modo implicito quando l'utente modifica il valore di un controllo con associazione a dati; il <xref:System.Data.DataRow.EndEdit%2A> metodo viene chiamato in modo implicito quando si richiama il <xref:System.Data.DataTable.AcceptChanges%2A> metodo per il <xref:System.Data.DataTable> oggetto. In questa modalità di modifica, il <xref:System.Data.DataRow> rappresentazioni della originale e nuovi valori proposti vengono archiviate. Pertanto, purché il <xref:System.Data.DataRow.EndEdit%2A> (metodo) non è stato chiamato, è possibile recuperare la versione originale o proposta passando `DataRowVersion.Original` o `DataRowVersion.Proposed` per il `version` parametro del <xref:System.Data.DataRow.Item%2A> proprietà. È inoltre possibile annullare le modifiche a questo punto richiamando il <xref:System.Data.DataRow.CancelEdit%2A> metodo.  
  
 Per verificare se la riga contiene un valore originale o proposto, chiamare il <xref:System.Data.DataRow.HasVersion%2A> metodo.  
  
> [!NOTE]
>  Il <xref:System.Data.DataRow.BeginEdit%2A> metodo sospende temporaneamente <xref:System.Data.DataTable.RowChanging> eventi, ma la `delete` operazione.  
  
   
  
## Examples  
 Nell'esempio viene creata una semplice <xref:System.Data.DataTable> con uno <xref:System.Data.DataColumn> e cinque <xref:System.Data.DataRow> oggetti e un <xref:System.Data.UniqueConstraint>. Oggetto <xref:System.Data.DataTable.RowChanged> gestore dell'evento viene inoltre aggiunto per controllare quando cambia il valore della riga. Dopo la chiamata di <xref:System.Data.DataRow.BeginEdit%2A> sulle righe esistenti, il vincolo e l'evento sono temporaneamente disabilitati e i valori originali e proposti vengono stampati. Il <xref:System.Data.DataRow.BeginEdit%2A> viene nuovamente richiamato per impostare due righe per lo stesso valore. Quando <xref:System.Data.DataRow.EndEdit%2A> viene chiamato, il <xref:System.Data.UniqueConstraint> viene applicata ai valori identici.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Il metodo è stato chiamato nell'evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Il metodo è stato chiamato su una riga eliminata.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla la modifica corrente sulla riga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere il metodo <xref:System.Data.DataRow.BeginEdit%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente modifica il valore di una colonna nell'ultima riga di un <xref:System.Windows.Forms.DataGrid> controllo. Nell'esempio viene utilizzato il <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, i metodi per modificare il valore della colonna e convalidare la modifica nella riga.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Il metodo è stato chiamato nell'evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella gli errori della riga. Ciò include la proprietà <see cref="P:System.Data.DataRow.RowError" /> e gli errori impostati con il metodo <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.Data.DataRow.SetColumnError%2A> e <xref:System.Data.DataRow.GetColumnError%2A> per impostare e restituire errori per le singole colonne.  
  
 Impostare il <xref:System.Data.DataRow.RowError%2A> proprietà per impostare un errore che si applica all'intera riga.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> metodo. Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo per recuperare tutte le colonne con errori.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.HasErrors%2A> per cercare errori. Se la riga è presenti errori, il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo restituisce una matrice di colonne con gli errori che possono quindi essere risolti. Il <xref:System.Data.DataRow.ClearErrors%2A> viene quindi chiamato il metodo per cancellare tutti gli errori.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina l'oggetto <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Data.DataRow.RowState*> della riga viene aggiunta, la <xref:System.Data.DataRow.RowState*> diventa `Detached` e la riga viene rimossa dalla tabella quando si chiama <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 Il <xref:System.Data.DataRow.RowState*> diventa `Deleted` dopo aver utilizzato la <xref:System.Data.DataRow.Delete%2A> metodo su un oggetto esistente <xref:System.Data.DataRow>. Rimane `Deleted` finché non si chiama <xref:System.Data.DataRow.AcceptChanges%2A>. In questo momento, il <xref:System.Data.DataRow> viene rimosso dalla tabella.  
  
 <xref:System.Data.DataRow.Delete%2A> non deve essere chiamato in un ciclo foreach durante lo scorrimento di un <xref:System.Data.DataRowCollection> oggetto. <xref:System.Data.DataRow.Delete%2A> modifica lo stato della raccolta.  
  
 Eliminazione di una riga può chiamando il metodo <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  Il <xref:System.Data.DataRow.BeginEdit%2A> metodo sospende temporaneamente <xref:System.Data.DataTable.RowChanging> gli eventi, ma l'operazione di eliminazione non.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un semplice <xref:System.Data.DataTable> con due colonne e righe di dieci. Dopo l'eliminazione di alcuni <xref:System.Data.DataRow> elementi con il <xref:System.Data.DataRow.Delete%2A> metodo, una delle righe è chiamando il metodo <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">L'oggetto <see cref="T:System.Data.DataRow" /> è già stato eliminato.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude il processo di modifica della riga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta la proprietà, viene generata un'eccezione se viene generata un'eccezione di <xref:System.Data.DataTable.RowChanging> evento.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.EndEdit%2A> metodo per terminare la modifica di un <xref:System.Data.DataRow> valore se la funzione di convalida restituisce true.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Il metodo è stato chiamato nell'evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.ConstraintException">Il vincolo è stato interrotto da un'operazione di modifica.</exception>
        <exception cref="T:System.Data.ReadOnlyException">La riga appartiene alla tabella e si è tentato di modificare il valore di una colonna in sola lettura.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Si è tentato di immettere un valore null in una colonna in cui la proprietà <see cref="P:System.Data.DataColumn.AllowDBNull" /> è impostata su false.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene le righe figlio di un oggetto <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Oggetto <see cref="T:System.Data.DataRelation" /> da usare.</param>
        <summary>Ottiene le righe figlio di questo oggetto <see cref="T:System.Data.DataRow" /> utilizzando l'oggetto <see cref="T:System.Data.DataRelation" /> specificato.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" /> o matrice di lunghezza zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetChildRows%2A> per restituire l'elemento figlio <xref:System.Data.DataRow> oggetti per ogni figlio <xref:System.Data.DataRelation> in un <xref:System.Data.DataTable>. Viene quindi stampato il valore di ogni colonna nella riga.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.ArgumentNullException">La relazione è <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone di questa versione dei dati.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Proprietà <see cref="P:System.Data.DataRelation.RelationName" /> dell'oggetto <see cref="T:System.Data.DataRelation" /> da utilizzare.</param>
        <summary>Ottiene le righe figlio di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando la proprietà <see cref="P:System.Data.DataRelation.RelationName" /> specificata di un oggetto <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" /> o matrice di lunghezza zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Oggetto <see cref="T:System.Data.DataRelation" /> da usare.</param>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" /> che specifica la versione dei dati da ottenere. I valori consentiti sono <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
        <summary>Ottiene le righe figlio di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando gli oggetti <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" /> specificati.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A> proprietà.  
  
 Utilizzare il <xref:System.Data.DataRow.HasVersion%2A> proprietà per determinare se il <xref:System.Data.DataRowVersion> che si desidera esiste.  
  
 Se <xref:System.Data.DataRowVersion.Default> è specificato, la versione utilizzata dipende il <xref:System.Data.DataRow.RowState*> della riga in cui `GetChildRows` viene richiamato. Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Modified`, `New`, o `Unchanged`, il <xref:System.Data.DataRowVersion.Current> versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle relative versioni correnti. Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Deleted`, il <xref:System.Data.DataRowVersion.Original> versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle rispettive versioni originali.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetChildRows%2A> per restituire l'elemento figlio <xref:System.Data.DataRow> oggetti per ogni figlio <xref:System.Data.DataRelation> in un <xref:System.Data.DataTable>. Viene quindi stampato il valore di ogni colonna con la versione specificata nella riga.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="relation" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone dell'oggetto <see cref="T:System.Data.DataRowVersion" /> richiesto.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Proprietà <see cref="P:System.Data.DataRelation.RelationName" /> dell'oggetto <see cref="T:System.Data.DataRelation" /> da utilizzare.</param>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" /> che specifica la versione dei dati da ottenere. I valori consentiti sono <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
        <summary>Ottiene le righe figlio di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando la proprietà <see cref="P:System.Data.DataRelation.RelationName" /> specificata di un oggetto <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" /> o matrice di lunghezza zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A> proprietà.  
  
 Utilizzare il <xref:System.Data.DataRow.HasVersion%2A> proprietà per determinare se il <xref:System.Data.DataRowVersion> che si desidera esiste.  
  
 Se <xref:System.Data.DataRowVersion.Default> è specificato, la versione utilizzata dipende il <xref:System.Data.DataRow.RowState*> della riga in cui `GetChildRows` viene richiamato. Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Modified`, `New`, o `Unchanged`, il <xref:System.Data.DataRowVersion.Current> versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle relative versioni correnti. Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Deleted`, il <xref:System.Data.DataRowVersion.Original> versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle rispettive versioni originali.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="relation" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone dell'oggetto <see cref="T:System.Data.DataRowVersion" /> richiesto.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene la descrizione dell'errore per una colonna.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ottiene la descrizione dell'errore dell'oggetto <see cref="T:System.Data.DataColumn" /> specificato.</summary>
        <returns>Testo della descrizione dell'errore.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Data.DataRow.SetColumnError%2A> per impostare gli errori di colonna.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> metodo. Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo per recuperare tutte le colonne con errori. In alternativa, il <xref:System.Data.DataTable.GetErrors%2A> metodo il <xref:System.Data.DataTable> restituisce tutte le righe con errori.  
  
 Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente imposta una descrizione dell'errore per un determinato <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indice in base zero della colonna.</param>
        <summary>Ottiene la descrizione dell'errore per la colonna specificata in base all'indice.</summary>
        <returns>Testo della descrizione dell'errore.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Data.DataRow.SetColumnError%2A> per impostare gli errori di colonna.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> metodo. Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo per recuperare tutte le colonne con errori.  
  
 Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente imposta una descrizione dell'errore per un determinato <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'argomento <paramref name="columnIndex" /> non è compreso nell'intervallo.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome della colonna.</param>
        <summary>Ottiene la descrizione dell'errore per una colonna specificata in base al nome.</summary>
        <returns>Testo della descrizione dell'errore.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Data.DataRow.SetColumnError%2A> per impostare gli errori di colonna.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> metodo. Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo per recuperare tutte le colonne con errori.  
  
 Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente imposta una descrizione dell'errore per un determinato <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene una matrice delle colonne che contengono errori.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataColumn" /> che contengono errori.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataRow.GetColumnsInError%2A> consente di ridurre il numero di <xref:System.Data.DataColumn> gli oggetti che devono essere elaborati per gli errori restituendo solo le colonne che dispongono di un errore. Errori possono essere impostati su singole colonne con il <xref:System.Data.DataRow.SetColumnError%2A> metodo. Per ridurre ulteriormente la quantità di elaborazione, esaminare il <xref:System.Data.DataRow.HasErrors%2A> proprietà del <xref:System.Data.DataRow> classe per determinare se un <xref:System.Data.DataRow> presenta errori prima di richiamare <xref:System.Data.DataRow.GetColumnsInError%2A>.  
  
 Utilizzare il <xref:System.Data.DataRow.ClearErrors%2A> metodo per cancellare tutti gli errori nella riga. Ciò include la proprietà <xref:System.Data.DataRow.RowError%2A>.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.HasErrors%2A> per cercare errori. Se la riga è presenti errori, il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo restituisce una matrice di colonne con gli errori che possono quindi essere risolti. Il <xref:System.Data.DataRow.ClearErrors%2A> viene quindi chiamato il metodo per cancellare tutti gli errori.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene la riga padre di un oggetto <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Oggetto <see cref="T:System.Data.DataRelation" /> da usare.</param>
        <summary>Ottiene la riga padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando l'oggetto <see cref="T:System.Data.DataRelation" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataRow" /> padre della riga corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetParentRow%2A> per restituire l'elemento figlio <xref:System.Data.DataRow> oggetti per ogni figlio <xref:System.Data.DataRelation> in un <xref:System.Data.DataTable>. Viene quindi stampato il valore di ogni colonna nella riga.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="relation" /> non appartiene all'oggetto <see cref="T:System.Data.DataTable" />.  La riga è <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Una riga figlio ha più elementi padre.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Questa riga non appartiene alla tabella figlio dell'oggetto <see cref="T:System.Data.DataRelation" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Proprietà <see cref="P:System.Data.DataRelation.RelationName" /> di un oggetto <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ottiene la riga padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando la proprietà <see cref="P:System.Data.DataRelation.RelationName" /> specificata di un oggetto <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataRow" /> padre della riga corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetParentRow%2A> per stampare un valore di ogni riga padre di ogni <xref:System.Data.DataRow> in un <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.Data.DataException">Una riga figlio ha più elementi padre.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Oggetto <see cref="T:System.Data.DataRelation" /> da usare.</param>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" /> che specifica la versione dei dati da ottenere.</param>
        <summary>Ottiene la riga padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando gli oggetti <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" /> specificati.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataRow" /> padre della riga corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
 Utilizzare il <xref:System.Data.DataRow.HasVersion%2A> proprietà per determinare se il <xref:System.Data.DataRowVersion> che si desidera esiste.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetParentRow%2A> per restituire l'elemento figlio <xref:System.Data.DataRow> oggetti per ogni figlio <xref:System.Data.DataRelation> in un <xref:System.Data.DataTable>. Viene quindi stampato il valore di ogni colonna nella riga.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La riga è <see langword="null" />.  Il parametro <paramref name="relation" /> non appartiene alle relazioni padre di questa tabella.</exception>
        <exception cref="T:System.Data.DataException">Una riga figlio ha più elementi padre.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La tabella figlio della relazione non è la tabella a cui la riga appartiene.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone di questa versione dei dati.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Proprietà <see cref="P:System.Data.DataRelation.RelationName" /> di un oggetto <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" />.</param>
        <summary>Ottiene la riga padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando la proprietà <see cref="P:System.Data.DataRelation.RelationName" /> specificata di un oggetto <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataRow" /> padre della riga corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
 Utilizzare il <xref:System.Data.DataRow.HasVersion%2A> proprietà per determinare se il <xref:System.Data.DataRowVersion> che si desidera esiste.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetParentRow%2A> per stampare un valore di ogni riga padre di ogni <xref:System.Data.DataRow> in un <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="relation" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Una riga figlio ha più elementi padre.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone dell'oggetto <see cref="T:System.Data.DataRowVersion" /> richiesto.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene le righe padre di un oggetto <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Oggetto <see cref="T:System.Data.DataRelation" /> da usare.</param>
        <summary>Ottiene le righe padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando l'oggetto <see cref="T:System.Data.DataRelation" /> specificato.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" /> o matrice di lunghezza zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetParentRows%2A> per restituire l'elemento figlio <xref:System.Data.DataRow> oggetti per ogni figlio <xref:System.Data.DataRelation> in un <xref:System.Data.DataTable>. Viene quindi stampato il valore di ogni colonna nella riga.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Data.DataRelation" /> non appartiene all'oggetto <see cref="T:System.Data.DataSet" /> di questa riga.</exception>
        <exception cref="T:System.ArgumentNullException">La riga è <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La tabella figlio della relazione non è la tabella a cui la riga appartiene.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene a un oggetto <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Proprietà <see cref="P:System.Data.DataRelation.RelationName" /> di un oggetto <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ottiene le righe padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando la proprietà <see cref="P:System.Data.DataRelation.RelationName" /> specificata di un oggetto <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" /> o matrice di lunghezza zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Oggetto <see cref="T:System.Data.DataRelation" /> da usare.</param>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" /> che specifica la versione dei dati da ottenere.</param>
        <summary>Ottiene le righe padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando gli oggetti <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" /> specificati.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" /> o matrice di lunghezza zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
 Utilizzare il <xref:System.Data.DataRow.HasVersion%2A> proprietà per determinare se il <xref:System.Data.DataRowVersion> che si desidera esiste.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.GetParentRows%2A> per restituire l'elemento figlio <xref:System.Data.DataRow> oggetti per ogni figlio <xref:System.Data.DataRelation> in un <xref:System.Data.DataTable>. Viene quindi stampato il valore di ogni colonna nella riga.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Data.DataRelation" /> non appartiene all'oggetto <see cref="T:System.Data.DataSet" /> di questa riga.</exception>
        <exception cref="T:System.ArgumentNullException">La riga è <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La tabella figlio della relazione non è la tabella a cui la riga appartiene.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene a un oggetto <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone dell'oggetto <see cref="T:System.Data.DataRowVersion" /> richiesto.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Proprietà <see cref="P:System.Data.DataRelation.RelationName" /> di un oggetto <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" /> che specifica la versione dei dati da ottenere. I valori consentiti sono <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
        <summary>Ottiene le righe padre di un oggetto <see cref="T:System.Data.DataRow" /> utilizzando la proprietà <see cref="P:System.Data.DataRelation.RelationName" /> specificata di un oggetto <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.DataRow" /> o matrice di lunghezza zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un <xref:System.Data.DataSet>, la raccolta dell'elemento padre di tutti i <xref:System.Data.DataRelation> oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A> metodo.  
  
 Il <xref:System.Data.DataTable> contiene inoltre un insieme di <xref:System.Data.DataRelation> oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A> proprietà.  
  
 Utilizzare il <xref:System.Data.DataRow.HasVersion%2A> proprietà per determinare se il <xref:System.Data.DataRowVersion> che si desidera esiste.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relazione e la riga non appartengono alla stessa tabella.</exception>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="relation" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone dell'oggetto <see cref="T:System.Data.DataRowVersion" /> richiesto.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se sono presenti errori in una riga.</summary>
        <value>
          <see langword="true" /> se la riga contiene un errore; in caso contrario, <see langword="false" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` Restituisce `true` eventuali <xref:System.Data.DataColumn> oggetto nella riga contiene un errore, o se il <xref:System.Data.DataRow.RowError%2A> proprietà del <xref:System.Data.DataRow> non è una stringa vuota.  
  
 Quando la convalida dei dati, è possibile impostare un errore su qualsiasi colonna in una riga. Quando visualizzata tale colonna i <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> di controllo, è contrassegnato con un punto esclamativo rosso per segnalare all'utente che la colonna è in errore.  
  
 Utilizzare <xref:System.Data.DataRow.SetColumnError%2A> per impostare un errore su qualsiasi colonna.  
  
 Utilizzare il <xref:System.Data.DataRow.GetColumnError%2A> e `GetColumnsInError` metodi per restituire le colonne con errori.  
  
 Il <xref:System.Data.DataRow.ClearErrors%2A> metodo cancella tutti gli errori per la riga.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.HasErrors%2A> per cercare errori. Se la riga è presenti errori, il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo restituisce una matrice di colonne con gli errori che possono quindi essere risolti. Il <xref:System.Data.DataRow.ClearErrors%2A> viene quindi chiamato il metodo per cancellare tutti gli errori.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" /> che specifica la versione della riga.</param>
        <summary>Ottiene un valore che indica se esiste una versione specificata.</summary>
        <returns>
          <see langword="true" /> se la versione esiste; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere il metodo <xref:System.Data.DataRow.BeginEdit%2A>.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.HasVersion%2A> metodo per determinare se il valore corrente di una colonna e il valore proposto sono uguali. In questo caso, la modifica viene annullata. In caso contrario, il <xref:System.Data.DataRow.AcceptChanges%2A> metodo viene chiamato per terminare la modifica.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene un valore che indica se nella colonna specificata è presente un valore null.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ottiene un valore che indica se nella classe <see cref="T:System.Data.DataColumn" /> specificata è presente un valore null.</summary>
        <returns>
          <see langword="true" /> se nella colonna è presente un valore null; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene stampata ciascuna colonna di ogni riga in ogni tabella di un <xref:System.Data.DataSet>. Se la riga è impostata su un valore null, il valore non viene stampato.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indice in base zero della colonna.</param>
        <summary>Ottiene un valore che indica se nella colonna è presente un valore null in corrispondenza dell'indice specificato.</summary>
        <returns>
          <see langword="true" /> se nella colonna è presente un valore null; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene modificato il valore di una colonna in un valore null e quindi utilizza il <xref:System.Data.DataRow.IsNull%2A> metodo per determinare se il valore è null.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome della colonna.</param>
        <summary>Ottiene un valore che indica se nella colonna denominata è presente un valore null.</summary>
        <returns>
          <see langword="true" /> se nella colonna è presente un valore null; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene modificato il valore di una colonna in un valore null e quindi utilizza il <xref:System.Data.DataRow.IsNull%2A> metodo per determinare se il valore è null.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Uno dei valori di <see cref="T:System.Data.DataRowVersion" /> che specifica la versione della riga. I valori consentiti sono <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
        <summary>Ottiene un valore che indica se nella classe <see cref="T:System.Data.DataColumn" /> e nell'enumerazione <see cref="T:System.Data.DataRowVersion" /> specificate è presente un valore null.</summary>
        <returns>
          <see langword="true" /> se nella colonna è presente un valore null; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene o imposta i dati memorizzati in una colonna specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" /> che contiene i dati.</param>
        <summary>Ottiene o imposta i dati archiviati nell'oggetto <see cref="T:System.Data.DataColumn" /> specificato.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che contiene i dati dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta la proprietà, viene generata un'eccezione se viene generata un'eccezione di <xref:System.Data.DataTable.ColumnChanging> evento.  
  
 Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A> per le eccezioni che possono essere generate.  
  
   
  
## Examples  
 Negli esempi seguenti viene illustrato l'utilizzo del <xref:System.Data.DataRow.Item%2A> proprietà per ottenere e impostare il valore di un indice di colonna specifica. Nel primo esempio viene ottenuto il valore della prima colonna in qualsiasi riga che un utente fa clic in un <xref:System.Windows.Forms.DataGrid> controllo. La seconda imposta un valore passato come argomento al metodo.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonna non appartiene a questa tabella.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> è Null.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di impostare un valore in una riga eliminata.</exception>
        <exception cref="T:System.InvalidCastException">Mancata corrispondenza tra i tipi di dati del valore e della colonna.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indice in base zero della colonna.</param>
        <summary>Ottiene o imposta i dati archiviati nella colonna specificata in base all'indice.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che contiene i dati dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta la proprietà, viene generata un'eccezione se viene generata un'eccezione di <xref:System.Data.DataTable.ColumnChanging> evento.  
  
 Se si tratta di una modifica, vedere <xref:System.Data.DataRow.EndEdit%2A> per le eccezioni che possono essere generate.  
  
   
  
## Examples  
 Negli esempi seguenti viene illustrato l'utilizzo del <xref:System.Data.DataRow.Item%2A> proprietà per ottenere e impostare il valore di un indice di colonna specifica. Nel primo esempio viene ottenuto il valore della prima colonna in qualsiasi riga che un utente fa clic in un <xref:System.Windows.Forms.DataGrid> controllo.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Viene generata quando si tenta di impostare un valore in una riga eliminata.</exception>
        <exception cref="T:System.IndexOutOfRangeException">L'argomento <paramref name="columnIndex" /> non è compreso nell'intervallo.</exception>
        <exception cref="T:System.InvalidCastException">Viene generata quando si imposta il valore e la classe <see cref="T:System.Type" /> del nuovo valore non corrisponde alla proprietà <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome della colonna.</param>
        <summary>Ottiene o imposta i dati archiviati nella colonna specificata in base al nome.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che contiene i dati dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta la proprietà, viene generata un'eccezione se viene generata un'eccezione di <xref:System.Data.DataTable.ColumnChanging> evento.  
  
 Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A> per le eccezioni che possono essere generate.  
  
   
  
## Examples  
 Negli esempi seguenti viene illustrato l'utilizzo del <xref:System.Data.DataRow.Item%2A> proprietà per ottenere e impostare il valore di un indice di colonna specifica. Nel primo esempio viene ottenuto il valore della prima colonna in qualsiasi riga che un utente fa clic in un <xref:System.Windows.Forms.DataGrid> controllo. La seconda imposta un valore passato come argomento al metodo.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Impossibile trovare la colonna specificata dal parametro <paramref name="columnName" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Viene generata quando si tenta di impostare un valore in una riga eliminata.</exception>
        <exception cref="T:System.InvalidCastException">Viene generata quando si imposta un valore e la relativa classe <see cref="T:System.Type" /> non corrisponde alla proprietà <see cref="P:System.Data.DataColumn.DataType" />.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Si verifica quando si tenta di immettere un valore null in una colonna la cui proprietà <see cref="P:System.Data.DataColumn.AllowDBNull" /> è impostata su <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" /> che contiene informazioni sulla colonna.</param>
        <param name="version">Uno dei valori dell'enumerazione <see cref="T:System.Data.DataRowVersion" /> che specifica la versione della riga desiderata. I valori consentiti sono <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
        <summary>Ottiene la versione specificata dei dati archiviati nell'oggetto <see cref="T:System.Data.DataColumn" /> specificato.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che contiene i dati dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `version` non deve essere confuso con il <xref:System.Data.DataRow.RowState*> proprietà. Il `version` argomento descrive lo stato dei dati di cui sono contenuti in base alla colonna rispetto al valore originale della colonna.  
  
 Quando si imposta la proprietà, viene generata un'eccezione se viene generata un'eccezione di <xref:System.Data.DataTable.ColumnChanging> evento.  
  
 Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A> per le eccezioni che possono essere generate.  
  
   
  
## Examples  
 Nell'esempio seguente ottiene il valore corrente di una cella selezionata nel <xref:System.Windows.Forms.DataGrid> controllo.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonna non appartiene a questa tabella.</exception>
        <exception cref="T:System.ArgumentNullException">L'argomento <paramref name="column" /> è null.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone di questa versione dei dati.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indice in base zero della colonna.</param>
        <param name="version">Uno dei valori dell'enumerazione <see cref="T:System.Data.DataRowVersion" /> che specifica la versione della riga desiderata. I valori consentiti sono <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
        <summary>Ottiene i dati archiviati nella colonna specificata in base all'indice e alla versione dei dati da recuperare.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che contiene i dati dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare o aggiornare una riga dopo la chiamata di <xref:System.Data.DataRow.BeginEdit%2A> metodo; Analogamente, il <xref:System.Data.DataRow.EndEdit%2A> metodo deve essere chiamato per eseguire il commit della modifica. Dopo aver chiamato il <xref:System.Data.DataRow.EndEdit%2A> (metodo), e prima di chiamare il <xref:System.Data.DataRow.AcceptChanges%2A> (metodo), le rappresentazioni interne dell'originale e nuovi proposto i valori vengono archiviati. Di conseguenza, finché non si chiama il <xref:System.Data.DataRow.AcceptChanges%2A>, è possibile utilizzare il `version` argomento per specificare quale versione di un valore di colonna da utilizzare, ovvero il `DataRowVersion.Original` o `DataRowVersion.Proposed`. Tuttavia, appena si chiama il <xref:System.Data.DataRow.AcceptChanges%2A> metodo, la versione della colonna ripristinato `DataRowVersion.Original`. Se la riga è nuova, è anche possibile passare `DataRowVersion.Default` per il parametro per recuperare il valore predefinito della colonna. Quando si passa `DataRowVersion.Current`, la proprietà restituisce l'attuale valore, qualunque sia la relativa versione.  
  
> [!NOTE]
>  Il <xref:System.Data.DataRow.BeginEdit%2A> metodo viene chiamato in modo implicito quando si modifica il valore di un controllo con associazione a dati o quando un <xref:System.Data.DataRow> oggetto viene aggiunto al <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A> metodo viene chiamato in modo implicito quando si chiamano i metodi seguenti: il <xref:System.Data.DataRow.AcceptChanges%2A> metodo il <xref:System.Data.DataRow> oggetto, il <xref:System.Data.DataTable.AcceptChanges%2A> metodo il <xref:System.Data.DataTable> oggetto, o <xref:System.Data.DataRow.CancelEdit%2A> (metodo).  
  
 Al contrario, il <xref:System.Data.DataRowVersion> enumerazione `Current` restituisce la versione dei dati dopo il <xref:System.Data.DataRow.EndEdit%2A> metodo è stato chiamato.  
  
 Il `version` argomento non deve essere confuso con il <xref:System.Data.DataRow.RowState*> proprietà. Il `version` argomento descrive lo stato dei dati di cui sono contenuti in base alla colonna rispetto al valore originale della colonna. Il <xref:System.Data.DataRow.RowState*> proprietà descrive lo stato dell'intera riga rispetto al padre <xref:System.Data.DataTable>.  
  
 Quando si imposta la proprietà, viene generata un'eccezione se viene generata un'eccezione di <xref:System.Data.DataTable.ColumnChanging> evento.  
  
 Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A> per le eccezioni che possono essere generate.  
  
   
  
## Examples  
 Nell'esempio seguente ottiene il valore corrente di una colonna mediante il <xref:System.Data.DataRow.Item%2A> proprietà del <xref:System.Data.DataRow> oggetto.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'argomento <paramref name="columnIndex" /> non è compreso nell'intervallo.</exception>
        <exception cref="T:System.InvalidCastException">Mancata corrispondenza tra i tipi di dati del valore e della colonna.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone di questa versione dei dati.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di impostare un valore in una riga eliminata.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome della colonna.</param>
        <param name="version">Uno dei valori dell'enumerazione <see cref="T:System.Data.DataRowVersion" /> che specifica la versione della riga desiderata. I valori consentiti sono <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
        <summary>Ottiene la versione specificata dei dati archiviati nella colonna specificata.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che contiene i dati dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La versione non deve essere confuso con il <xref:System.Data.DataRow.RowState*> proprietà. Il `version` argomento descrive lo stato dei dati di cui sono contenuti in base alla colonna rispetto al valore originale della colonna. Il <xref:System.Data.DataRow.RowState*> proprietà descrive lo stato dell'intera riga rispetto al padre <xref:System.Data.DataTable>.  
  
 Quando si imposta la proprietà, viene generata un'eccezione se viene generata un'eccezione di <xref:System.Data.DataTable.ColumnChanging> evento.  
  
 Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A> per le eccezioni che possono essere generate.  
  
   
  
## Examples  
 Nell'esempio seguente ottiene la versione corrente dei dati in una cella selezionata di una <xref:System.Windows.Forms.DataGrid> controllo.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Impossibile trovare la colonna specificata dal parametro <paramref name="columnName" />.</exception>
        <exception cref="T:System.InvalidCastException">Mancata corrispondenza tra i tipi di dati del valore e della colonna.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La riga non dispone di questa versione dei dati.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">La riga è stata eliminata.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta tutti i valori per la riga mediante una matrice.</summary>
        <value>Matrice di tipo <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per impostare o ottenere valori per questa riga tramite una matrice. Se si utilizza questa proprietà per impostare i valori, la matrice deve avere le stesse dimensioni e della raccolta di colonne di ordinamento. Il passaggio di `null` nel <xref:System.Data.DataRow.ItemArray%2A> indica che è stato specificato alcun valore.  
  
 È possibile generare eccezioni nel <xref:System.Data.DataTable.ColumnChanging> evento o <xref:System.Data.DataTable.RowChanging> evento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere e impostare i valori utilizzando il <xref:System.Data.DataRow.ItemArray%2A> proprietà.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La matrice è maggiore del numero di colonne nella tabella.</exception>
        <exception cref="T:System.InvalidCastException">Mancata corrispondenza tra un valore nella matrice e la relativa proprietà <see cref="P:System.Data.DataColumn.DataType" /> nella classe <see cref="T:System.Data.DataColumn" /> corrispondente.</exception>
        <exception cref="T:System.Data.ConstraintException">Un vincolo è stato interrotto da un'operazione di modifica.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Si è tentato di modificare il valore di una colonna in sola lettura.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Si è tentato di immettere un valore null in una colonna in cui la proprietà <see cref="P:System.Data.DataColumn.AllowDBNull" /> dell'oggetto <see cref="T:System.Data.DataColumn" /> è <see langword="false" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">La riga è stata eliminata.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rifiuta tutte le modifiche apportate alla riga sin dall'ultima chiamata al metodo <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si chiama il <xref:System.Data.DataRow.RejectChanges%2A> (metodo), il <xref:System.Data.DataRow.CancelEdit%2A> metodo viene chiamato in modo implicito per annullare tutte le modifiche. Se <xref:System.Data.DataRow.RowState*> viene eliminata o modificata, verranno ripristinati i valori precedenti, la riga e <xref:System.Data.DataRow.RowState*> diventa subisce modifiche. Se il <xref:System.Data.DataRow.RowState*> viene aggiunta la riga viene rimossa.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un semplice <xref:System.Data.DataTable> con 2 colonne e 10 righe. Dopo diversi <xref:System.Data.DataRow> vengono eliminati gli elementi con il <xref:System.Data.DataRow.Delete%2A> metodo, una delle righe è chiamando il metodo <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">La riga non appartiene alla tabella.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la descrizione personalizzata dell'errore di una riga.</summary>
        <value>Testo che descrive un errore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usa il <xref:System.Data.DataRow.HasErrors%2A> proprietà per determinare se un <xref:System.Data.DataRow> contiene errori.  
  
   
  
## Examples  
 Nell'esempio seguente imposta il testo di errore per dieci righe di una tabella visualizzata in un <xref:System.Windows.Forms.DataGrid> controllo.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato corrente della riga rispetto alla relativa relazione con la classe <see cref="T:System.Data.DataRowCollection" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Data.DataRowState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.Data.DataRow.RowState*> dipende da due fattori: il tipo di operazione è stato eseguito sulla riga e se <xref:System.Data.DataRow.AcceptChanges%2A> è stato chiamato sul <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 Nell'esempio seguente viene innanzitutto creata una nuova <xref:System.Data.DataTable> con una sola colonna, quindi viene creato un singolo <xref:System.Data.DataRow>. Come il <xref:System.Data.DataRow> viene creato, aggiunto, modificato ed eliminato, relativo <xref:System.Data.DataRow.RowState*> viene stampato.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Modifica la proprietà <see cref="P:System.Data.DataRow.RowState" /> di una classe <see cref="T:System.Data.DataRow" /> in <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifica la proprietà <xref:System.Data.DataRow.RowState*> di una classe <xref:System.Data.DataRow> in `Added`. Se la riga corrente non è presente in entrambi un `Unchanged` o un `Added` stato, genera un <xref:System.InvalidOperationException> con il messaggio che `SetAdded` può essere richiamato solo su un `DataRow` istanza in cui il `RowState` è `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la descrizione dell'errore per una colonna.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" /> per il quale impostare la descrizione dell'errore.</param>
        <param name="error">Descrizione dell'errore.</param>
        <summary>Imposta la descrizione dell'errore per una colonna specificata come oggetto <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per esaminare le descrizioni degli errori, utilizzare il <xref:System.Data.DataRow.GetColumnError%2A> metodo.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> proprietà. Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo per recuperare tutte le colonne con errori.  
  
 Se `null` o una stringa vuota viene passata come il `error` parametro, il <xref:System.Data.DataRow> si comporta come se è stato impostato alcun errore e <xref:System.Data.DataRow.HasErrors%2A> restituirà false.  
  
 Per impostare una descrizione dell'errore personalizzato per l'intera riga, utilizzare il <xref:System.Data.DataRow.RowError%2A> proprietà.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> metodo.  
  
 Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente imposta una descrizione dell'errore per un determinato <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indice in base zero della colonna.</param>
        <param name="error">Descrizione dell'errore.</param>
        <summary>Imposta la descrizione dell'errore per una colonna specificata in base all'indice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo viene utilizzato per impostare le descrizioni degli errori personalizzata per le colonne specificate. È possibile utilizzare il <xref:System.Windows.Forms.ErrorProvider> controllo per visualizzare il testo dell'errore.  
  
 Per esaminare le descrizioni degli errori, utilizzare il <xref:System.Data.DataRow.GetColumnError%2A> metodo.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> proprietà. Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo per recuperare tutte le colonne con errori.  
  
 Se `null` o una stringa vuota viene passata come il `error` parametro, il <xref:System.Data.DataRow> si comporta come se è stato impostato alcun errore e <xref:System.Data.DataRow.HasErrors%2A> restituirà false.  
  
 Per impostare una descrizione dell'errore personalizzato per l'intera riga, utilizzare il <xref:System.Data.DataRow.RowError%2A> proprietà.  
  
 Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A> metodo.  
  
 Per impostare il testo di errore che si applica a un'intera riga, impostare il <xref:System.Data.DataRow.RowError%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente imposta una descrizione dell'errore per un determinato <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'argomento <paramref name="columnIndex" /> non rientra nell'intervallo.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome della colonna.</param>
        <param name="error">Descrizione dell'errore.</param>
        <summary>Imposta la descrizione dell'errore per una colonna specificata in base al nome.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nome di una colonna viene impostato con il <xref:System.Data.DataColumn.ColumnName%2A> proprietà la <xref:System.Data.DataColumn> classe.  
  
 Per esaminare le descrizioni degli errori, utilizzare il <xref:System.Data.DataRow.GetColumnError%2A> metodo.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> proprietà. Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A> metodo per recuperare tutte le colonne con errori.  
  
 Se `null` o una stringa vuota viene passata come il `error` parametro, il <xref:System.Data.DataRow> si comporta come se è stato impostato alcun errore e <xref:System.Data.DataRow.HasErrors%2A> restituirà false.  
  
 Per impostare una descrizione dell'errore personalizzato per l'intera riga, utilizzare il <xref:System.Data.DataRow.RowError%2A> proprietà.  
  
 Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A> metodo.  
  
 Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente imposta una descrizione dell'errore per un determinato <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Modifica la proprietà <see cref="P:System.Data.DataRow.RowState" /> di una classe <see cref="T:System.Data.DataRow" /> in <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifica la proprietà <xref:System.Data.DataRow.RowState*> di una classe <xref:System.Data.DataRow> in `Modified`. Se la riga corrente non è presente in entrambi un `Unchanged` o un `Added` stato, genera un <xref:System.InvalidOperationException> con il messaggio che `SetModified` può essere richiamato solo su un `DataRow` istanza in cui il `RowState` è `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Imposta il valore della classe <see cref="T:System.Data.DataColumn" /> specificata su un valore null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Data.DataRow.IsNull%2A> metodo per determinare se una colonna contiene un valore null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la riga padre di un oggetto <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nuovo oggetto <see cref="T:System.Data.DataRow" /> padre.</param>
        <summary>Imposta la riga padre di un oggetto <see cref="T:System.Data.DataRow" /> con il nuovo oggetto <see cref="T:System.Data.DataRow" /> padre specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nuovo oggetto <see cref="T:System.Data.DataRow" /> padre.</param>
        <param name="relation">Relazione <see cref="T:System.Data.DataRelation" /> da utilizzare.</param>
        <summary>Imposta la riga padre di un oggetto <see cref="T:System.Data.DataRow" /> con il nuovo oggetto <see cref="T:System.Data.DataRow" /> e il nuovo oggetto <see cref="T:System.Data.DataRelation" /> padre specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente imposta la riga padre di una riga figlio specifico.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Una delle righe non appartiene a una tabella</exception>
        <exception cref="T:System.ArgumentNullException">Una delle righe è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La relazione non appartiene alla classe <see cref="T:System.Data.DataRelationCollection" /> dell'oggetto <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La classe <see cref="T:System.Data.DataTable" /> figlio della relazione non è la tabella a cui questa riga appartiene.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.DataTable" /> di cui è presente uno schema in questa riga.</summary>
        <value>Oggetto <see cref="T:System.Data.DataTable" /> cui appartiene questa riga.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Data.DataRow> non appartiene necessariamente all'insieme di una tabella di righe. Questo comportamento si verifica quando il <xref:System.Data.DataRow> è stata creata ma non è stato aggiunto per il <xref:System.Data.DataRowCollection>. Se il <xref:System.Data.DataRow.RowState*> restituisce proprietà `DataRowState.Detached`, la riga non è presente in qualsiasi raccolta.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataRow.Table%2A> proprietà per restituire un riferimento alla raccolta di colonne di <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>