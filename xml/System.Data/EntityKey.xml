<Type Name="EntityKey" FullName="System.Data.EntityKey">
  <TypeSignature Language="C#" Value="public sealed class EntityKey : IEquatable&lt;System.Data.EntityKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityKey extends System.Object implements class System.IEquatable`1&lt;class System.Data.EntityKey&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityKey&#xA;Implements IEquatable(Of EntityKey)" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityKey sealed : IEquatable&lt;System::Data::EntityKey ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.EntityKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2dd6f-101">Fornisce un riferimento durevole a un oggetto che rappresenta un'istanza di un tipo di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-101">Provides a durable reference to an object that is an instance of an entity type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-102">Gli oggetti <xref:System.Data.EntityKey> non sono modificabili, ossia non possono essere modificati dopo essere stati costruiti.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-102">The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.</span></span>  
  
 <span data-ttu-id="2dd6f-103">Per ulteriori informazioni, vedere [utilizzo delle chiavi di entità](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-103">For more information, see [Working with Entity Keys](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dd6f-104">Questi esempi sono basati sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-104">These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="2dd6f-105">Negli esempi viene illustrato come creare e usare un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-105">The examples show you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2dd6f-106">Inizializza una nuova istanza della classe <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2dd6f-107">Inizializza una nuova istanza della classe <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ entityKeyValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="2dd6f-108">Oggetto <see cref="T:System.String" /> che rappresenta il nome del set di entità qualificato dal nome del contenitore di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="2dd6f-109">Raccolta di <see cref="T:System.Collections.Generic.KeyValuePair" /> generica.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span>  
  
 <span data-ttu-id="2dd6f-110">Ogni coppia chiave/valore contiene il nome di una proprietà come chiave e il valore di tale proprietà come valore.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-110">Each key/value pair has a property name as the key and the value of that property as the value.</span></span> <span data-ttu-id="2dd6f-111">Deve esistere una sola coppia per ogni proprietà che fa parte di <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span></span> <span data-ttu-id="2dd6f-112">L'ordine delle coppie chiave/valore non è importante, ma è necessario che sia inclusa ogni proprietà chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-112">The order of the key/value pairs is not important, but each key property should be included.</span></span> <span data-ttu-id="2dd6f-113">I nomi della proprietà sono nomi semplici non qualificati con un nome del tipo di entità o con il nome dello schema.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span></span></param>
        <summary><span data-ttu-id="2dd6f-114">Inizializza una nuova istanza della classe <see cref="T:System.Data.EntityKey" /> con un nome del set di entità e una raccolta di <see cref="T:System.Collections.Generic.KeyValuePair" /> generica.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2dd6f-115">Questo esempio è basato il [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-115">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="2dd6f-116">Nell'esempio viene illustrato come creare e usare un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-116">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.EntityKeyMember&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of EntityKeyMember))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Data::EntityKeyMember ^&gt; ^ entityKeyValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="2dd6f-117">Oggetto <see cref="T:System.String" /> che rappresenta il nome del set di entità qualificato dal nome del contenitore di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="2dd6f-118">Raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.Data.EntityKeyMember" /> con cui inizializzare la chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span></span></param>
        <summary><span data-ttu-id="2dd6f-119">Inizializza una nuova istanza della classe <see cref="T:System.Data.EntityKey" /> con un nome del set di entità e una raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.Data.EntityKeyMember" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, string keyName, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, keyName As String, keyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::String ^ keyName, System::Object ^ keyValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="2dd6f-120">Oggetto <see cref="T:System.String" /> che rappresenta il nome del set di entità qualificato dal nome del contenitore di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="keyName"><span data-ttu-id="2dd6f-121">Oggetto <see cref="T:System.String" /> che rappresenta il nome della chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-121">A <see cref="T:System.String" /> that is the name of the key.</span></span></param>
        <param name="keyValue"><span data-ttu-id="2dd6f-122">Oggetto <see cref="T:System.Object" /> che rappresenta il valore della chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-122">An <see cref="T:System.Object" /> that is the key value.</span></span></param>
        <summary><span data-ttu-id="2dd6f-123">Inizializza una nuova istanza della classe <see cref="T:System.Data.EntityKey" /> con un nome del set di entità e una coppia di chiavi di entità specifica.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2dd6f-124">Questo esempio è basato il [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-124">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="2dd6f-125">Nell'esempio viene illustrato come creare e usare un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-125">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainerName">
      <MemberSignature Language="C#" Value="public string EntityContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd6f-126">Ottiene o imposta il nome del contenitore di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-126">Gets or sets the name of the entity container.</span></span></summary>
        <value><span data-ttu-id="2dd6f-127">Valore <see cref="T:System.String" /> che rappresenta il nome del contenitore dell'entità a cui appartiene l'oggetto <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-127">A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKeyValues">
      <MemberSignature Language="C#" Value="public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKeyMember[] EntityKeyValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKeyValues As EntityKeyMember()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ EntityKeyValues { cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ get(); void set(cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKeyMember[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd6f-128">Ottiene o imposta i valori di chiave associati a questo oggetto <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <value><span data-ttu-id="2dd6f-129">Oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> dei valori di chiave per questo oggetto <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-130">La classe <xref:System.Data.EntityKey> contiene una copia dei valori che costituiscono la chiave logica specificata per questo tipo di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-130">The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.</span></span>  
  
 <span data-ttu-id="2dd6f-131">Ciascun membro dell'oggetto <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> contiene un nome della proprietà e un valore in un oggetto <xref:System.Collections.Generic.KeyValuePair%602>, dove la chiave è il nome della proprietà e il valore è il valore effettivo della proprietà nell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-131">The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityNotValidKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey EntityNotValidKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey EntityNotValidKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.EntityNotValidKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EntityNotValidKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ EntityNotValidKey;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd6f-132">Oggetto <see cref="T:System.Data.EntityKey" /> semplice che identifica un'entità risultante da un'operazione [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) non riuscita.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-133">Sono disponibili vari modi per ottenere un'entità non valida.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-133">There are various ways to get an invalid entity.</span></span> <span data-ttu-id="2dd6f-134">Lo scenario più comune è quando un [!INCLUDE[esql](~/includes/esql-md.md)] query viene utilizzata la [trattare](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operatore di interpretare un'istanza di un tipo polimorfico di un determinato tipo e l'istanza in questione non corrisponde.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-134">The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</span></span> <span data-ttu-id="2dd6f-135">([Trattare](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) è simile a c# `as` operator).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-135">([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator).</span></span> <span data-ttu-id="2dd6f-136">In questo caso, la query restituisce un'entità non valida e la chiave dell'entità risultante viene impostata su <xref:System.Data.EntityKey.EntityNotValidKey>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-136">In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd6f-137">Ottiene o imposta il nome del set di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-137">Gets or sets the name of the entity set.</span></span></summary>
        <value><span data-ttu-id="2dd6f-138">Valore <see cref="T:System.String" /> che rappresenta il nome del set dell'entità a cui appartiene l'oggetto <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-138">A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2dd6f-139">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-139">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.EntityKey other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.EntityKey other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::EntityKey ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2dd6f-140">Oggetto <see cref="T:System.Data.EntityKey" /> da confrontare con l'istanza.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="2dd6f-141">Restituisce un valore che indica se questa istanza è uguale a un oggetto <see cref="T:System.Data.EntityKey" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <returns>
          <span data-ttu-id="2dd6f-142"><see langword="true" /> se questa istanza e <paramref name="other" /> hanno gli stessi valori; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-142"><see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-143">Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:</span><span class="sxs-lookup"><span data-stu-id="2dd6f-143">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="2dd6f-144">Le chiavi temporanee utilizzano un'uguaglianza di riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-144">Temporary keys use reference equality.</span></span> <span data-ttu-id="2dd6f-145">Ovvero, due riferimenti alla stessa istanza temporanea di <xref:System.Data.EntityKey> sono uguali, ma non possono essere presenti altre istanze di <xref:System.Data.EntityKey> uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-145">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="2dd6f-146">Le chiavi permanenti determinano l'uguaglianza in base ai valori delle proprietà chiave contenute e in base all'oggetto <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-146">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="2dd6f-147">Ovvero, è possibile avere due istanze separate di <xref:System.Data.EntityKey> uguali se i relativi set di entità sono uguali e se i relativi valori di chiave sono uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-147">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="2dd6f-148">Inoltre, diversamente dalle chiavi permanenti, le chiavi temporanee non contengono oggetti <xref:System.Data.Metadata.Edm.EntitySet> né valori di chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-148">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2dd6f-149">Oggetto <see cref="T:System.Object" /> da confrontare con l'istanza.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-149">An <see cref="T:System.Object" /> to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="2dd6f-150">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-150">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="2dd6f-151"><see langword="true" /> se questa istanza e <paramref name="obj" /> hanno gli stessi valori; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-151"><see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-152">Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:</span><span class="sxs-lookup"><span data-stu-id="2dd6f-152">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="2dd6f-153">Le chiavi temporanee utilizzano un'uguaglianza di riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-153">Temporary keys use reference equality.</span></span> <span data-ttu-id="2dd6f-154">Ovvero, due riferimenti alla stessa istanza temporanea di <xref:System.Data.EntityKey> sono uguali, ma non possono essere presenti altre istanze di <xref:System.Data.EntityKey> uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-154">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="2dd6f-155">Le chiavi permanenti determinano l'uguaglianza in base ai valori delle proprietà chiave contenute e in base all'oggetto <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-155">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="2dd6f-156">Ovvero, è possibile avere due istanze separate di <xref:System.Data.EntityKey> uguali se i relativi oggetti <xref:System.Data.Metadata.Edm.EntitySet> sono uguali e se i relativi valori di chiave sono uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-156">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="2dd6f-157">Inoltre, diversamente dalle chiavi permanenti, le chiavi temporanee non contengono oggetti <xref:System.Data.Metadata.Edm.EntitySet> né valori di chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-157">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySet(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySet(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace"><span data-ttu-id="2dd6f-158">Area di lavoro metadati contenente l'entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-158">The metadata workspace that contains the entity.</span></span></param>
        <summary><span data-ttu-id="2dd6f-159">Ottiene il set di entità per la chiave di entità presente nell'area di lavoro metadati specificata.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-159">Gets the entity set for this entity key from the given metadata workspace.</span></span></summary>
        <returns><span data-ttu-id="2dd6f-160">Oggetto <see cref="T:System.Data.Metadata.Edm.EntitySet" /> per la chiave di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-161">L'accesso al set di entità viene eseguito in base al nome del contenitore di entità e al nome del set di entità della chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-161">The entity set is accessed based on the entity container name and entity set name of the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2dd6f-162">Non è possibile trovare il set di entità nell'area di lavoro metadati specificata.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-162">The entity set could not be located in the specified metadata workspace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2dd6f-163">Viene utilizzato come funzione hash per l'oggetto <see cref="T:System.Data.EntityKey" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span></span> <span data-ttu-id="2dd6f-164">Il metodo <see cref="M:System.Data.EntityKey.GetHashCode" /> è adatto per algoritmi hash e strutture dei dati, ad esempio una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-164"><see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="2dd6f-165">Codice hash per l'oggetto <see cref="T:System.Data.EntityKey" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd6f-166">Ottiene un valore che indica se l'oggetto <see cref="T:System.Data.EntityKey" /> è temporaneo.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span></span></summary>
        <value>
          <span data-ttu-id="2dd6f-167"><see langword="true" /> se l'oggetto <see cref="T:System.Data.EntityKey" /> è temporaneo, in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-167"><see langword="true" /> if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-168">Quando viene creata una nuova entità, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] definisce una chiave temporanea e imposta la proprietà <xref:System.Data.EntityKey.IsTemporary%2A> su `true`.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-168">When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`.</span></span> <span data-ttu-id="2dd6f-169">Quando si chiama il <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> (metodo), il [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] viene assegnato un tasto permanente e imposta il <xref:System.Data.EntityKey.IsTemporary%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-169">When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dd6f-170">Le chiavi temporanee vengono costruite automaticamente dal framework. Non possono essere costruite direttamente da un utente.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-170">Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</span></span>  
  
 <span data-ttu-id="2dd6f-171">Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:</span><span class="sxs-lookup"><span data-stu-id="2dd6f-171">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="2dd6f-172">Le chiavi temporanee utilizzano un'uguaglianza di riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-172">Temporary keys use reference equality.</span></span> <span data-ttu-id="2dd6f-173">Ovvero, due riferimenti alla stessa istanza temporanea di <xref:System.Data.EntityKey> sono uguali, ma non possono essere presenti altre istanze di <xref:System.Data.EntityKey> uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-173">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="2dd6f-174">Le chiavi permanenti determinano l'uguaglianza in base ai valori delle proprietà chiave contenute e in base all'oggetto <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-174">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="2dd6f-175">Ovvero, è possibile avere due istanze separate di <xref:System.Data.EntityKey> uguali se i relativi set di entità sono uguali e se i relativi valori di chiave sono uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-175">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="2dd6f-176">Inoltre, diversamente dalle chiavi permanenti, le chiavi temporanee non contengono oggetti <xref:System.Data.Metadata.Edm.EntitySet> né valori di chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-176">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="2dd6f-177">Quando viene chiamato il metodo <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> su un oggetto <xref:System.Data.Objects.ObjectStateEntry> dell'entità e l'entità passa dallo stato <xref:System.Data.EntityState.Added> allo stato <xref:System.Data.EntityState.Unchanged>, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] calcola automaticamente una nuova chiave permanente per l'entità e sincronizza tutti i riferimenti alle chiavi temporanee.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-177">When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEntitySetKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey NoEntitySetKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey NoEntitySetKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.NoEntitySetKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoEntitySetKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ NoEntitySetKey;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd6f-178">Un oggetto <see cref="T:System.Data.EntityKey" /> singleton mediante il quale viene identificata un'entità di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-179">Un'entità di sola lettura identifica un'entità che è sempre valida, ad eccezione del fatto che non è associata a un set di entità effettivo.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-179">A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</span></span> <span data-ttu-id="2dd6f-180">Tale condizione può verificarsi come parte del risultato di una query [!INCLUDE[esql](~/includes/esql-md.md)] che costruisce e restituisce un'istanza dell'entità specificata all'interno del testo della query (diversamente da un'entità recuperata da una tabella di database).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-180">This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</span></span> <span data-ttu-id="2dd6f-181">Un'entità che non dispone di un set di entità non può essere resa persistente nel database finché non viene associata a un set di entità.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-181">An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</span></span> <span data-ttu-id="2dd6f-182">Pertanto, il materializzatore di oggetti tratterà questo tipo di entità come se fosse specificata l'opzione di unione <xref:System.Data.Objects.MergeOption.NoTracking>, indipendentemente dall'opzione di unione effettiva specificata.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-182">Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified.</span></span> <span data-ttu-id="2dd6f-183">Verrà creato un oggetto entità, ma la relativa identità non verrà risolta. Tale oggetto non verrà inoltre aggiunto al gestore degli stati come parte del processo di materializzazione.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-183">An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2dd6f-184">Descrive l'origine e la destinazione di un flusso serializzato specificato e fornisce un ulteriore contesto definito dal chiamante.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="2dd6f-185">Metodo di supporto utilizzato per deserializzare un oggetto <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-186"><xref:System.Data.EntityKey.OnDeserialized%2A> viene utilizzato da Object Services durante la deserializzazione di un oggetto <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-186"><xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="2dd6f-187">Per ulteriori informazioni, vedere [serializzazione di oggetti](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-187">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2dd6f-188">Descrive l'origine e la destinazione di un flusso serializzato specificato e fornisce un ulteriore contesto definito dal chiamante.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="2dd6f-189">Metodo di supporto utilizzato per deserializzare un oggetto <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-190"><xref:System.Data.EntityKey.OnDeserializing%2A> viene utilizzato da Object Services durante la deserializzazione di un oggetto <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-190"><xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="2dd6f-191">Per ulteriori informazioni, vedere [serializzazione di oggetti](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="2dd6f-191">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="2dd6f-192">Oggetto <see cref="T:System.Data.EntityKey" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="2dd6f-193">Oggetto <see cref="T:System.Data.EntityKey" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="2dd6f-194">Confronta due oggetti <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns>
          <span data-ttu-id="2dd6f-195"><see langword="true" /> se i valori <paramref name="key1" /> e <paramref name="key2" /> sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-195"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-196">Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:</span><span class="sxs-lookup"><span data-stu-id="2dd6f-196">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="2dd6f-197">Le chiavi temporanee utilizzano un'uguaglianza di riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-197">Temporary keys use reference equality.</span></span> <span data-ttu-id="2dd6f-198">Ovvero, due riferimenti alla stessa istanza temporanea di <xref:System.Data.EntityKey> sono uguali, ma non possono essere presenti altre istanze di <xref:System.Data.EntityKey> uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-198">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="2dd6f-199">Le chiavi permanenti determinano l'uguaglianza in base ai valori delle proprietà chiave contenute e in base all'oggetto <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-199">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="2dd6f-200">Ovvero, è possibile avere due istanze separate di <xref:System.Data.EntityKey> uguali se i relativi set di entità sono uguali e se i relativi valori di chiave sono uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-200">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="2dd6f-201">Inoltre, diversamente dalle chiavi permanenti, le chiavi temporanee non contengono oggetti <xref:System.Data.Metadata.Edm.EntitySet> né valori di chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-201">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="2dd6f-202">Il metodo equivalente per l'operatore è <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType> </format> </remarks> </Docs> 
     </Member> 
     <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType> Metodo</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>Boolean</ReturnType> </ReturnValue> <Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A <see cref="T:System.Data.EntityKey" /> da confrontare.</param></span><span class="sxs-lookup"><span data-stu-id="2dd6f-202">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format> </remarks> </Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue> <Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="2dd6f-203"><param name="key2">Oggetto <see cref="T:System.Data.EntityKey" /> da confrontare.</param></span><span class="sxs-lookup"><span data-stu-id="2dd6f-203"><param name="key2">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="2dd6f-204"><summary>Confronta due <see cref="T:System.Data.EntityKey" /> oggetti.</summary></span><span class="sxs-lookup"><span data-stu-id="2dd6f-204"><summary>Compares two <see cref="T:System.Data.EntityKey" /> objects.</summary></span></span>
        <span data-ttu-id="2dd6f-205"><returns> <see langword="true" /> Se il <paramref name="key1" /> e <paramref name="key2" /> valori non sono uguali; in caso contrario, <see langword="false" />.</returns></span><span class="sxs-lookup"><span data-stu-id="2dd6f-205"><returns> <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</returns></span></span>
        <span data-ttu-id="2dd6f-206"><remarks> <format type="text/markdown"><![CDATA[</span><span class="sxs-lookup"><span data-stu-id="2dd6f-206"><remarks> <format type="text/markdown"><![CDATA[</span></span>  
  
## Remarks  
 <span data-ttu-id="2dd6f-207">Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:</span><span class="sxs-lookup"><span data-stu-id="2dd6f-207">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="2dd6f-208">Le chiavi temporanee utilizzano un'uguaglianza di riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-208">Temporary keys use reference equality.</span></span> <span data-ttu-id="2dd6f-209">Ovvero, due riferimenti alla stessa istanza temporanea di <xref:System.Data.EntityKey> sono uguali, ma non possono essere presenti altre istanze di <xref:System.Data.EntityKey> uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-209">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="2dd6f-210">Le chiavi permanenti determinano l'uguaglianza in base ai valori delle proprietà chiave contenute e in base all'oggetto <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-210">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="2dd6f-211">Ovvero, è possibile avere due istanze separate di <xref:System.Data.EntityKey> uguali se i relativi set di entità sono uguali e se i relativi valori di chiave sono uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-211">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="2dd6f-212">Inoltre, diversamente dalle chiavi regolari, le chiavi temporanee non contengono oggetti <xref:System.Data.Metadata.Edm.EntitySet> né valori di chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-212">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>  
  
 <span data-ttu-id="2dd6f-213">Il metodo equivalente per l'operatore è <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-213">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="2dd6f-214">Oggetto <see cref="T:System.Data.EntityKey" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-214">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="2dd6f-215">Oggetto <see cref="T:System.Data.EntityKey" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-215">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="2dd6f-216">Confronta due oggetti <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-216">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns>
          <span data-ttu-id="2dd6f-217"><see langword="true" /> se i valori di <paramref name="key1" /> e <paramref name="key2" /> non sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-217"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd6f-218">Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:</span><span class="sxs-lookup"><span data-stu-id="2dd6f-218">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="2dd6f-219">Le chiavi temporanee utilizzano un'uguaglianza di riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-219">Temporary keys use reference equality.</span></span> <span data-ttu-id="2dd6f-220">Ovvero, due riferimenti alla stessa istanza temporanea di <xref:System.Data.EntityKey> sono uguali, ma non possono essere presenti altre istanze di <xref:System.Data.EntityKey> uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-220">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="2dd6f-221">Le chiavi permanenti determinano l'uguaglianza in base ai valori delle proprietà chiave contenute e in base all'oggetto <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-221">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="2dd6f-222">Ovvero, è possibile avere due istanze separate di <xref:System.Data.EntityKey> uguali se i relativi set di entità sono uguali e se i relativi valori di chiave sono uguali.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-222">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="2dd6f-223">Inoltre, diversamente dalle chiavi regolari, le chiavi temporanee non contengono oggetti <xref:System.Data.Metadata.Edm.EntitySet> né valori di chiave.</span><span class="sxs-lookup"><span data-stu-id="2dd6f-223">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>