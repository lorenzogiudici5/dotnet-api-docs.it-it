<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36f7519ace2300fdc9f2b918e4fcb6445b1dd405" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37669000" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <TypeSignature Language="F#" Value="type IDataReader = interface&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Consente di leggere uno o più flussi forward-only di set di risultati ottenuti eseguendo un comando in corrispondenza di un'origine dati e viene implementata dai provider di dati .NET Framework che accedono a database relazionali.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.IDataReader> e <xref:System.Data.IDataRecord> interfacce consentono a una classe che eredita implementare un `DataReader` (classe), che fornisce un metodo per leggere uno o più flussi forward-only di set di risultati. Per altre informazioni sulle `DataReader` le classi, vedere [recupero di dati mediante DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).  
  
 Un'applicazione non crea un'istanza di <xref:System.Data.IDataReader> interfaccia direttamente, ma crea un'istanza di una classe che eredita <xref:System.Data.IDataReader>.  
  
 Le classi che ereditano <xref:System.Data.IDataReader> deve implementare i membri ereditati e in genere definisce membri aggiuntivi per aggiungere funzionalità specifiche del provider.  
  
 Le modifiche apportate a un set di risultati, un altro processo o thread durante la lettura dei dati possono essere visibili all'utente di una classe che implementa un `IDataReader`. Tuttavia, il comportamento preciso viene provider dipende sia temporizzazione.  
  
   
  
## Examples  
 L'esempio seguente crea le istanze di classi derivate <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, e <xref:System.Data.SqlClient.SqlDataReader>. L'esempio legge i dati, scrive nella console. Infine, l'esempio chiude il <xref:System.Data.SqlClient.SqlDataReader>, quindi il <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Per promuovere la coerenza tra i provider di dati .NET Framework, assegnare un nome alla classe che eredita il form <paramref name="Prv" /> Command, dove <paramref name="Prv" /> è il prefisso uniform assegnato a tutte le classi in uno specifico spazio dei nomi provider di dati .NET Framework. Ad esempio, <paramref name="Sql" /> è il prefisso del <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> classe la <see langword="System.Data.SqlClient" /> dello spazio dei nomi.  Non è possibile creare un'istanza di un <see langword="DataReader" /> direttamente alla classe. Invece possibile ottenere il <see langword="DataReader" /> dell'istanza tramite il <see langword="ExecuteReader" /> metodo il <see langword="Command" /> oggetto. Pertanto, è necessario contrassegnare <see langword="DataReader" /> costruttori come interni.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude l'oggetto <see cref="T:System.Data.IDataReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare esplicitamente il <xref:System.Data.IDataReader.Close%2A> metodo quando si sta utilizzando il <xref:System.Data.IDataReader> usare associato <xref:System.Data.IDbConnection> per altri scopi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.IDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica il livello di annidamento della riga corrente.</summary>
        <value>Livello di annidamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella più esterna è di livello zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="iDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna di <see cref="T:System.Data.IDataReader" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione di <xref:System.Data.IDataReader.GetSchemaTable%2A> metodo per il Provider di dati .NET Framework per OLE DB viene eseguito il mapping al metodo OLE DB IColumnsRowset::, mentre le implementazioni per altri provider di dati .NET Framework non usare un livello di provider OLE DB. L'ordine in cui <xref:System.Data.IDataReader.GetSchemaTable%2A> restituisce metadati relativi a ogni colonna in una tabella e le colonne di DataReader che vengono restituite variano a seconda del provider di dati utilizzato. Nella tabella seguente elenca i provider di dati e i membri che implementano <xref:System.Data.IDataReader.GetSchemaTable%2A>.  
  
|Provider di dati|Member|  
|-------------------|------------|  
|Provider di dati .NET per ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
|Provider di dati .NET per OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
|.NET data Provider Pro Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
|.NET data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.IDataReader" /> è chiuso.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.IDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il lettore dati è chiuso.</summary>
        <value>
          <see langword="true" /> se il lettore dati è chiuso; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataReader.IsClosed%2A> e <xref:System.Data.IDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.IDataReader> viene chiuso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="iDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta il lettore dati al risultato successivo durante la lettura dei risultati di un batch di istruzioni SQL.</summary>
        <returns>
          <see langword="true" /> se sono presenti altre righe; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usato per elaborare più risultati, che possono essere ottenuti tramite l'esecuzione di istruzioni batch SQL.  
  
 Per impostazione predefinita, il lettore dati viene posizionato sul primo risultato.  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="iDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta l'oggetto <see cref="T:System.Data.IDataReader" /> al record successivo.</summary>
        <returns>
          <see langword="true" /> se sono presenti altre righe; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Posizione predefinita del <xref:System.Data.IDataReader> viene prima del primo record. Pertanto è necessario chiamare <xref:System.Data.IDataReader.Read%2A> per iniziare ad accedere ai dati.  
  
 Anche se il lettore dati è in uso, la connessione associata è occupati a soddisfare le <xref:System.Data.IDataReader>. Questo è il caso finché <xref:System.Data.IDataReader.Close%2A> viene chiamato.  
  
   
  
## Examples  
 L'esempio seguente crea le istanze delle tre classi derivate <xref:System.Data.OleDb.OleDbConnection>, un' <xref:System.Data.OleDb.OleDbCommand>e un <xref:System.Data.OleDb.OleDbDataReader>. L'esempio legge i dati, scrive nella console. Infine, l'esempio chiude il <xref:System.Data.OleDb.OleDbDataReader>, quindi il <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.IDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di righe modificate, inserite o eliminate dall'esecuzione dell'istruzione SQL.</summary>
        <value>Il numero di righe modificate, inserite o eliminate; 0 se nessuna riga è interessata o se l'istruzione non riesce; -1 per istruzioni SELECT.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.IDataReader.RecordsAffected%2A> non è impostata fino a quando non vengono lette tutte le righe e si chiude il <xref:System.Data.IDataReader>.  
  
 <xref:System.Data.IDataReader.IsClosed%2A> e <xref:System.Data.IDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.IDataReader> viene chiuso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>