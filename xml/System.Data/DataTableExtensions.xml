<Type Name="DataTableExtensions" FullName="System.Data.DataTableExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f08958ecd6928721c61e8f8c6e0b2acfd700a86" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36678241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataTableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataTableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataTableExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataTableExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines the extension methods to the <see cref="T:System.Data.DataTable" /> class. <see cref="T:System.Data.DataTableExtensions" /> is a static class.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsDataView">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView (this System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView (table As DataTable) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.DataTable -&gt; System.Data.DataView" Usage="System.Data.DataTableExtensions.AsDataView table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="table">The source <see cref="T:System.Data.DataTable" /> from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</param>
        <summary>Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object.</summary>
        <returns>A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> Abilita scenari con data binding [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] e possono essere creati da un oggetto tipizzato o <xref:System.Data.DataTable>, fornendo una visualizzazione predefinita di tale tabella. Dopo la creazione dell'oggetto <xref:System.Data.DataView> da <xref:System.Data.DataTable>, è possibile specificare le impostazioni di filtro e ordinamento. Il <xref:System.Data.DataView> viene quindi associato a un controllo dell'interfaccia utente, ad esempio un <xref:System.Windows.Forms.DataGrid> o <xref:System.Windows.Forms.DataGridView>, che fornisce un modello di associazione dati semplice.  
  
 Per ulteriori informazioni ed esempi, vedere [creazione di un oggetto DataView](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene creata una <xref:System.Data.DataView> dalla tabella SalesOrderDetail e lo imposta come origine dati di un <xref:System.Windows.Forms.BindingSource> oggetto, che funge da proxy per un <xref:System.Windows.Forms.DataGridView> controllo:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]
 [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDataView&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView&lt;T&gt; (this System.Data.EnumerableRowCollection&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView&lt;(class System.Data.DataRow) T&gt;(class System.Data.EnumerableRowCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView(Of T As DataRow) (source As EnumerableRowCollection(Of T)) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::EnumerableRowCollection&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.EnumerableRowCollection&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataView (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.AsDataView source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo di oggetti nella sequenza di origine, in genere <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</param>
        <summary>Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object representing the [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.</summary>
        <returns>A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> Abilita scenari associazione dati [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] e possono essere creati da un [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query. Il <xref:System.Data.DataView> rappresenta la query stessa e non è una visualizzazione sopra la query. Appena creato <xref:System.Data.DataView> deduce il filtro e ordinamento delle informazioni dalla query di cui è stato creato. Il <xref:System.Data.DataView> viene quindi associato a un controllo dell'interfaccia utente, ad esempio un <xref:System.Windows.Forms.DataGrid> o <xref:System.Windows.Forms.DataGridView>, che fornisce un modello di data binding semplice.  
  
 Il parametro `T` del parametro di input `source` può essere solo di tipo <xref:System.Data.DataRow> o un tipo derivato da <xref:System.Data.DataRow>.  
  
 Solo gli operatori di query seguenti sono supportati in una query considerata di creare <xref:System.Data.DataView>:  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  
  
 Per ulteriori informazioni ed esempi, vedere [creazione di un oggetto DataView](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.DataView> di ordini online ordinati in base al totale dovuto:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]
 [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt; AsEnumerable (this System.Data.DataTable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;class System.Data.DataRow&gt; AsEnumerable(class System.Data.DataTable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable (source As DataTable) As EnumerableRowCollection(Of DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;System::Data::DataRow ^&gt; ^ AsEnumerable(System::Data::DataTable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Data.DataTable -&gt; System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;" Usage="System.Data.DataTableExtensions.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">The source <see cref="T:System.Data.DataTable" /> to make enumerable.</param>
        <summary>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.</summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] le query funzionano sulle origini dati che implementano il <xref:System.Collections.Generic.IEnumerable%601> interfaccia o <xref:System.Linq.IQueryable> interfaccia.  Il <xref:System.Data.DataTable> classe non implementa entrambe le interfacce, è necessario chiamare il <xref:System.Data.DataTableExtensions.AsEnumerable%2A> metodo da usare i <xref:System.Data.DataTable> come origine nel `From` clausola di un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query. È anche possibile ottenere gli operatori personalizzati specifici del dominio, ad esempio <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, restituendo un <xref:System.Collections.Generic.IEnumerable%601> oggetto.  
  
 Gli oggetti enumerabili restituiti dal <xref:System.Data.DataTableExtensions.AsEnumerable%2A> metodo in modo permanente è associato al <xref:System.Data.DataTable> che lo ha prodotto. Più chiamate per il <xref:System.Data.DataTableExtensions.AsEnumerable%2A> metodo verrà restituito più oggetti queryable indipendenti, sono associati all'origine <xref:System.Data.DataTable>.  
  
   
  
## Examples  
 Nell'esempio seguente, il `DisplayProducts` metodo riceve un oggetto DataTable che contiene un DataColumn denominato `ProductName`, estrae il `ProductName` valori e quindi vengono stampati i valori.  
  
 [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]
 [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToDataTable&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T)) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataTable ^ CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataTable (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo di oggetti nella sequenza di origine, in genere <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
        <summary>Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> that contains the input sequence as the type of <see cref="T:System.Data.DataRow" /> objects.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro `T` del parametro di input `source` può essere solo di tipo <xref:System.Data.DataRow> o un tipo derivato da <xref:System.Data.DataRow>.  
  
 La sequenza di input può essere qualsiasi <xref:System.Collections.Generic.IEnumerable%601> di origine, non solo una query o una query su un <xref:System.Data.DataTable>. Si noti che se la sequenza di origine è una query, la chiamata di questo operatore forzerà l'esecuzione immediata. L'enumerazione la sequenza di origine può causare la generazione di eccezioni.  
  
 Lo schema della tabella di destinazione si basa sullo schema del primo <xref:System.Data.DataRow> riga nella sequenza di origine. I metadati della tabella viene estratto dal <xref:System.Data.DataRow> metadati e la tabella di valori da valori di colonna il <xref:System.Data.DataRow>. Per una classe tipizzata <xref:System.Data.DataTable>, tipi non vengono mantenuti. Dati e dello schema vengono trasferite, le righe della tabella di output risultante non verranno tuttavia dell'oggetto tipizzato <xref:System.Data.DataRow> tipo. Il <xref:System.Data.DataRow.RowState%2A> e <xref:System.Data.DataRow.RowError%2A> non vengono mantenute durante la copia dall'origine <xref:System.Data.DataRow> sull'oggetto restituito <xref:System.Data.DataTable>.  
  
 Quando un **null** riferimento o un tipo nullable con un valore di **null** è presente in un'origine <xref:System.Data.DataRow>, questo metodo sostituisce il valore nella destinazione <xref:System.Data.DataTable> con un valore di <xref:System.DBNull.Value>.  
  
 La tabella generata restituita dal metodo è il nome di tabella predefinito. Se si desidera denominare il <xref:System.Data.DataTable>, collegarlo a un <xref:System.Data.DataSet>, o eseguire qualsiasi altro <xref:System.Data.DataTable> operazione specifica, è necessario eseguire questa operazione dopo la tabella viene creata e restituita.  
  
 Per altre informazioni, vedere [creazione di un oggetto DataTable da una Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
   
  
## Examples  
 Nell'esempio seguente esegue una query sulla tabella SalesOrderHeader per gli ordini dopo l'8 agosto 2001 e utilizza il <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> metodo per creare un <xref:System.Data.DataTable> dalla query. <xref:System.Data.DataTable> viene quindi associato a <xref:System.Windows.Forms.BindingSource>, che funge da proxy per <xref:System.Windows.Forms.DataGridView>.  
  
 [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]
 [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> and a new table cannot be created.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.  The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.  A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo di oggetti nella sequenza di origine, in genere <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
        <param name="table">The destination <see cref="T:System.Data.DataTable" />.</param>
        <param name="options">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</param>
        <summary>Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro `T` del parametro di input `source` può essere solo di tipo <xref:System.Data.DataRow>, o un tipo derivato da <xref:System.Data.DataRow>.  
  
 La sequenza di input può essere qualsiasi <xref:System.Collections.Generic.IEnumerable%601> di origine, non solo una query su un <xref:System.Data.DataTable>. Si noti che se la sequenza di origine è una query, la chiamata di questo operatore forzerà l'esecuzione immediata. L'enumerazione la sequenza di origine può causare la generazione di eccezioni.  
  
 Lo schema della tabella di destinazione si basa sullo schema del primo <xref:System.Data.DataRow> riga nella sequenza di origine. I metadati della tabella viene estratto dal <xref:System.Data.DataRow> metadati e la tabella di valori da valori di colonna il <xref:System.Data.DataRow>. Per una classe tipizzata <xref:System.Data.DataTable>, tipi non vengono mantenuti. Dati e dello schema vengono trasferite, le righe della tabella di output risultante non verranno tuttavia dell'oggetto tipizzato <xref:System.Data.DataRow> tipo. Il <xref:System.Data.DataRow.RowState%2A> e <xref:System.Data.DataRow.RowError%2A> non vengono mantenute durante la copia dall'origine <xref:System.Data.DataRow> sull'oggetto restituito <xref:System.Data.DataTable>.  
  
 Quando un **null** riferimento o un tipo nullable con un valore di **null** è presente in un'origine <xref:System.Data.DataRow>, questo metodo sostituisce il valore nella destinazione <xref:System.Data.DataTable> con un valore di <xref:System.DBNull.Value>.  
  
 La tabella generata restituita dal metodo è il nome di tabella predefinito. Se si desidera denominare il <xref:System.Data.DataTable>, collegarlo a un <xref:System.Data.DataSet>, o eseguire qualsiasi altro <xref:System.Data.DataTable> operazione specifica, è necessario eseguire questa operazione dopo la tabella viene creata e restituita.  
  
 Per altre informazioni, vedere [creazione di un oggetto DataTable da una Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.  The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.  A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo di oggetti nella sequenza di origine, in genere <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
        <param name="table">The destination <see cref="T:System.Data.DataTable" />.</param>
        <param name="options">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</param>
        <param name="errorHandler">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate that represents the method that will handle an error.</param>
        <summary>Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro `T` del parametro di input `source` può essere solo di tipo <xref:System.Data.DataRow>, o un tipo derivato da <xref:System.Data.DataRow>.  
  
 La sequenza di input può essere qualsiasi <xref:System.Collections.Generic.IEnumerable%601> di origine, non solo una query su un <xref:System.Data.DataTable>. Si noti che se la sequenza di origine è una query, la chiamata di questo operatore forzerà l'esecuzione immediata. L'enumerazione la sequenza di origine può causare la generazione di eccezioni.  
  
 Lo schema della tabella di destinazione si basa sullo schema del primo <xref:System.Data.DataRow> riga nella sequenza di origine. I metadati della tabella viene estratto dal <xref:System.Data.DataRow> metadati e la tabella di valori da valori di colonna il <xref:System.Data.DataRow>. Per una classe tipizzata <xref:System.Data.DataTable>, tipi non vengono mantenuti. Dati e dello schema vengono trasferite, le righe della tabella di output risultante non verranno tuttavia dell'oggetto tipizzato <xref:System.Data.DataRow> tipo. Il <xref:System.Data.DataRow.RowState%2A> e <xref:System.Data.DataRow.RowError%2A> non vengono mantenute durante la copia dall'origine <xref:System.Data.DataRow> sull'oggetto restituito <xref:System.Data.DataTable>.  
  
 Quando un **null** riferimento o un tipo nullable con un valore di **null** è presente in un'origine <xref:System.Data.DataRow>, questo metodo sostituisce il valore nella destinazione <xref:System.Data.DataTable> con un valore di <xref:System.DBNull.Value>.  
  
 La tabella generata restituita dal metodo è il nome di tabella predefinito. Se si desidera denominare il <xref:System.Data.DataTable>, collegarlo a un <xref:System.Data.DataSet>, o eseguire qualsiasi altro <xref:System.Data.DataTable> operazione specifica, è necessario eseguire questa operazione dopo la tabella viene creata e restituita.  
  
 Se viene generata un'eccezione durante la copia di una riga di dati nella tabella di destinazione, ad esempio un'eccezione, il vincolo di `errorHandler` delegato viene chiamato. Un <xref:System.Data.FillErrorEventArgs> viene passato per il `errorHandler` delegato con i valori seguenti:  
  
-   Il <xref:System.Data.FillErrorEventArgs.Values%2A> è impostata su una copia dei dati di origine.  
  
-   Il <xref:System.Data.FillErrorEventArgs.DataTable%2A> è impostata su destinazione <xref:System.Data.DataTable>.  
  
-   Il <xref:System.Data.FillErrorEventArgs.Errors%2A> proprietà è impostata per l'eccezione rilevata.  
  
 Il <xref:System.Data.FillErrorEventArgs.Continue%2A> proprietà è di lettura al termine della chiamata del delegato. Se il <xref:System.Data.FillErrorEventArgs.Continue%2A> proprietà `true`, la sequenza di origine continua a essere enumerati e caricati nella tabella dati. Se il <xref:System.Data.FillErrorEventArgs.Continue%2A> proprietà è `false`, viene generata l'eccezione originale il <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> metodo.  
  
 Per altre informazioni, vedere [creazione di un oggetto DataTable da una Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.  -or-  The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.  -or-  A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>