<Type Name="DataColumnCollection" FullName="System.Data.DataColumnCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1951487115a2b89850fdad0baf740789dc33539" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52217537" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataColumnCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumnCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataColumnCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumnCollection sealed : System::Data::InternalDataCollectionBase" />
  <TypeSignature Language="F#" Value="type DataColumnCollection = class&#xA;    inherit InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un insieme di oggetti <see cref="T:System.Data.DataColumn" /> di un oggetto <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataColumnCollection> definisce lo schema di un <xref:System.Data.DataTable>e determina il tipo di dati ogni <xref:System.Data.DataColumn> può contenere. È possibile accedere la <xref:System.Data.DataColumnCollection> tramite il <xref:System.Data.DataTable.Columns%2A> proprietà del <xref:System.Data.DataTable> oggetto.  
  
 Il <xref:System.Data.DataColumnCollection> utilizza le <xref:System.Data.DataColumnCollection.Add%2A> e <xref:System.Data.DataColumnCollection.Remove%2A> metodi per inserire ed eliminare <xref:System.Data.DataColumn> oggetti. Usare la <xref:System.Data.InternalDataCollectionBase.Count%2A> proprietà per determinare quanti <xref:System.Data.DataColumn> gli oggetti presenti nella raccolta. Usare il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per verificare l'esistenza di un nome di indice o colonna specificato nella raccolta.  
  
   
  
## Examples  
 L'esempio seguente scorrere una raccolta di <xref:System.Data.DataColumn> oggetti e stampa varie proprietà di ogni colonna nella raccolta.  
  
 [!code-csharp[Classic WebData DataColumnCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Questo tipo è sicuro per le operazioni di lettura a thread multipli. È necessario sincronizzare qualsiasi operazione di scrittura.</threadsafe>
    <altmember cref="P:System.Data.DataTable.Columns" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataRelation" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataSet" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea e aggiunge un oggetto <see cref="T:System.Data.DataColumn" /> all'insieme <see cref="T:System.Data.DataColumnCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add" />
      <MemberSignature Language="VB.NET" Value="Public Function Add () As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add();" />
      <MemberSignature Language="F#" Value="member this.Add : unit -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e aggiunge un oggetto <see cref="T:System.Data.DataColumn" /> all'insieme <see cref="T:System.Data.DataColumnCollection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataColumn" /> appena creato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alla colonna viene assegnato un nome predefinito ("Column1", "Column2" e così via).  
  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 Nell'esempio seguente crea e aggiunge un nuovo <xref:System.Data.DataColumn> per il <xref:System.Data.DataColumnCollection> di un <xref:System.Data.DataTable>.  
  
 [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Data.DataColumn -&gt; unit" Usage="dataColumnCollection.Add column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" /> da aggiungere.</param>
        <summary>Crea e aggiunge l'oggetto <see cref="T:System.Data.DataColumn" /> specificato all'insieme <see cref="T:System.Data.DataColumnCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 L'esempio seguente aggiunge un <xref:System.Data.DataColumn> a un <xref:System.Data.DataColumnCollection>.  
  
 [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="column" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La colonna appartiene già a questo insieme o a un altro insieme.</exception>
        <exception cref="T:System.Data.DuplicateNameException">L'insieme contiene già una colonna con il nome specificato. Nel confronto non viene fatta distinzione tra maiuscole e minuscole.</exception>
        <exception cref="T:System.Data.InvalidExpressionException">Espressione non valida. Per ulteriori informazioni sulla creazione di espressioni, vedere la proprietà <see cref="P:System.Data.DataColumn.Expression" />.</exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="E:System.Data.DataColumnCollection.CollectionChanged" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (columnName As String) As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome della colonna.</param>
        <summary>Crea e aggiunge un oggetto <see cref="T:System.Data.DataColumn" /> con il nome specificato alla classe <see cref="T:System.Data.DataColumnCollection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataColumn" /> appena creato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Data.DataColumn.DataType%2A> per la nuova colonna è `string`.  
  
 Se `null` o una stringa vuota ("") viene passato in per il nome, viene assegnato un nome predefinito ("Column1", "Column2" e così via) nella colonna.  
  
 Usare il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare se una colonna con il nome proposto è già presente nella raccolta.  
  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 Nell'esempio seguente crea e aggiunge un nuovo <xref:System.Data.DataColumn> a un <xref:System.Data.DataColumnCollection> di un <xref:System.Data.DataTable>.  
  
 [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException">L'insieme contiene già una colonna con il nome specificato. Nel confronto non viene fatta distinzione tra maiuscole e minuscole.</exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add(System::String ^ columnName, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Add : string * Type -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add (columnName, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">Proprietà <see cref="P:System.Data.DataColumn.ColumnName" /> da utilizzare nella creazione della colonna.</param>
        <param name="type">Proprietà <see cref="P:System.Data.DataColumn.DataType" /> della nuova colonna.</param>
        <summary>Crea e aggiunge un oggetto <see cref="T:System.Data.DataColumn" /> con il nome e il tipo specificati alla classe <see cref="T:System.Data.DataColumnCollection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataColumn" /> appena creato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `null` o una stringa vuota ("") viene passato in per il nome, viene assegnato un nome predefinito ("Column1", "Column2" e così via) nella colonna.  
  
 Usare il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare se una colonna con il nome proposto è già presente nella raccolta.  
  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 Nell'esempio seguente crea e aggiunge un nuovo <xref:System.Data.DataColumn> a un <xref:System.Data.DataColumnCollection> di un <xref:System.Data.DataTable>.  
  
 [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException">L'insieme contiene già una colonna con il nome specificato. Nel confronto non viene fatta distinzione tra maiuscole e minuscole.</exception>
        <exception cref="T:System.Data.InvalidExpressionException">Espressione non valida. Per ulteriori informazioni sulla creazione di espressioni, vedere la proprietà <see cref="P:System.Data.DataColumn.Expression" />.</exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName, Type type, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName, class System.Type type, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add(System::String ^ columnName, Type ^ type, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="member this.Add : string * Type * string -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add (columnName, type, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome da utilizzare nella creazione della colonna.</param>
        <param name="type">Proprietà <see cref="P:System.Data.DataColumn.DataType" /> della nuova colonna.</param>
        <param name="expression">Espressione da assegnare alla proprietà <see cref="P:System.Data.DataColumn.Expression" />.</param>
        <summary>Crea e aggiunge un oggetto <see cref="T:System.Data.DataColumn" /> con il nome, il tipo e l'espressione specificati alla classe <see cref="T:System.Data.DataColumnCollection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataColumn" /> appena creato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `null` o una stringa vuota ("") viene passato in per il nome, viene assegnato un nome predefinito ("Column1", "Column2" e così via) nella colonna.  
  
 Usare il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare se una colonna con il nome proposto è già presente nella raccolta.  
  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 Nell'esempio seguente crea e aggiunge un nuovo <xref:System.Data.DataColumn> a un <xref:System.Data.DataColumnCollection> di un <xref:System.Data.DataTable>.  
  
 [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException">L'insieme contiene già una colonna con il nome specificato. Nel confronto non viene fatta distinzione tra maiuscole e minuscole.</exception>
        <exception cref="T:System.Data.InvalidExpressionException">Espressione non valida. Per ulteriori informazioni sulla creazione di espressioni, vedere la proprietà <see cref="P:System.Data.DataColumn.Expression" />.</exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Data.DataColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Data.DataColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (columns As DataColumn())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Data::DataColumn ^&gt; ^ columns);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Data.DataColumn[] -&gt; unit" Usage="dataColumnCollection.AddRange columns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="columns">Matrice di oggetti <see cref="T:System.Data.DataColumn" /> da aggiungere all'insieme.</param>
        <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.Data.DataColumn" /> specificata alla fine dell'insieme.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanRemove(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRemove (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRemove(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.CanRemove : System.Data.DataColumn -&gt; bool" Usage="dataColumnCollection.CanRemove column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" /> dell'insieme.</param>
        <summary>Verifica se una determinata colonna può essere rimossa dall'insieme.</summary>
        <returns>
          <see langword="true" /> se la colonna non può essere rimossa. <see langword="false" /> se, 
- Il parametro <paramref name="column" /> è <see langword="null" />.  
  
- La colonna non appartiene a questo insieme.  
  
- La colonna fa parte di una relazione.  
  
- L'espressione di un'altra colonna dipende da questa colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataColumnCollection.CanRemove%2A> metodo esegue diverse verifiche prima di restituire un `true` o `false` risultato. Ciò include quanto segue: indica se la colonna è presente, a cui appartiene la tabella o è coinvolta in un vincolo o una relazione.  
  
 Usare il <xref:System.Data.DataColumnCollection.CanRemove%2A> metodo prima di provare a rimuovere una colonna da una raccolta. È anche possibile usare il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare la presenza di una determinata colonna prima di provare a rimuoverla.  
  
   
  
## Examples  
 Nell'esempio seguente usa in primo luogo il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare se una determinata colonna viene trovata nella raccolta. Se viene trovato, il <xref:System.Data.DataColumnCollection.CanRemove%2A> metodo verifica se la colonna può essere rimosso. Se pertanto la colonna viene rimossa con il <xref:System.Data.DataColumnCollection.Remove%2A> (metodo).  
  
 [!code-csharp[Classic WebData DataColumnCollection.CanRemove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CanRemove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CanRemove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataColumnCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina qualsiasi colonna dell'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 Nell'esempio seguente cancella la raccolta di colonne.  
  
 [!code-csharp[Classic WebData DataColumnCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataColumnCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando l'insieme delle colonne viene modificato mediante l'aggiunta o la rimozione di una colonna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Data.DataColumnCollection.Contains%2A> e <xref:System.Data.DataColumnCollection.CanRemove%2A> metodi per determinare se una colonna esistente e può essere rimosso.  
  
   
  
## Examples  
 Nell'esempio seguente aggiunge un gestore eventi per l'evento CollectionChanged.  
  
 [!code-csharp[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CollectionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CollectionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="dataColumnCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Proprietà <see cref="P:System.Data.DataColumn.ColumnName" /> della colonna di cui eseguire la ricerca.</param>
        <summary>Verifica se l'insieme contiene una colonna con il nome specificato.</summary>
        <returns>
          <see langword="true" /> se esiste una colonna con tale nome; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per verificare l'esistenza di una colonna prima di eseguire operazioni aggiuntive sulla colonna. Il metodo restituisce `false` quando due o più colonne hanno lo stesso nome ma diversi spazi dei nomi. La chiamata non riesce se è presente un'ambiguità durante l'associazione di un nome di colonna a esattamente una colonna.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataColumnCollection.Contains%2A> metodo e il <xref:System.Data.DataColumnCollection.CanRemove%2A> metodo per determinare se la colonna può essere rimosso. In questo caso, la colonna viene rimossa.  
  
 [!code-csharp[Classic WebData DataColumnCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <altmember cref="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.DataColumn[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.DataColumn[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataColumn(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::DataColumn ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.DataColumn[] * int -&gt; unit" Usage="dataColumnCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.DataColumn[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Matrice di oggetti <see cref="T:System.Data.DataColumn" /> in cui copiare l'insieme.</param>
        <param name="index">Indice da cui iniziare.</param>
        <summary>Copia l'intero insieme in una matrice esistente, a partire dall'indice specificato all'interno della matrice.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cerca l'oggetto <see cref="T:System.Data.DataColumn" /> specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'insieme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (column As DataColumn) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Data.DataColumn -&gt; int" Usage="dataColumnCollection.IndexOf column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Nome della colonna da restituire.</param>
        <summary>Ottiene l'indice di una colonna specificata in base al nome.</summary>
        <returns>Indice della colonna specificata da <paramref name="column" />, se presente; in caso contrario, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataColumnCollection.IndexOf%2A> metodo non è tra maiuscole e minuscole.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare la presenza di una colonna specificata un <xref:System.Data.DataColumnCollection>. In questo caso, il <xref:System.Data.DataColumnCollection.IndexOf%2A> metodo restituisce l'indice della colonna.  
  
 [!code-csharp[Classic WebData DataColumnCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (columnName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="dataColumnCollection.IndexOf columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nome della colonna da trovare.</param>
        <summary>Ottiene l'indice della colonna con il nome specificato (per il nome non viene effettuata alcuna distinzione tra maiuscole e minuscole).</summary>
        <returns>Indice in base zero della colonna con il nome specificato oppure -1 se la colonna non è presente nell'insieme.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene la classe <see cref="T:System.Data.DataColumn" /> specificata dalla raccolta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumn ^ default[int] { System::Data::DataColumn ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Data.DataColumn" Usage="System.Data.DataColumnCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice in base zero della colonna da restituire.</param>
        <summary>Ottiene dall'insieme la classe <see cref="T:System.Data.DataColumn" /> in corrispondenza dell'indice specificato.</summary>
        <value>
          <see cref="T:System.Data.DataColumn" /> in corrispondenza dell'indice specificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataColumnCollection.Contains%2A> metodo può essere usato per verificare l'esistenza di una colonna. Ciò è utile prima di provare a usare <xref:System.Data.DataColumnCollection.Item%2A>.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataColumnCollection.Item%2A> proprietà per stampare il <xref:System.Data.DataColumn.ColumnName%2A> pari a un <xref:System.Data.DataColumn> oggetto specificato in base all'indice. Nell'esempio viene usato il <xref:System.Data.DataTable> contenuta da un controllo DataGrid.  
  
 [!code-csharp[Classic WebData DataColumnCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Il valore di indice è maggiore del numero degli elementi contenuti nell'insieme.</exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumn ^ default[System::String ^] { System::Data::DataColumn ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Data.DataColumn" Usage="System.Data.DataColumnCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Proprietà <see cref="P:System.Data.DataColumn.ColumnName" /> della colonna da restituire.</param>
        <summary>Ottiene la classe <see cref="T:System.Data.DataColumn" /> dall'insieme con il nome specificato.</summary>
        <value>Oggetto <see cref="T:System.Data.DataColumn" /> dell'insieme con la proprietà <see cref="P:System.Data.DataColumn.ColumnName" /> specificata; in caso contrario, valore null se l'oggetto <see cref="T:System.Data.DataColumn" /> non esiste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumnCollection.Item%2A> è in modo condizionale con distinzione maiuscole/minuscole durante la ricerca dei nomi di colonna. Ad esempio, se uno <xref:System.Data.DataColumn> è denominato "mydatacolumn" e un altro "Mydatacolumn", stringa utilizzata per cercare una delle colonne viene considerata come maiuscole/minuscole. Tuttavia, se presente "mydatacolumn" e "Mydatacolumn" non esiste, la stringa di ricerca viene considerata come maiuscole e minuscole.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataColumnCollection.Item%2A> proprietà per stampare il <xref:System.Data.DataColumn.DataType%2A> pari a un <xref:System.Data.DataColumn> oggetto specificato in base all'indice.  
  
 [!code-csharp[Classic WebData DataColumnCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Data.DataColumnCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataColumnCollection.OnCollectionChanged ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="ccevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollectionChanging(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollectionChanging (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollectionChanging(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanging : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanging : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataColumnCollection.OnCollectionChanging ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="ccevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove un oggetto <see cref="T:System.Data.DataColumn" /> dalla raccolta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Data.DataColumn -&gt; unit" Usage="dataColumnCollection.Remove column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Oggetto <see cref="T:System.Data.DataColumn" /> da rimuovere.</param>
        <summary>Rimuove l'oggetto <see cref="T:System.Data.DataColumn" /> specificato dalla raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare se è presente una colonna denominata. In questo caso, il <xref:System.Data.DataColumnCollection.Item%2A> proprietà restituisce la colonna. Il <xref:System.Data.DataColumnCollection.CanRemove%2A> metodo controlla quindi se la colonna può essere rimossa; in caso affermativo, il <xref:System.Data.DataColumnCollection.Remove%2A> metodo lo rimuove.  
  
 [!code-csharp[Classic WebData DataColumnCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="column" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La colonna non appartiene a questo insieme.  
  
oppure 
La colonna fa parte di una relazione.  
  
oppure 
L'espressione di un'altra colonna dipende da questa colonna.</exception>
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <altmember cref="P:System.Data.DataColumnCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="dataColumnCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della colonna da rimuovere.</param>
        <summary>Rimuove l'oggetto <see cref="T:System.Data.DataColumn" /> con il nome specificato dall'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 Nell'esempio seguente usa in primo luogo il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare se una determinata colonna viene trovata nella raccolta. Se viene trovato, il <xref:System.Data.DataColumnCollection.CanRemove%2A> metodo verifica se la colonna può essere rimosso. Se pertanto la colonna viene rimossa con il <xref:System.Data.DataColumnCollection.Remove%2A> (metodo).  
  
 [!code-csharp[Classic WebData DataColumnCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'insieme non dispone di una colonna con il nome specificato.</exception>
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="dataColumnCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice della colonna da rimuovere.</param>
        <summary>Rimuove la colonna dall'insieme in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la raccolta viene modificata tramite l'aggiunta o rimozione di colonne, il <xref:System.Data.DataColumnCollection.CollectionChanged> evento si verifica.  
  
   
  
## Examples  
 Nell'esempio seguente usa in primo luogo il <xref:System.Data.DataColumnCollection.Contains%2A> metodo per determinare se una determinata colonna viene trovata nella raccolta. Se viene trovato, il <xref:System.Data.DataColumnCollection.CanRemove%2A> metodo verifica se la colonna può essere rimosso. Se pertanto la colonna viene rimossa con il <xref:System.Data.DataColumnCollection.RemoveAt%2A> (metodo).  
  
 [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'insieme non dispone di una colonna in corrispondenza dell'indice specificato.</exception>
        <altmember cref="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
      </Docs>
    </Member>
  </Members>
</Type>