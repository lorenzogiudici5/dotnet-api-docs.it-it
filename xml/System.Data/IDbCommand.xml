<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9bd77-101">Rappresenta un'istruzione SQL eseguita durante la connessione a un'origine dati e viene implementata dai provider di dati .NET Framework che accedono a database relazionali.</span><span class="sxs-lookup"><span data-stu-id="9bd77-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-102">Il <xref:System.Data.IDbCommand> interfaccia consente di implementare una classe di comando, che rappresenta un'istruzione SQL che viene eseguita in un'origine dati di una classe che eredita.</span><span class="sxs-lookup"><span data-stu-id="9bd77-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="9bd77-103">Per ulteriori informazioni sulle classi di comando, vedere [esegue un comando](~/docs/framework/data/adonet/executing-a-command.md).</span><span class="sxs-lookup"><span data-stu-id="9bd77-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="9bd77-104">Un'applicazione crea un'istanza di <xref:System.Data.IDbCommand> interfaccia direttamente, ma crea un'istanza di una classe che eredita <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbCommand>.</span></span>  
  
 <span data-ttu-id="9bd77-105">Le classi che ereditano <xref:System.Data.IDbCommand> deve implementare tutti i membri ereditati e in genere definire membri aggiuntivi per aggiungere funzionalità specifiche del provider.</span><span class="sxs-lookup"><span data-stu-id="9bd77-105">Classes that inherit <xref:System.Data.IDbCommand> must implement all inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="9bd77-106">Ad esempio, il <xref:System.Data.IDbCommand> interfaccia definisce il <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="9bd77-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="9bd77-107">A sua volta, il <xref:System.Data.SqlClient.SqlCommand> classe questo metodo viene ereditato e definisce anche la <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="9bd77-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bd77-108">Nell'esempio seguente crea istanze di classi derivate, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, e <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="9bd77-109">Nell'esempio legge i dati e li scrive nella console.</span><span class="sxs-lookup"><span data-stu-id="9bd77-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="9bd77-110">Infine, l'esempio chiude il <xref:System.Data.SqlClient.SqlDataReader>, quindi il <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="9bd77-111">Per promuovere la coerenza fra i provider di dati .NET Framework, assegnare un nome alla classe che eredita il form <paramref name="PrvClassname" /> dove <paramref name="Prv" /> è il prefisso uniforme assegnato a tutte le classi in uno specifico spazio dei nomi provider di dati .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9bd77-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="9bd77-112">Ad esempio, <paramref name="Sql" /> è il prefisso del <see cref="T:System.Data.SqlClient.SqlCommand" /> classe il <see langword="System.Data.SqlClient" /> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="9bd77-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
 <span data-ttu-id="9bd77-113">Quando si eredita dal <see cref="T:System.Data.IDbCommand" /> interfaccia, è necessario implementare i seguenti costruttori:</span><span class="sxs-lookup"><span data-stu-id="9bd77-113">When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:</span></span>  
  
 <span data-ttu-id="9bd77-114"><list type="table"><listheader><term> Elemento</span><span class="sxs-lookup"><span data-stu-id="9bd77-114"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="9bd77-115"></term><description> Descrizione</span><span class="sxs-lookup"><span data-stu-id="9bd77-115"></term><description> Description</span></span>  
  
 <span data-ttu-id="9bd77-116"></description></listheader><item><term> PrvCommand()</span><span class="sxs-lookup"><span data-stu-id="9bd77-116"></description></listheader><item><term> PrvCommand()</span></span>  
  
 <span data-ttu-id="9bd77-117"></term><description> Inizializza una nuova istanza della classe PrvCommand.</span><span class="sxs-lookup"><span data-stu-id="9bd77-117"></term><description> Initializes a new instance of the PrvCommand class.</span></span>  
  
 <span data-ttu-id="9bd77-118"></description></item><item><term> PrvCommand(string cmdText)</span><span class="sxs-lookup"><span data-stu-id="9bd77-118"></description></item><item><term> PrvCommand(string cmdText)</span></span>  
  
 <span data-ttu-id="9bd77-119"></term><description> Inizializza una nuova istanza della classe PrvCommand con il testo della query.</span><span class="sxs-lookup"><span data-stu-id="9bd77-119"></term><description> Initializes a new instance of the PrvCommand class with the text of the query.</span></span>  
  
 <span data-ttu-id="9bd77-120"></description></item><item><term> PrvCommand (stringa cmdText, PrvConnection connessione)</span><span class="sxs-lookup"><span data-stu-id="9bd77-120"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection)</span></span>  
  
 <span data-ttu-id="9bd77-121"></term><description> Inizializza una nuova istanza della classe PrvCommand con il testo della query e un oggetto PrvConnection.</span><span class="sxs-lookup"><span data-stu-id="9bd77-121"></term><description> Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.</span></span>  
  
 <span data-ttu-id="9bd77-122"></description></item><item><term> PrvCommand (connessione PrvConnection cmdText stringa, oggetto PrvTransaction transazione)</span><span class="sxs-lookup"><span data-stu-id="9bd77-122"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)</span></span>  
  
 <span data-ttu-id="9bd77-123"></term><description> Inizializza una nuova istanza della classe PrvCommand con il testo della query, un oggetto PrvConnection e l'oggetto PrvTransaction.</span><span class="sxs-lookup"><span data-stu-id="9bd77-123"></term><description> Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.</span></span>  
  
 </description></item></list></para>
    </block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9bd77-124">Tenta di annullare l'esecuzione di <see cref="T:System.Data.IDbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-124">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-125">Se non c'è niente per annullare, non accade nulla.</span><span class="sxs-lookup"><span data-stu-id="9bd77-125">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="9bd77-126">Se, tuttavia, è in corso l'esecuzione di un comando e il tentativo di annullarlo non riesce, non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="9bd77-126">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9bd77-127">Ottiene o imposta il comando di testo da eseguire sull'origine dati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-127">Gets or sets the text command to run against the data source.</span></span></summary>
        <value><span data-ttu-id="9bd77-128">Comando di testo da eseguire.</span><span class="sxs-lookup"><span data-stu-id="9bd77-128">The text command to execute.</span></span> <span data-ttu-id="9bd77-129">Il valore predefinito è una stringa vuota ("").</span><span class="sxs-lookup"><span data-stu-id="9bd77-129">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-130">Quando il <xref:System.Data.IDbCommand.CommandType%2A> è impostata su `StoredProcedure`, impostare il <xref:System.Data.IDbCommand.CommandText%2A> proprietà sul nome della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="9bd77-130">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="9bd77-131">L'utente potrebbe essere necessario utilizzare la sintassi dei caratteri di escape, se il nome della stored procedure contiene caratteri speciali.</span><span class="sxs-lookup"><span data-stu-id="9bd77-131">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="9bd77-132">Il comando chiamerà questa stored procedure quando si chiama uno dei metodi Execute.</span><span class="sxs-lookup"><span data-stu-id="9bd77-132">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bd77-133">L'esempio seguente crea un'istanza di una classe derivata, <xref:System.Data.OleDb.OleDbCommand> e vengono impostate alcune delle relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="9bd77-133">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9bd77-134">Ottiene o imposta il tempo di attesa prima di terminare il tentativo di esecuzione di un comando e di generare un errore.</span><span class="sxs-lookup"><span data-stu-id="9bd77-134">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="9bd77-135">Tempo di attesa in secondi per l'esecuzione del comando.</span><span class="sxs-lookup"><span data-stu-id="9bd77-135">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="9bd77-136">Il valore predefinito è 30 secondi.</span><span class="sxs-lookup"><span data-stu-id="9bd77-136">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bd77-137">L'esempio seguente crea un'istanza di una classe derivata, <xref:System.Data.SqlClient.SqlCommand> e vengono impostate alcune delle relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="9bd77-137">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9bd77-138">Il valore della proprietà assegnato è minore di 0.</span><span class="sxs-lookup"><span data-stu-id="9bd77-138">The property value assigned is less than 0.</span></span></exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9bd77-139">Indica o specifica come viene interpretata la proprietà <see cref="P:System.Data.IDbCommand.CommandText" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-139">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="9bd77-140">Uno dei valori di <see cref="T:System.Data.CommandType" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-140">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="9bd77-141">Il valore predefinito è <see langword="Text" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-141">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-142">Quando si imposta la <xref:System.Data.IDbCommand.CommandType%2A> proprietà `StoredProcedure`, è necessario impostare il <xref:System.Data.IDbCommand.CommandText%2A> proprietà sul nome della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="9bd77-142">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="9bd77-143">Il comando esegue questa stored procedure quando si chiama uno dei metodi Execute.</span><span class="sxs-lookup"><span data-stu-id="9bd77-143">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9bd77-144">Ottiene o imposta l'oggetto <see cref="T:System.Data.IDbConnection" /> usato da questa istanza dell'oggetto <see cref="T:System.Data.IDbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-144">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <value><span data-ttu-id="9bd77-145">Connessione all'origine dati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-145">The connection to the data source.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9bd77-146">Crea una nuova istanza di un oggetto <see cref="T:System.Data.IDbDataParameter" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-146">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="9bd77-147">Oggetto <see langword="IDbDataParameter" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-147">An <see langword="IDbDataParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-148">Quando si eredita da <xref:System.Data.IDbCommand>, un provider di dati .NET Framework implementa una versione fortemente tipizzata di <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-148">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9bd77-149">Esegue un'istruzione SQL sull'oggetto <see langword="Connection" /> di un provider di dati .NET Framework e restituisce il numero di righe interessate.</span><span class="sxs-lookup"><span data-stu-id="9bd77-149">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="9bd77-150">Numero di righe interessate.</span><span class="sxs-lookup"><span data-stu-id="9bd77-150">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-151">È possibile utilizzare il <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> per eseguire operazioni di catalogo (ad esempio, eseguire query sulla struttura di un database o la creazione di oggetti di database quali tabelle) o per modificare i dati in un database senza utilizzare un <xref:System.Data.DataSet> eseguendo UPDATE, INSERT o DELETE istruzioni.</span><span class="sxs-lookup"><span data-stu-id="9bd77-151">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="9bd77-152">Sebbene il <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> non restituiscono alcuna riga, i parametri di output e non restituisce valori mappati a parametri vengono popolati con dati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-152">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="9bd77-153">Nel caso delle istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando.</span><span class="sxs-lookup"><span data-stu-id="9bd77-153">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="9bd77-154">Per tutti gli altri tipi di istruzioni, il valore restituito è -1.</span><span class="sxs-lookup"><span data-stu-id="9bd77-154">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bd77-155">Nell'esempio seguente crea un'istanza della classe derivata, <xref:System.Data.OleDb.OleDbCommand>e lo esegue.</span><span class="sxs-lookup"><span data-stu-id="9bd77-155">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="9bd77-156">A tale scopo, il metodo viene passato a una stringa che rappresenta un'istruzione SQL SELECT e una stringa da utilizzare per la connessione all'origine dati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-156">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9bd77-157">La connessione non esiste.</span><span class="sxs-lookup"><span data-stu-id="9bd77-157">The connection does not exist.</span></span>  
  
 <span data-ttu-id="9bd77-158">oppure</span><span class="sxs-lookup"><span data-stu-id="9bd77-158">-or-</span></span>  
  
 <span data-ttu-id="9bd77-159">La connessione non è aperta.</span><span class="sxs-lookup"><span data-stu-id="9bd77-159">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9bd77-160">Esegue la proprietà <see cref="P:System.Data.IDbCommand.CommandText" /> su <see cref="P:System.Data.IDbCommand.Connection" /> e compila <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-160">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9bd77-161">Esegue la proprietà <see cref="P:System.Data.IDbCommand.CommandText" /> su <see cref="P:System.Data.IDbCommand.Connection" /> e compila <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-161">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="9bd77-162">Oggetto <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-162">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="9bd77-163">Uno dei valori di <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-163">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="9bd77-164">Esegue la proprietà <see cref="P:System.Data.IDbCommand.CommandText" /> su <see cref="P:System.Data.IDbCommand.Connection" /> e compila <see cref="T:System.Data.IDataReader" /> usando uno dei valori di <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-164">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="9bd77-165">Oggetto <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-165">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-166">Il chiamante deve chiamare il <xref:System.Data.IDbConnection.Open%2A> metodo il <xref:System.Data.IDbCommand.Connection%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9bd77-166">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="9bd77-167">Quando il <xref:System.Data.IDbCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.IDbCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="9bd77-167">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="9bd77-168">Il comando esegue questa stored procedure quando si chiama <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-168">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bd77-169">Utilizzare <xref:System.Data.CommandBehavior.SequentialAccess> per recuperare valori di grandi dimensioni e i dati binari.</span><span class="sxs-lookup"><span data-stu-id="9bd77-169">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="9bd77-170">In caso contrario, un <xref:System.OutOfMemoryException> potrebbero verificarsi e la connessione verrà chiusa.</span><span class="sxs-lookup"><span data-stu-id="9bd77-170">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="9bd77-171">Mentre il <xref:System.Data.IDataReader> è in uso, l'oggetto associato <xref:System.Data.IDbConnection> sono occupati a soddisfare il <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-171">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="9bd77-172">In questo stato, non possono essere eseguiti altre operazioni di <xref:System.Data.IDbConnection> diverso chiuderla.</span><span class="sxs-lookup"><span data-stu-id="9bd77-172">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="9bd77-173">Questo è il caso fino a quando il <xref:System.Data.IDataReader.Close%2A> viene chiamato metodo del DataReader.</span><span class="sxs-lookup"><span data-stu-id="9bd77-173">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="9bd77-174">Se si crea il DataReader con <xref:System.Data.CommandBehavior> impostato su `CloseConnection`, chiudere il DataReader chiude automaticamente la connessione.</span><span class="sxs-lookup"><span data-stu-id="9bd77-174">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9bd77-175">Esegue la query e restituisce la prima colonna della prima riga nel set di risultati restituito dalla query.</span><span class="sxs-lookup"><span data-stu-id="9bd77-175">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span></span> <span data-ttu-id="9bd77-176">Le colonne o le righe aggiuntive vengono ignorate.</span><span class="sxs-lookup"><span data-stu-id="9bd77-176">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="9bd77-177">Prima riga della prima colonna nel set di risultati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-177">The first column of the first row in the resultset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-178">Utilizzare il <xref:System.Data.IDbCommand.ExecuteScalar%2A> metodo per recuperare un singolo valore (ad esempio, un valore aggregato) da un database.</span><span class="sxs-lookup"><span data-stu-id="9bd77-178">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="9bd77-179">Ciò richiede meno codice rispetto all'utilizzo di <xref:System.Data.IDbCommand.ExecuteReader%2A> (metodo) e quindi di eseguire le operazioni necessarie per generare il valore singolo utilizzando i dati restituiti da un <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-179">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="9bd77-180">Una tipica <xref:System.Data.IDbCommand.ExecuteScalar%2A> query possono essere formattati come nell'esempio c# seguente:</span><span class="sxs-lookup"><span data-stu-id="9bd77-180">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="9bd77-181">Se la prima colonna della prima riga nel set di risultati non viene trovato, un riferimento null (`Nothing` in Visual Basic) viene restituito.</span><span class="sxs-lookup"><span data-stu-id="9bd77-181">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="9bd77-182">Se il valore nel database è `null`, la query restituisce `DBNull.Value`.</span><span class="sxs-lookup"><span data-stu-id="9bd77-182">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bd77-183">Nell'esempio seguente crea un'istanza della classe derivata, <xref:System.Data.SqlClient.SqlCommand>e viene quindi eseguito mediante <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="9bd77-183">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="9bd77-184">Nell'esempio viene passato a una stringa che rappresenta un'istruzione Transact-SQL che restituisce un risultato dell'aggregazione e una stringa da utilizzare per la connessione all'origine dati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-184">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9bd77-185">Ottiene l'oggetto <see cref="T:System.Data.IDataParameterCollection" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-185">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="9bd77-186">Parametri dell'istruzione SQL o della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="9bd77-186">The parameters of the SQL statement or stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bd77-187">Nell'esempio seguente crea un'istanza della classe derivata, <xref:System.Data.SqlClient.SqlCommand>e consente di visualizzare i relativi parametri.</span><span class="sxs-lookup"><span data-stu-id="9bd77-187">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="9bd77-188">Nell'esempio, l'applicazione passa un <xref:System.Data.SqlClient.SqlConnection>, una stringa di query che è un'istruzione Transact-SQL SELECT e una matrice di <xref:System.Data.SqlClient.SqlParameter> oggetti.</span><span class="sxs-lookup"><span data-stu-id="9bd77-188">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9bd77-189">Crea una versione preparata o compilata del comando nell'origine dati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-189">Creates a prepared (or compiled) version of the command on the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bd77-190">Se il <xref:System.Data.IDbCommand.CommandType%2A> è impostata su `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="9bd77-190">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="9bd77-191">Se <xref:System.Data.IDbCommand.CommandType%2A> è impostato su `StoredProcedure`, la chiamata a <xref:System.Data.IDbCommand.Prepare%2A> dovrebbe avere esito positivo, anche se potrebbe determinare alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="9bd77-191">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="9bd77-192">Il server è automaticamente memorizza nella cache di piani per il riutilizzo come necessario. Pertanto, non è necessario chiamare questo metodo direttamente nell'applicazione client.</span><span class="sxs-lookup"><span data-stu-id="9bd77-192">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bd77-193">Nell'esempio seguente crea un'istanza della classe derivata, <xref:System.Data.OleDb.OleDbCommand>e viene aperta la connessione.</span><span class="sxs-lookup"><span data-stu-id="9bd77-193">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="9bd77-194">Nell'esempio viene quindi prepara una stored procedure sull'origine dati passando una stringa che rappresenta un'istruzione SQL Select e una stringa da utilizzare per la connessione all'origine dati.</span><span class="sxs-lookup"><span data-stu-id="9bd77-194">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9bd77-195">La proprietà <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> non è impostata.</span><span class="sxs-lookup"><span data-stu-id="9bd77-195">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="9bd77-196">oppure</span><span class="sxs-lookup"><span data-stu-id="9bd77-196">-or-</span></span>  
  
 <span data-ttu-id="9bd77-197"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> non è <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-197">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9bd77-198">Ottiene o imposta la transazione all'interno della quale viene eseguito l'oggetto <see langword="Command" /> di un provider di dati .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9bd77-198">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span></summary>
        <value><span data-ttu-id="9bd77-199">Viene eseguito l'oggetto <see langword="Command" /> di un provider di dati .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9bd77-199">the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span> <span data-ttu-id="9bd77-200">Il valore predefinito è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-200">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9bd77-201">Ottiene o imposta il modo in cui i risultati del comando vengono applicati a <see cref="T:System.Data.DataRow" /> quando vengono usati dal metodo <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> di <see cref="T:System.Data.Common.DbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-201">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="9bd77-202">Uno dei valori di <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-202">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span> <span data-ttu-id="9bd77-203">Il valore predefinito è <see langword="Both" />, a meno che il comando non venga generato automaticamente.</span><span class="sxs-lookup"><span data-stu-id="9bd77-203">The default is <see langword="Both" /> unless the command is automatically generated.</span></span> <span data-ttu-id="9bd77-204">In quel caso il valore predefinito è <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-204">Then the default is <see langword="None" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9bd77-205">Il valore immesso non è uno dei valori di <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="9bd77-205">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>