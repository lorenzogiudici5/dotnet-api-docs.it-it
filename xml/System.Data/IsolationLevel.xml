<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IsolationLevel.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fcf9de84f8217ebb2ca027402a2cd2578d3bcafc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcf9de84f8217ebb2ca027402a2cd2578d3bcafc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IsolationLevel">
          <source>Specifies the transaction locking behavior for the connection.</source>
          <target state="translated">Specifica il comportamento di blocco della transazione per la connessione.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> values are used by a .NET Framework data provider when performing a transaction.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> valori vengono utilizzati da un provider di dati .NET Framework durante l'esecuzione di una transazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> remains in effect until explicitly changed, but it can be changed at any time.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> rimane attiva finché non viene esplicitamente modificato, ma può essere modificata in qualsiasi momento.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The new value is used at execution time, not parse time.</source>
          <target state="translated">Il nuovo valore viene utilizzato in fase di esecuzione, non in fase di analisi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If changed during a transaction, the expected behavior of the server is to apply the new locking level to all statements remaining.</source>
          <target state="translated">Se è stata modificata durante una transazione, il comportamento previsto del server consiste nell'applicare il nuovo livello di blocco a tutte le istruzioni rimanenti.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>This application demonstrates how to use <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> in <ph id="ph2">&lt;xref:System.Data.Common.DbTransaction&gt;</ph>.</source>
          <target state="translated">Questa applicazione viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> in <ph id="ph2">&lt;xref:System.Data.Common.DbTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The sample will demonstrate which of the following behaviors are allowed in the different isolation levels:</source>
          <target state="translated">L'esempio verrà illustrato che dei comportamenti seguenti sono consentite in diversi livelli di isolamento:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Dirty reads.</source>
          <target state="translated">Letture dirty.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Non-repeatable reads.</source>
          <target state="translated">Letture non ripetibili.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Phantoms.</source>
          <target state="translated">Righe fantasma.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>This application will execute in the following isolation levels:</source>
          <target state="translated">Questa applicazione verrà eseguita in livelli di isolamento seguenti:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>ReadUncommitted</source>
          <target state="translated">ReadUncommitted</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>ReadCommitted</source>
          <target state="translated">ReadCommitted</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>RepeatableRead</source>
          <target state="translated">RepeatableRead</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Serializable</source>
          <target state="translated">Serializzabile</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Snapshot</source>
          <target state="translated">Snapshot</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The PhantomReadThreads class demonstrates if the specific transaction allows the Phantom Read behavior.</source>
          <target state="translated">La classe PhantomReadThreads illustra se la transazione specifica consente il comportamento di lettura fantasma.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the threads will operate in the following order:</source>
          <target state="translated">Se la transazione consente il comportamento, i thread funzionerà nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, select the products(All).</source>
          <target state="translated">Nel primo thread, selezionare il products(All).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In the second thread, insert a new product.</source>
          <target state="translated">Nel secondo thread, inserire un nuovo prodotto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Eseguire il commit della transazione nel secondo thread.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Select the products again.</source>
          <target state="translated">Selezionare i prodotti di nuovo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Eseguire il commit della transazione nel primo thread.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the two Select operations will get the different results.</source>
          <target state="translated">Se la transazione consente il comportamento, le due operazioni Select otterranno i risultati diversi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The NonrepeatableReadThreads class demonstrates if the specific transaction allows the Nonrepeatable Read behavior.</source>
          <target state="translated">La classe NonrepeatableReadThreads illustra se la transazione specifica consente il comportamento di lettura non ripetibile.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the threads will operate in the following order:</source>
          <target state="translated">Se la transazione consente il comportamento, i thread funzionerà nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, select the product(ProductId=1).</source>
          <target state="translated">Nel primo thread, selezionare il product(ProductId=1).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In the second thread, update the Quantity value(ProductId=1).</source>
          <target state="translated">Nel secondo thread, aggiornare la quantità value(ProductId=1).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Eseguire il commit della transazione nel secondo thread.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Select the product again.</source>
          <target state="translated">Selezionare di nuovo il prodotto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Eseguire il commit della transazione nel primo thread.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the two Select operations will get the different results.</source>
          <target state="translated">Se la transazione consente il comportamento, le due operazioni Select otterranno i risultati diversi.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The ExchangeValuesThreads class demonstrates the difference between the Serializable and Snapshot transaction.</source>
          <target state="translated">La classe ExchangeValuesThreads viene illustrata la differenza tra la transazione Serializable e Snapshot.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>For the Serializable transaction, threads will operate in the following order:</source>
          <target state="translated">Per la transazione serializzabile, thread funzionerà nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, get the Price of product(ProductId=2) and store in the variable.</source>
          <target state="translated">Nel primo thread, ottenere il prezzo di product(ProductId=2) e archivio nella variabile.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</source>
          <target state="translated">Nel primo thread, aggiornare il prezzo di product(ProductId=1) con il prezzo di product(ProductId=2).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Eseguire il commit della transazione nel primo thread.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, get the Price of product(ProductId=1) and store in the variable.</source>
          <target state="translated">Nel secondo thread, ottenere il prezzo di product(ProductId=1) e archivio nella variabile.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</source>
          <target state="translated">Nel secondo thread, aggiornare il prezzo di product(ProductId=2) con il prezzo di product(ProductId=1).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Eseguire il commit della transazione nel secondo thread.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Now the values of the Price(ProductId=1 and ProductId=2) are as same as the original Price of Product(ProductId=2).</source>
          <target state="translated">Ora i valori del prezzo (ProductId = 1 e ProductId = 2) sono nello stesso come il prezzo di Product(ProductId=2) originale.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>For the Snapshot transaction, threads will operate in the following order:</source>
          <target state="translated">Per la transazione Snapshot, thread funzionerà nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, get the Price of product(ProductId=2) and store in the variable;</source>
          <target state="translated">Nel primo thread, ottenere il prezzo di product(ProductId=2) e archivio nella variabile;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</source>
          <target state="translated">Nel primo thread, aggiornare il prezzo di product(ProductId=1) con il prezzo di product(ProductId=2).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, get the Price of product(ProductId=1) from the snapshot and store in the variable.</source>
          <target state="translated">Nel secondo thread, ottenere il prezzo di product(ProductId=1) dallo snapshot e archiviare nella variabile.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</source>
          <target state="translated">Nel secondo thread, aggiornare il prezzo di product(ProductId=2) con il prezzo di product(ProductId=1).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Eseguire il commit della transazione nel secondo thread.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Eseguire il commit della transazione nel primo thread.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Now exchange the Price of products(ProductId=1 and ProductId=2).</source>
          <target state="translated">I prezzi dei prodotti di exchange ora (ProductId = 1 e ProductId = 2).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The DirtyReadThreads class demonstrates if the specific transaction allows the Dirty Read behavior.</source>
          <target state="translated">La classe DirtyReadThreads illustra se la transazione specifica consente il comportamento di lettura Dirty.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the threads will operate in the following order:</source>
          <target state="translated">Se la transazione consente il comportamento, i thread funzionerà nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, begin a transaction and add the Quantity value(ProductId=1).</source>
          <target state="translated">Nel primo thread, iniziare una transazione e aggiungere il value(ProductId=1) quantità.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In the second thread, read the Quantity value and add the value again.</source>
          <target state="translated">Nel secondo thread, leggere il valore della quantità e aggiungere di nuovo il valore.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Eseguire il commit della transazione nel secondo thread.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Roll back the transaction in first thread.</source>
          <target state="translated">Il rollback della transazione nel primo thread.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the Quantity value will be added twice.</source>
          <target state="translated">Se la transazione consente il comportamento, il valore della quantità verrà aggiunto due volte.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Type=SearchText&amp;ac=4)</ept>.</source>
          <target state="translated">Progetti c# e Visual Basic con questo esempio di codice sono reperibile in <bpt id="p1">[</bpt>esempi di codice per sviluppatori<ept id="p1">](http://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Type=SearchText&amp;ac=4)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Chaos">
          <source>The pending changes from more highly isolated transactions cannot be overwritten.</source>
          <target state="translated">Le modifiche in sospeso dalle transazioni più isolate non possono essere sovrascritte.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.ReadCommitted">
          <source>Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</source>
          <target state="translated">La condivisione dei blocchi viene mantenuta durante la lettura dei dati per evitare letture dirty, anche se è possibile modificare i dati prima del termine della transazione, con conseguente produzione di letture non ripetibili o dati fantasma.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.ReadUncommitted">
          <source>A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</source>
          <target state="translated">È possibile una lettura dirty, ovvero non verrà emesso alcun blocco condiviso, né verrà rispettato alcun blocco esclusivo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.RepeatableRead">
          <source>Locks are placed on all data that is used in a query, preventing other users from updating the data.</source>
          <target state="translated">I blocchi sono posizionati su tutti i dati utilizzati in una query, impedendo l'aggiornamento dei dati da parte di altri utenti.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.RepeatableRead">
          <source>Prevents non-repeatable reads but phantom rows are still possible.</source>
          <target state="translated">Vengono impedite le letture non ripetibili, ma possono essere presenti righe fantasma.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Serializable">
          <source>A range lock is placed on the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</source>
          <target state="translated">Viene posizionato un blocco di intervallo sull'oggetto <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, per impedire ad altri utenti di aggiornare o immettere righe nel dataset fino al termine della transazione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Snapshot">
          <source>Reduces blocking by storing a version of data that one application can read while another is modifying the same data.</source>
          <target state="translated">Riduce il blocco archiviando una versione dei dati che può essere letta da un'applicazione mentre gli stessi dati vengono modificati da un'altra applicazione.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Snapshot">
          <source>Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</source>
          <target state="translated">Indica che da una transazione non è possibile vedere le modifiche apportate in altre transazioni, anche se viene ripetuta la query.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Unspecified">
          <source>A different isolation level than the one specified is being used, but the level cannot be determined.</source>
          <target state="translated">Verrà utilizzato un livello di isolamento diverso da quello specificato, ma il livello non potrà essere determinato.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.IsolationLevel.Unspecified">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction&gt;</ph>, if you do not set <ph id="ph2">&lt;xref:System.Data.IsolationLevel&gt;</ph> or you set <ph id="ph3">&lt;xref:System.Data.IsolationLevel&gt;</ph> to <ph id="ph4">`Unspecified`</ph>, the transaction executes according to the isolation level that is determined by the driver that is being used.</source>
          <target state="translated">Quando si utilizza <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction&gt;</ph>, se non si imposta <ph id="ph2">&lt;xref:System.Data.IsolationLevel&gt;</ph> o si impostano <ph id="ph3">&lt;xref:System.Data.IsolationLevel&gt;</ph> a <ph id="ph4">`Unspecified`</ph>, la transazione viene eseguita in base al livello di isolamento che è determinato dal driver in uso.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>