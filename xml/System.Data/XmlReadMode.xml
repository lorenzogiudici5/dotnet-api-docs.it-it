<Type Name="XmlReadMode" FullName="System.Data.XmlReadMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97811cab6c042ede6671c6e12882e3b0cf2d49a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum XmlReadMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlReadMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlReadMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlReadMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlReadMode" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="f9701-101">Specifica come leggere i dati XML e uno schema relazionale in un oggetto <see cref="T:System.Data.DataSet" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9701-101">Specifies how to read XML data and a relational schema into a <see cref="T:System.Data.DataSet" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9701-102">Utilizzare i membri di questa enumerazione quando si imposta la `ReadMode` parametro del <xref:System.Data.DataSet.ReadXml%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f9701-102">Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9701-103">`Auto` la modalità può essere più lenta rispetto all'impostazione <xref:System.Data.XmlReadMode> su un'opzione specifica.</span><span class="sxs-lookup"><span data-stu-id="f9701-103">`Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9701-104">Predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-104">Default.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9701-105">Esegue la più appropriata di queste azioni:</span><span class="sxs-lookup"><span data-stu-id="f9701-105">Performs the most appropriate of these actions:</span></span>  
  
 <span data-ttu-id="f9701-106">Se i dati sono di tipo DiffGram, imposta `XmlReadMode` a `DiffGram`.</span><span class="sxs-lookup"><span data-stu-id="f9701-106">If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.</span></span>  
  
 <span data-ttu-id="f9701-107">oppure</span><span class="sxs-lookup"><span data-stu-id="f9701-107">-or-</span></span>  
  
 <span data-ttu-id="f9701-108">Se il set di dati ha già uno schema o il documento contiene uno schema inline, imposta `XmlReadMode` a `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="f9701-108">If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="f9701-109">oppure</span><span class="sxs-lookup"><span data-stu-id="f9701-109">-or-</span></span>  
  
 <span data-ttu-id="f9701-110">Se il set di dati non dispone già di uno schema e il documento non contiene uno schema inline, imposta `XmlReadMode` a `InferSchema`.</span><span class="sxs-lookup"><span data-stu-id="f9701-110">If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode DiffGram = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9701-111">Legge un DiffGram, applicando modifiche dal DiffGram all'oggetto <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-111">Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="f9701-112">Questa semantica si presenta identica a quella di un'operazione <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-112">The semantics are identical to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation.</span>
          </span>
          <span data-ttu-id="f9701-113">Analogamente all'operazione <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, i valori della proprietà <see cref="P:System.Data.DataRow.RowState" /> vengono conservati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-113">As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.</span>
          </span>
          <span data-ttu-id="f9701-114">L'input a <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> con DiffGram dovrebbe essere ottenuto solo utilizzando l'output da <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> come DiffGram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-114">Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9701-115">La destinazione <xref:System.Data.DataSet> deve avere lo stesso schema di <xref:System.Data.DataSet> in cui <xref:System.Data.DataSet.WriteXml%2A> come DiffGram viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="f9701-115">The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called.</span></span> <span data-ttu-id="f9701-116">In caso contrario l'operazione di unione DiffGram ha esito negativo e viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="f9701-116">Otherwise the DiffGram merge operation fails, and an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="Fragment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Fragment = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Fragment" />
      <MemberSignature Language="VB.NET" Value="Fragment" />
      <MemberSignature Language="C++ CLI" Value="Fragment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9701-117">Legge i frammenti XML, ad esempio i frammenti generati dall'esecuzione di query di tipo FOR XML, in base a un'istanza di SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-117">Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.</span>
          </span>
          <span data-ttu-id="f9701-118">Quando <see cref="T:System.Data.XmlReadMode" /> è impostato su <see langword="Fragment" />, lo spazio dei nomi predefinito viene letto come schema inline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-118">When <see cref="T:System.Data.XmlReadMode" /> is set to <see langword="Fragment" />, the default namespace is read as the inline schema.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode IgnoreSchema = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9701-119">Ignora tutti gli schemi inline e legge i dati nello schema <see cref="T:System.Data.DataSet" /> esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-119">Ignores any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" /> schema.</span>
          </span>
          <span data-ttu-id="f9701-120">Se non vi è corrispondenza tra i dati e lo schema esistente, i dati verranno eliminati, compresi i dati di diversi spazi dei nomi definiti per l'oggetto <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-120">If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <see cref="T:System.Data.DataSet" />).</span>
          </span>
          <span data-ttu-id="f9701-121">Se i dati sono di tipo DiffGram, <see langword="IgnoreSchema" /> presenta la stessa funzionalità di <see langword="DiffGram" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-121">If the data is a DiffGram, <see langword="IgnoreSchema" /> has the same functionality as <see langword="DiffGram" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="InferSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferSchema = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferSchema" />
      <MemberSignature Language="VB.NET" Value="InferSchema" />
      <MemberSignature Language="C++ CLI" Value="InferSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9701-122">Ignora tutti gli schemi inline, deriva gli schemi dai dati e carica i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-122">Ignores any inline schema, infers schema from the data and loads the data.</span>
          </span>
          <span data-ttu-id="f9701-123">Se nell'oggetto <see cref="T:System.Data.DataSet" /> è già contenuto uno schema, lo schema corrente verrà esteso mediante l'aggiunta di nuove tabelle o l'aggiunta di nuove colonne alle tabelle esistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-123">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.</span>
          </span>
          <span data-ttu-id="f9701-124">Verrà generata un'eccezione se esiste già una tabella derivata ma con un differente spazio dei nomi, o se si verificano conflitti tra le colonne derivate e le colonne esistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-124">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InferTypedSchema">
      <MemberSignature Language="C#" Value="InferTypedSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferTypedSchema = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferTypedSchema" />
      <MemberSignature Language="VB.NET" Value="InferTypedSchema" />
      <MemberSignature Language="C++ CLI" Value="InferTypedSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9701-125">Ignora tutti gli schemi inline, deriva uno schema fortemente tipizzato dai dati e carica i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-125">Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.</span>
          </span>
          <span data-ttu-id="f9701-126">Se non è possibile derivare il tipo dai dati, i dati vengono interpretati come dati di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-126">If the type cannot be inferred from the data, it is interpreted as string data.</span>
          </span>
          <span data-ttu-id="f9701-127">Se nell'oggetto <see cref="T:System.Data.DataSet" /> è già contenuto uno schema, lo schema corrente verrà esteso mediante l'aggiunta di nuove tabelle o l'aggiunta di colonne alle tabelle esistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-127">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.</span>
          </span>
          <span data-ttu-id="f9701-128">Verrà generata un'eccezione se esiste già una tabella derivata ma con un differente spazio dei nomi, o se si verificano conflitti tra le colonne derivate e le colonne esistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-128">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadSchema">
      <MemberSignature Language="C#" Value="ReadSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode ReadSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.ReadSchema" />
      <MemberSignature Language="VB.NET" Value="ReadSchema" />
      <MemberSignature Language="C++ CLI" Value="ReadSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9701-129">Legge tutti gli schemi inline e carica i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-129">Reads any inline schema and loads the data.</span>
          </span>
          <span data-ttu-id="f9701-130">Se nell'oggetto <see cref="T:System.Data.DataSet" /> sono già presenti schemi, è possibile che vengano aggiunte nuove tabelle allo schema, ma verrà generata un'eccezione se una tabella contenuta nello schema inline è già presente nell'oggetto <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9701-130">If the <see cref="T:System.Data.DataSet" /> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>