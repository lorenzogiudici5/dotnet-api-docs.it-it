<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5ad4617b21404fdfc9af0b0272a505fd2fb4f37" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398315" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un insieme di proprietà relative ai comandi che vengono utilizzate per compilare l'oggetto <see cref="T:System.Data.DataSet" /> e aggiornare un'origine dati e viene implementata dai provider di dati .NET Framework con accesso ai database relazionali.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.IDbDataAdapter> interfaccia eredita dal <xref:System.Data.IDataAdapter> l'interfaccia e consente a un oggetto creare un oggetto DataAdapter progettato per l'uso con un database relazionale. Il <xref:System.Data.IDbDataAdapter> interfaccia e, facoltativamente, la classe di utilità <xref:System.Data.Common.DbDataAdapter>, consentono a una classe che eredita di implementare una classe di DataAdapter, che rappresenta il ponte tra un'origine dati e un <xref:System.Data.DataSet>. Per ulteriori informazioni sulle classi DataAdapter, vedere [popolamento di un set di dati da un oggetto DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). Per ulteriori informazioni sull'implementazione di provider di dati .NET Framework, vedere [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).  
  
 Un'applicazione crea un'istanza di <xref:System.Data.IDbDataAdapter> interfaccia direttamente, ma crea un'istanza di una classe che eredita <xref:System.Data.IDbDataAdapter> e <xref:System.Data.Common.DbDataAdapter>.  
  
 Le classi che ereditano <xref:System.Data.IDbDataAdapter> deve implementare i membri ereditati e in genere definire membri aggiuntivi per aggiungere funzionalità specifiche del provider. Ad esempio, il <xref:System.Data.IDbDataAdapter> interfaccia definisce il <xref:System.Data.IDbDataAdapter.SelectCommand%2A> proprietà e <xref:System.Data.Common.DbDataAdapter> interfaccia definisce un <xref:System.Data.IDataAdapter.Fill%2A> metodo che accetta un <xref:System.Data.DataTable> come parametro. A sua volta, il <xref:System.Data.OleDb.OleDbDataAdapter> classe eredita il <xref:System.Data.IDbDataAdapter.SelectCommand%2A> proprietà e <xref:System.Data.Common.DbDataAdapter.Fill%2A> (metodo) e definisce anche altri due overload del <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metodo che accetta un oggetto Recordset ADO come parametro.  
  
   
  
## Examples  
 L'esempio seguente usa le classi derivate, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> e <xref:System.Data.SqlClient.SqlConnection>, per selezionare i record da un'origine dati. Il riempimento <xref:System.Data.DataSet> viene quindi restituito. A tale scopo, viene passato un oggetto inizializzato <xref:System.Data.DataSet>, una stringa di connessione e una stringa di query che rappresenta un'istruzione Transact-SQL SELECT.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Per promuovere la coerenza fra i provider di dati .NET Framework, assegnare un nome alla classe che eredita il form <paramref name="Prv" /> DataAdapter dove <paramref name="Prv" /> è il prefisso uniforme assegnato a tutte le classi in uno specifico spazio dei nomi provider di dati .NET Framework. Ad esempio, <paramref name="Sql" /> è il prefisso del <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> classe il <see langword="System.Data.SqlClient" /> dello spazio dei nomi.  
  
 Quando si eredita dal <see cref="T:System.Data.IDbDataAdapter" /> interfaccia, è necessario implementare i seguenti costruttori:  
  
 <list type="table"><listheader><term> Elemento  
  
 </term><description> Descrizione  
  
 </description></listheader><item><term> PrvDataAdapter()  
  
 </term><description> Inizializza una nuova istanza della classe PrvDataAdapter.  
  
 </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand)  
  
 </term><description> Inizializza una nuova istanza della classe PrvDataAdapter con l'istruzione SQL SELECT specificata.  
  
 </description></item><item><term> PrvDataAdapter (selectCommandText stringa, stringa selectConnectionString)  
  
 </term><description> Inizializza una nuova istanza della classe PrvDataAdapter con un'istruzione SQL SELECT e una stringa di connessione.  
  
 </description></item><item><term> PrvDataAdapter (stringa selectCommandText, PrvConnection selectConnection)  
  
 </term><description> Inizializza una nuova istanza della classe PrvDataAdapter con un'istruzione SQL SELECT e un oggetto PrvConnection.  
  
 </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL per l'eliminazione di record dal set di dati.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante l'utilizzo del metodo <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> per eliminare i record nell'origine dati relativi alle righe eliminate dal set di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> può essere generato automaticamente, se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework. Quindi, i comandi aggiuntivi che non si imposta vengono generati da CommandBuilder. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente nel <xref:System.Data.DataSet>. Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> non verrà duplicato. Il <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.IDbCommand> oggetto.  
  
   
  
## Examples  
 L'esempio seguente crea un'istanza di ereditato <xref:System.Data.OleDb.OleDbDataAdapter> classe e imposta il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> proprietà. Si presuppone che sia già stato creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL utilizzata per inserire nuovi record nell'origine dati.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante l'operazione di <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> per immettere i record nell'origine dati relativi alle nuove righe aggiunge al set di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> può essere generato automaticamente, se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework. Quindi, i comandi aggiuntivi che non si imposta vengono generati da CommandBuilder. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente nel <xref:System.Data.DataSet>. Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.IDbDataAdapter.InsertCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> non verrà duplicato. Il <xref:System.Data.IDbDataAdapter.InsertCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.IDbCommand> oggetto.  
  
> [!NOTE]
>  Se l'esecuzione di questo comando restituisce le righe, è possibile aggiungere queste righe per il <xref:System.Data.DataSet> a seconda della modalità di impostazione di <xref:System.Data.IDbCommand.UpdatedRowSource%2A> proprietà del <xref:System.Data.IDbCommand> oggetto.  
  
   
  
## Examples  
 L'esempio seguente crea un'istanza di ereditato <xref:System.Data.OleDb.OleDbDataAdapter> classe e imposta il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> proprietà. Si presuppone che sia già stato creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL utilizzata per selezionare i record nell'origine dati.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante l'operazione di <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> per selezionare i record dall'origine dati e posizionarli nel dataset.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Data.IDbDataAdapter.SelectCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> non verrà duplicato. Il <xref:System.Data.IDbDataAdapter.SelectCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.IDbCommand> oggetto.  
  
 Se il <xref:System.Data.IDbDataAdapter.SelectCommand%2A> non restituisce alcuna riga, non verranno aggiunte tabelle per il <xref:System.Data.DataSet>, e viene generata alcuna eccezione.  
  
   
  
## Examples  
 L'esempio seguente crea un'istanza di ereditato <xref:System.Data.OleDb.OleDbDataAdapter> classe e imposta il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> proprietà. Si presuppone che sia già stato creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL utilizzata per aggiornare i record nell'origine dati.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante l'operazione di <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> per aggiornare i record nell'origine dati relativi alle righe modificate nel set di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> può essere generato automaticamente, se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework. Quindi, i comandi aggiuntivi che non si imposta vengono generati da CommandBuilder. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente nel <xref:System.Data.DataSet>. Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> non verrà duplicato. Il <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.IDbCommand> oggetto.  
  
> [!NOTE]
>  Se l'esecuzione di questo comando restituisce le righe, le righe vengono aggiunte al <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 L'esempio seguente crea un'istanza di ereditato <xref:System.Data.OleDb.OleDbDataAdapter> classe e imposta il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> proprietà. Si presuppone che sia già stato creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>