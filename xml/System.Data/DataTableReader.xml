<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b05c6536b55f3b3e8b451bd60aecebed5db7c3e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30400225" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Il tipo <see cref="T:System.Data.DataTableReader" /> presenta il contenuto di uno o più oggetti <see cref="T:System.Data.DataTable" /> sotto forma di uno o più set di risultati forward-only di sola lettura.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataTableReader> funziona in modo analogo a qualsiasi altro lettore di dati, ad esempio il <xref:System.Data.SqlClient.SqlDataReader>, ad eccezione del fatto che il <xref:System.Data.DataTableReader> consente di scorrere le righe in un <xref:System.Data.DataTable>. In altre parole, consente di scorrere le righe in una cache. I dati memorizzati nella cache possono essere modificati mentre il <xref:System.Data.DataTableReader> è attivo, e il lettore mantiene automaticamente la posizione.  
  
 Quando si crea un <xref:System.Data.DataTableReader> da un <xref:System.Data.DataTable>, il valore risultante <xref:System.Data.DataTableReader> oggetto contiene un set di risultati con gli stessi dati il <xref:System.Data.DataTable> da cui è stato creato, ad eccezione delle righe che sono state contrassegnate come eliminate. Le colonne vengono visualizzate nello stesso ordine utilizzato originale <xref:System.Data.DataTable>. La struttura del risultato restituito è identica nello schema e dati all'oggetto originale <xref:System.Data.DataTable>. A <xref:System.Data.DataTableReader> che è stato creato chiamando il <xref:System.Data.DataSet.CreateDataReader*> metodo di un <xref:System.Data.DataSet> oggetto contiene più set di risultati se la <xref:System.Data.DataSet> contiene più di una tabella. I risultati sono nella stessa sequenza di <xref:System.Data.DataTable> gli oggetti il <xref:System.Data.DataTableCollection> del <xref:System.Data.DataSet> oggetto.  
  
 Set di risultati restituito contiene solo la versione corrente di ogni <xref:System.Data.DataRow>; verranno ignorate le righe contrassegnate per l'eliminazione.  
  
 Il `DataTableReader` fornisce stabile iteratore, vale a dire il contenuto del `DataTableReader` non vengono invalidati se le dimensioni della raccolta sottostante sono stata modificata durante l'iterazione. Ad esempio, se uno o più delle righe nel <xref:System.Data.DataTable.Rows%2A> raccolta vengono eliminati o rimosse durante l'iterazione, la posizione corrente all'interno di `DataTableReader` viene mantenuta in modo appropriato e non invalida l'iteratore.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.DataTableReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">Classe <see cref="T:System.Data.DataTable" /> da cui la nuova classe <see cref="T:System.Data.DataTableReader" /> ottiene il gruppo di risultati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.DataTableReader" /> utilizzando i dati dalla classe <see cref="T:System.Data.DataTable" /> fornita.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">Matrice di oggetti <see cref="T:System.Data.DataTable" /> che fornisce i risultati per il nuovo oggetto <see cref="T:System.Data.DataTableReader" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.DataTableReader" /> con la matrice di oggetti <see cref="T:System.Data.DataTable" /> fornita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è necessario creare un <xref:System.Data.DataTableReader> dipende tutti o solo un subset delle tabelle all'interno di uno specifico <xref:System.Data.DataSet>, chiamare il `DataSet`del <xref:System.Data.DataSet.CreateDataReader*> metodo. Se si desidera creare un nuovo <xref:System.Data.DataTableReader> istanza basata su un gruppo di `DataTable` istanze che non sono in caso contrario correlate, utilizzare questo costruttore. È possibile usufruire di questo costruttore per modificare l'ordine del `DataTables` all'interno di `DataTableReader`, se l'ordine all'interno di origine `DataSet` non soddisfa le proprie esigenze.  
  
   
  
## Examples  
 Nell'esempio seguente, il metodo TestConstructor crea due <xref:System.Data.DataTable> istanze. Per illustrare questo costruttore per il <xref:System.Data.DataTableReader> (classe), l'esempio crea un nuovo `DataTableReader` basato su una matrice che contiene i due `DataTables`ed esegue una semplice operazione, stampa il contenuto delle prime colonne nella console finestra. Per testare l'applicazione, creare una nuova applicazione Console e incollare il codice di esempio nel file appena creato.  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 Nella finestra della Console vengono visualizzati i risultati seguenti:  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude la classe <see cref="T:System.Data.DataTableReader" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata `Close()` su un oggetto chiuso `DataTableReader` oggetto non viene generato un errore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Livello di annidamento della riga corrente della classe <see cref="T:System.Data.DataTableReader" />.</summary>
        <value>Livello di annidamento della riga corrente. Sempre zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DataTableReader` non supporta l'annidamento. Il `Depth` proprietà restituisce sempre zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce il numero di colonne nella riga corrente.</summary>
        <value>Quando non posizionato su di un recordset valido, 0. In caso contrario, il numero di colonne nella riga corrente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di recuperare il numero di campi in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di classe <see cref="T:System.Boolean" />.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere un valore booleano o coercibile rispetto al valore booleano o viene generata un'eccezione.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un valore <see langword="Boolean" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come byte.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere un byte o coercibile rispetto a un byte.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see langword="DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un byte.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <param name="dataIndex">Indice all'interno del campo da cui avviare l'operazione di lettura.</param>
        <param name="buffer">Buffer in cui leggere il flusso di byte.</param>
        <param name="bufferIndex">Indice all'interno del buffer da cui iniziare a inserire i dati.</param>
        <param name="length">Lunghezza massima per la copia nel buffer.</param>
        <summary>Legge un flusso di byte a partire dall'offset specificato della colonna e lo copia come matrice nel buffer, a partire dall'offset specificato del buffer.</summary>
        <returns>Numero effettivo di byte letti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetBytes` Restituisce il numero di byte disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetBytes` è già stato utilizzato per ottenere i byte del campo. Questo può essere il caso, ad esempio, quando il <xref:System.Data.DataTableReader> in un buffer viene letta una struttura di dati di grandi dimensioni  
  
 Se si passa un buffer `null` (`Nothing` in Visual Basic), `GetBytes` restituisce la lunghezza dell'intero campo in byte, non le dimensioni rimanenti in base al parametro di offset di buffer.  
  
 Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere o meno una matrice di byte o coercibile rispetto a una matrice di byte.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.DataTableReader> in base ai dati nel database di esempio AdventureWorks e recuperare ogni immagine in un file separato nella cartella C:\ Salva. Per testare l'applicazione, creare una nuova applicazione Console, fare riferimento all'assembly System.Drawing.dll e incollare il codice di esempio nel file appena creato.  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see langword="DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene una matrice di byte.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di carattere.</summary>
        <returns>Valore della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere un carattere o coercibile rispetto a un carattere.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 L'esempio seguente mostra il contenuto della colonna 2 in DataTableReader passata. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see langword="DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">Il campo specificato non contiene un carattere.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <param name="dataIndex">Indice all'interno del campo da cui avviare l'operazione di lettura.</param>
        <param name="buffer">Buffer in cui scrivere il flusso di caratteri.</param>
        <param name="bufferIndex">Indice all'interno del buffer da cui iniziare a inserire i dati.</param>
        <param name="length">Lunghezza massima per la copia nel buffer.</param>
        <summary>Restituisce il valore della colonna specificata come stringa di caratteri.</summary>
        <returns>Numero effettivo di caratteri letti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetChars` Restituisce il numero di caratteri disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetChars` è già stato utilizzato per ottenere i caratteri del campo.  
  
 Il numero effettivo di caratteri letti può essere minore della lunghezza richiesta, se viene raggiunta la fine del campo. Se si passa un buffer che è null (`Nothing` in Visual Basic), `GetChars` restituisce la lunghezza del campo intera in caratteri, non le dimensioni rimanenti in base al parametro di offset di buffer.  
  
 Viene eseguita alcuna conversione; pertanto i dati da recuperare devono già essere o meno una matrice di caratteri o coercibile rispetto a una matrice di caratteri.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il `GetChars` metodo. Il `TestGetChars` metodo prevede che deve essere passato un `DataTableReader` riempita con due colonne di dati: un nome file nella prima colonna e una matrice di caratteri nella seconda. Inoltre, `TestGetChars` consente di specificare le dimensioni del buffer da utilizzare durante la lettura dei dati dalla matrice di caratteri nella `DataTableReader`. `TestGetChars` Crea un file corrispondente a ogni riga di dati di `DataTableReader`, utilizzando i dati forniti nella prima colonna del `DataTableReader` come il nome del file.  
  
 Questa procedura viene illustrato come utilizzare il `GetChars` la lettura dei dati che è stati archiviati nel metodo di `DataTable` come una matrice di caratteri. Qualsiasi altro tipo di dati determina il `GetChars` metodo consente di generare un `InvalidCastException`.  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see langword="DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene una matrice di caratteri.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene una stringa che rappresenta il tipo di dati della colonna specificata.</summary>
        <returns>Stringa che rappresenta il tipo di dati della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataTableReader.GetDataTypeName%2A> metodo restituisce sempre il tipo dell'oggetto sottostante <xref:System.Data.DataColumn> anziché un tipo specifico del provider.  
  
   
  
## Examples  
 La seguente applicazione console viene visualizzato un elenco di campi e i nomi dei tipi da una semplice <xref:System.Data.DataTable>:  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 Nella finestra della Console vengono visualizzati i risultati seguenti:  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come oggetto <see cref="T:System.DateTime" />.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; pertanto i dati recuperati devono essere già un <xref:System.DateTime> o coercibile rispetto a un `DataTime`.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see langword="DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un valore DateTime.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di classe <see cref="T:System.Decimal" />.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; pertanto i dati recuperati devono essere già un <xref:System.Decimal> o coercibile rispetto a un `Decimal`.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see langword="DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un valore <see langword="Decimal" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale in base zero della colonna.</param>
        <summary>Ottiene il valore della colonna sotto forma di numero a virgola mobile e precisione doppia.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; Pertanto, i dati recuperati devono già essere un numero a virgola mobile e precisione doppia o devono essere coercibile rispetto al numero a virgola mobile e precisione doppia.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see langword="DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un numero in virgola mobile e precisione doppia.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore che può essere utilizzato per scorrere l'insieme di elementi.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che rappresenta l'insieme di elementi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli enumeratori consentono solo la lettura dei dati nel <xref:System.Data.DataTableReader>. Non è possibile utilizzare enumeratori per modificare la raccolta sottostante.  
  
 Inizialmente l'enumeratore è posizionato prima del primo elemento nella raccolta. In questa posizione, la chiamata <xref:System.Collections.IEnumerator.Current%2A> genera un'eccezione. Pertanto, è necessario chiamare il metodo `MoveNext` per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di `Current`.  
  
 `Current` Restituisce un <xref:System.Data.Common.DbDataRecord>e restituisce lo stesso oggetto finché non <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> viene chiamato. `MoveNext` imposta `Current` sull'elemento successivo.  
  
 Una volta raggiunta la fine della raccolta, l'enumeratore sarà posizionato dopo l'ultimo elemento nella raccolta e la chiamata `MoveNext` restituisce false. Se l'ultima chiamata a `MoveNext` restituito `false`, la chiamata `Current` genera un'eccezione. Inoltre, perché il <xref:System.Data.DataTableReader> fornisce accesso forward-only ai dati, la chiamata di <xref:System.Collections.IEnumerator.Reset%2A> metodo di IEnumerator genera un <xref:System.NotSupportedException>.  
  
 Il <xref:System.Data.DataTableReader> fornisce un enumeratore stabile. Ciò significa che anche se si verificano le aggiunte o eliminazioni di righe all'interno dei dati sottostanti, l'enumeratore restituito da una chiamata a <xref:System.Data.DataTableReader.GetEnumerator%2A> è ancora valido.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'uso del metodo <xref:System.Data.DataTableReader.GetEnumerator%2A>. Ciò include il comportamento dell'enumeratore quando vengono eliminate righe da sottostante <xref:System.Data.DataTable> mentre l'enumeratore è attivo.  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 La procedura consente di visualizzare il testo seguente nella finestra della Console:  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dell'oggetto.</summary>
        <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dell'oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Chiamare la procedura seguente, passando un <xref:System.Data.DataTableReader> istanza per visualizzare un elenco di tutti i campi e il nome completo per ogni tipo nella finestra della Console.  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come numero a virgola mobile con precisione singola.</summary>
        <returns>Valore della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; Pertanto, i dati recuperati devono già essere un numero a virgola mobile e precisione singola o devono essere coercibile rispetto al numero a virgola mobile e precisione singola.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un numero in virgola mobile e precisione singola.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come identificatore univoco globale (GUID).</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; pertanto i dati recuperati devono essere già un <xref:System.Guid> o coercibile rispetto a un `Guid`.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 L'esempio seguente mostra il contenuto della colonna 2 in DataTableReader passata. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di intero con segno a 16 bit.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.Int16> o coercibile rispetto a un `Int16`.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un intero con segno a 16 bit.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come intero con segno a 32 bit.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.Int32> o coercibile rispetto a un `Int32`.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un intero con segno a 32 bit.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come integer con segno a 64 bit.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.Int64> o coercibile rispetto a un `Int64`.  
  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna non sono del tipo corretto, verrà visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene un intero con segno a 64 bit.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di classe <see cref="T:System.String" />.</summary>
        <returns>Nome della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `GetName` e <xref:System.Data.DataTableReader.GetOrdinal%2A> metodi forniscono funzionalità inversa. La chiamata al metodo `GetOrdinal` sul valore restituito della chiamata al metodo `GetName` deve restituire il parametro originale passato al `GetName`; lo stesso vale per le procedure di chiamata in ordine inverso.  
  
   
  
## Examples  
 Nell'esempio seguente viene descritta una procedura che elenca i nomi di tutte le colonne all'interno di specificato `DataTableReader`e la posizione ordinale della colonna, nella finestra della Console.  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della colonna.</param>
        <summary>Ottiene la posizione ordinale della colonna, dato il nome della colonna.</summary>
        <returns>Ordinale di colonna in base zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché la maggior parte dei metodi forniti dal <xref:System.Data.DataTableReader> classe deve essere fornito con un numero ordinale di colonna, è possibile utilizzare il `GetOrdinal` metodo per recuperare il numero di colonna, dato il nome della colonna.  
  
 `GetOrdinal` Innanzitutto, esegue una ricerca con distinzione maiuscole/minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo. Se il numero di colonna non viene trovato un `IndexOutOfRangeException` viene generata un'eccezione.  
  
 `GetOrdinal` è senza distinzione di larghezza dei caratteri kana.  
  
 Poiché le ricerche basate su valori ordinali sono più efficienti ricerche denominate, non è opportuno chiamare `GetOrdinal` all'interno di un ciclo. Risparmiare tempo chiamando `GetOrdinal` una sola volta e assegnando i risultati a una variabile integer per l'utilizzo all'interno del ciclo  
  
   
  
## Examples  
 Se si dispone di un nome di colonna, nel qual caso il nome della colonna è fornito dall'utente, è necessario recuperare informazioni dalla colonna, è possibile utilizzare una procedura simile al seguente per estrarre le informazioni necessarie. In questo esempio, la procedura accetta un nome di colonna e restituisce i dati all'interno di tale colonna per la riga corrente di <xref:System.Data.DataTableReader> :  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.ArgumentException">Il nome specificato non è un nome di colonna valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il tipo della colonna specificata nel formato specifico del provider.</summary>
        <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dell'oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Perché il <xref:System.Data.DataTableReader> restituisce sempre il tipo archiviato all'interno di sottostante <xref:System.Data.DataColumn>, il valore restituito chiamando il <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> metodo restituisce sempre lo stesso tipo nello stesso tipo archiviato all'interno di <xref:System.Data.DataTable>. Quando si lavora con la <xref:System.Data.DataTableReader> classe, chiamata il <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> metodo restituisce lo stesso tipo di una chiamata di <xref:System.Type.GetType%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Il numero in base zero della colonna di cui si è recuperato il valore.</param>
        <summary>Ottiene il valore della colonna specificata nel formato specifico del provider.</summary>
        <returns>Valore della colonna specificata nel formato specifico del provider.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Perché il <xref:System.Data.DataTableReader> restituisce sempre il tipo archiviato all'interno di sottostante <xref:System.Data.DataColumn>, il valore restituito chiamando il <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> metodo restituisce sempre i dati dello stesso tipo dei dati archiviati all'interno di <xref:System.Data.DataTable>. Quando si lavora con la <xref:System.Data.DataTableReader> classe, chiamata il <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> restituisce lo stesso valore e tipo di una chiamata di <xref:System.Data.DataTableReader.GetValue%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Matrice di oggetti da riempire con informazioni del tipo per le colonne nella classe <see cref="T:System.Data.DataTableReader" />.</param>
        <summary>Riempie la matrice fornita con le informazioni sul tipo specifico del provider per tutte le colonne nella classe <see cref="T:System.Data.DataTableReader" />.</summary>
        <returns>Numero di valori delle colonne copiati nella matrice.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il <xref:System.Data.DataTableReader> restituisce sempre i dati del tipo archiviato all'interno di sottostante <xref:System.Data.DataColumn>, i valori restituiti dalla chiamata al <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> metodo è sempre gli stessi tipi di dati archiviati all'interno di <xref:System.Data.DataTable>. Quando si lavora con il <xref:System.Data.DataTableReader> classe, chiamata di <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> metodo restituisce gli stessi valori e tipi a chiamare il <xref:System.Data.DataTableReader.GetValues%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna di <see cref="T:System.Data.DataTableReader" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metodo GetSchemaTable restituisce i metadati relativi a ogni colonna nell'ordine seguente:  
  
|Colonna DataReader|Descrizione|  
|-----------------------|-----------------|  
|Nome colonna|Il nome della colonna come visualizzato nel <xref:System.Data.DataTable>.|  
|ColumnOrdinal|Il numero ordinale di colonna|  
|ColumnSize|-1 se il <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (o <xref:System.Data.DataColumn.MaxLength%2A>) proprietà del <xref:System.Data.DataColumn> non può essere determinato o non è pertinente; in caso contrario, 0 o un numero intero positivo che contiene il `MaxLength` valore.|  
|NumericPrecision|Se il tipo di colonna è un tipo numerico, questa è la precisione massima della colonna. Se il tipo di colonna non è un tipo di dati numerici, questo è un valore null.|  
|NumericScale|Se il tipo di dati di colonna è un componente di scala, restituisce il numero di cifre a destra del separatore decimale. In caso contrario, restituisce un valore null.|  
|Tipo di dati|Il tipo sottostante della colonna.|  
|Tipoprovider|L'indicatore del tipo di dati della colonna. Se il tipo di dati della colonna varia da una riga per riga, questo valore è <xref:System.Object>. Questa colonna non può contenere un valore null.|  
|IsLong|`true` Se il tipo di dati della colonna è <xref:System.String> e il relativo <xref:System.Data.DataColumn.MaxLength%2A> proprietà è -1. In caso contrario, `false`.|  
|AllowDBNull|`true` Se il vincolo AllowDbNull è impostato su true per la colonna. in caso contrario, `false`.|  
|IsReadOnly|`true` Se la colonna non può essere modificata. in caso contrario `false`.|  
|IsRowVersion|`false`, per ogni colonna.|  
|IsUnique|`true`: Due righe di <xref:System.Data.DataTable> possono avere lo stesso valore in questa colonna. `IsUnique` è certamente true se la colonna rappresenta una chiave da sola o se esiste un vincolo di tipo UNIQUE applicato solo a questa colonna. `false`: La colonna può contenere valori duplicati nel `DataTable`. Il valore predefinito di questa colonna è `false`.|  
|IsKey|`true`: La colonna fa parte di un set di colonne che, complessivamente, identificare in modo univoco la riga nel <xref:System.Data.DataTable>. Il set di colonne con `IsKey` impostato su `true` deve identificare in modo univoco una riga di `DataTable`. Non è necessario che il set di colonne è un set minimo di colonne. Questo set di colonne può essere generato da un `DataTable` chiave primaria, un vincolo unique o un indice univoco. `false`: La colonna non è necessario per identificare in modo univoco la riga. Questo valore è `true` se la colonna fa parte di una chiave primaria singola o composita. In caso contrario, il relativo valore è `false`.|  
|IsAutoIncrement|`true`: La colonna assegna valori a nuove righe in incrementi fissi. `false`: La colonna non assegna valori a nuove righe in incrementi fissi. Il valore predefinito di questa colonna è `false`.|  
|BaseCatalogName|Il nome del catalogo nell'archivio dati contenente la colonna. `Null` Se non è possibile determinare il nome del catalogo di base. Il valore predefinito per questa colonna è una `null` valore.|  
|BaseSchemaName|Questo valore è sempre `Null`.|  
|BaseTableName|Nome di <xref:System.Data.DataTable>.|  
|BaseColumnName|Il nome della colonna di <xref:System.Data.DataTable>.|  
|AutoIncrementSeed|Il valore di <xref:System.Data.DataTable>del <xref:System.Data.DataColumn.AutoIncrementSeed%2A> proprietà.|  
|AutoIncrementStep|Il valore di <xref:System.Data.DataTable>del <xref:System.Data.DataColumn.AutoIncrementStep%2A> proprietà.|  
|defaultValue|Il valore di <xref:System.Data.DataColumn>del <xref:System.Data.DataColumn.DefaultValue%2A> proprietà.|  
|Espressione|La stringa di espressione, se la colonna corrente è un'espressione e tutte le colonne utilizzate nell'espressione appartengono allo stesso `T:System.Data.DataTable` che contiene la colonna espressioni; in caso contrario `null`.|  
|ColumnMapping|Il <xref:System.Data.MappingType> valore associato di <xref:System.Data.DataColumn>. Il tipo può essere uno dei `Attribute`, `Element`, `Hidden`, o `SimpleContent`. Il valore predefinito è `Element`.|  
|BaseTableNamespace|Il valore di <xref:System.Data.DataTable>del <xref:System.Data.DataTable.Namespace%2A> proprietà.|  
|BaseColumnNamespace|Il valore di <xref:System.Data.DataColumn>del <xref:System.Data.DataColumn.Namespace%2A> proprietà.|  
  
   
  
## Examples  
 L'esempio di applicazione console seguente recupera informazioni sullo schema relative alla colonna specificata. Passare il `DisplaySchemaTableInfo` procedura un <xref:System.Data.DataTableReader> e un numero intero che rappresenta la posizione ordinale di una colonna all'interno di `DataTableReader`, e la procedura restituisce informazioni sullo schema alla finestra della console.  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.DataTableReader" /> è chiuso.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di stringa.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna del tipo corretto, nell'esempio viene visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <exception cref="T:System.InvalidCastException">La colonna specificata non contiene una stringa.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata nel formato nativo.</summary>
        <returns>Valore della colonna specificata. Il metodo restituisce <see langword="DBNull" /> per colonne con valori null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene sia possibile chiamare <xref:System.Data.DataTableReader.IsDBNull%2A> per vedere se sono presenti valori null prima di chiamare questo metodo, non è necessario eseguire questa operazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene eseguito lo scorrimento di tutte le colonne all'interno della riga corrente in un <xref:System.Data.DataTableReader>, visualizzazione del contenuto di ogni colonna e il nome della colonna. In genere, se si intende utilizzare tutte le colonne all'interno di una riga recuperata da un <xref:System.Data.DataTableReader>, considerare l'utilizzo di <xref:System.Data.DataTableReader.GetValues%2A> (metodo), invece, poiché è più efficiente.  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso alle colonne di un oggetto <see cref="T:System.Data.DataTableReader" /> chiuso.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Matrice di <see cref="T:System.Object" /> in cui copiare i valori delle colonne dalla classe <see cref="T:System.Data.DataTableReader" />.</param>
        <summary>Popola una matrice di oggetti con i valori della colonna della riga corrente.</summary>
        <returns>Numero di valori delle colonne copiati nella matrice.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per la maggior parte delle applicazioni, questo metodo fornisce un mezzo efficiente per il recupero di tutte le colonne, anziché recuperare ciascuna colonna singolarmente. Se si intende recuperare tutti i valori della colonna da una riga all'interno di <xref:System.Data.DataTableReader>, `GetValues` metodo offre la soluzione più efficiente.  
  
 È possibile passare un <xref:System.Object> matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante. Solo la quantità di dati di `Object` matrice può contenere viene copiato nella matrice. È inoltre possibile passare un `Object` matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante, in cui caso gli elementi della matrice aggiuntive rimane invariata dopo la chiamata al metodo.  
  
 Questo metodo inserisce `DBNull` nella matrice di output per le colonne null.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo di una matrice che rappresenta le dimensioni corrette, per leggere tutti i valori dalla riga corrente nella classe fornita <xref:System.Data.DataTableReader>. Inoltre, l'esempio viene illustrato l'utilizzo di una matrice di dimensione fissa che può essere minore o maggiore del numero di colonne disponibili.  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la classe <see cref="T:System.Data.DataTableReader" /> contiene una o più righe.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Data.DataTableReader" /> contiene una o più righe. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `HasRows` proprietà restituisce informazioni sul set di risultati corrente. Se il <xref:System.Data.DataTableReader> contiene il risultato di più set, è possibile esaminare il valore del `HasRows` proprietà immediatamente dopo la chiamata di <xref:System.Data.DataTableReader.NextResult%2A> metodo per determinare se il nuovo set di risultati contiene righe.  
  
 Utilizzare il `HasRows` proprietà per evitare la necessità di chiamare il <xref:System.Data.DataTableReader.Read%2A> metodo il <xref:System.Data.DataTableReader> se non sono presenti righe nel set di risultati corrente.  
  
   
  
## Examples  
 Nell'esempio seguente inserisce due <xref:System.Data.DataTable> istanze con i dati. Il primo <xref:System.Data.DataTable> contiene una riga, mentre il secondo contiene alcuna riga. L'esempio crea quindi un <xref:System.Data.DataTableReader> che contiene sia <xref:System.Data.DataTable> oggetti e chiama il metodo PrintData per visualizzare il contenuto di ciascuna, controllare il valore del <xref:System.Data.DataTableReader.HasRows%2A> proprietà di ogni prima della chiamata al metodo PrintData.  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di recupero delle informazioni relative a una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la classe <see cref="T:System.Data.DataTableReader" /> è chiusa.</summary>
        <value>Restituisce <see langword="true" /> se la classe <see cref="T:System.Data.DataTableReader" /> è chiusa. In caso contrario restituisce <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.Close%2A> è l'unico metodo e `IsClosed` e <xref:System.Data.DataTableReader.RecordsAffected%2A> sono le uniche proprietà che è possibile accedere dopo la <xref:System.Data.DataTableReader> è stata chiusa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene un valore che indica se la colonna contiene valori non esistenti o mancanti.</summary>
        <returns>
          <see langword="true" /> se il valore della colonna specificata equivale a <see cref="T:System.DBNull" />, in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per verificare se sono presenti valori null della colonna prima di chiamare i metodi get tipizzati (ad esempio, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>e così via) per evitare la generazione di un errore.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il contenuto della colonna 2-del passato <xref:System.Data.DataTableReader>. Se il valore della colonna all'interno di una particolare riga è null, il codice visualizza il testo \<NULL >. Se i dati all'interno della colonna del tipo corretto, nell'esempio viene visualizzato un messaggio di errore per ogni riga.  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene il valore della colonna specificata nel formato nativo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata nel formato nativo, data la posizione ordinale della colonna.</summary>
        <value>Valore della colonna specificata nel formato nativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload per <xref:System.Data.DataTableReader.Item%2A> comportamento identico a quello di <xref:System.Data.DataTableReader.GetValue%2A> metodo.  
  
   
  
## Examples  
 L'esempio seguente mostra il contenuto di tutte le colonne in tutte le righe dall'oggetto fornito <xref:System.Data.DataTableReader>. Il codice Usa il <xref:System.Data.DataTableReader.Item%2A> (metodo) (l'indicizzatore in Microsoft c#) per recuperare il valore contenuto in ogni colonna.  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'indice passato non rientrava nell'intervallo compreso tra 0 e <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della colonna.</param>
        <summary>Ottiene il valore della colonna specificata nel formato nativo, dato il nome della colonna.</summary>
        <value>Valore della colonna specificata nel formato nativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Innanzitutto viene eseguita una ricerca tra maiuscole e minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo.  
  
 Questo metodo è senza distinzione kana-width.  
  
 Questa versione di overload di <xref:System.Data.DataTableReader.Item%2A> corrisponde alla chiamata al metodo di <xref:System.Data.DataTableReader.GetOrdinal%2A> (metodo) e successivamente alla chiamata di <xref:System.Data.DataTableReader.GetValue%2A> (metodo).  
  
   
  
## Examples  
 Dato un <xref:System.Data.DataTableReader> e un nome di colonna, la procedura GetValueByName restituisce il valore della colonna specificata. Prima di chiamare questa procedura, è necessario creare un nuovo <xref:System.Data.DataTableReader> istanza e chiamare il metodo Read almeno una volta per posizionare il puntatore di riga in una riga di dati.  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il nome specificato non è un nome di colonna valido.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Si è tentato di recuperare dati da una riga eliminata.</exception>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta la classe <see cref="T:System.Data.DataTableReader" /> al gruppo di risultati successivo, se esistente.</summary>
        <returns>
          <see langword="true" /> in caso di presenza di un altro gruppo di risultati. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzato per elaborare più risultati che possono essere generati mediante la creazione di un <xref:System.Data.DataTableReader> su un <xref:System.Data.DataSet> che contiene due o più tabelle o una matrice che contiene due o più <xref:System.Data.DataTable> istanze.  
  
 Un nuovo <xref:System.Data.DataTableReader> è posizionato sul primo risultato.  
  
   
  
## Examples  
 Nell'esempio seguente, il metodo TestConstructor crea due <xref:System.Data.DataTable> istanze. Per illustrare questo costruttore per il <xref:System.Data.DataTableReader> (classe), l'esempio crea un nuovo `DataTableReader` basato su una matrice che contiene i due `DataTables`ed esegue una semplice operazione, stampa il contenuto delle prime colonne nella console finestra. Per testare l'applicazione, creare una nuova applicazione Console e incollare il codice di esempio nel file appena creato.  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 Nella finestra della Console vengono visualizzati i risultati seguenti:  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di spostamento all'interno di una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta l'oggetto <see cref="T:System.Data.DataTableReader" /> al record successivo.</summary>
        <returns>
          <see langword="true" /> in caso di presenza di un'altra riga da leggere. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La posizione predefinita del <xref:System.Data.DataTableReader> prima del primo record. Pertanto, è necessario chiamare `Read` per avviare l'accesso ai dati.  
  
   
  
## Examples  
 La procedura PrintColumns scorre in ciclo tutte le righe di <xref:System.Data.DataTableReader>, visualizzando il contenuto di ogni colonna nella finestra della Console.  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di lettura o di accesso a una colonna in una classe <see cref="T:System.Data.DataTableReader" /> chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di righe inserite, modificate o eliminate dall'esecuzione dell'istruzione SQL.</summary>
        <value>La classe <see cref="T:System.Data.DataTableReader" /> non supporta questa proprietà e restituisce sempre 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>