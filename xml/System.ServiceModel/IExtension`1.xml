<Type Name="IExtension&lt;T&gt;" FullName="System.ServiceModel.IExtension&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f64c5a1ce4cca9076450d62228cbf97447fe23a8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36610768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExtension&lt;T&gt; where T : IExtensibleObject&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtension`1&lt;(class System.ServiceModel.IExtensibleObject`1&lt;!T&gt;) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IExtension`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtension(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : IExtensibleObject&lt;T&gt;public interface class IExtension" />
  <TypeSignature Language="F#" Value="type IExtension&lt;'T (requires 'T :&gt; IExtensibleObject&lt;'T&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ec304-101">Oggetto che partecipa al comportamento personalizzato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec304-101">The object that participates in the custom behavior.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ec304-102">Consente a un oggetto di estendere un altro oggetto tramite aggregazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec304-102">Enables an object to extend another object through aggregation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec304-103">WCF consente di estendere <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> oggetti (la <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, e <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classi) aggiungendo un nuovo stato o comportamento mediante il modello di oggetti estensibili.</span><span class="sxs-lookup"><span data-stu-id="ec304-103">WCF allows you to extend <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> objects (the <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, and <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classes) by adding a new state or behavior by using its extensible object pattern.</span></span> <span data-ttu-id="ec304-104">Questo modello viene utilizzato in WCF per estendere le classi runtime esistenti con nuove funzionalità oppure per aggiungere nuove funzionalità di stato a un oggetto.</span><span class="sxs-lookup"><span data-stu-id="ec304-104">The extensible object pattern is used in WCF to either extend existing run-time classes with new functionality or to add new state features to an object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Attach : 'T -&gt; unit" Usage="iExtension.Attach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="ec304-105">Oggetto flessibile che aggrega questa estensione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec304-105">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec304-106">Consente a un oggetto di estensione di rilevare che è stato aggregato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec304-106">Enables an extension object to find out when it has been aggregated.</span>
          </span>
          <span data-ttu-id="ec304-107">Questo metodo viene chiamato quando l'estensione viene aggiunta alla proprietà <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec304-107">Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec304-108">Utilizzare questo metodo per tenere traccia dell'oggetto <xref:System.ServiceModel.IExtensibleObject%601> a cui appartiene l'istanza corrente dell'estensione.</span><span class="sxs-lookup"><span data-stu-id="ec304-108">Use this method to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span> <span data-ttu-id="ec304-109">Questa chiamata offre alle estensioni l'opportunità di gestire gli eventi o di controllare le proprietà del proprietario.</span><span class="sxs-lookup"><span data-stu-id="ec304-109">This call gives extensions a chance to handle events or inspect properties of their owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec304-110">Nell'esempio di codice seguente viene mostrato come utilizzare questo metodo per tenere traccia dell'oggetto <xref:System.ServiceModel.IExtensibleObject%601> a cui appartiene l'istanza corrente dell'estensione.</span><span class="sxs-lookup"><span data-stu-id="ec304-110">The following example code shows how this method can be used to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span>  
  
```csharp  
InstanceContext owner;  
  
public void Attach(InstanceContext owner)  
{  
  this.owner = owner;   
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Detach : 'T -&gt; unit" Usage="iExtension.Detach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="ec304-111">Oggetto flessibile che aggrega questa estensione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec304-111">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec304-112">Consente a un oggetto di rilevare che la propria aggregazione è stata annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec304-112">Enables an object to find out when it is no longer aggregated.</span>
          </span>
          <span data-ttu-id="ec304-113">Questo metodo viene chiamato quando un'estensione viene rimossa dalla proprietà <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec304-113">Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec304-114">Utilizzare il metodo <xref:System.ServiceModel.IExtension%601.Detach%2A> per rilevare la rimozione dell'estensione.</span><span class="sxs-lookup"><span data-stu-id="ec304-114">Use the <xref:System.ServiceModel.IExtension%601.Detach%2A> method to find out when the extension has been removed.</span></span> <span data-ttu-id="ec304-115">Un'estensione può utilizzare questo metodo per eseguire l'unhook degli eventi riguardanti l'oggetto flessibile.</span><span class="sxs-lookup"><span data-stu-id="ec304-115">An extension can use this to unhook events on the extensible object.</span></span> <span data-ttu-id="ec304-116">Un'estensione può inoltre utilizzare questo modo per generare un'eccezione <xref:System.InvalidOperationException?displayProperty=nameWithType> al fine di indicare che, una volta aggiunta, l'estensione non può essere rimossa.</span><span class="sxs-lookup"><span data-stu-id="ec304-116">An extension can also throw <xref:System.InvalidOperationException?displayProperty=nameWithType> from this method to indicate that, once added, the extension cannot be removed.</span></span>  
  
 <span data-ttu-id="ec304-117">Si noti che questo metodo non viene chiamato quando l'oggetto proprietario viene eliminato o chiuso.</span><span class="sxs-lookup"><span data-stu-id="ec304-117">Note that this method is not called when the owner object is disposed or closed.</span></span> <span data-ttu-id="ec304-118">Se necessario, è responsabilità dell'estensione o del codice aggiungere l'estensione per eseguire l'hook agli eventi <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> appropriati o per implementare le interfacce adatte (per il contesto <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) al fine di osservare il ciclo di vita del proprietario.</span><span class="sxs-lookup"><span data-stu-id="ec304-118">If needed, it is up to the extension or the code adding the extension to hook the appropriate <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> events or implement the appropriate interfaces (for <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) to observe the lifecycle of the owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>