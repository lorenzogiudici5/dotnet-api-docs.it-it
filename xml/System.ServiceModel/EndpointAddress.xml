<Type Name="EndpointAddress" FullName="System.ServiceModel.EndpointAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e1e6756d7b5dabdd010ecfc8151b79a9a788e47" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39811564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EndpointAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.EndpointAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddress" />
  <TypeSignature Language="F#" Value="type EndpointAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9024a-101">Fornisce un indirizzo di rete univoco che un client utilizza per comunicare con un endpoint del servizio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9024a-101">Provides a unique network address that a client uses to communicate with a service endpoint.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-102">Un indirizzo endpoint identifica in modo univoco l'endpoint per un servizio.</span><span class="sxs-lookup"><span data-stu-id="9024a-102">An endpoint address uniquely identifies the endpoint for a service.</span></span>  
  
 <span data-ttu-id="9024a-103">L'indirizzo appartiene all'endpoint del servizio, che contiene inoltre l'associazione, il contratto e i comportamenti per l'endpoint.</span><span class="sxs-lookup"><span data-stu-id="9024a-103">The endpoint address belongs to the service endpoint, which also contains the binding, contract and behaviors for the endpoint.</span></span>  
  
 <span data-ttu-id="9024a-104">La classe <xref:System.ServiceModel.EndpointAddress> contiene un URI e proprietà dell'indirizzo che includono un'identità, elementi WSDL e una raccolta di intestazioni facoltative.</span><span class="sxs-lookup"><span data-stu-id="9024a-104">The <xref:System.ServiceModel.EndpointAddress> contains a URI and address properties that include an identity, WSDL elements, and a collection of optional headers.</span></span> <span data-ttu-id="9024a-105">Le intestazioni facoltative vengono utilizzate per fornire informazioni aggiuntive più dettagliate sull'indirizzo per identificare o interagire con l'endpoint.</span><span class="sxs-lookup"><span data-stu-id="9024a-105">The optional headers are used to provide additional, more detailed addressing information to identify or interact with the endpoint.</span></span> <span data-ttu-id="9024a-106">Ad esempio, possono essere utilizzate per indicare quale istanza di un servizio deve essere utilizzata per elaborare un messaggio in ingresso proveniente da un particolare utente quando sono disponibili più istanze.</span><span class="sxs-lookup"><span data-stu-id="9024a-106">For example, they can be used to indicate which instance of a service is to be used to process an incoming message from a particular user when multiple instances are available.</span></span>  
  
 <span data-ttu-id="9024a-107">L'indirizzo endpoint per un servizio può essere specificato in modo imperativo mediante l'utilizzo di codice oppure in modo dichiarativo mediante la configurazione.</span><span class="sxs-lookup"><span data-stu-id="9024a-107">The endpoint address for a service can be specified either imperatively using code or declaratively through configuration.</span></span> <span data-ttu-id="9024a-108">In genere definire endpoint nel codice non è pratico in quanto le associazioni e gli indirizzi di un servizio distribuito sono solitamente diversi da quelli usati durante lo sviluppo del servizio.</span><span class="sxs-lookup"><span data-stu-id="9024a-108">Defining endpoints in code is usually not practical because the bindings and addresses for a deployed service are typically different from those used while the service is being developed.</span></span> <span data-ttu-id="9024a-109">È più pratico definire endpoint di servizio utilizzando la configurazione.</span><span class="sxs-lookup"><span data-stu-id="9024a-109">It is more practical to define service endpoints using configuration.</span></span>  
  
 <span data-ttu-id="9024a-110">La classe <xref:System.ServiceModel.EndpointAddress> non implementa l'interfaccia <xref:System.Runtime.Serialization.ISerializable> e pertanto non è serializzabile.</span><span class="sxs-lookup"><span data-stu-id="9024a-110"><xref:System.ServiceModel.EndpointAddress> does not implement the <xref:System.Runtime.Serialization.ISerializable> interface and so is not serializable.</span></span> <span data-ttu-id="9024a-111">Affinché un endpoint sia esposto come parte di un contratto di servizio è necessario che sia serializzabile e conforme con il protocollo WS-Addressing (Web Service Addressing).</span><span class="sxs-lookup"><span data-stu-id="9024a-111">For an endpoint to be exposed as part of a service contract it must be serializable and it must also be compliant with the Web Service Addressing (WS-Addressing) protocol.</span></span> <span data-ttu-id="9024a-112">Gli endpoint serializzabili conformi con la versione 1.0 e la versione di agosto 2004 di WS-Addressing vengono forniti rispettivamente dalle classi <xref:System.ServiceModel.EndpointAddress10> e <xref:System.ServiceModel.EndpointAddressAugust2004>.</span><span class="sxs-lookup"><span data-stu-id="9024a-112">Serializable endpoints that are compliant with version 1.0 and the August 2004 version of WS-Addressing are provided, respectively, by the <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> classes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#0](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/hostapplication.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-113">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-113">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.EndpointAddress : string -&gt; System.ServiceModel.EndpointAddress" Usage="new System.ServiceModel.EndpointAddress uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="9024a-114">URI che identifica l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-114">The URI that identifies the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-115">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con la stringa URI specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-115">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#13](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, params System.ServiceModel.Channels.AddressHeader[] addressHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.Channels.AddressHeader[] addressHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, ... cli::array &lt;System::ServiceModel::Channels::AddressHeader ^&gt; ^ addressHeaders);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.EndpointAddress : Uri * System.ServiceModel.Channels.AddressHeader[] -&gt; System.ServiceModel.EndpointAddress" Usage="new System.ServiceModel.EndpointAddress (uri, addressHeaders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="addressHeaders" Type="System.ServiceModel.Channels.AddressHeader[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="9024a-116">Oggetto <see cref="T:System.Uri" /> che identifica la posizione dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-116">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="addressHeaders">
          <span data-ttu-id="9024a-117">Oggetto <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenente informazioni sull'indirizzo utilizzate per interagire con l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-117">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-118">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con l'URI e le intestazioni specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-118">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI and headers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9024a-119">Nel codice seguente viene illustrato l'utilizzo di questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="9024a-119">The following code shows the use of this constructor.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, params System.ServiceModel.Channels.AddressHeader[] addressHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeader[] addressHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, ... cli::array &lt;System::ServiceModel::Channels::AddressHeader ^&gt; ^ addressHeaders);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.EndpointAddress : Uri * System.ServiceModel.EndpointIdentity * System.ServiceModel.Channels.AddressHeader[] -&gt; System.ServiceModel.EndpointAddress" Usage="new System.ServiceModel.EndpointAddress (uri, identity, addressHeaders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="addressHeaders" Type="System.ServiceModel.Channels.AddressHeader[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="9024a-120">Oggetto <see cref="T:System.Uri" /> che identifica la posizione dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-120">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="9024a-121">Oggetto <see cref="T:System.ServiceModel.EndpointIdentity" /> per l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-121">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </param>
        <param name="addressHeaders">
          <span data-ttu-id="9024a-122">Oggetto <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenente informazioni sull'indirizzo utilizzate per interagire con l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-122">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-123">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con l'URI, l'identità e le intestazioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-123">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and headers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9024a-124">Nel codice seguente viene illustrato come costruire un oggetto <xref:System.ServiceModel.EndpointAddress> con <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> e una matrice di oggetti <xref:System.ServiceModel.Channels.AddressHeader>.</span><span class="sxs-lookup"><span data-stu-id="9024a-124">The following code shows how to construct an <xref:System.ServiceModel.EndpointAddress> object with a <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> and an array of <xref:System.ServiceModel.Channels.AddressHeader> objects.</span></span>  
  
 [!code-csharp[EndpointAddress#2](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, System.ServiceModel.Channels.AddressHeaderCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeaderCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, System::ServiceModel::Channels::AddressHeaderCollection ^ headers);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.EndpointAddress : Uri * System.ServiceModel.EndpointIdentity * System.ServiceModel.Channels.AddressHeaderCollection -&gt; System.ServiceModel.EndpointAddress" Usage="new System.ServiceModel.EndpointAddress (uri, identity, headers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="headers" Type="System.ServiceModel.Channels.AddressHeaderCollection" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="9024a-125">Oggetto <see cref="T:System.Uri" /> che identifica la posizione dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-125">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="9024a-126">Oggetto <see cref="T:System.ServiceModel.EndpointIdentity" /> per l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-126">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="9024a-127">Oggetto <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> contenente informazioni sull'indirizzo utilizzate per interagire con l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-127">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-128">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con l'URI, l'identità e la raccolta di intestazioni specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-128">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and header collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9024a-129">Nel codice seguente viene illustrato come costruire un oggetto <xref:System.ServiceModel.EndpointAddress> con <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> e un oggetto <xref:System.ServiceModel.Channels.AddressHeaderCollection>.</span><span class="sxs-lookup"><span data-stu-id="9024a-129">The following code shows how to construct a <xref:System.ServiceModel.EndpointAddress> object with a <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> and an <xref:System.ServiceModel.Channels.AddressHeaderCollection> object.</span></span>  
  
 [!code-csharp[EndpointAddress#3](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, System.ServiceModel.Channels.AddressHeaderCollection headers, System.Xml.XmlDictionaryReader metadataReader, System.Xml.XmlDictionaryReader extensionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeaderCollection headers, class System.Xml.XmlDictionaryReader metadataReader, class System.Xml.XmlDictionaryReader extensionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, System::ServiceModel::Channels::AddressHeaderCollection ^ headers, System::Xml::XmlDictionaryReader ^ metadataReader, System::Xml::XmlDictionaryReader ^ extensionReader);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.EndpointAddress : Uri * System.ServiceModel.EndpointIdentity * System.ServiceModel.Channels.AddressHeaderCollection * System.Xml.XmlDictionaryReader * System.Xml.XmlDictionaryReader -&gt; System.ServiceModel.EndpointAddress" Usage="new System.ServiceModel.EndpointAddress (uri, identity, headers, metadataReader, extensionReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="headers" Type="System.ServiceModel.Channels.AddressHeaderCollection" />
        <Parameter Name="metadataReader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="extensionReader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="9024a-130">Oggetto <see cref="T:System.Uri" /> che identifica la posizione dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-130">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="9024a-131">Oggetto <see cref="T:System.ServiceModel.EndpointIdentity" /> per l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-131">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="9024a-132">Oggetto <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> contenente informazioni sull'indirizzo utilizzate per interagire con l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-132">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <param name="metadataReader">
          <span data-ttu-id="9024a-133">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da cui vengono ottenuti i metadati dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-133">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint metadata is obtained.</span>
          </span>
        </param>
        <param name="extensionReader">
          <span data-ttu-id="9024a-134">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da cui vengono ottenute le estensioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-134">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which extensions are obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-135">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con l'URI, l'identità, la raccolta di intestazioni e i lettori di metadati ed estensioni specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-135">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, header collection, and metadata and extension readers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-136">La specifica WS-Addressing consente la presenza di elementi di estensione arbitrari alla fine del riferimento all'endpoint (EPR) che è possibile ottenere utilizzando la classe <xref:System.Xml.XmlDictionaryReader>.</span><span class="sxs-lookup"><span data-stu-id="9024a-136">The WS-Addressing specification allows for arbitrary extension elements to appear at the end of an Endpoint Reference (EPR) that can be obtained using an <xref:System.Xml.XmlDictionaryReader>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9024a-137">Nel codice seguente viene illustrato come creare un'istanza di <xref:System.ServiceModel.EndpointAddress> che specifica un oggetto <xref:System.Uri>, un oggetto <xref:System.ServiceModel.EndpointIdentity>, una raccolta di intestazioni, un oggetto <xref:System.Xml.XmlDictionaryReader> di metadati e un oggetto <xref:System.Xml.XmlDictionaryReader> di estensione.</span><span class="sxs-lookup"><span data-stu-id="9024a-137">The following code shows how to instantiate a <xref:System.ServiceModel.EndpointAddress> that specifies a <xref:System.Uri>, an <xref:System.ServiceModel.EndpointIdentity>, a headers collection, a metadata <xref:System.Xml.XmlDictionaryReader> and an extension <xref:System.Xml.XmlDictionaryReader>.</span></span>  
  
 [!code-csharp[EndpointAddress#6](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousUri">
      <MemberSignature Language="C#" Value="public static Uri AnonymousUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri AnonymousUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.AnonymousUri" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AnonymousUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ AnonymousUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousUri : Uri" Usage="System.ServiceModel.EndpointAddress.AnonymousUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-138">Ottiene una rappresentazione indipendente dalla versione dell'URI anonimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-138">Gets a version-neutral representation of the anonymous URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9024a-139">Oggetto <see cref="T:System.Uri" /> con il valore http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-139">A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-140">Se il valore dell'URI utilizzato per inizializzare il costruttore è la proprietà <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A>, la proprietà <xref:System.ServiceModel.EndpointAddress.IsAnonymous%2A> viene impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="9024a-140">If the value of the URI used to initialize the constructor is the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A>, then <xref:System.ServiceModel.EndpointAddress.IsAnonymous%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9024a-141"><xref:System.ServiceModel.EndpointAddress> è una classe indipendente dalla versione e la proprietà <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> che restituisce un valore è una rappresentazione indipendente.</span><span class="sxs-lookup"><span data-stu-id="9024a-141"><xref:System.ServiceModel.EndpointAddress> is a version-neutral class and the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> property returns a value is a neutral representation.</span></span> <span data-ttu-id="9024a-142">Durante la scrittura o conversione in una versione o nell'altra, verrà utilizzato il valore corretto per la versione.</span><span class="sxs-lookup"><span data-stu-id="9024a-142">When you write this out or convert this to one version or the other, then it turns into the right value for that version.</span></span>  
  
 <span data-ttu-id="9024a-143">A causa della varietà di tecnologie di rete attualmente in uso (ad esempio NAT, DHAT, DHCP e firewall), in molte distribuzioni non è possibile assegnare un URI significativo globale a un determinato endpoint.</span><span class="sxs-lookup"><span data-stu-id="9024a-143">Due to the range of network technologies currently in widespread use (for example, NAT, DHCP, and firewalls), many deployments cannot assign a meaningful global URI to a given endpoint.</span></span> <span data-ttu-id="9024a-144">Per consentire a tali *anonimo* endpoint per avviare il messaggio di modelli di scambio e ricevere risposte, la specifica Web Services Addressing definisce un [URI](http://go.microsoft.com/fwlink/?LinkId=96169) utilizzato dagli endpoint che non può avere un gruppo stabile, URI può essere risolto.</span><span class="sxs-lookup"><span data-stu-id="9024a-144">To allow these *anonymous* endpoints to initiate message exchange patterns and receive replies, the Web Services Addressing specification defines a [URI](http://go.microsoft.com/fwlink/?LinkId=96169) for use by endpoints that cannot have a stable, resolvable URI.</span></span>  
  
 <span data-ttu-id="9024a-145">Le richieste che utilizzano tale indirizzo devono prevedere un meccanismo per il recapito di risposte o errori, ad esempio la restituzione della riposta sulla stessa connessione di trasporto.</span><span class="sxs-lookup"><span data-stu-id="9024a-145">Requests that use this address must provide some mechanism for delivering replies or faults (for example, returning the reply on the same transport connection).</span></span> <span data-ttu-id="9024a-146">Tale meccanismo può essere costituito da un protocollo di trasporto request/reply (ad esempio HTTP GET o Post).</span><span class="sxs-lookup"><span data-stu-id="9024a-146">This mechanism can be a request/reply transport protocol (for example, HTTP GET or POST).</span></span> <span data-ttu-id="9024a-147">Questo URI può essere utilizzato come destinazione per i messaggi di risposta e non deve essere utilizzato come destinazione in altre circostanze.</span><span class="sxs-lookup"><span data-stu-id="9024a-147">This URI can be used as the destination for reply messages and should not be used as the destination in other circumstances.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#13](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public void ApplyTo (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyTo(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTo(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="member this.ApplyTo : System.ServiceModel.Channels.Message -&gt; unit" Usage="endpointAddress.ApplyTo message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9024a-148">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> di cui vengono assegnati i valori delle intestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-148">The <see cref="T:System.ServiceModel.Channels.Message" /> whose header values are being assigned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-149">Assegna l'URI e le proprietà dell'indirizzo endpoint ai valori delle intestazioni di un messaggio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-149">Assigns the URI and properties of the endpoint address to the values of the headers of a specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-150">Il metodo <xref:System.ServiceModel.EndpointAddress.ApplyTo%28System.ServiceModel.Channels.Message%29> imposta il "To" del messaggio con la proprietà <xref:System.ServiceModel.EndpointAddress.Uri%2A> della classe <xref:System.ServiceModel.EndpointAddress> attuale.</span><span class="sxs-lookup"><span data-stu-id="9024a-150">The <xref:System.ServiceModel.EndpointAddress.ApplyTo%28System.ServiceModel.Channels.Message%29> method sets the "To" of the message with the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the current <xref:System.ServiceModel.EndpointAddress>.</span></span> <span data-ttu-id="9024a-151">Si tenga presente che "ApplyTo" significa in questo caso "applica questo indirizzo all'intestazione 'To' del messaggio".</span><span class="sxs-lookup"><span data-stu-id="9024a-151">Remember that "ApplyTo" means here "apply this address to the 'To' header of the message".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9024a-152">Nel codice seguente viene illustrato come applicare l'URI e le proprietà di un indirizzo endpoint alle intestazioni di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9024a-152">The following code shows how to apply the URI and properties of an endpoint address to the headers of a message.</span></span>  
  
 [!code-csharp[EndpointAddress#4](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9024a-153">
            <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-153">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="endpointAddress.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9024a-154">Oggetto <see cref="T:System.Object" /> da confrontare con l'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-154">The <see cref="T:System.Object" /> to be compared to the current endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-155">Restituisce un valore che indica se un oggetto specificato è equivalente all'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-155">Returns a value that indicates whether a specified object is equivalent to the current endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-156">
            <see langword="true" /> se l'oggetto specificato è equivalente all'indirizzo corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-156">
              <see langword="true" /> if the specified object is equivalent to the current address; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#20](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="endpointAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9024a-157">Fornisce un codice hash univoco per l'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-157">Provides a unique hash code for the current endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-158">Codice hash univoco per l'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-158">A unique hash code for the current endpoint address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-159">Il metodo <xref:System.ServiceModel.EndpointAddress.GetHashCode%2A> può essere utilizzato in algoritmi hash e con strutture di dati, ad esempio una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="9024a-159"><xref:System.ServiceModel.EndpointAddress.GetHashCode%2A> is suitable for use in hashing algorithms and with data structures such as a hash table.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#21](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderAtExtensions">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReader GetReaderAtExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDictionaryReader GetReaderAtExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReaderAtExtensions () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDictionaryReader ^ GetReaderAtExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetReaderAtExtensions : unit -&gt; System.Xml.XmlDictionaryReader" Usage="endpointAddress.GetReaderAtExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9024a-160">Ottiene il lettore di dizionario XML che consente di accedere alle estensioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-160">Gets the XML dictionary reader that provides access to the extensions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-161">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che consente di accedere alle estensioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-161">The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the extensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-162">Il lettore consente di accedere alle informazioni non contenute nel modello del riferimento all'endpoint definito da WS-Addressing.</span><span class="sxs-lookup"><span data-stu-id="9024a-162">The reader provides access to the information that is not contained in the model of the endpoint reference defined by WS-Addressing.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#7](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderAtMetadata">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReader GetReaderAtMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDictionaryReader GetReaderAtMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReaderAtMetadata () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDictionaryReader ^ GetReaderAtMetadata();" />
      <MemberSignature Language="F#" Value="member this.GetReaderAtMetadata : unit -&gt; System.Xml.XmlDictionaryReader" Usage="endpointAddress.GetReaderAtMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9024a-163">Ottiene il lettore di dizionario XML che consente di accedere ai metadati per un endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-163">Gets the XML dictionary reader that provides access to the metadata for an endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-164">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che consente di accedere ai metadati per un endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-164">The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the metadata for an endpoint.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#8](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.AddressHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.AddressHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As AddressHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::AddressHeaderCollection ^ Headers { System::ServiceModel::Channels::AddressHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.ServiceModel.Channels.AddressHeaderCollection" Usage="System.ServiceModel.EndpointAddress.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.AddressHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-165">Ottiene la raccolta delle intestazioni degli indirizzi relativi agli endpoint che il generatore è in grado di creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-165">Gets the collection of address headers for the endpoints that the builder can create.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9024a-166">Oggetto <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> contenente informazioni sull'indirizzo per l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-166">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information for the endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#14](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointIdentity ^ Identity { System::ServiceModel::EndpointIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointAddress.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-167">Ottiene l'identità per l'endpoint utilizzato per l'autenticazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-167">Gets the identity for the endpoint used to authenticate it.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9024a-168">Oggetto <see cref="T:System.ServiceModel.EndpointIdentity" /> per l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-168">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-169">Fornisce un'identità che consente l'autenticazione di un endpoint da parte di altri endpoint con i quali vengono scambiati messaggi.</span><span class="sxs-lookup"><span data-stu-id="9024a-169">Provides an identity that enables the authentication of an endpoint by other endpoints that exchange messages with it.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#15](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.ServiceModel.EndpointAddress.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-170">Ottiene un valore che indica se l'endpoint è *anonimo*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-170">Gets a value that indicates whether the endpoint is *anonymous*.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9024a-171">
            <see langword="true" /> se l'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-171">
              <see langword="true" /> if the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-172">Utilizzare questo metodo per verificare la proprietà <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> in caso di copia manuale dell'URI da <xref:System.ServiceModel.EndpointAddress> nell'URI di <xref:System.ServiceModel.EndpointAddress10> o <xref:System.ServiceModel.EndpointAddressAugust2004>.</span><span class="sxs-lookup"><span data-stu-id="9024a-172">Use this method to check for the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> when manually copying the URI from an <xref:System.ServiceModel.EndpointAddress> to the URI of either a <xref:System.ServiceModel.EndpointAddress10> or a <xref:System.ServiceModel.EndpointAddressAugust2004>.</span></span> <span data-ttu-id="9024a-173">Questa operazione è necessaria poiché <xref:System.ServiceModel.EndpointAddress10> e <xref:System.ServiceModel.EndpointAddressAugust2004> hanno valori anonimi speciali.</span><span class="sxs-lookup"><span data-stu-id="9024a-173">This must be done because both <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> have special anonymous values.</span></span> <span data-ttu-id="9024a-174">Gli utenti devono utilizzare questi valori se l'URI copiato è anonimo.</span><span class="sxs-lookup"><span data-stu-id="9024a-174">Users must use these values if the URI being copied is anonymous.</span></span>  
  
 <span data-ttu-id="9024a-175">A causa della varietà di tecnologie di rete attualmente in uso (ad esempio NAT, DHAT, DHCP e firewall), in molte distribuzioni non è possibile assegnare un URI significativo globale a un determinato endpoint.</span><span class="sxs-lookup"><span data-stu-id="9024a-175">Due to the range of network technologies currently in widespread use (for example, NAT, DHCP, and firewalls), many deployments cannot assign a meaningful global URI to a given endpoint.</span></span> <span data-ttu-id="9024a-176">Per consentire a tali *anonimo* endpoint per avviare il messaggio di modelli di scambio e ricevere risposte, la specifica Web Services Addressing definisce un [URI](http://go.microsoft.com/fwlink/?LinkId=96169) utilizzato dagli endpoint che non può avere un gruppo stabile, URI può essere risolto.</span><span class="sxs-lookup"><span data-stu-id="9024a-176">To allow these *anonymous* endpoints to initiate message exchange patterns and receive replies, the Web Services Addressing specification defines a [URI](http://go.microsoft.com/fwlink/?LinkId=96169) for use by endpoints that cannot have a stable, resolvable URI.</span></span>  
  
 <span data-ttu-id="9024a-177">Le richieste che utilizzano tale indirizzo devono prevedere un meccanismo per il recapito di risposte o errori, ad esempio la restituzione della riposta sulla stessa connessione di trasporto.</span><span class="sxs-lookup"><span data-stu-id="9024a-177">Requests that use this address must provide some mechanism for delivering replies or faults (for example, returning the reply on the same transport connection).</span></span> <span data-ttu-id="9024a-178">Tale meccanismo può essere costituito da un protocollo di trasporto request/reply (ad esempio HTTP GET o Post).</span><span class="sxs-lookup"><span data-stu-id="9024a-178">This mechanism can be a request/reply transport protocol (for example, HTTP GET or POST).</span></span> <span data-ttu-id="9024a-179">Questo URI può essere utilizzato come destinazione per i messaggi di risposta e non deve essere utilizzato come destinazione in altre circostanze.</span><span class="sxs-lookup"><span data-stu-id="9024a-179">This URI can be used as the destination for reply messages and should not be used as the destination in other circumstances.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#16](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNone">
      <MemberSignature Language="C#" Value="public bool IsNone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNone" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.IsNone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNone { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNone : bool" Usage="System.ServiceModel.EndpointAddress.IsNone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-180">Ottiene un valore che indica se l'URI per l'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-180">Gets a value that indicates whether the URI for the endpoint is the <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9024a-181">
            <see langword="true" /> se l'URI dell'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-181">
              <see langword="true" /> if the URI of the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-182">Utilizzare questo metodo per verificare la proprietà <xref:System.ServiceModel.EndpointAddress.NoneUri%2A> in caso di copia manuale dell'URI da <xref:System.ServiceModel.EndpointAddress> nell'URI di <xref:System.ServiceModel.EndpointAddress10> o <xref:System.ServiceModel.EndpointAddressAugust2004>.</span><span class="sxs-lookup"><span data-stu-id="9024a-182">Use this method to check for the <xref:System.ServiceModel.EndpointAddress.NoneUri%2A> when manually copying the URI from an <xref:System.ServiceModel.EndpointAddress> to the URI of either a <xref:System.ServiceModel.EndpointAddress10> or a <xref:System.ServiceModel.EndpointAddressAugust2004>.</span></span> <span data-ttu-id="9024a-183">Questa operazione è necessaria poiché <xref:System.ServiceModel.EndpointAddress10> e <xref:System.ServiceModel.EndpointAddressAugust2004> hanno valori none URI speciali.</span><span class="sxs-lookup"><span data-stu-id="9024a-183">This must be done because both <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> have special none URI values.</span></span> <span data-ttu-id="9024a-184">Gli utenti devono utilizzare questi valori se l'URI copiato è none.</span><span class="sxs-lookup"><span data-stu-id="9024a-184">Users must use these values if the URI being copied is none.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#17](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoneUri">
      <MemberSignature Language="C#" Value="public static Uri NoneUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri NoneUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.NoneUri" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoneUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ NoneUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NoneUri : Uri" Usage="System.ServiceModel.EndpointAddress.NoneUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-185">Ottiene un URI indipendente dalla versione utilizzato per l'indirizzo di un endpoint a cui non deve essere inviato un messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-185">Gets a version-neutral URI used for the address of an endpoint to which a message must not be sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9024a-186">Oggetto <see cref="T:System.Uri" /> con il valore http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-186">A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-187">Se il valore dell'URI utilizzato per inizializzare il costruttore è la proprietà <xref:System.ServiceModel.EndpointAddress.NoneUri%2A>, la proprietà <xref:System.ServiceModel.EndpointAddress.IsNone%2A> viene impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="9024a-187">If the value of the URI used to initialize the constructor is the <xref:System.ServiceModel.EndpointAddress.NoneUri%2A>, then <xref:System.ServiceModel.EndpointAddress.IsNone%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#18](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.ServiceModel.EndpointAddress address1, System.ServiceModel.EndpointAddress address2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.ServiceModel.EndpointAddress address1, class System.ServiceModel.EndpointAddress address2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (address1 As EndpointAddress, address2 As EndpointAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::ServiceModel::EndpointAddress ^ address1, System::ServiceModel::EndpointAddress ^ address2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.ServiceModel.EndpointAddress * System.ServiceModel.EndpointAddress -&gt; bool" Usage="address1 = address2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address1" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="address2" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address1">
          <span data-ttu-id="9024a-188">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-188">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <param name="address2">
          <span data-ttu-id="9024a-189">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-189">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-190">Restituisce un valore che indica se gli indirizzi endpoint specificati non sono equivalenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-190">Returns a value that indicates whether specified endpoint addresses are not equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-191">
            <see langword="true" /> se gli indirizzi endpoint sono equivalenti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-191">
              <see langword="true" /> if the endpoint addresses are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9024a-192">Il metodo equivalente per l'operatore è <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9024a-192">The equivalent method for this operator is <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 [!code-csharp[EndpointAddress#5](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.ServiceModel.EndpointAddress address1, System.ServiceModel.EndpointAddress address2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.ServiceModel.EndpointAddress address1, class System.ServiceModel.EndpointAddress address2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (address1 As EndpointAddress, address2 As EndpointAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::ServiceModel::EndpointAddress ^ address1, System::ServiceModel::EndpointAddress ^ address2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.ServiceModel.EndpointAddress * System.ServiceModel.EndpointAddress -&gt; bool" Usage="System.ServiceModel.EndpointAddress.op_Inequality (address1, address2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address1" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="address2" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address1">
          <span data-ttu-id="9024a-193">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-193">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <param name="address2">
          <span data-ttu-id="9024a-194">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-194">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-195">Restituisce un valore che indica se gli indirizzi endpoint specificati non sono equivalenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-195">Returns a value that indicates whether specified endpoint addresses are not equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-196">
            <see langword="true" /> se gli indirizzi endpoint non sono equivalenti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-196">
              <see langword="true" /> if the endpoint addresses are not equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9024a-197">Il metodo equivalente per l'operatore è <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9024a-197">The equivalent method for this operator is <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 [!code-csharp[EndpointAddress#22](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadFrom">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-198">Legge un indirizzo endpoint da un lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-198">Reads an endpoint address from a specified XML reader.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadFrom (reader As XmlDictionaryReader) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member ReadFrom : System.Xml.XmlDictionaryReader -&gt; System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.EndpointAddress.ReadFrom reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="9024a-199">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da cui viene ottenuto l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-199">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-200">Legge un indirizzo endpoint da un lettore di dizionario XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-200">Reads an endpoint address from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-201">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> letto dal lettore di dizionario XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-201">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9024a-202">Nel codice seguente viene illustrato come leggere un indirizzo endpoint da un lettore di dizionario XML.</span><span class="sxs-lookup"><span data-stu-id="9024a-202">The following code shows how to read an endpoint address from a XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#10](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member ReadFrom : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlDictionaryReader -&gt; System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.EndpointAddress.ReadFrom (addressingVersion, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-203">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-203">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="9024a-204">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da cui viene ottenuto l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-204">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-205">Legge un indirizzo endpoint per una versione di indirizzo specificata da un lettore di dizionario XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-205">Reads an endpoint address for a specified address version from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-206">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> letto dal lettore di dizionario XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-206">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#25](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member ReadFrom : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlReader -&gt; System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.EndpointAddress.ReadFrom (addressingVersion, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-207">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-207">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="9024a-208">Oggetto <see cref="T:System.Xml.XmlReader" /> da cui viene ottenuto l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-208">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-209">Legge un indirizzo endpoint per una versione di indirizzo specificata da un lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-209">Reads an endpoint address for a specified address version from a specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-210">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> letto dal lettore XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-210">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9024a-211">Nel codice seguente viene illustrato come leggere un indirizzo endpoint da un lettore di dizionario XML.</span><span class="sxs-lookup"><span data-stu-id="9024a-211">The following code shows how to read in an endpoint address from an XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#12](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.Xml.XmlDictionaryReader reader, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.Xml.XmlDictionaryReader reader, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadFrom (reader As XmlDictionaryReader, localName As XmlDictionaryString, ns As XmlDictionaryString) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::Xml::XmlDictionaryReader ^ reader, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" />
      <MemberSignature Language="F#" Value="static member ReadFrom : System.Xml.XmlDictionaryReader * System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString -&gt; System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.EndpointAddress.ReadFrom (reader, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="9024a-212">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da cui viene ottenuto l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-212">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="9024a-213">Oggetto <see cref="T:System.Xml.XmlDictionaryString" /> contenente il nome locale del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-213">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="9024a-214">Oggetto <see cref="T:System.Xml.XmlDictionaryString" /> contenente lo spazio dei nomi del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-214">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-215">Legge un indirizzo endpoint con un nome completo specificato da un lettore di dizionario XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-215">Reads an endpoint address with a specified qualified name from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-216">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> con il nome completo letto dal lettore di dizionario XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-216">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML dictionary reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9024a-217">Nel codice seguente viene illustrato come leggere un indirizzo endpoint da un lettore di dizionario XML.</span><span class="sxs-lookup"><span data-stu-id="9024a-217">The following code shows how to read in an endpoint address from an XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#11](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryReader reader, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryReader reader, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryReader ^ reader, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" />
      <MemberSignature Language="F#" Value="static member ReadFrom : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlDictionaryReader * System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString -&gt; System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.EndpointAddress.ReadFrom (addressingVersion, reader, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-218">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-218">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="9024a-219">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da cui viene ottenuto l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-219">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="9024a-220">Contiene il nome locale del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-220">Contains the local name for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="9024a-221">Contiene lo spazio dei nomi del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-221">Contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-222">Legge un indirizzo endpoint per una versione di indirizzo specificata con un nome completo specificato da un lettore di dizionario XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-222">Reads an endpoint address for a specified address version with a specified qualified name from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-223">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> con il nome completo letto dal lettore XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-223">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#26](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlReader reader, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlReader reader, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlReader ^ reader, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="static member ReadFrom : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlReader * string * string -&gt; System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.EndpointAddress.ReadFrom (addressingVersion, reader, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-224">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-224">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="9024a-225">Oggetto <see cref="T:System.Xml.XmlReader" /> da cui viene ottenuto l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-225">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="9024a-226">Contiene il nome locale del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-226">Contains the local name for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="9024a-227">Contiene lo spazio dei nomi del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-227">Contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-228">Legge un indirizzo endpoint per una versione di indirizzo specificata con un nome completo specificato da un lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-228">Reads an endpoint address for a specified address version with a specified qualified name from a specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-229">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> con il nome completo letto dal lettore XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-229">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#26](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="endpointAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9024a-230">Restituisce una rappresentazione canonica in forma di stringa dell'URI contenuto nell'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-230">Returns a canonical string representation of the URI that is contained in the endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9024a-231">URI che identifica l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-231">The URI that identifies the endpoint.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#27](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.ServiceModel.EndpointAddress.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-232">Ottiene l'URI per l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-232">Gets the URI for the endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9024a-233">Oggetto <see cref="T:System.Uri" /> per l'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-233">The <see cref="T:System.Uri" /> for the endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9024a-234">L'URI identifica dove viene inviato un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9024a-234">The URI identifies where a message is being sent.</span></span> <span data-ttu-id="9024a-235">Per impostare un URI per un indirizzo endpoint, utilizzare <xref:System.ServiceModel.EndpointAddressBuilder.Uri%2A>.</span><span class="sxs-lookup"><span data-stu-id="9024a-235">To set a URI for an endpoint address, use <xref:System.ServiceModel.EndpointAddressBuilder.Uri%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#19](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteContentsTo">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-236">Salva tutti i nodi figlio del nodo nel writer XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-236">Saves all the child nodes of the node to the XML writer specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteContentsTo">
      <MemberSignature Language="C#" Value="public void WriteContentsTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteContentsTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteContentsTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteContentsTo : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlDictionaryWriter -&gt; unit" Usage="endpointAddress.WriteContentsTo (addressingVersion, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-237">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-237">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9024a-238">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> in cui viene salvato l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-238">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-239">Salva tutti i nodi figlio del nodo nel writer di dizionario XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-239">Saves all the child nodes of the node to the XML dictionary writer specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#29](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9024a-240">
            <paramref name="writer" /> o <paramref name="addressingVersion" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-240">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentsTo">
      <MemberSignature Language="C#" Value="public void WriteContentsTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteContentsTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteContentsTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteContentsTo : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlWriter -&gt; unit" Usage="endpointAddress.WriteContentsTo (addressingVersion, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-241">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-241">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9024a-242">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui viene salvato l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-242">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-243">Salva tutti i nodi figlio del nodo nel writer XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-243">Saves all the child nodes of the node to the XML writer specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#30](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9024a-244">
            <paramref name="writer" /> o <paramref name="addressingVersion" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-244">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteTo">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9024a-245">Salva l'indirizzo endpoint corrente di una versione specificata in un writer XML o in un writer di dizionario XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-245">Saves the current endpoint address of a specified version to an XML writer or an XML dictionary writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlDictionaryWriter -&gt; unit" Usage="endpointAddress.WriteTo (addressingVersion, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-246">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-246">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9024a-247">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> in cui viene salvato l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-247">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-248">Salva l'indirizzo endpoint corrente di una versione specificata in un writer di dizionario XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-248">Saves the current endpoint address of a specified version to a specified XML dictionary writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#31](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9024a-249">
            <paramref name="writer" /> o <paramref name="addressingVersion" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-249">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlWriter -&gt; unit" Usage="endpointAddress.WriteTo (addressingVersion, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-250">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-250">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9024a-251">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui viene salvato l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-251">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-252">Salva l'indirizzo endpoint corrente di una versione specificata in un writer XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-252">Saves the current endpoint address of a specified version to a specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#32](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9024a-253">
            <paramref name="writer" /> o <paramref name="addressingVersion" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-253">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer, System.Xml.XmlDictionaryString localname, System.Xml.XmlDictionaryString ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer, class System.Xml.XmlDictionaryString localname, class System.Xml.XmlDictionaryString ns) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer, System::Xml::XmlDictionaryString ^ localname, System::Xml::XmlDictionaryString ^ ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlDictionaryWriter * System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString -&gt; unit" Usage="endpointAddress.WriteTo (addressingVersion, writer, localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" Index="0" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" Index="1" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="localname" Type="System.Xml.XmlDictionaryString" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" Index="3" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-254">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-254">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9024a-255">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> in cui viene salvato l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-255">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <param name="localname">To be added.</param>
        <param name="ns">
          <span data-ttu-id="9024a-256">Oggetto <see cref="T:System.Xml.XmlDictionaryString" /> contenente lo spazio dei nomi del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-256">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-257">Salva l'indirizzo endpoint corrente di una versione specificata in un writer di dizionario XML con uno spazio dei nomi e un nome locale specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-257">Saves the current endpoint address of a specified version to an XML dictionary writer with a specified namespace and local name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#33](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9024a-258">
            <paramref name="writer" />, <paramref name="addressingVersion" />, <paramref name="localName" /> o <paramref name="ns" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-258">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer, string localName, string ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer, string localName, string ns) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer, System::String ^ localName, System::String ^ ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer, string localname, string ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer, string localname, string ns) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer, System::String ^ localname, System::String ^ ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.ServiceModel.Channels.AddressingVersion * System.Xml.XmlWriter * string * string -&gt; unit" Usage="endpointAddress.WriteTo (addressingVersion, writer, localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" Index="0" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="1" />
        <Parameter Name="localName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="localname" Type="System.String" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="9024a-259">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-259">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9024a-260">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui viene salvato l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-260">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <param name="localname">To be added.</param>
        <param name="ns">
          <span data-ttu-id="9024a-261">Oggetto <see cref="T:System.Xml.XmlDictionaryString" /> contenente lo spazio dei nomi del nodo XML che deve contenere l'indirizzo endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-261">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9024a-262">Salva l'indirizzo endpoint corrente di una versione specificata in un writer XML con uno spazio dei nomi e un nome locale specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-262">Saves the current endpoint address of a specified version to an XML writer with a specified namespace and local name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#33](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9024a-263">
            <paramref name="writer" />, <paramref name="addressingVersion" />, <paramref name="localName" /> o <paramref name="ns" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9024a-263">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>