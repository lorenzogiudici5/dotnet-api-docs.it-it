<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="251ef922dbcb3e6e71ab7a72ae111f074a18ed0b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36411566" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <TypeSignature Language="F#" Value="type InstanceContextMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifica il numero di istanze del servizio disponibili per la gestione delle chiamate contenute nei messaggi in ingresso.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'enumerazione <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> gestisce l'associazione tra il canale e gli oggetti servizio definiti dall'utente. L'enumerazione <xref:System.ServiceModel.InstanceContextMode> può essere utilizzata con la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> per specificare la durata dell'oggetto <xref:System.ServiceModel.InstanceContext>. Windows Communication Foundation (WCF) è possibile creare un nuovo <xref:System.ServiceModel.InstanceContext> dell'oggetto per ogni chiamata, ogni sessione oppure specificare che il <xref:System.ServiceModel.InstanceContext> oggetto è associato a un solo oggetto servizio. Per un esempio funzionante, vedere la [relativo alle istanze](~/docs/framework/wcf/samples/instancing.md).  
  
 Il valore singolo specifica che un singolo <xref:System.ServiceModel.InstanceContextMode.Single> oggetto deve essere utilizzato per la durata del servizio.  
  
> [!NOTE]
>  Se il <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> è impostato su Single il risultato è che il servizio può solo elaborare un messaggio alla volta, a meno che anche impostare il <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> valore <xref:System.ServiceModel.ConcurrencyMode>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come impostare l'enumerazione <xref:System.ServiceModel.InstanceContextMode> di una classe di servizio:  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberSignature Language="F#" Value="PerCall = 1" Usage="System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Prima di ogni chiamata viene creato un nuovo oggetto <see cref="T:System.ServiceModel.InstanceContext" /> che, al termine di ogni chiamata, viene riciclato.</summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberSignature Language="F#" Value="PerSession = 0" Usage="System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A ogni sessione viene creato un nuovo oggetto <see cref="T:System.ServiceModel.InstanceContext" />. Se il canale non crea alcuna sessione, questo valore funziona come se fosse <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 2" Usage="System.ServiceModel.InstanceContextMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Per tutte le chiamate in ingresso viene utilizzato un solo oggetto <see cref="T:System.ServiceModel.InstanceContext" />. Tale oggetto, inoltre, non viene riciclato al termine delle chiamate. Se non esiste alcun oggetto servizio, ne viene creato uno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Funzionamento di durata singleton (ad esempio, se l'applicazione host chiama il <xref:System.ServiceModel.ServiceHost.%23ctor%2A> costruttore e passa un oggetto da utilizzare come servizio), la classe di servizio deve impostare <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> a singolo, verrà generata un'eccezione quando viene aperto l'host del servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>