<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ChannelFactory.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552f0d24a72d33f64d655a15766ff86ae45ac4ab4b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0d24a72d33f64d655a15766ff86ae45ac4ab4b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Creates and manages the channels that are used by clients to send messages to service endpoints.</source>
          <target state="translated">Crea e gestisce i canali utilizzati dai client per inviare messaggi agli endpoint del servizio.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Channel factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface and their associated channels are generally used by the initiators of a communication pattern.</source>
          <target state="translated">Le channel factory che implementano l'interfaccia <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> e i canali associati sono in genere utilizzati dagli iniziatori di un modello di comunicazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Listener factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface and their associated listeners provide the mechanisms with which channels are accepted for communications.</source>
          <target state="translated">Le listener factory che implementano l'interfaccia <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> e i listener associati forniscono i meccanismi di accettazione dei canali per le comunicazioni.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>This class is not part of the channel model, but of the service model.</source>
          <target state="translated">Questa classe non fa parte del modello di canali, bensì del modello di servizi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> method provides the means to create an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> for a service endpoint.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> fornisce i mezzi per creare un'interfaccia <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> per un endpoint del servizio.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Use it to construct a client that hooks up to an interface contract on the service without using metadata or policy.</source>
          <target state="translated">Utilizzarlo per creare un client associato a un contratto di interfaccia sul servizio senza utilizzare metadati o criteri.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated">L'impostazione di <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> su <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> comporta sempre un accesso anonimo indipendentemente dal livello di rappresentazione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">Nota speciale in caso di derivazione da questa classe in C++ gestito:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">Inserire il codice di pulizia in (On)(Begin)Close (e/o OnAbort), non in un distruttore.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid destructors; they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">Evitare i distruttori perché comportano la generazione automatica di <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> da parte del compilatore.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid non-reference members; they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">Evitare membri non di riferimento perché possono comportare la generazione automatica di <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> da parte del compilatore.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid using a finalizer; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">Evitare l'utilizzo di un finalizzatore. Se tuttavia si include un finalizzatore, è necessario annullare l'avviso di compilazione e chiamare il metodo <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> e il finalizzatore stesso mediante (On)(Begin)Close (e/o OnAbort) al fine di emulare il comportamento dell'oggetto <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> generato automaticamente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>When adding behaviors programmatically, the behavior is added to the appropriate <ph id="ph1">`Behaviors`</ph> property on the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> prior to the creation of any channel.</source>
          <target state="translated">Quando si aggiungono comportamenti a livello di codice, il comportamento viene aggiunto alla proprietà <ph id="ph1">`Behaviors`</ph> appropriata in <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> prima della creazione di qualsiasi canale.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>See the example section for a code sample.</source>
          <target state="translated">Per un esempio di codice, vedere la sezione relativa agli esempi.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The following code example shows how to insert programmatically a client behavior prior to the creation of the channel object by the factory.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come inserire un comportamento client a livello di codice prima che la factory crei l'oggetto channel.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The name of the configuration file.</source>
          <target state="translated">Nome del file di configurazione.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Initializes the channel factory with the behaviors provided by a specified configuration file and with those in the service endpoint of the channel factory.</source>
          <target state="translated">Inizializza la channel factory con i comportamenti forniti da un file di configurazione specificato e con quelli specificati nell'endpoint del servizio della channel factory.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If <ph id="ph1">`configurationName`</ph> is <ph id="ph2">`null`</ph>, only the behaviors specified in the service endpoint are loaded.</source>
          <target state="translated">Se <ph id="ph1">`configurationName`</ph> è <ph id="ph2">`null`</ph>, vengono caricati solo i comportamenti specificati nell'endpoint del servizio.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If the wildcard, "*", is used, any endpoint configuration in the client configuration file is used, but only if there is precisely one.</source>
          <target state="translated">Se si utilizza il carattere jolly "*", viene utilizzata qualsiasi configurazione di endpoint contenuta nel file di configurazione client, ma solo se ne è presente soltanto una.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">In caso contrario, viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Any other value for the <ph id="ph1">`configurationName`</ph>, including the empty string "", matches the endpoint configuration with the same name.</source>
          <target state="translated">Qualsiasi altro valore di <ph id="ph1">`configurationName`</ph>, compresa la stringa vuota"", corrisponde alla configurazione dell'endpoint con lo stesso nome.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>See the <bpt id="p1">[</bpt>WCF Client Configuration<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept> topic for a discussion of the client configuration.</source>
          <target state="translated">Vedere il <bpt id="p1">[</bpt>configurazione Client WCF<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept> argomento per una descrizione della configurazione del client.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The service endpoint of the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'endpoint del servizio della channel factory è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</source>
          <target state="translated">Quando viene implementato in una classe derivata, questo metodo crea una descrizione dell'endpoint del servizio associato alla channel factory.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> associated with the channel factory.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> associato alla channel factory.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>Builds the channel factory for the current endpoint of the factory.</source>
          <target state="translated">Compila la channel factory per l'endpoint corrente della factory.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory" /&gt;</ph> for the endpoint of the current factory.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory" /&gt;</ph> per l'endpoint della factory corrente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>The endpoint of the service that the factory channels connect to is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or the endpoint's binding is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is missing the element with the configuration name specified.</source>
          <target state="translated">L'endpoint del servizio al quale i canali della factory si connettono è <ph id="ph1">&lt;see langword="null" /&gt;</ph>, l'associazione dell'endpoint è <ph id="ph2">&lt;see langword="null" /&gt;</ph> oppure manca l'elemento con il nome di configurazione specificato.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</source>
          <target state="translated">Ottiene le credenziali utilizzate dai client per comunicare con un endpoint del servizio sui canali prodotti dalla factory.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> used by clients if they are configured for the factory or if the endpoint is non-<ph id="ph2">&lt;see langword="null" /&gt;</ph> and is in either the created or opening communication state; otherwise <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Credenziali <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> utilizzate dai client se sono configurati per la factory o se l'endpoint è diverso da <ph id="ph2">&lt;see langword="null" /&gt;</ph> e si trova nello stato di comunicazione Created o Opening; in caso contrario <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> viene memorizzato come tipo di comportamento dell'endpoint ed è possibile accedervi tramite la proprietà <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> method initializes a read-only copy of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object for the factory.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> inizializza una copia di sola lettura dell'oggetto <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> per la factory.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is used by the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class (or a class that derives from this class) to create the proxy objects that can call services.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> viene utilizzato dalla classe <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> (o da una classe derivata da tale classe) per creare gli oggetti proxy che possono chiamare i servizi.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is also accessible through the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property.</source>
          <target state="translated">È inoltre possibile accedere all'oggetto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> tramite la proprietà <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated">L'impostazione di <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> su <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> comporta sempre un accesso anonimo indipendentemente dal livello di rappresentazione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default interval of time provided for a close operation to complete.</source>
          <target state="translated">Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph> predefinito che specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default service model close time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Ottiene il timeout predefinito di chiusura del modello di servizio nel caso in cui <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> siano <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default value for the service model close time-out is 1 minute.</source>
          <target state="translated">Il valore predefinito per il timeout di chiusura del modello di servizio è 1 minuto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">In caso contrario, il valore viene impostato sul valore <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph> associato a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default interval of time provided for an open operation to complete.</source>
          <target state="translated">Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> predefinito che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default service model open time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Ottiene il timeout predefinito di apertura del modello di servizio nel caso in cui <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> siano <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default value for the service model open time-out is 1 minute.</source>
          <target state="translated">Il valore predefinito per il timeout di apertura del modello di servizio è 1 minuto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">In caso contrario, il valore viene impostato sul valore <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph> associato a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>Gets the service endpoint to which the channels produced by the factory connect.</source>
          <target state="translated">Ottiene l'endpoint del servizio al quale si connettono i canali prodotti dalla factory.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to which the channels produced by the factory connect.</source>
          <target state="translated">Oggetto della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> a cui si connettono i canali prodotti dalla factory.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Opens the current channel factory if it is not yet opened.</source>
          <target state="translated">Apre la channel factory corrente se non è ancora aperta.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Before opening the channel factory, checks that it is not <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</source>
          <target state="translated">Prima di aprire la channel factory, verificare che lo stato non sia <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> o <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>The current factory is either closing or closed and so cannot be opened.</source>
          <target state="translated">La factory corrente è in fase di chiusura o chiusa e pertanto non può essere aperta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if not present.</source>
          <target state="translated">Se presente, restituisce l'oggetto tipizzato richiesto dal livello appropriato nello stack dei canali; se non è presente, restituisce <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">L'oggetto tipizzato <ph id="ph1">&lt;paramref name="T" /&gt;</ph> richiesto se presente, <ph id="ph2">&lt;see langword="null" /&gt;</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Use this to retrieve capabilities, requirements and parameters from the channel stack.</source>
          <target state="translated">Utilizzare questo metodo per recuperare funzionalità, requisiti e parametri dallo stack dei canali.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If a channel factory supports returning the requested object, it returns it.</source>
          <target state="translated">L'oggetto richiesto viene restituito solo se tale azione è supportata dalla channel factory.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If not, it delegates the call down to the next level in the stack.</source>
          <target state="translated">In caso contrario, la chiamata viene delegata al livello successivo nello stack.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If it gets to the bottom of the stack and no channel factory supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se viene raggiunta la fine dello stack e nessuna channel factory supporta l'oggetto richiesto, il metodo restituisce <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source><ph id="ph1">`T`</ph> is typically some channel interface that the channel factory can support.</source>
          <target state="translated"><ph id="ph1">`T`</ph> è in genere l'interfaccia di un canale supportata dalla channel factory.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If, for example, <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph> is called on a duplex channel factory, it returns the underlying listener.</source>
          <target state="translated">Se, ad esempio, si chiama <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph> su una channel factory duplex, viene restituito il listener sottostante.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Initializes the service endpoint of the channel factory.</source>
          <target state="translated">Inizializza l'endpoint del servizio della channel factory.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>You must have an address to initialize an endpoint, but can have just the binding or configuration instead of the full endpoint.</source>
          <target state="translated">Per inizializzare un endpoint è necessario disporre di un indirizzo, ma anziché l'endpoint completo è sufficiente l'associazione o la configurazione.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to initialize the channel factory with.</source>
          <target state="translated">Elemento <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> utilizzato per inizializzare la channel factory.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes the service endpoint of the channel factory with a specified endpoint.</source>
          <target state="translated">Inizializza l'endpoint del servizio della channel factory con un endpoint sepcificato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> se si dispone solo dell'associazione.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> se si dispone solo della configurazione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> with which to initialize the channel factory.</source>
          <target state="translated">Elemento <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> da utilizzare per inizializzare la channel factory.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> with which to initialize the channel factory.</source>
          <target state="translated">Elemento <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> da utilizzare per inizializzare la channel factory.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified binding and address.</source>
          <target state="translated">Inizializza l'endpoint del servizio della channel factory con un'associazione e un indirizzo specificati.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> se si dispone solo della configurazione.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the configuration file used to initialize the channel factory.</source>
          <target state="translated">Nome del file di configurazione utilizzato per inizializzare la channel factory.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified address and configuration.</source>
          <target state="translated">Inizializza l'endpoint del servizio della channel factory con un indirizzo e una configurazione specificati.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> se si dispone solo dell'associazione.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>Terminates the inner channel factory of the current channel factory.</source>
          <target state="translated">Termina la channel factory interna della channel factory corrente.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> method is called on a factory after it transitions to the closing state if the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method is invoked.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> viene chiamato su una factory dopo la transizione allo stato di chiusura in corso se viene richiamato il metodo <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated">Intervallo di tempo <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> entro il quale l'operazione deve essere completata prima di scadere.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> che riceve la notifica del completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          <target state="translated">Consente di avviare un'operazione di chiusura asincrona sulla channel factory interna della channel factory corrente a cui è associato un oggetto di stato.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          <target state="translated">L'interfaccia <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento all' operazione asincrona.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Questo metodo riceve mediante un callback la notifica dell'identità del gestore eventi relativa all'operazione.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous close on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">L'operazione non è completa fino a quando l'operazione di chiusura asincrona sulla channel factory non restituisce un risultato o non si verifica il timeout.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated">Intervallo di tempo <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> entro il quale l'operazione deve essere completata prima di scadere.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> che riceve la notifica del completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          <target state="translated">Consente di avviare un'operazione di apertura asincrona sulla channel factory interna della channel factory corrente a cui è associato un oggetto di stato.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          <target state="translated">L'interfaccia <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento all' operazione asincrona.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Questo metodo riceve mediante un callback la notifica dell'identità del gestore eventi relativa all'operazione.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous open on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">L'operazione non è completa fino a quando l'operazione di apertura asincrona sulla channel factory non restituisce un risultato o non si verifica il timeout.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated">Intervallo di tempo <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> entro il quale l'operazione deve essere completata prima di scadere.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</source>
          <target state="translated">Chiama la chiusura sulla channel factory interna con un timeout specificato per il completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> restituita da una chiamata al metodo <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous close operation on the inner channel factory of the current channel factory.</source>
          <target state="translated">Completa un'operazione di chiusura asincrona sulla channel factory interna della channel factory corrente.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> restituita da una chiamata al metodo <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous open operation on the inner channel factory of the current channel factory.</source>
          <target state="translated">Completa un'operazione di apertura asincrona sulla channel factory interna della channel factory corrente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</source>
          <target state="translated">Chiama l'apertura sulla channel factory interna della channel factory corrente con un timeout specificato per il completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The inner channel of the current channel is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il canale interno del canale corrente è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Initializes a read-only copy of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> object for the channel factory.</source>
          <target state="translated">Inizializza una copia di sola lettura dell'oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> per la channel factory.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Overrides and invokes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method, which is called during the transition of an object into the opened state.</source>
          <target state="translated">Esegue l'override e richiama il metodo <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>, chiamato durante la transizione di un oggetto allo stato Opened.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> viene memorizzato come tipo di comportamento dell'endpoint ed è possibile accedervi tramite la proprietà <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>Builds the inner channel factory for the current channel.</source>
          <target state="translated">Compila la channel factory interna per il canale corrente.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>The inner channel factory for the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La channel factory interna della channel factory è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
          <source>Closes the current channel factory.</source>
          <target state="translated">Chiude la channel factory corrente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>