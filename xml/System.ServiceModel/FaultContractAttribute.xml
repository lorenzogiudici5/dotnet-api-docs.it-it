<Type Name="FaultContractAttribute" FullName="System.ServiceModel.FaultContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81f46a1292e6c9b4524dce399b33d734e97bf019" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52910997" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FaultContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FaultContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.FaultContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FaultContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FaultContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type FaultContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di specificare uno o più errori SOAP da restituire quando un'operazione di servizio rileva errori di elaborazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'attributo <xref:System.ServiceModel.FaultContractAttribute> può essere utilizzato contrassegnare un'operazione di servizio al fine di dichiarare una o più condizioni di eccezione specifiche aggiunte alla descrizione WSDL (Web Service Description Language) dell'operazione come messaggi di errore SOAP espliciti restituiti dall'operazione.  
  
 Tutte le applicazioni gestite prevedono che gli errori di elaborazione siano rappresentati dagli oggetti <xref:System.Exception>. Nelle applicazioni basate su SOAP, ad esempio le applicazioni di Windows Communication Foundation (WCF), informazioni sugli errori di elaborazione tramite messaggi di errore SOAP vengono comunicate dai metodi di servizio. Poiché le applicazioni WCF vengono eseguite con entrambi i tipi di sistemi di errore, eventuali informazioni sulle eccezioni gestite che devono essere inviati al client devono essere convertite da eccezioni in errori SOAP. È possibile utilizzare i comportamenti predefiniti delle eccezioni di servizio. In alternativa, è possibile stabilire in modo esplicito se convertire le eccezioni in messaggi di errore e, in tal caso, definire le modalità di conversione. Per una panoramica di eccezioni ed errori SOAP in applicazioni WCF, vedere [se si specifica e gestione degli errori in contratti e servizi](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).  
  
 È consigliabile che le operazioni di servizio utilizzino l'attributo <xref:System.ServiceModel.FaultContractAttribute> per specificare formalmente tutti gli errori SOAP che un client prevede di ricevere durante il normale funzionamento di un'operazione. Per ridurre al minimo la divulgazione delle informazioni è inoltre consigliabile che negli errori SOAP vengano restituite soltanto le informazioni che il client deve conoscere.  
  
-   La proprietà <xref:System.ServiceModel.FaultContractAttribute.Action%2A> controlla l'azione del messaggio di errore.  
  
-   La proprietà <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> consente di ottenere il tipo dell'oggetto dettaglio serializzato contenuto nel messaggio di errore.  
  
-   Le proprietà <xref:System.ServiceModel.FaultContractAttribute.Name%2A> e <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> controllano rispettivamente il nome e lo spazio dei nomi del messaggio di errore.  
  
-   La proprietà <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indica se per il messaggio di errore è stato specificato un livello di protezione e, in tal caso, la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> controlla tale livello di protezione.  
  
> [!CAUTION]
>  Se un messaggio di errore contiene informazioni riservate o può comportare problemi di sicurezza, è consigliabile impostare la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>.  
  
-   Se si imposta in modo esplicito la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> su <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> o su <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>, è necessario utilizzare un'associazione sicura tramite l'applicazione della proprietà <xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType>. In caso contrario, viene generata un'eccezione.  
  
-   Se si seleziona un'associazione protetta e non si imposta la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> nel contratto, tutti i dati dell'applicazione verranno crittografati e firmati.  
  
-   Se si seleziona un'associazione non sicura (ad esempio, nell'associazione <xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType> la sicurezza è disabilitata per impostazione predefinita) e non si imposta in modo esplicito la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, nessun dato dell'applicazione viene protetto.  
  
 In molti casi per proteggere i messaggi di errore è sufficiente impostare la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> su <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>. Per altre informazioni, vedere [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  
  
 Affinché un'operazione contrassegnata con l'attributo <xref:System.ServiceModel.FaultContractAttribute> restituisca un determinato errore quando durante l'operazione si verifica un'eccezione gestita è possibile generare un'eccezione <xref:System.ServiceModel.FaultException%601> in cui il parametro di tipo corrisponde alle informazioni sull'errore serializzabile. Le applicazioni client WCF della superficie di attacco dell'errore SOAP come lo stesso tipo perché è stata generata nell'implementazione client, vale a dire, come un <xref:System.ServiceModel.FaultException%601> (dove il typeparameter rappresenta le informazioni sull'errore serializzabile). L'attributo <xref:System.ServiceModel.FaultContractAttribute> può essere utilizzato solo per specificare errori SOAP relativi a operazioni di servizio bidirezionali e a coppie di operazioni asincrone. Le operazioni unidirezionali non supportano gli errori SOAP e pertanto non supportano l'attributo <xref:System.ServiceModel.FaultContractAttribute>.  
  
> [!NOTE]
>  Per trasmettere le informazioni sull'errore è possibile utilizzare qualsiasi tipo serializzabile. L'unica restrizione in questa versione di WCF è che i tipi specificati una <xref:System.ServiceModel.FaultContractAttribute> deve essere serializzabile dal <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType>. Per il supporto della serializzazione di <xref:System.Runtime.Serialization.DataContractSerializer> offre, vedere [serializzatore dei contratti dati](~/docs/framework/wcf/feature-details/data-contract-serializer.md).  
  
 Ad esempio, per specificare che i client possono ricevere un errore SOAP contenente un elemento di tipo <xref:System.Int32> è sufficiente includere tale parametro di tipo nell'attributo <xref:System.ServiceModel.FaultContractAttribute> del metodo di servizio.  
  
> [!NOTE]
>  Negli esempi di codice seguenti le proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A> e <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> non vengono impostate.  
  
 [!code-csharp[C_FCA#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)]
 [!code-vb[C_FCA#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)]  
  
 Nel metodo di servizio è quindi possibile generare una nuova eccezione <xref:System.ServiceModel.FaultException%601> in cui il parametro di tipo corrisponde al tipo contenente le informazioni sull'errore. Nell'esempio precedente, tale tipo è <xref:System.Int32>. Ad esempio:  
  
 [!code-csharp[C_FCA#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)]
 [!code-vb[C_FCA#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)]  
  
 L'esempio precedente è molto semplice. Poiché il tipo <xref:System.Int32?displayProperty=nameWithType> consente di passare quasi qualsiasi tipo di informazione, questo tipo di dettaglio non è molto utile. In genere, le applicazioni WCF specificano errori SOAP con i tipi di dettaglio specifici per i requisiti di informazioni di errore del client. Per un esempio più esaustivo, vedere la sezione degli esempi.  
  
> [!NOTE]
>  Se si specifica un'eccezione <xref:System.ServiceModel.FaultException%601> in cui il parametro di tipo è <xref:System.String?displayProperty=nameWithType>, il valore della stringa è assegnato alla proprietà Detail dell'applicazione client. I client non possono recuperare tale stringa chiamando il metodo <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType>. Per fare in modo che il valore della stringa venga restituito quando l'applicazione client chiama il metodo <xref:System.Exception.ToString%2A?displayProperty=nameWithType> è sufficiente generare un'eccezione <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> nell'operazione e passare la stringa al costruttore.  
  
 Per controllare in modo esplicito il comportamento dell'applicazione quando viene generata un'eccezione o un'eccezione <xref:System.ServiceModel.FaultException%601>, implementare l'interfaccia <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> su un comportamento <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> e quindi assegnarla alla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>. <xref:System.ServiceModel.Dispatcher.IErrorHandler> Consente di controllare in modo esplicito l'errore SOAP generato e stabilire se inviarlo al client.  
  
 Per facilitare il debug, impostare il <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> al `true` nel codice oppure è possibile usare il <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> in un file di configurazione dell'applicazione. Quando abilitato, il servizio restituisce automaticamente al chiamante le informazioni sull'eccezione. Il client considera questi errori come eccezioni <xref:System.ServiceModel.FaultException>.  
  
> [!IMPORTANT]
>  Poiché le eccezioni gestite possono esporre informazioni interne dell'applicazione, se si imposta <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> oppure <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> a `true` può consentire ai client WCF per ottenere informazioni sulle eccezioni delle operazioni di servizio interno, tra cui personale informazioni personali o comunque riservate.  
>   
>  Di conseguenza, l'impostazione della proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> o della proprietà <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> su `true` è consigliabile solo come modalità temporanea di debug di un'applicazione di servizio. Inoltre, il codice WSDL di un metodo che restituisce in questo modo eccezioni gestite senza tuttavia gestirle non contiene il contratto dell'eccezione <xref:System.ServiceModel.FaultException%601> di tipo <xref:System.String>. I client devono prevedere la possibilità di un errore SOAP sconosciuto (restituito ai client WCF come <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> oggetti) per ottenere correttamente le informazioni di debug.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare l'attributo <xref:System.ServiceModel.FaultContractAttribute> per specificare che l'operazione `SampleMethod` può restituire un errore SOAP contente informazioni dettagliate di tipo `GreetingFault`.  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 Esempio di codice seguente mostra che i client WCF di `ISampleService` verificarsi questo errore SOAP come un <xref:System.ServiceModel.FaultException%601> di tipo `GreetingFault`.  
  
 [!code-csharp[FaultContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/client.cs#3)]
 [!code-vb[FaultContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaultContractAttribute (Type detailType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type detailType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (detailType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FaultContractAttribute(Type ^ detailType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.FaultContractAttribute : Type -&gt; System.ServiceModel.FaultContractAttribute" Usage="new System.ServiceModel.FaultContractAttribute detailType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="detailType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="detailType">Tipo serializzabile contenente le informazioni sull'errore per il chiamante.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultContractAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere il costruttore viene eseguito applicando l'attributo a un metodo di servizio e specificando un tipo come argomento dell'attributo.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare l'attributo <xref:System.ServiceModel.FaultContractAttribute> per specificare che l'operazione `SampleMethod` può restituire un errore SOAP contente informazioni dettagliate di tipo `GreetingFault`.  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore dell'argomento <paramref name="detailType" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere o impostare l'azione del messaggio di errore SOAP specificato come parte del contratto dell'operazione.</summary>
        <value>Valore dell'azione del messaggio di errore SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consente di controllare l'azione del messaggio di errore SOAP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetailType">
      <MemberSignature Language="C#" Value="public Type DetailType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DetailType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.DetailType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DetailType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DetailType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DetailType : Type" Usage="System.ServiceModel.FaultContractAttribute.DetailType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere il tipo di un oggetto serializzabile contenente le informazioni sull'errore.</summary>
        <value>Tipo che rappresenta la classe dell'errore serializzabile.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare l'attributo <xref:System.ServiceModel.FaultContractAttribute> per specificare che l'operazione `SampleMethod` può restituire un errore SOAP contente informazioni dettagliate di tipo `GreetingFault`.  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se al messaggio di errore SOAP è stato assegnato un livello di protezione.</summary>
        <value>
          <see langword="true" /> se il messaggio di errore è dotato di un livello di protezione. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> per specificare se il messaggio di errore SOAP deve essere crittografato o firmato o se deve presentare entrambi i meccanismi di protezione. Per informazioni dettagliate, vedere la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere o impostare il nome del messaggio di errore in WSDL (Web Services Description Language).</summary>
        <value>Nome del messaggio di errore. L'impostazione predefinita è il nome del tipo utilizzato come dettaglio dell'errore.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere o impostare lo spazio dei nomi dell'errore SOAP.</summary>
        <value>Spazio dei nomi dell'errore SOAP.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di specificare il livello di protezione che l'associazione deve applicare all'errore SOAP.</summary>
        <value>Uno dei valori di <see cref="T:System.Net.Security.ProtectionLevel" />. Il valore predefinito è <see cref="F:System.Net.Security.ProtectionLevel.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType> per specificare il livello di sicurezza dei meccanismi di crittografia, di firma o di entrambi i tipi applicati dall'associazione durante l'invio dell'errore SOAP. È consigliabile garantire che negli errori delle operazioni i requisiti del livello di protezione riguardanti il contratto siano definiti in modo esplicito. Il livello di protezione predefinito è <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>. Tale livello prevede che il messaggio di errore SOAP che si sta definendo non richieda alcun meccanismo di crittografia o firma digitale. È tuttavia possibile che l'associazione sia configurata in modo da offrire questo tipo di supporto. Se un messaggio di errore contiene informazioni riservate o può comportare problemi di sicurezza, è consigliabile impostare la proprietà <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> su <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>. Per altre informazioni sui problemi di sicurezza, vedere [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  
  
 Il comportamento della protezione in fase di esecuzione deriva dall'unione delle proprietà a livello di protezione che presentano una struttura gerarchica. La configurazione del valore esterno determina l'impostazione predefinita per tutti gli ambiti più ristretti a meno che non venga impostato esplicitamente un valore diverso per un ambito più ristretto. In questo caso, il valore esterno rimane l'impostazione predefinita per tutti gli ambiti più ristretti, ad eccezione di quello impostato in modo specifico.  
  
 Ad esempio, se la proprietà <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> e nessuno degli altri ambiti più ristretti presenta impostazioni riguardanti il livello di protezione, tutti i messaggi di un contratto di operazioni vengono crittografati e firmati, compresi i messaggi di errore. Se tuttavia per una di queste operazioni la proprietà <xref:System.ServiceModel.OperationContractAttribute> è impostata su <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, i messaggi di tale operazione vengono firmati. Tutti gli altri messaggi del contratto vengono invece crittografati e firmati, compresi i messaggi di errore.  
  
 Gli ambiti di impostazione di questi valori sono:  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 La proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.  
  
 La proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.  
  
 Quando nel contratto non è stato specificato in modo esplicito alcun livello di protezione e l'associazione sottostante supporta la sicurezza (sia essa a livello di trasporto o di messaggio), il livello di protezione effettivo dell'intero contratto è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>. Se l'associazione non supporta la sicurezza (ad esempio <xref:System.ServiceModel.BasicHttpBinding>), il livello di sicurezza <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> effettivo è <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> per l'intero contratto. Ne consegue che a seconda dell'associazione dell'endpoint i client possono richiedere un sistema diverso di protezione a livello di messaggio o di trasporto anche se il contratto prevede il livello di sicurezza <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>