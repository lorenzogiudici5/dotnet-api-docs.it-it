<Type Name="AddressAlreadyInUseException" FullName="System.ServiceModel.AddressAlreadyInUseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78bbf0c8b8a0bbc0c30801b4dae34ca4c591f713" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37613710" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AddressAlreadyInUseException : System.ServiceModel.CommunicationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AddressAlreadyInUseException extends System.ServiceModel.CommunicationException" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.AddressAlreadyInUseException" />
  <TypeSignature Language="VB.NET" Value="Public Class AddressAlreadyInUseException&#xA;Inherits CommunicationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddressAlreadyInUseException : System::ServiceModel::CommunicationException" />
  <TypeSignature Language="F#" Value="type AddressAlreadyInUseException = class&#xA;    inherit CommunicationException" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.CommunicationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f9f13-101">Eccezione generata quando un indirizzo non è disponibile in quanto già in uso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9f13-101">The exception that is thrown when an address is unavailable because it is already in use.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f13-102">Questa eccezione deriva dal <xref:System.ServiceModel.CommunicationException> che rappresenta una classe di errori reversibili che possono essere generati durante la comunicazione tra endpoint e client Windows Communication Foundation (WCF) affidabile e le applicazioni di servizio prevede siano gestiti da.</span><span class="sxs-lookup"><span data-stu-id="f9f13-102">This exception derives from <xref:System.ServiceModel.CommunicationException> that represents a class of recoverable errors that may be thrown during communication between endpoints and that robust Windows Communication Foundation (WCF) client and service applications are expected to handle.</span></span> <span data-ttu-id="f9f13-103">Per impedire a un gestore dell'oggetto <xref:System.ServiceModel.CommunicationException> di intercettare l'oggetto <xref:System.ServiceModel.AddressAlreadyInUseException> più specifico, intercettare questa eccezione prima di gestire l'oggetto <xref:System.ServiceModel.CommunicationException>.</span><span class="sxs-lookup"><span data-stu-id="f9f13-103">To prevent a handler for <xref:System.ServiceModel.CommunicationException> from catching the more specific <xref:System.ServiceModel.AddressAlreadyInUseException>, catch this exception prior to handling <xref:System.ServiceModel.CommunicationException>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9f13-104">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-104">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f13-105">Se si desidera passare un messaggio di errore all'utente, utilizzare il costruttore <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="f9f13-105">If you want to pass an error message to the user, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29> constructor.</span></span>  
  
 <span data-ttu-id="f9f13-106">Se si desidera passare un messaggio di errore e un riferimento all'eccezione interna che ha generato l'eccezione, utilizzare il costruttore <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29>.</span><span class="sxs-lookup"><span data-stu-id="f9f13-106">If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span>  
  
 <span data-ttu-id="f9f13-107">Se si desidera passare le informazioni sulla serializzazione e il contesto di flusso, utilizzare il costruttore <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>.</span><span class="sxs-lookup"><span data-stu-id="f9f13-107">If you want to pass serialization information and streaming context, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9f13-108">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-108">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : string -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f9f13-109">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-109">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f13-110">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> con un messaggio di errore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-110">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f13-111">Utilizzare questo costruttore quando si desidera passare all'utente un messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="f9f13-111">Use this constructor when you want to pass an error message to the user.</span></span> <span data-ttu-id="f9f13-112">Il contenuto del messaggio deve essere comprensibile all'utente previsto.</span><span class="sxs-lookup"><span data-stu-id="f9f13-112">The content of the message parameter should be understandable to the intended user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AddressAlreadyInUseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AddressAlreadyInUseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="f9f13-113">Oggetto della classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente tutti i dati necessari per serializzare l'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-113">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="f9f13-114">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che definisce l'origine e la destinazione del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-114">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f13-115">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> con le informazioni di serializzazione e il contesto di flusso specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-115">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with serialization information and streaming context specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f13-116">Questo costruttore viene chiamato nel corso della deserializzazione per ricostruire l'oggetto eccezione trasmesso in un flusso.</span><span class="sxs-lookup"><span data-stu-id="f9f13-116">This constructor is called during deserialization to reconstruct the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : string * Exception -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f9f13-117">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-117">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="f9f13-118">Eccezione <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-118">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f13-119">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> con il messaggio di errore specificato e un riferimento all'eccezione interna che ha generato l'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f13-119">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f13-120">Utilizzare questo costruttore quando si desidera passare all'utente un messaggio di errore e le informazioni su un'eccezione interna.</span><span class="sxs-lookup"><span data-stu-id="f9f13-120">Use this constructor when you want to pass an error message and information about an inner exception up to the user.</span></span> <span data-ttu-id="f9f13-121">Il contenuto del messaggio deve essere comprensibile agli utenti previsti.</span><span class="sxs-lookup"><span data-stu-id="f9f13-121">The content of the message parameter should be understandable to the intended users.</span></span>  
  
 <span data-ttu-id="f9f13-122">Un'eccezione generata come risultato diretto di un'eccezione precedente può includere un riferimento all'eccezione precedente nella proprietà <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9f13-122">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="f9f13-123">La proprietà <xref:System.Exception.InnerException%2A> restituisce lo stesso valore passato nel costruttore o un riferimento `null` (`Nothing` in Visual Basic) se la proprietà <xref:System.Exception.InnerException%2A> non fornisce il valore dell'eccezione interna al costruttore.</span><span class="sxs-lookup"><span data-stu-id="f9f13-123">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a `null` reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>