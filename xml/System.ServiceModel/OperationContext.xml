<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContext.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b722e678be6a4d98378e3e3131115b69b7a65af3680.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e678be6a4d98378e3e3131115b69b7a65af3680</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContext">
          <source>Provides access to the execution context of a service method.</source>
          <target state="translated">Consente di accedere al contesto di esecuzione di un metodo di servizio.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> from within a service operation to access the current operation execution environment.</source>
          <target state="translated">Utilizzare il contesto <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> dall'interno di un'operazione di servizio per accedere all'ambiente di esecuzione dell'operazione corrente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</source>
          <target state="translated">In particolare, il contesto dell'operazione viene utilizzato per accedere ai canali callback nei servizi duplex, per archiviare dati aggiuntivi sullo stato in più parti delle operazioni, per accedere alle intestazioni e alle proprietà dei messaggi in ingresso e per aggiungere intestazioni e proprietà ai messaggi in uscita.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For more information about using extensions to store state data, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'utilizzo delle estensioni per archiviare i dati di stato, vedere <bpt id="p1">[</bpt>gli oggetti estensibili<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> has the following properties and methods.</source>
          <target state="translated">Il contesto <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> presenta le proprietà e i metodi seguenti:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object representing the current execution context.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> restituisce l'oggetto <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> che rappresenta il contesto di esecuzione corrente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property returns the security environment under which the method executes.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> restituisce l'ambiente di sicurezza in cui il metodo viene eseguito.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> property gets the operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> consente di ottenere l'oggetto <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph> dell'operazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property returns an extension collection for the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> restituisce una raccolta di estensioni relativa al contesto <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that manages the service.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> restituisce l'oggetto <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> che gestisce il servizio.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> property returns a value that indicates whether the method has supporting tokens, if so, the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> property gets them.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> restituisce un valore che indica se il metodo prevede token di supporto e, in tal caso, la proprietà <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> consente di ottenerli.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> properties get these items from the incoming message.</source>
          <target state="translated">Le proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> consentono di ottenere questi elementi dal messaggio in ingresso.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event is fired when the operation has completed.</source>
          <target state="translated">L'evento <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> si verifica al termine dell'operazione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> properties get these items for the outbound message.</source>
          <target state="translated">Le proprietà<ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> consentono di ottenere questi elementi per il messaggio in uscita.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> implementation for the method.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> restituisce l'implementazione del contesto <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> del metodo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> associated with the operation.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> restituisce il contesto <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> associato all'operazione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> property returns the session identifier for the current channel and object.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> restituisce l'ID di sessione del canale e dell'oggetto correnti.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method returns a callback channel to the caller in the case of duplex communication.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> restituisce un canale callback al chiamante in caso di comunicazione duplex.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> method commits the current transaction.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> esegue il commit della transazione corrente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to obtain the channel back to the caller from within a method.</source>
          <target state="translated">Nell'esempio di codice seguente la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> e il metodo <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> vengono utilizzati per ottenere dall'interno di un metodo il canale di ritorno al chiamante.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Tutti i metodi descritti in questo esempio sono metodi unidirezionali che consentono al servizio e al clienti di comunicare in modo indipendente in entrambe le direzioni.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">In questo caso l'applicazione client descritta nell'esempio prevede di ricevere una sola chiamata di ritorno prima di terminare la propria esecuzione. Tuttavia un altro client, ad esempio un client Windows Forms, può ricevere un numero qualsiasi di chiamate dal servizio.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">Il client seguente implementa il callback <ph id="ph1">`SampleDuplexHelloCallback`</ph> per ricevere il messaggio callback.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">A causa dell'utilizzo della proprietà <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> nell'esempio precedente, il nome del contratto callback importato non corrisponde a quello del servizio.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Si noti che il client non fa alcuna ipotesi sulla possibilità di ricevere un callback e sul momento in cui può riceverlo. Il callback del server è completamente indipendente dalla chiamata in uscita del client.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Per un esempio in cui la classe <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> è utilizzata in uno scenario client, vedere <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> used to create a new client <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> utilizzata per creare un nuovo contesto <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> client.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> in a client application.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> che utilizza l'interfaccia <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> specificata in un'applicazione client.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</source>
          <target state="translated">Utilizzare il costruttore <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> per creare un nuovo contesto dell'operazione all'interno dell'ambito a cui è associato il proxy al fine di modificare gli elementi in uscita, ad esempio le intestazioni.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel is null.</source>
          <target state="translated">Il canale è null.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>Gets the channel associated with the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">Consente di ottenere il canale associato all'oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> associated with the current <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> associata al contesto <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>Gets the claims-based principal associated with the operation.</source>
          <target state="translated">Ottiene il principale basato sulle attestazioni associato all'operazione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>The claims principal.</source>
          <target state="translated">L'entità delle attestazioni.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Gets or sets the execution context for the current thread.</source>
          <target state="translated">Consente di ottenere o impostare il contesto di esecuzione del thread corrente.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> that represents the messaging and execution context of the current method.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> che rappresenta il contesto di esecuzione e dei messaggi del metodo corrente.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to obtain the execution and message context for the current method.</source>
          <target state="translated">Utilizzare la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> per ottenere il contesto di esecuzione e dei messaggi del metodo corrente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a method.</source>
          <target state="translated">Nell'esempio di codice seguente la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> e il metodo <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> vengono utilizzati per creare dall'interno di un metodo il canale di ritorno al chiamante.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Tutti i metodi descritti in questo esempio sono metodi unidirezionali che consentono al servizio e al clienti di comunicare in modo indipendente in entrambe le direzioni.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">In questo caso l'applicazione client descritta nell'esempio prevede di ricevere una sola chiamata di ritorno prima di terminare la propria esecuzione. Tuttavia un altro client, ad esempio un client Windows Forms, può ricevere un numero qualsiasi di chiamate dal servizio.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Consente di ottenere o impostare il dispatcher dell'endpoint da esaminare o modificare.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>The endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Dispatcher dell'endpoint da esaminare o modificare.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Gets the collection of service extensions from the current message context.</source>
          <target state="translated">Consente di ottenere la raccolta delle estensioni di servizio a partire dal contesto corrente dei messaggi.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>A collection of extensions of <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Raccolta di estensioni del contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property to obtain a collection of all extensions of the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> used to modify the context or add custom state.</source>
          <target state="translated">Utilizzare la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> per ottenere la raccolta di tutte le estensioni del contesto <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> utilizzate per modificare il contesto o per aggiungere uno stato personalizzato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>For more information about extensions, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle estensioni, vedere <bpt id="p1">[</bpt>gli oggetti estensibili<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The type of channel used to call back to the client.</source>
          <target state="translated">Tipo di canale utilizzato per il callback del client.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Gets a channel to the client instance that called the current operation.</source>
          <target state="translated">Consente di ottenere un canale per l'istanza client che ha chiamato l'operazione corrente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>A channel to the client instance that called the operation of the type specified in the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph> property.</source>
          <target state="translated">Canale per l'istanza client che ha chiamato l'operazione del tipo specificato nella proprietà <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> property to obtain a channel that you can use to call operations on the client instance that called the service.</source>
          <target state="translated">Chiamare la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> per ottenere un canale utilizzabile per chiamare operazioni sull'istanza client che ha chiamato il servizio.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a operation.</source>
          <target state="translated">Nell'esempio di codice seguente la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> e il metodo <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> vengono utilizzati per creare dall'interno di un'operazione il canale di ritorno al chiamante.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Tutte le operazioni descritte in questo esempio sono operazioni unidirezionali che consentono al servizio e al clienti di comunicare in modo indipendente in entrambe le direzioni.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">In questo caso l'applicazione client descritta nell'esempio prevede di ricevere una sola chiamata di ritorno prima di terminare la propria esecuzione. Tuttavia un altro client, ad esempio un client Windows Forms, può ricevere un numero qualsiasi di chiamate dal servizio.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">Il client seguente implementa il callback <ph id="ph1">`SampleDuplexHelloCallback`</ph> per ricevere il messaggio callback.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">A causa dell'utilizzo della proprietà <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> nell'esempio precedente, il nome del contratto callback importato non corrisponde a quello del servizio.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Si noti che il client non fa alcuna ipotesi sulla possibilità di ricevere un callback e sul momento in cui può riceverlo. Il callback del server è completamente indipendente dalla chiamata in uscita del client.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Per un esempio in cui la classe <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> è utilizzata in uno scenario client, vedere <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source>Gets a value that indicates whether the incoming message has supporting tokens.</source>
          <target state="translated">Consente di ottenere un valore che indica se il messaggio in ingresso presenta token di supporto.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the incoming message has supporting tokens; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio in ingresso presenta token di supporto. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Host">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> for the current service object.</source>
          <target state="translated">Consente di ottenere l'oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> dell'oggetto di servizio corrente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Host">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> object.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Gets the incoming message headers for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Consente di ottenere le intestazioni dei messaggi in ingresso relative al contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains the incoming message headers.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> contenente le intestazioni dei messaggi in ingresso.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</source>
          <target state="translated">Utilizzare questa proprietà per esaminare o modificare le intestazioni di richiesta che arrivano a un'operazione di servizio oppure le intestazioni di risposta che arrivano a un proxy client.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>The following code example shows how to read the incoming message headers in a service operation.</source>
          <target state="translated">Nell'esempio di codice seguente viene descritto come leggere le intestazioni dei messaggi in ingresso in un'operazione di servizio.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Gets the message properties for the incoming message in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Consente di ottenere le proprietà dei messaggi in ingresso nel contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the incoming message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> contenente le proprietà del messaggio in ingresso.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</source>
          <target state="translated">Utilizzare questa proprietà per esaminare o modificare le proprietà di un messaggio di richiesta in un'operazione di servizio oppure le proprietà di un messaggio di risposta in un proxy client.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Gets the incoming SOAP message version for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Consente di ottenere la versione del messaggio SOAP in ingresso del contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>The SOAP version of the incoming message.</source>
          <target state="translated">Versione SOAP del messaggio in ingresso.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</source>
          <target state="translated">Utilizzare questa proprietà per esaminare la versione SOAP del messaggio di richiesta che arriva a un'operazione di servizio oppure la versione del messaggio di risposta che arriva a un proxy client.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object that manages the current service instance.</source>
          <target state="translated">Consente di ottenere l'oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> che gestisce l'istanza di servizio corrente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object for the current service.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> relativo al servizio corrente.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property to access the run-time object that manages the current service object.</source>
          <target state="translated">Utilizzare la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> per accedere all'oggetto runtime che gestisce l'oggetto del servizio corrente.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source>This property is intended for system use and should not be called by users.</source>
          <target state="translated">Questa proprietà è destinata all'utilizzo da parte del sistema e non deve essere chiamata dagli utenti.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Occurs when the operation has completed.</source>
          <target state="translated">Si verifica al termine dell'operazione.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event to dispose parameters or a return value if you set <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se si imposta la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> su <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph>, utilizzare l'evento <ph id="ph3">`false`</ph> per eliminare determinati parametri o un valore restituito.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Normally you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph> to prevent WCF from calling <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> on the parameter and return value objects.</source>
          <target state="translated">In genere si imposta <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> al <ph id="ph2">`false`</ph> per impedire la chiamata WCF <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> per gli oggetti valore di parametro e restituire.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</source>
          <target state="translated">Se tuttavia occorre preservare solo determinati parametri ed eliminarne altri, questo evento rappresenta il metodo migliore per eliminarli.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</source>
          <target state="translated">Inoltre, in caso di associazioni duplex, questo evento può essere utilizzato per inviare una richiesta sul canale callback dopo l'invio della risposta relativa all'operazione corrente.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">Se un chiamante è in ascolto dell'evento <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> per l'operazione <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph>, tali operazioni possono essere bloccate alla ricezione della risposta.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">La modalità di gestione migliore è pianificare l'attività su un altro thread quando viene generato<ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph>, quindi uscire immediatamente da quel gestore eventi.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Gets the outgoing message headers for the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Consente di ottenere le intestazioni dei messaggi in uscita relative al contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> attivo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains outbound message headers for the active <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> contenente le intestazioni dei messaggi in uscita del contesto <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> attivo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Use this property to add reply headers that are sent by a service operation or request headers that are sent by a WCF client object.</source>
          <target state="translated">Utilizzare questa proprietà per aggiungere intestazioni di risposta inviati da un'operazione del servizio o di richiesta inviati da un oggetto client WCF.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Gets the message properties for the outbound message in the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Consente di ottenere le proprietà dei messaggi in uscita nel contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> attivo.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the outbound message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> contenente le proprietà del messaggio in uscita.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</source>
          <target state="translated">Utilizzare questa proprietà per aggiungere le proprietà di un messaggio di risposta proveniente da un'operazione di servizio oppure le proprietà di un messaggio di richiesta proveniente da un proxy client.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation for this method.</source>
          <target state="translated">Consente di ottenere o impostare l'implementazione del contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> di questo metodo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation, or null if there is no request context.</source>
          <target state="translated">Implementazione del contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> oppure null se non esiste alcun contesto di richiesta.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>One-way operations are do not have a request context.</source>
          <target state="translated">Le operazioni unidirezionali non presentano alcun contesto di richiesta.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> within which this method executes.</source>
          <target state="translated">Consente di ottenere o impostare il contesto <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> in cui viene eseguito questo metodo.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> object.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> used to identify the current session.</source>
          <target state="translated">Consente di ottenere la stringa <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> utilizzata per identificare la sessione corrente.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>The session identifier.</source>
          <target state="translated">ID di sessione.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Commits the currently executing transaction.</source>
          <target state="translated">Consente di eseguire il commit della transazione correntemente in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>This is only useful in operations that set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Ciò è utile solo per le operazioni in cui la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> è impostata su <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Typically, services do this on some but not all operations.</source>
          <target state="translated">In genere i servizi funzionano in tale modo soltanto per alcune operazioni, non per tutte.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> is false the transaction completes automatically.</source>
          <target state="translated">Quando la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> è false, la transazione termina automaticamente.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</source>
          <target state="translated">Utilizzare il metodo <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> nei casi in cui non sia possibile determinare in fase di progettazione se un'operazione deve completare la transazione.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>There is no transaction in the context.</source>
          <target state="translated">Nessuna transazione presente nel contesto.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Consente di ottenere un'interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> di tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>A collection of security tokens.</source>
          <target state="translated">Raccolta di token di sicurezza.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>