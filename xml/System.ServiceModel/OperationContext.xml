<Type Name="OperationContext" FullName="System.ServiceModel.OperationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e678be6a4d98378e3e3131115b69b7a65af3680" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationContext : System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContext extends System.Object implements class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContext&#xA;Implements IExtensibleObject(Of OperationContext)" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContext sealed : System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::OperationContext ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c2ca3-101">Consente di accedere al contesto di esecuzione di un metodo di servizio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c2ca3-101">Provides access to the execution context of a service method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-102">Utilizzare il contesto <xref:System.ServiceModel.OperationContext> dall'interno di un'operazione di servizio per accedere all'ambiente di esecuzione dell'operazione corrente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-102">Use the <xref:System.ServiceModel.OperationContext> from within a service operation to access the current operation execution environment.</span></span> <span data-ttu-id="c2ca3-103">In particolare, il contesto dell'operazione viene utilizzato per accedere ai canali callback nei servizi duplex, per archiviare dati aggiuntivi sullo stato in più parti delle operazioni, per accedere alle intestazioni e alle proprietà dei messaggi in ingresso e per aggiungere intestazioni e proprietà ai messaggi in uscita.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-103">In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</span></span>  
  
 <span data-ttu-id="c2ca3-104">Per ulteriori informazioni sull'utilizzo delle estensioni per archiviare i dati di stato, vedere [gli oggetti estensibili](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="c2ca3-104">For more information about using extensions to store state data, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 <span data-ttu-id="c2ca3-105">Il contesto <xref:System.ServiceModel.OperationContext> presenta le proprietà e i metodi seguenti:</span><span class="sxs-lookup"><span data-stu-id="c2ca3-105">The <xref:System.ServiceModel.OperationContext> has the following properties and methods.</span></span>  
  
-   <span data-ttu-id="c2ca3-106">La proprietà <xref:System.ServiceModel.OperationContext.Current%2A> restituisce l'oggetto <xref:System.ServiceModel.OperationContext> che rappresenta il contesto di esecuzione corrente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-106">The <xref:System.ServiceModel.OperationContext.Current%2A> property returns the <xref:System.ServiceModel.OperationContext> object representing the current execution context.</span></span>  
  
-   <span data-ttu-id="c2ca3-107">La proprietà <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> restituisce l'ambiente di sicurezza in cui il metodo viene eseguito.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-107">The <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property returns the security environment under which the method executes.</span></span>  
  
-   <span data-ttu-id="c2ca3-108">La proprietà <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> consente di ottenere l'oggetto <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType> dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-108">The <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> property gets the operation's <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c2ca3-109">La proprietà <xref:System.ServiceModel.OperationContext.Extensions%2A> restituisce una raccolta di estensioni relativa al contesto <xref:System.ServiceModel.OperationContext> corrente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-109">The <xref:System.ServiceModel.OperationContext.Extensions%2A> property returns an extension collection for the current <xref:System.ServiceModel.OperationContext>.</span></span>  
  
-   <span data-ttu-id="c2ca3-110">La proprietà <xref:System.ServiceModel.OperationContext.Host%2A> restituisce l'oggetto <xref:System.ServiceModel.ServiceHostBase> che gestisce il servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-110">The <xref:System.ServiceModel.OperationContext.Host%2A> property returns the <xref:System.ServiceModel.ServiceHostBase> object that manages the service.</span></span>  
  
-   <span data-ttu-id="c2ca3-111">La proprietà <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> restituisce un valore che indica se il metodo prevede token di supporto e, in tal caso, la proprietà <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> consente di ottenerli.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-111">The <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> property returns a value that indicates whether the method has supporting tokens, if so, the <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> property gets them.</span></span>  
  
-   <span data-ttu-id="c2ca3-112">Le proprietà <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A> e <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> consentono di ottenere questi elementi dal messaggio in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-112">The <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>, and <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> properties get these items from the incoming message.</span></span>  
  
-   <span data-ttu-id="c2ca3-113">L'evento <xref:System.ServiceModel.OperationContext.OperationCompleted> si verifica al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-113">The <xref:System.ServiceModel.OperationContext.OperationCompleted> event is fired when the operation has completed.</span></span>  
  
-   <span data-ttu-id="c2ca3-114">Le proprietà<xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> e <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> consentono di ottenere questi elementi per il messaggio in uscita.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-114">The <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> and <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> properties get these items for the outbound message.</span></span>  
  
-   <span data-ttu-id="c2ca3-115">La proprietà <xref:System.ServiceModel.OperationContext.RequestContext%2A> restituisce l'implementazione del contesto <xref:System.ServiceModel.Channels.RequestContext> del metodo.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-115">The <xref:System.ServiceModel.OperationContext.RequestContext%2A> property returns the <xref:System.ServiceModel.Channels.RequestContext> implementation for the method.</span></span>  
  
-   <span data-ttu-id="c2ca3-116">La proprietà <xref:System.ServiceModel.OperationContext.InstanceContext%2A> restituisce il contesto <xref:System.ServiceModel.InstanceContext> associato all'operazione.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-116">The <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property returns the <xref:System.ServiceModel.InstanceContext> associated with the operation.</span></span>  
  
-   <span data-ttu-id="c2ca3-117">La proprietà <xref:System.ServiceModel.OperationContext.SessionId%2A> restituisce l'ID di sessione del canale e dell'oggetto correnti.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-117">The <xref:System.ServiceModel.OperationContext.SessionId%2A> property returns the session identifier for the current channel and object.</span></span>  
  
-   <span data-ttu-id="c2ca3-118">Il metodo <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> restituisce un canale callback al chiamante in caso di comunicazione duplex.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-118">The <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method returns a callback channel to the caller in the case of duplex communication.</span></span>  
  
-   <span data-ttu-id="c2ca3-119">Il metodo <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> esegue il commit della transazione corrente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-119">The <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> method commits the current transaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ca3-120">Nell'esempio di codice seguente la proprietà <xref:System.ServiceModel.OperationContext.Current%2A> e il metodo <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> vengono utilizzati per ottenere dall'interno di un metodo il canale di ritorno al chiamante.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-120">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to obtain the channel back to the caller from within a method.</span></span> <span data-ttu-id="c2ca3-121">Tutti i metodi descritti in questo esempio sono metodi unidirezionali che consentono al servizio e al clienti di comunicare in modo indipendente in entrambe le direzioni.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-121">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="c2ca3-122">In questo caso l'applicazione client descritta nell'esempio prevede di ricevere una sola chiamata di ritorno prima di terminare la propria esecuzione. Tuttavia un altro client, ad esempio un client Windows Forms, può ricevere un numero qualsiasi di chiamate dal servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-122">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="c2ca3-123">Il client seguente implementa il callback `SampleDuplexHelloCallback` per ricevere il messaggio callback.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-123">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="c2ca3-124">A causa dell'utilizzo della proprietà <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> nell'esempio precedente, il nome del contratto callback importato non corrisponde a quello del servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-124">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="c2ca3-125">Si noti che il client non fa alcuna ipotesi sulla possibilità di ricevere un callback e sul momento in cui può riceverlo. Il callback del server è completamente indipendente dalla chiamata in uscita del client.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-125">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2ca3-126">Per un esempio in cui la classe <xref:System.ServiceModel.OperationContext> è utilizzata in uno scenario client, vedere <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-126">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContext (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContext(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="c2ca3-127">Interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> utilizzata per creare un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" /> client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-127">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2ca3-128">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContext" /> che utilizza l'interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> specificata in un'applicazione client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-128">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-129">Utilizzare il costruttore <xref:System.ServiceModel.OperationContext.%23ctor%2A> per creare un nuovo contesto dell'operazione all'interno dell'ambito a cui è associato il proxy al fine di modificare gli elementi in uscita, ad esempio le intestazioni.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-129">Use the <xref:System.ServiceModel.OperationContext.%23ctor%2A> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ca3-130">Nell'esempio seguente viene illustrato come utilizzare <xref:System.ServiceModel.OperationContextScope> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-130">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c2ca3-131">Il canale è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-131">The channel is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IContextChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IContextChannel Channel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Channel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Channel As IContextChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IContextChannel ^ Channel { System::ServiceModel::IContextChannel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IContextChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-132">Consente di ottenere il canale associato all'oggetto <see cref="T:System.ServiceModel.OperationContext" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-132">Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-133">Interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> associata al contesto <see cref="T:System.ServiceModel.OperationContext" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-133">An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-134">Ottiene il principale basato sulle attestazioni associato all'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-134">Gets the claims-based principal associated with the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-135">L'entità delle attestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-135">The claims principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.OperationContext Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.OperationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As OperationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::OperationContext ^ Current { System::ServiceModel::OperationContext ^ get(); void set(System::ServiceModel::OperationContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OperationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-136">Consente di ottenere o impostare il contesto di esecuzione del thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-136">Gets or sets the execution context for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-137">Oggetto <see cref="T:System.ServiceModel.OperationContext" /> che rappresenta il contesto di esecuzione e dei messaggi del metodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-137">The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-138">Utilizzare la proprietà <xref:System.ServiceModel.OperationContext.Current%2A> per ottenere il contesto di esecuzione e dei messaggi del metodo corrente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-138">Use the <xref:System.ServiceModel.OperationContext.Current%2A> property to obtain the execution and message context for the current method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ca3-139">Nell'esempio di codice seguente la proprietà <xref:System.ServiceModel.OperationContext.Current%2A> e il metodo <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> vengono utilizzati per creare dall'interno di un metodo il canale di ritorno al chiamante.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-139">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a method.</span></span> <span data-ttu-id="c2ca3-140">Tutti i metodi descritti in questo esempio sono metodi unidirezionali che consentono al servizio e al clienti di comunicare in modo indipendente in entrambe le direzioni.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-140">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="c2ca3-141">In questo caso l'applicazione client descritta nell'esempio prevede di ricevere una sola chiamata di ritorno prima di terminare la propria esecuzione. Tuttavia un altro client, ad esempio un client Windows Forms, può ricevere un numero qualsiasi di chiamate dal servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-141">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.EndpointDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointDispatcher As EndpointDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::EndpointDispatcher ^ EndpointDispatcher { System::ServiceModel::Dispatcher::EndpointDispatcher ^ get(); void set(System::ServiceModel::Dispatcher::EndpointDispatcher ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.EndpointDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-142">Consente di ottenere o impostare il dispatcher dell'endpoint da esaminare o modificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-142">Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-143">Dispatcher dell'endpoint da esaminare o modificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-143">The endpoint dispatcher for the endpoint to inspect or modify.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IExtensionCollection`1&lt;class System.ServiceModel.OperationContext&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As IExtensionCollection(Of OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ Extensions { System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IExtensibleObject`1.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-144">Consente di ottenere la raccolta delle estensioni di servizio a partire dal contesto corrente dei messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-144">Gets the collection of service extensions from the current message context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-145">Raccolta di estensioni del contesto <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-145">A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-146">Utilizzare la proprietà <xref:System.ServiceModel.OperationContext.Extensions%2A> per ottenere la raccolta di tutte le estensioni del contesto <xref:System.ServiceModel.OperationContext> utilizzate per modificare il contesto o per aggiungere uno stato personalizzato.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-146">Use the <xref:System.ServiceModel.OperationContext.Extensions%2A> property to obtain a collection of all extensions of the <xref:System.ServiceModel.OperationContext> used to modify the context or add custom state.</span></span> <span data-ttu-id="c2ca3-147">Per ulteriori informazioni sulle estensioni, vedere [gli oggetti estensibili](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="c2ca3-147">For more information about extensions, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackChannel&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetCallbackChannel&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetCallbackChannel&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackChannel(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetCallbackChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="c2ca3-148">Tipo di canale utilizzato per il callback del client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-148">The type of channel used to call back to the client.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="c2ca3-149">Consente di ottenere un canale per l'istanza client che ha chiamato l'operazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-149">Gets a channel to the client instance that called the current operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2ca3-150">Canale per l'istanza client che ha chiamato l'operazione del tipo specificato nella proprietà <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-150">A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-151">Chiamare la proprietà <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> per ottenere un canale utilizzabile per chiamare operazioni sull'istanza client che ha chiamato il servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-151">Call the <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> property to obtain a channel that you can use to call operations on the client instance that called the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ca3-152">Nell'esempio di codice seguente la proprietà <xref:System.ServiceModel.OperationContext.Current%2A> e il metodo <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> vengono utilizzati per creare dall'interno di un'operazione il canale di ritorno al chiamante.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-152">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a operation.</span></span> <span data-ttu-id="c2ca3-153">Tutte le operazioni descritte in questo esempio sono operazioni unidirezionali che consentono al servizio e al clienti di comunicare in modo indipendente in entrambe le direzioni.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-153">All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="c2ca3-154">In questo caso l'applicazione client descritta nell'esempio prevede di ricevere una sola chiamata di ritorno prima di terminare la propria esecuzione. Tuttavia un altro client, ad esempio un client Windows Forms, può ricevere un numero qualsiasi di chiamate dal servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-154">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="c2ca3-155">Il client seguente implementa il callback `SampleDuplexHelloCallback` per ricevere il messaggio callback.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-155">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="c2ca3-156">A causa dell'utilizzo della proprietà <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> nell'esempio precedente, il nome del contratto callback importato non corrisponde a quello del servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-156">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="c2ca3-157">Si noti che il client non fa alcuna ipotesi sulla possibilità di ricevere un callback e sul momento in cui può riceverlo. Il callback del server è completamente indipendente dalla chiamata in uscita del client.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-157">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2ca3-158">Per un esempio in cui la classe <xref:System.ServiceModel.OperationContext> è utilizzata in uno scenario client, vedere <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-158">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSupportingTokens">
      <MemberSignature Language="C#" Value="public bool HasSupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.HasSupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSupportingTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSupportingTokens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-159">Consente di ottenere un valore che indica se il messaggio in ingresso presenta token di supporto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-159">Gets a value that indicates whether the incoming message has supporting tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-160">
            <see langword="true" /> se il messaggio in ingresso presenta token di supporto. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-160">
              <see langword="true" /> if the incoming message has supporting tokens; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-161">Consente di ottenere l'oggetto <see cref="T:System.ServiceModel.ServiceHost" /> dell'oggetto di servizio corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-161">Gets the <see cref="T:System.ServiceModel.ServiceHost" /> for the current service object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-162">Un oggetto <see cref="T:System.ServiceModel.ServiceHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-162">A <see cref="T:System.ServiceModel.ServiceHost" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ IncomingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-163">Consente di ottenere le intestazioni dei messaggi in ingresso relative al contesto <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-163">Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-164">Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> contenente le intestazioni dei messaggi in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-164">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-165">Utilizzare questa proprietà per esaminare o modificare le intestazioni di richiesta che arrivano a un'operazione di servizio oppure le intestazioni di risposta che arrivano a un proxy client.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-165">Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ca3-166">Nell'esempio di codice seguente viene descritto come leggere le intestazioni dei messaggi in ingresso in un'operazione di servizio.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-166">The following code example shows how to read the incoming message headers in a service operation.</span></span>  
  
 [!code-csharp[OperationContextScope#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/services.cs#2)]
 [!code-vb[OperationContextScope#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties IncomingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties IncomingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ IncomingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-167">Consente di ottenere le proprietà dei messaggi in ingresso nel contesto <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-167">Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-168">Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contenente le proprietà del messaggio in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-168">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-169">Utilizzare questa proprietà per esaminare o modificare le proprietà di un messaggio di richiesta in un'operazione di servizio oppure le proprietà di un messaggio di risposta in un proxy client.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-169">Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion IncomingMessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion IncomingMessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ IncomingMessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-170">Consente di ottenere la versione del messaggio SOAP in ingresso del contesto <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-170">Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-171">Versione SOAP del messaggio in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-171">The SOAP version of the incoming message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-172">Utilizzare questa proprietà per esaminare la versione SOAP del messaggio di richiesta che arriva a un'operazione di servizio oppure la versione del messaggio di risposta che arriva a un proxy client.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-172">Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext InstanceContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.InstanceContext InstanceContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.InstanceContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceContext As InstanceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContext ^ InstanceContext { System::ServiceModel::InstanceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-173">Consente di ottenere l'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> che gestisce l'istanza di servizio corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-173">Gets the <see cref="T:System.ServiceModel.InstanceContext" /> object that manages the current service instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-174">Oggetto <see cref="T:System.ServiceModel.InstanceContext" /> relativo al servizio corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-174">The <see cref="T:System.ServiceModel.InstanceContext" /> object for the current service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-175">Utilizzare la proprietà <xref:System.ServiceModel.OperationContext.InstanceContext%2A> per accedere all'oggetto runtime che gestisce l'oggetto del servizio corrente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-175">Use the <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property to access the run-time object that manages the current service object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserContext">
      <MemberSignature Language="C#" Value="public bool IsUserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IsUserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserContext { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-176">Questa proprietà è destinata all'utilizzo da parte del sistema e non deve essere chiamata dagli utenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-176">This property is intended for system use and should not be called by users.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-177">
            <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-177">
              <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler OperationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OperationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.OperationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OperationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-178">Si verifica al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-178">Occurs when the operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-179">Se si imposta la proprietà <xref:System.ServiceModel.OperationContext.OperationCompleted> su <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType>, utilizzare l'evento `false` per eliminare determinati parametri o un valore restituito.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-179">Use the <xref:System.ServiceModel.OperationContext.OperationCompleted> event to dispose parameters or a return value if you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="c2ca3-180">In genere si imposta <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> al `false` per impedire la chiamata WCF <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> per gli oggetti valore di parametro e restituire.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-180">Normally you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false` to prevent WCF from calling <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> on the parameter and return value objects.</span></span>  <span data-ttu-id="c2ca3-181">Se tuttavia occorre preservare solo determinati parametri ed eliminarne altri, questo evento rappresenta il metodo migliore per eliminarli.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-181">However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</span></span>  
  
 <span data-ttu-id="c2ca3-182">Inoltre, in caso di associazioni duplex, questo evento può essere utilizzato per inviare una richiesta sul canale callback dopo l'invio della risposta relativa all'operazione corrente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-182">Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2ca3-183">Se un chiamante è in ascolto dell'evento <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> per l'operazione <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType>, tali operazioni possono essere bloccate alla ricezione della risposta.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-183">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="c2ca3-184">La modalità di gestione migliore è pianificare l'attività su un altro thread quando viene generato<xref:System.ServiceModel.OperationContext.OperationCompleted>, quindi uscire immediatamente da quel gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-184">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ OutgoingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-185">Consente di ottenere le intestazioni dei messaggi in uscita relative al contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-185">Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-186">Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> contenente le intestazioni dei messaggi in uscita del contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-186">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-187">Utilizzare questa proprietà per aggiungere intestazioni di risposta inviati da un'operazione del servizio o di richiesta inviati da un oggetto client WCF.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-187">Use this property to add reply headers that are sent by a service operation or request headers that are sent by a WCF client object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ca3-188">Nell'esempio seguente viene illustrato come utilizzare <xref:System.ServiceModel.OperationContextScope> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-188">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ OutgoingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-189">Consente di ottenere le proprietà dei messaggi in uscita nel contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-189">Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-190">Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contenente le proprietà del messaggio in uscita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-190">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-191">Utilizzare questa proprietà per aggiungere le proprietà di un messaggio di risposta proveniente da un'operazione di servizio oppure le proprietà di un messaggio di richiesta proveniente da un proxy client.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-191">Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::RequestContext ^ RequestContext { System::ServiceModel::Channels::RequestContext ^ get(); void set(System::ServiceModel::Channels::RequestContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-192">Consente di ottenere o impostare l'implementazione del contesto <see cref="T:System.ServiceModel.Channels.RequestContext" /> di questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-192">Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-193">Implementazione del contesto <see cref="T:System.ServiceModel.Channels.RequestContext" /> oppure null se non esiste alcun contesto di richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-193">An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-194">Le operazioni unidirezionali non presentano alcun contesto di richiesta.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-194">One-way operations are do not have a request context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceSecurityContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceSecurityContext ServiceSecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ServiceSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceSecurityContext As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceSecurityContext ^ ServiceSecurityContext { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-195">Consente di ottenere o impostare il contesto <see cref="T:System.ServiceModel.ServiceSecurityContext" /> in cui viene eseguito questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-195">Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> within which this method executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-196">Un oggetto <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-196">A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-197">Consente di ottenere la stringa <see cref="T:System.String" /> utilizzata per identificare la sessione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-197">Gets the <see cref="T:System.String" /> used to identify the current session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-198">ID di sessione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-198">The session identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransactionComplete">
      <MemberSignature Language="C#" Value="public void SetTransactionComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransactionComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.SetTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTransactionComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTransactionComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-199">Consente di eseguire il commit della transazione correntemente in fase di esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-199">Commits the currently executing transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ca3-200">Ciò è utile solo per le operazioni in cui la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> è impostata su `false`.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-200">This is only useful in operations that set <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="c2ca3-201">In genere i servizi funzionano in tale modo soltanto per alcune operazioni, non per tutte.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-201">Typically, services do this on some but not all operations.</span></span> <span data-ttu-id="c2ca3-202">Quando la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> è false, la transazione termina automaticamente.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-202">When <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> is false the transaction completes automatically.</span></span> <span data-ttu-id="c2ca3-203">Utilizzare il metodo <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> nei casi in cui non sia possibile determinare in fase di progettazione se un'operazione deve completare la transazione.</span><span class="sxs-lookup"><span data-stu-id="c2ca3-203">Use <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c2ca3-204">Nessuna transazione presente nel contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-204">There is no transaction in the context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportingTokens">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportingTokens As ICollection(Of SupportingTokenSpecification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ SupportingTokens { System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2ca3-205">Consente di ottenere un'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-205">Gets a <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2ca3-206">Raccolta di token di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ca3-206">A collection of security tokens.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>