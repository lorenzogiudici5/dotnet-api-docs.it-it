<Type Name="OperationContextScope" FullName="System.ServiceModel.OperationContextScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ddf8cf5d00ac6a6c698efe3f32c5be9413cc807" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313993" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationContextScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContextScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContextScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContextScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContextScope sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d0c91-101">Consente di creare un blocco che definisce l'ambito di un oggetto <see cref="T:System.ServiceModel.OperationContext" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0c91-101">Creates a block within which an <see cref="T:System.ServiceModel.OperationContext" /> object is in scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c91-102">Utilizzare la classe <xref:System.ServiceModel.OperationContextScope> per creare l'ambito di un oggetto <xref:System.ServiceModel.OperationContext> specifico o l'ambito di un nuovo oggetto <xref:System.ServiceModel.OperationContext> tramite l'oggetto <xref:System.ServiceModel.IContextChannel> specificato.</span><span class="sxs-lookup"><span data-stu-id="d0c91-102">Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object.</span></span> <span data-ttu-id="d0c91-103">Un <xref:System.ServiceModel.OperationContextScope> può essere utilizzato in un servizio Windows Communication Foundation (WCF) o l'applicazione client WCF.</span><span class="sxs-lookup"><span data-stu-id="d0c91-103">An <xref:System.ServiceModel.OperationContextScope> can be used in a Windows Communication Foundation (WCF) service or WCF client application.</span></span>  
  
 <span data-ttu-id="d0c91-104">Dopo che l'oggetto <xref:System.ServiceModel.OperationContextScope> ha stabilito il contesto dell'operazione corrente, il contesto <xref:System.ServiceModel.OperationContext> può essere utilizzato per:</span><span class="sxs-lookup"><span data-stu-id="d0c91-104">Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:</span></span>  
  
-   <span data-ttu-id="d0c91-105">Accedere e modificare le intestazioni e le altre proprietà dei messaggi in ingresso e in uscita.</span><span class="sxs-lookup"><span data-stu-id="d0c91-105">Access and modify incoming and outgoing message headers and other properties.</span></span>  
  
-   <span data-ttu-id="d0c91-106">Accedere al runtime, compresi dispatcher, host, canale ed estensioni.</span><span class="sxs-lookup"><span data-stu-id="d0c91-106">Access the runtime, including dispatchers, the host, channel, and extensions.</span></span>  
  
-   <span data-ttu-id="d0c91-107">Accedere agli altri tipi di contesto, ad esempio ai contesti di sicurezza, istanza e richiesta.</span><span class="sxs-lookup"><span data-stu-id="d0c91-107">Access other types of contexts, such as security, instance, and request contexts.</span></span>  
  
-   <span data-ttu-id="d0c91-108">Accedere al canale associato all'oggetto <xref:System.ServiceModel.OperationContext> o, se il canale implementa l'interfaccia <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>, all'identificatore di sessione del canale associato.</span><span class="sxs-lookup"><span data-stu-id="d0c91-108">Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>) the associated channel's session identifier.</span></span>  
  
 <span data-ttu-id="d0c91-109">Quando si crea un ambito <xref:System.ServiceModel.OperationContextScope>, il contesto <xref:System.ServiceModel.OperationContext> corrente viene archiviato e il nuovo contesto <xref:System.ServiceModel.OperationContext> diventa quello restituito dalla proprietà <xref:System.ServiceModel.OperationContext.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="d0c91-109">When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property.</span></span> <span data-ttu-id="d0c91-110">Quando l'ambito <xref:System.ServiceModel.OperationContextScope> viene eliminato, il contesto originale <xref:System.ServiceModel.OperationContext> viene ripristinato.</span><span class="sxs-lookup"><span data-stu-id="d0c91-110">When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d0c91-111">Non utilizzare il modello asincrono "await" all'interno di un blocco OperationContextScope.</span><span class="sxs-lookup"><span data-stu-id="d0c91-111">Do not use the asynchronous "await" pattern within a OperationContextScope block.</span></span> <span data-ttu-id="d0c91-112">Quando si verifica la continuazione, possono essere eseguite su un thread diverso e OperationContextScope è a thread specifici.</span><span class="sxs-lookup"><span data-stu-id="d0c91-112">When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.</span></span> <span data-ttu-id="d0c91-113">Se è necessario chiamare "await" per una chiamata async, è possibile utilizzarlo all'esterno del blocco OperationContextScope.</span><span class="sxs-lookup"><span data-stu-id="d0c91-113">If you need to call "await" for an async call, use it outside of the OperationContextScope block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c91-114">Nell'esempio seguente viene illustrato come utilizzare l'ambito <xref:System.ServiceModel.OperationContextScope> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.</span><span class="sxs-lookup"><span data-stu-id="d0c91-114">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]
 [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c91-115">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c91-115">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="d0c91-116">Canale da utilizzare quando si crea l'ambito di un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c91-116">The channel to use when creating the scope for a new <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c91-117">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> che utilizza l'interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> specificata per creare un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" /> dell'ambito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c91-117">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> to create a new <see cref="T:System.ServiceModel.OperationContext" /> for the scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c91-118">Utilizzare il costruttore <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> per creare un nuovo contesto <xref:System.ServiceModel.OperationContext> per un canale client che può essere utilizzato per aggiungere o modificare intestazioni di messaggi in uscita, per leggere intestazioni di messaggi in ingresso o per accedere ad altre proprietà di runtime del contesto <xref:System.ServiceModel.OperationContext>.</span><span class="sxs-lookup"><span data-stu-id="d0c91-118">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.</span></span>  
  
 <span data-ttu-id="d0c91-119">Le intestazioni aggiunte alla proprietà <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> del contesto <xref:System.ServiceModel.OperationContext> appena creato vengono applicate solo al canale passato al costruttore <xref:System.ServiceModel.OperationContextScope.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="d0c91-119">The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor.</span></span> <span data-ttu-id="d0c91-120">Se l'utente crea un nuovo canale all'interno del suo ambito, le intestazioni non vengono applicate ai messaggi inviati sul nuovo canale.</span><span class="sxs-lookup"><span data-stu-id="d0c91-120">If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c91-121">Nell'esempio seguente viene illustrato come utilizzare <xref:System.ServiceModel.OperationContextScope> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.</span><span class="sxs-lookup"><span data-stu-id="d0c91-121">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.OperationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.OperationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::OperationContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d0c91-122">Contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo nell'ambito creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c91-122">The active <see cref="T:System.ServiceModel.OperationContext" /> in the created scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c91-123">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> per creare un ambito dell'oggetto <see cref="T:System.ServiceModel.OperationContext" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c91-123">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class to create a scope for the specified <see cref="T:System.ServiceModel.OperationContext" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c91-124">Utilizzare il costruttore <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> per creare un blocco di codice in cui l'oggetto <xref:System.ServiceModel.OperationContextScope> specificato è l'ambito corrente.</span><span class="sxs-lookup"><span data-stu-id="d0c91-124">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c91-125">Consente di ripristinare il contesto <see cref="T:System.ServiceModel.OperationContext" /> originale al contesto attivo e di riciclare l'oggetto <see cref="T:System.ServiceModel.OperationContextScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c91-125">Restores the original <see cref="T:System.ServiceModel.OperationContext" /> to the active context and recycles the <see cref="T:System.ServiceModel.OperationContextScope" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>