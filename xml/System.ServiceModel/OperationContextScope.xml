<Type Name="OperationContextScope" FullName="System.ServiceModel.OperationContextScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="417f4e1c79406c8794f5f9f9ea150896383d22ec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36410867" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationContextScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContextScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContextScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContextScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContextScope sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type OperationContextScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Consente di creare un blocco che definisce l'ambito di un oggetto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la classe <xref:System.ServiceModel.OperationContextScope> per creare l'ambito di un oggetto <xref:System.ServiceModel.OperationContext> specifico o l'ambito di un nuovo oggetto <xref:System.ServiceModel.OperationContext> tramite l'oggetto <xref:System.ServiceModel.IContextChannel> specificato. Un <xref:System.ServiceModel.OperationContextScope> può essere utilizzato in un servizio Windows Communication Foundation (WCF) o l'applicazione client WCF.  
  
 Dopo che l'oggetto <xref:System.ServiceModel.OperationContextScope> ha stabilito il contesto dell'operazione corrente, il contesto <xref:System.ServiceModel.OperationContext> può essere utilizzato per:  
  
-   Accedere e modificare le intestazioni e le altre proprietà dei messaggi in ingresso e in uscita.  
  
-   Accedere al runtime, compresi dispatcher, host, canale ed estensioni.  
  
-   Accedere agli altri tipi di contesto, ad esempio ai contesti di sicurezza, istanza e richiesta.  
  
-   Accedere al canale associato all'oggetto <xref:System.ServiceModel.OperationContext> o, se il canale implementa l'interfaccia <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>, all'identificatore di sessione del canale associato.  
  
 Quando si crea un ambito <xref:System.ServiceModel.OperationContextScope>, il contesto <xref:System.ServiceModel.OperationContext> corrente viene archiviato e il nuovo contesto <xref:System.ServiceModel.OperationContext> diventa quello restituito dalla proprietà <xref:System.ServiceModel.OperationContext.Current%2A>. Quando l'ambito <xref:System.ServiceModel.OperationContextScope> viene eliminato, il contesto originale <xref:System.ServiceModel.OperationContext> viene ripristinato.  
  
> [!WARNING]
>  Non utilizzare il modello asincrono "await" all'interno di un blocco OperationContextScope. Quando si verifica la continuazione, possono essere eseguite su un thread diverso senza che sia OperationContextScope thread specifico. Se è necessario chiamare "await" per una chiamata async, utilizzarlo all'esterno del blocco OperationContextScope.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare l'ambito <xref:System.ServiceModel.OperationContextScope> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.  
  
 [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]
 [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.IContextChannel -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope channel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">Canale da utilizzare quando si crea l'ambito di un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" />.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> che utilizza l'interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> specificata per creare un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" /> dell'ambito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il costruttore <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> per creare un nuovo contesto <xref:System.ServiceModel.OperationContext> per un canale client che può essere utilizzato per aggiungere o modificare intestazioni di messaggi in uscita, per leggere intestazioni di messaggi in ingresso o per accedere ad altre proprietà di runtime del contesto <xref:System.ServiceModel.OperationContext>.  
  
 Le intestazioni aggiunte alla proprietà <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> del contesto <xref:System.ServiceModel.OperationContext> appena creato vengono applicate solo al canale passato al costruttore <xref:System.ServiceModel.OperationContextScope.%23ctor%2A>. Se l'utente crea un nuovo canale all'interno del suo ambito, le intestazioni non vengono applicate ai messaggi inviati sul nuovo canale.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.ServiceModel.OperationContextScope> per creare un nuovo contesto in un'applicazione client per aggiungere un'intestazione personalizzata al messaggio in uscita.  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.OperationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.OperationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::OperationContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.OperationContext -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="context">Contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo nell'ambito creato.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> per creare un ambito dell'oggetto <see cref="T:System.ServiceModel.OperationContext" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il costruttore <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> per creare un blocco di codice in cui l'oggetto <xref:System.ServiceModel.OperationContextScope> specificato è l'ambito corrente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="operationContextScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente di ripristinare il contesto <see cref="T:System.ServiceModel.OperationContext" /> originale al contesto attivo e di riciclare l'oggetto <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>