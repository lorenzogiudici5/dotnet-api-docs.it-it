<Type Name="IClientChannel" FullName="System.ServiceModel.IClientChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3af7d0743208b8eba14dd1a1fb7e85ac527f5d5a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315303" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IClientChannel : IDisposable, System.ServiceModel.IContextChannel, System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientChannel implements class System.IDisposable, class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject, class System.ServiceModel.IContextChannel, class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientChannel&#xA;Implements IContextChannel, IDisposable, IExtensibleObject(Of IContextChannel)" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientChannel : IDisposable, System::ServiceModel::IContextChannel, System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::IContextChannel ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IContextChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definisce il comportamento dei canali di richiesta e di request/reply in uscita usati dalle applicazioni client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'interfaccia <xref:System.ServiceModel.IClientChannel> definisce le operazioni supportate da tutti i canali restituiti da una chiamata al metodo <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>. Utilizzare i metodi e le proprietà dell'interfaccia <xref:System.ServiceModel.IClientChannel> per controllare e modificare il canale tipizzato in uscita. Il [strumento ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) Esporta sia una <xref:System.ServiceModel.ClientBase%601> classe e un'interfaccia del contratto di servizio mediante la creazione di un'interfaccia del contratto che eredita da entrambi il contratto di servizio di destinazione e <xref:System.ServiceModel.IClientChannel>, Consente di utilizzare il contratto esteso come proxy per il servizio e di accesso al canale client.  
  
 Per ulteriori informazioni, vedere [architettura Client WCF](~/docs/framework/wcf/feature-details/client-architecture.md). Per esempi dell'aspetto nei file di codice client generato, vedere [comprensione del codice Client generato](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowInitializationUI">
      <MemberSignature Language="C#" Value="public bool AllowInitializationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitializationUI" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInitializationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitializationUI { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere o impostare un valore che indica se il metodo <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> tenta di chiamare gli oggetti <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> nella proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> o se genera un'eccezione quando tale raccolta non è vuota.</summary>
        <value>
          <see langword="true" /> Se Windows Communication Foundation (WCF) è consentito richiamare inizializzatori di canale interattivi; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si desidera generare un'eccezione anziché visualizzare una finestra di dialogo di inizializzazione, impostare questa proprietà su `false`. Ciò risulta utile in uno scenario di livello intermedio in cui si desidera garantire che non venga visualizzata alcuna finestra di dialogo, anche se l'applicazione è configurata in modo da visualizzarne una. Per informazioni dettagliate, vedere [accesso ai servizi tramite Client WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) e <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo chiamato al termine dell'esecuzione di questo metodo.</param>
        <param name="state">Informazioni sullo stato del canale.</param>
        <summary>Chiamata asincrona per cominciare a utilizzare un'interfaccia utente al fine di ottenere informazioni sulle credenziali.</summary>
        <returns>L'interfaccia <see cref="T:System.IAsyncResult" /> da utilizzare per richiamare una volta completata l'elaborazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per avviare l'inizializzazione dei canali interattivi, ad esempio la scelta di CardSpace. Ciò si verifica automaticamente se il canale è utilizzato senza chiamare in modo esplicito il metodo <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>. Di conseguenza, per molte applicazioni questa chiamata è facoltativa.  
  
 Tuttavia, se l'utente impiega molto tempo nel processo di selezione, è possibile che si verifichi il timeout dell'operazione che ha eseguito la chiamata automatica. Per impedire ciò, chiamare in modo esplicito il metodo <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> oppure il metodo <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> e il metodo <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A>. Queste operazioni non presentano alcun timeout e consentono di controllare in modo preciso il punto dell'applicazione in cui questa finestra di dialogo viene visualizzata.  
  
 Questo metodo consente di visualizzare una finestra di dialogo soltanto se l'applicazione è configurata in modo da visualizzarla. Quando l'applicazione non è configurata per utilizzare CardSpace o un altro inizializzatore di canale interattivo, questa chiamata non restituisce alcuna azione.  
  
 Se si chiama questo metodo in modo esplicito, prima di utilizzarlo è anche necessario aprire in modo esplicito il canale.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidInteractiveInitialization">
      <MemberSignature Language="C#" Value="public bool DidInteractiveInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DidInteractiveInitialization" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DidInteractiveInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DidInteractiveInitialization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere un valore che indica se è stata eseguita una chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
        <value>
          <see langword="true" /> se è stato chiamato il metodo <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> o i metodi <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> e <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se le operazioni vengono chiamate in un'interfaccia <xref:System.ServiceModel.IClientChannel> senza che vengano chiamati i metodi <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> e <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, questi metodi vengono chiamati automaticamente. Per informazioni dettagliate, vedere [accesso ai servizi tramite Client WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) e <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void DisplayInitializationUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayInitializationUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayInitializationUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisplayInitializationUI();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per avviare l'inizializzazione dei canali interattivi, ad esempio la scelta di CardSpace. Ciò si verifica automaticamente se il canale è utilizzato senza chiamare in modo esplicito il metodo <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>. Di conseguenza, per molte applicazioni questa chiamata è facoltativa.  
  
 Tuttavia, se l'utente impiega molto tempo nel processo di selezione, è possibile che si verifichi il timeout dell'operazione che ha eseguito la chiamata automatica. Per impedire ciò, chiamare in modo esplicito il metodo <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> oppure il metodo <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> e il metodo <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A>. Queste operazioni non presentano alcun timeout e consentono di controllare in modo preciso il punto dell'applicazione in cui questa finestra di dialogo viene visualizzata.  
  
 Questo metodo consente di visualizzare una finestra di dialogo soltanto se l'applicazione è configurata in modo da visualizzarla. Quando l'applicazione non è configurata per utilizzare CardSpace o un altro inizializzatore di canale interattivo, questa chiamata non restituisce alcuna azione.  
  
 Se si chiama questo metodo in modo esplicito, prima di utilizzarlo è anche necessario aprire in modo esplicito il canale.  
  
 Per informazioni dettagliate, vedere [accesso ai servizi tramite Client WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) e <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Oggetto <see cref="T:System.IAsyncResult" />.</param>
        <summary>Elemento che viene chiamato al termine della chiamata al metodo <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownMessageReceived">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <MemberSignature Language="VB.NET" Value="Event UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::UnknownMessageReceivedEventArgs ^&gt; ^ UnknownMessageReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si tratta di un evento riservato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere l'URI contenente l'indirizzo di trasporto a cui vengono inviati i messaggi sul canale client.</summary>
        <value>Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui i messaggi vengono inviati sul canale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la proprietà <xref:System.ServiceModel.EndpointAddress> non è stata specificata, l'oggetto della classe <xref:System.ServiceModel.IClientChannel.Via%2A> funge sia da destinazione finale sia da indirizzo fisico. Se specificata, la proprietà <xref:System.ServiceModel.IClientChannel.Via%2A> indica l'indirizzo fisico effettivo al quale viene inviato il messaggio e tramite il quale deve passare per giungere a destinazione. Questo valore può essere impostato in un file di configurazione utilizzando l'elemento <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>