<Type Name="WorkflowServiceHost" FullName="System.ServiceModel.WorkflowServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5c0e07a9ef8f18427f721e0e95a040698af0659e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37452778" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WorkflowServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowServiceHost : System::ServiceModel::ServiceHostBase" />
  <TypeSignature Language="F#" Value="type WorkflowServiceHost = class&#xA;    inherit ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce host per i servizi basati sul flusso di lavoro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa l'host utilizzato dal modello di servizio Windows Communication Foundation (WCF) modello di programmazione.  
  
 Utilizzare la classe <xref:System.ServiceModel.WorkflowServiceHost> per configurare ed esporre un flusso di lavoro come servizio in modo che possa essere utilizzato dalle applicazioni client quando non si utilizzano i servizi IIS (Information Services) o WAS (Windows Activation Services) per esporre un servizio. Sia IIS sia WAS interagiscono automaticamente con un oggetto <xref:System.ServiceModel.WorkflowServiceHost>.  
  
 Per esporre un flusso di lavoro come servizio in modo da poter essere utilizzato dai chiamanti, WCF richiede una descrizione completa del servizio, rappresentata dalla classe <xref:System.ServiceModel.Description.ServiceDescription>. La classe <xref:System.ServiceModel.WorkflowServiceHost> crea una descrizione <xref:System.ServiceModel.Description.ServiceDescription> a partire dal tipo e dalle informazioni di configurazione del servizio del flusso di lavoro e quindi utilizza tale descrizione per creare oggetti<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> per ogni endpoint riportato nella descrizione.  
  
 L'oggetto <xref:System.ServiceModel.WorkflowServiceHost> consente di caricare un servizio del flusso di lavoro, configurare gli endpoint, applicare impostazioni di sicurezza e avviare i listener di gestione delle richieste in ingresso.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Classe <see cref="T:System.IO.Stream" /> contenente la definizione del flusso di lavoro.</param>
        <param name="baseAddress">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> utilizzando un flusso di byte che contiene la definizione del flusso di lavoro e gli indirizzi di base del servizio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload se la definizione del flusso di lavoro viene archiviata in un archivio protetto, ad esempio un database.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Stringa che contiene il percorso del file di definizione del flusso di lavoro.</param>
        <param name="baseAddress">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> utilizzando un percorso della definizione del flusso di lavoro e gli indirizzi di base del servizio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload quando la definizione del flusso di lavoro Ã¨ in formato file di Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (Type workflowType, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type workflowType, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowType As Type, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(Type ^ workflowType, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : Type * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowType, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> di istanza del flusso di lavoro.</param>
        <param name="baseAddress">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> utilizzando un tipo di flusso del lavoro e gli indirizzi di base del servizio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload quando il flusso di lavoro Ã¨ definito come tipo compilato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Classe <see cref="T:System.IO.Stream" /> contenente la definizione del flusso di lavoro.</param>
        <param name="ruleDefinition">Classe <see cref="T:System.IO.Stream" /> contenente la definizione delle regole del flusso di lavoro.</param>
        <param name="baseAddress">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> utilizzando un flusso di byte che contiene la definizione del flusso di lavoro, un flusso di byte che contiene la definizione delle regole del flusso di lavoro e gli indirizzi di base del servizio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload quando la definizione del flusso di lavoro e la definizione delle regole vengono archiviate in un archivio protetto, ad esempio un database.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Stringa che contiene il percorso del file di definizione del flusso di lavoro.</param>
        <param name="ruleDefinitionPath">Stringa che contiene il percorso del file di definizione delle regole del flusso di lavoro.</param>
        <param name="baseAddress">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> utilizzando un percorso della definizione del flusso di lavoro, un percorso della definizione delle regole del flusso di lavoro e gli indirizzi di base del servizio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload quando la definizione del flusso di lavoro e la definizione delle regole sono in formato file di Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Classe <see cref="T:System.IO.Stream" /> contenente la definizione del flusso di lavoro.</param>
        <param name="ruleDefinition">Classe <see cref="T:System.IO.Stream" /> contenente la definizione delle regole del flusso di lavoro.</param>
        <param name="typeProvider">Un provider di tipi che implementa l'interfaccia <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
        <param name="baseAddress">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> utilizzando un flusso di byte che contiene la definizione del flusso di lavoro, un flusso di byte che contiene la definizione delle regole del flusso di lavoro, un provider di tipi per tipi di attivitÃ  personalizzati e gli indirizzi di base del servizio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload quando il flusso di lavoro compilato fa riferimento a tipi personalizzati definiti in un assembly separato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Stringa che contiene il percorso del file di definizione del flusso di lavoro.</param>
        <param name="ruleDefinitionPath">Stringa che contiene il percorso del file di definizione delle regole del flusso di lavoro.</param>
        <param name="typeProvider">Un provider di tipi che implementa l'interfaccia <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
        <param name="baseAddress">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> utilizzando un percorso della definizione del flusso di lavoro, un percorso della definizione delle regole del flusso di lavoro, un provider di tipi per tipi di attivitÃ  personalizzati e gli indirizzi di base del servizio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload quando il flusso di lavoro definito in un file di markup del flusso di lavoro (.xmol) fa riferimento ai tipi personalizzati definiti in un assembly separato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Consente di aggiungere un endpoint di servizio al servizio ospitato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</param>
        <param name="binding">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</param>
        <param name="address">Indirizzo dell'endpoint aggiunto.</param>
        <summary>Aggiunge un endpoint di servizio per il servizio del flusso di lavoro utilizzando il contratto, l'associazione e l'indirizzo endpoint specificati.</summary>
        <returns>Classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunta al servizio del flusso di lavoro.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il servizio del flusso di lavoro non implementa <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</param>
        <param name="binding">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</param>
        <param name="address">URI <see cref="T:System.Uri" /> contenente l'indirizzo dell'endpoint aggiunto.</param>
        <summary>Consente di aggiungere al servizio del flusso di lavoro un endpoint di servizio con il contratto, l'associazione e l'URI contenente l'indirizzo endpoint specificati.</summary>
        <returns>Classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunta al servizio del flusso di lavoro.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il servizio del flusso di lavoro non implementa <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</param>
        <param name="binding">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</param>
        <param name="address">Indirizzo endpoint del servizio.</param>
        <param name="listenUri">Oggetto <see cref="T:System.Uri" /> su cui gli endpoint di servizio possono essere in ascolto.</param>
        <summary>Consente di aggiungere al servizio del flusso di lavoro un endpoint di servizio con il contratto, un'associazione e l'indirizzo endpoint specificati nonchÃ© l'URI su cui il servizio Ã¨ in ascolto.</summary>
        <returns>Classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunta al servizio del flusso di lavoro.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Classe <see cref="T:System.ServiceModel.ServiceContractAttribute" /> non specificata per <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</param>
        <param name="binding">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</param>
        <param name="address">URI <see cref="T:System.Uri" /> contenente l'indirizzo dell'endpoint aggiunto.</param>
        <param name="listenUri">Oggetto <see cref="T:System.Uri" /> su cui gli endpoint di servizio possono essere in ascolto.</param>
        <summary>Consente di aggiungere al servizio del flusso di lavoro un endpoint di servizio con il contratto, un'associazione e l'URI contenente l'indirizzo endpoint specificati nonchÃ© l'URI su cui il servizio Ã¨ in ascolto.</summary>
        <returns>Classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunta al servizio del flusso di lavoro.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Classe <see cref="T:System.ServiceModel.ServiceContractAttribute" /> non specificata per <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberSignature Language="F#" Value="override this.CreateDescription :  -&gt; System.ServiceModel.Description.ServiceDescription" Usage="workflowServiceHost.CreateDescription implementedContracts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">Quando questo metodo termina, l'oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene i contratti con chiave del servizio ospitato che sono stati implementati.</param>
        <summary>Crea una descrizione del servizio del flusso di lavoro.</summary>
        <returns>Classe <see cref="T:System.ServiceModel.Description.ServiceDescription" /> del servizio del flusso di lavoro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected override void OnClosing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.OnClosing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosing();" />
      <MemberSignature Language="F#" Value="override this.OnClosing : unit -&gt; unit" Usage="workflowServiceHost.OnClosing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Questo metodo viene chiamato prima che <see cref="T:System.ServiceModel.WorkflowServiceHost" /> venga inserita in uno stato di chiusura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nell'implementazione predefinita <xref:System.ServiceModel.WorkflowServiceHost> chiama il metodo <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> prima di chiamare <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=nameWithType>. Questo significa che il runtime del flusso di lavoro verrÃ  arrestato prima che l'host del servizio venga chiuso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>