<Type Name="ServiceBehaviorAttribute" FullName="System.ServiceModel.ServiceBehaviorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34045d218581d1215438db73e18a017551df99a1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37612156" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceBehaviorAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica il comportamento di esecuzione interno di un'implementazione del contratto di servizio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Applicare l'attributo <xref:System.ServiceModel.ServiceBehaviorAttribute> all'implementazione di un servizio per specificare il comportamento di esecuzione a livello di servizio. Per specificare il comportamento di esecuzione a livello di metodo, utilizzare l'attributo <xref:System.ServiceModel.OperationBehaviorAttribute>. Questo attributo può essere applicato solo alle implementazioni di servizi. Per alcuni esempi funzionanti, vedere la [esempi di comportamenti del servizio](http://msdn.microsoft.com/library/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7).  
  
 <xref:System.ServiceModel.ServiceBehaviorAttribute> le proprietà sono una funzionalità del modello di programmazione Windows Communication Foundation (WCF) che abilita funzionalità comuni che gli sviluppatori in caso contrario, sono necessario implementare. Per altre informazioni su questi e altri comportamenti, vedere [che specifica il comportamento di Run-Time Service](~/docs/framework/wcf/specifying-service-run-time-behavior.md). Per altre informazioni sulle proprietà runtime sottostante che alcune del seguente set di proprietà, vedere [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> specifica il tipo di filtro che il sistema dei dispatcher utilizza per individuare l'endpoint che gestisce le richieste.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> determina la chiusura automatica della sessione quando il canale viene chiuso e il servizio ha terminato l'elaborazione dei messaggi rimanenti.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> controlla il modello di threading interno, consentendo il supporto di servizi rientranti o multithreading.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> viene utilizzata per dichiarare un nome da utilizzare nell'attributo `name` dell'elemento `<service>` in un file di configurazione.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> consente al runtime di ignorare le informazioni di serializzazione aggiuntive che non sono necessarie per elaborare il messaggio.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> specifica se le eccezioni non gestite in un servizio vengono restituite come errori SOAP. Viene utilizzata solo per fini di debug.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> specifica se e quando i servizi e i relativi oggetti servizio devono essere riciclati durante uno scambio con un client.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> limita il numero di elementi di un oggetto grafico che vengono serializzati.  
  
-   Le proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> e <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> controllano il nome e lo spazio dei nomi per l'espressione WSDL dell'elemento del servizio.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> specifica se l'oggetto servizio viene riciclato al termine di una transazione.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> specifica se alla chiusura della sessione corrente vengono completate le transazioni in attesa.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> specifica il livello di isolamento della transazione supportato dal contratto.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> specifica il periodo di tempo entro il quale una transazione deve essere completata prima di essere interrotta.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> indica se sincronizzare automaticamente le chiamate ai metodi in ingresso con il thread dell'interfaccia utente.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> indica al sistema se è necessario verificare che le intestazioni SOAP contrassegnate con `MustUnderstand`, siano state in effetti riconosciute.  
  
 La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> può essere impostata anche utilizzando un file di configurazione dell'applicazione. Per informazioni dettagliate, vedere <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente vengono illustrate le proprietà della classe <xref:System.ServiceModel.ServiceBehaviorAttribute>. La classe `BehaviorService` utilizza l'attributo <xref:System.ServiceModel.ServiceBehaviorAttribute> per indicare quanto segue:  
  
-   L'oggetto servizio viene riciclato al completamento della transazione.  
  
-   È presente un solo oggetto servizio per ogni sessione.  
  
-   Il servizio è a thread singolo e non supporta le chiamate rientranti.  
  
 Inoltre, a livello di operazione, i valori della classe <xref:System.ServiceModel.OperationBehaviorAttribute> indicano che il metodo `TxWork` viene inserito automaticamente nelle transazioni propagate o crea una nuova transazione per l'esecuzione dell'operazione e che, se non si verifica alcuna eccezione non gestita, viene eseguito automaticamente il commit della transazione.  
  
 [!code-csharp[OperationBehaviorAttribute1#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute1#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute1/vb/services.vb#2)]  
  
 Affinché l'esempio di codice seguente venga eseguito correttamente, è necessario che l'associazione sottostante supporti le transazioni propagate. Per supportare le transazioni propagate utilizzando l'associazione <xref:System.ServiceModel.WSHttpBinding>, ad esempio, impostare la proprietà <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> su `true` nel codice o in un file di configurazione dell'applicazione. Nell'esempio di codice seguente viene illustrato il file di configurazione per l'esempio precedente.  
  
 [!code-xml[OperationBehaviorAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.OperationBehaviorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceBehaviorAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori predefiniti per l'attributo <xref:System.ServiceModel.ServiceBehaviorAttribute> sono i seguenti:  
  
-   <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> viene impostato su <xref:System.ServiceModel.AddressFilterMode.Exact>.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> è `true`.  
  
-   <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> viene impostato su <xref:System.ServiceModel.ConcurrencyMode.Single>.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> corrisponde al nome completo dello spazio dei nomi del tipo senza informazioni sull'assembly.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> è `false`.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> è impostata su 64 KB.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> corrisponde al nome del tipo di servizio, senza spazio dei nomi o informazioni sull'assembly.  
  
-   Il <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> proprietà è "http://tempuri.org".  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> è `true`.  
  
-   <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> è `false`.  
  
-   <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> è `true`.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> è `false`.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> è <xref:System.Transactions.IsolationLevel.Unspecified>.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> è impostata su <xref:System.TimeSpan.Zero>.  
  
-   La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> è `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFilterMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AddressFilterMode AddressFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AddressFilterMode AddressFilterMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressFilterMode As AddressFilterMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AddressFilterMode AddressFilterMode { System::ServiceModel::AddressFilterMode get(); void set(System::ServiceModel::AddressFilterMode value); };" />
      <MemberSignature Language="F#" Value="member this.AddressFilterMode : System.ServiceModel.AddressFilterMode with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AddressFilterMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'enumerazione <see cref="T:System.ServiceModel.AddressFilterMode" /> utilizzata dal dispatcher per indirizzare i messaggi in ingresso all'endpoint corretto.</summary>
        <value>Oggetto <see cref="T:System.ServiceModel.AddressFilterMode" /> utilizzato dal dispatcher per indirizzare i messaggi in ingresso all'endpoint corretto.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore non appartiene all'enumerazione <see cref="T:System.ServiceModel.AddressFilterMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSessionShutdown">
      <MemberSignature Language="C#" Value="public bool AutomaticSessionShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticSessionShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticSessionShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutomaticSessionShutdown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSessionShutdown : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica se chiudere automaticamente una sessione quando un client chiude una sessione di output.</summary>
        <value>
          <see langword="true" /> se i servizi chiudono automaticamente una sessione quando il client chiude una sessione di output; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, quando un client chiude una sessione di output e il servizio ha terminato l'elaborazione di eventuali messaggi rimanenti, il server chiude la sessione. Impostando <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> su `false` si impedisce che il server chiuda automaticamente la sessione e abiliti il controllo personalizzato delle durate di sessione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ConcurrencyMode ConcurrencyMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ConcurrencyMode As ConcurrencyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ConcurrencyMode ConcurrencyMode { System::ServiceModel::ConcurrencyMode get(); void set(System::ServiceModel::ConcurrencyMode value); };" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyMode : System.ServiceModel.ConcurrencyMode with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un servizio supporta un solo thread, più thread o chiamate rientranti.</summary>
        <value>Uno dei valori di <see cref="T:System.ServiceModel.ConcurrencyMode" />. Il valore predefinito è <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica se un'istanza di un servizio può supportare un solo thread o più thread eseguiti contemporaneamente e, in caso di thread singolo, se è supportata la reentrancy.  
  
> [!NOTE]
>  La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> interagisce con altre impostazioni. Ad esempio, se si imposta il valore <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> su <xref:System.ServiceModel.InstanceContextMode.Single>, il servizio può elaborare un solo messaggio alla volta, a meno che il valore di <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> non venga impostato su <xref:System.ServiceModel.ConcurrencyMode.Multiple>. Questa proprietà genera inoltre un comportamento in combinazione con la proprietà <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType>. Per informazioni dettagliate, vedere [sessioni, relativo alle istanze e concorrenza](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).  
  
 L'impostazione di <xref:System.ServiceModel.ConcurrencyMode> su <xref:System.ServiceModel.ConcurrencyMode.Single> indica al sistema di limitare le istanze del servizio a un solo thread di esecuzione alla volta, evitando in questo modo di incorrere in problemi di threading. Un valore <xref:System.ServiceModel.ConcurrencyMode.Multiple> indica che gli oggetti servizio possono essere eseguiti da più thread contemporaneamente. In questo caso, è necessario garantire la sicurezza dei thread.  
  
 <xref:System.ServiceModel.ConcurrencyMode.Reentrant> limita inoltre l'accesso a un solo thread alla volta. mentre l'operazione viene elaborata, nessun altro messaggio può inserirsi nell'operazione. Se durante l'operazione, viene avviata una chiamata a un'altro servizio, il messaggio corrente perde il blocco sull'operazione che diventa libera di elaborare altri messaggi. Quando la chiamata del servizio viene restituita, il blocco viene ristabilito e il messaggio originale può continuare l'elaborazione fino al termine o fino a quando non si verifica un'altra chiamata dell'operazione.  
  
> [!IMPORTANT]
>  Sebbene <xref:System.ServiceModel.ConcurrencyMode.Single> limita le istanze del servizio da un thread di esecuzione alla volta, è necessario impostare anche <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> su 1 per non garantisce che nessun messaggio di non in ordine.  
>   
>  Inoltre, è responsabilità dell'utente garantire la coerenza prima delle chiamate dello stato dell'oggetto ed è necessario confermare che i dati locali dell'operazione siano validi dopo i callout. Si noti che l'istanza del servizio viene sbloccata solo chiamando un altro servizio su un canale WCF. In questo caso, il servizio chiamato può rientrare nel primo servizio tramite un callback. Se il primo servizio non è rientrante, la sequenza di chiamate determina un deadlock. Per informazioni dettagliate, vedere <xref:System.ServiceModel.ConcurrencyMode>.  
  
 Durante qualsiasi chiamata in uscita da un'operazione di elaborazione, è possibile modificare i dati non locali rispetto all'operazione (la validità dei dati allo stato locale viene garantita alla ripresa dell'elaborazione del messaggio originale). Di conseguenza, prima della chiamata in uscita è necessario verificare che i dati non locali siano validi per le altre chiamate in ingresso e convalidare i dati non locali dopo la restituzione della chiamata in uscita.  
  
 Nello pseudo-codice seguente viene illustrato il modello necessario per il supporto delle chiamate rientranti.  
  
```csharp  
public void MyMethod()  
{  
  this.SomeNonLocalDataState;  
  // Here you need to clean nonlocal state for other users  
  OutboundProxy proxy = new OutboundProxy();  
  int returnValue = proxy.CallOutOfOperation();  
  // Ensure that this.SomeNonLocalDataState is valid for continued use.  
  this.ModifyNonLocalState;  
  return returnValue;  
}  
  
```  
  
 Se si utilizza il modello di chiamata asincrona Begin/End per una chiamata in uscita quando la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> è <xref:System.ServiceModel.ConcurrencyMode.Reentrant>, viene generata un'eccezione. Per le chiamate in uscita asincrone è necessaria un'operazione in cui <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> è <xref:System.ServiceModel.ConcurrencyMode.Multiple>, nel qual caso sarà necessario gestire problemi di sincronizzazione.  
  
 In genere, se arriva un messaggio per un'istanza che viola la modalità di concorrenza, il messaggio resta in attesa fino a quando l'istanza non diventa disponibile o fino al timeout.  
  
 Inoltre, se <xref:System.ServiceModel.ConcurrencyMode> è impostata su <xref:System.ServiceModel.ConcurrencyMode.Single> e una chiamata rientrante è bloccata in attesa che l'istanza sia disponibile, il sistema rileva il deadlock e genera un'eccezione.  
  
> [!NOTE]
>  Viene generata una <xref:System.InvalidOperationException> in fase di esecuzione se la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> è `true` quando la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> è impostata su <xref:System.ServiceModel.ConcurrencyMode.Single>.  
  
 Si noti che è necessario impostare in modo esplicito la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> su `false` se è presente un'operazione con la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> impostata su true e si imposta la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> su <xref:System.ServiceModel.ConcurrencyMode.Reentrant>. In caso contrario, viene generata un'eccezione di convalida perché il valore predefinito della proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> è `true`.  
  
 Esiste un'interazione fra la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> e altre proprietà in grado di modificare il comportamento di runtime. Per una descrizione completa di queste interazioni, vedere [sessioni, relativo alle istanze e concorrenza](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).  
  
   
  
## Examples  
 Nell'esempio di codice seguente vengono illustrate le differenze tra l'utilizzo di <xref:System.ServiceModel.ConcurrencyMode.Single>, <xref:System.ServiceModel.ConcurrencyMode.Reentrant> e <xref:System.ServiceModel.ConcurrencyMode.Multiple>. In questo esempio non viene compilato senza un'effettiva implementazione sottostante, ma illustrano il tipo del threading in modo che rende Windows Communication Foundation (WCF) e cosa significa per il codice dell'operazione.  
  
 [!code-csharp[C_BestPractices-Concurrency#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_bestpractices-concurrency/cs/reentrantandmultiple.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore non appartiene all'enumerazione <see cref="T:System.ServiceModel.ConcurrencyMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationName">
      <MemberSignature Language="C#" Value="public string ConfigurationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationName : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore utilizzato per individuare l'elemento di servizio in un file di configurazione dell'applicazione.</summary>
        <value>Valore da individuare nel file di configurazione. Il valore predefinito corrisponde al nome completo del tipo senza informazioni sull'assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo valore per specificare un particolare servizio nel file di configurazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOrderedDispatch">
      <MemberSignature Language="C#" Value="public bool EnsureOrderedDispatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureOrderedDispatch" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureOrderedDispatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureOrderedDispatch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnsureOrderedDispatch : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'invio ordinato del servizio è assicurato.</summary>
        <value>
          <see langword="True" /> se viene assicurato l'invio ordinato del servizio; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWellKnownSingleton">
      <MemberSignature Language="C#" Value="public object GetWellKnownSingleton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetWellKnownSingleton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWellKnownSingleton () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetWellKnownSingleton();" />
      <MemberSignature Language="F#" Value="member this.GetWellKnownSingleton : unit -&gt; obj" Usage="serviceBehaviorAttribute.GetWellKnownSingleton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un oggetto che implementa il servizio e che viene utilizzato come l'istanza singleton del servizio o <see langword="null" /> se non esiste alcuna istanza singleton.</summary>
        <returns>Implementazione del servizio. Il valore predefinito è <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valore diverso da `null` fornisce l'istanza del servizio alla quale verranno inviati tutti i messaggi indirizzati al servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreExtensionDataObject : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se inviare i dati di serializzazione sconosciuti in transito.</summary>
        <value>
          <see langword="true" /> se i dati di serializzazione sconosciuti non vengono mai inviati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un tipo implementa l'interfaccia <xref:System.Runtime.Serialization.IExtensibleDataObject>, i dati aggiuntivi sconosciuti ricevuti in rete vengono memorizzati durante la deserializzazione in tale tipo. Ad esempio, se un tipo `Person` possiede i membri `FirstName` e `LastName` e perviene un elemento denominato `PhoneNumber`, questo viene memorizzato. Quando viene in seguito eseguita la serializzazione del tipo, `PhoneNumber` verrà emesso di nuovo. Il problema è che lo schema per `Person` esportato dal servizio dispone solo `FirstName` e `LastName`, in modo che Windows Communication Foundation (WCF) genera un'istanza di schema non valido. Se è importante una rigorosa conformità allo schema, è possibile impostare <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> su `true` per disattivare questo comportamento di riemissione.  
  
 Indipendentemente dal fatto che <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> impostazione, WCF vengono sempre elaborati dati noti, sia in ingresso e uscita e non genera eccezioni quando pervengono dati aggiuntivi. È anche possibile impostare tale proprietà utilizzando il [ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) elemento in un file di configurazione dell'applicazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo della proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> e un'implementazione dell'interfaccia <xref:System.Runtime.Serialization.IExtensibleDataObject>. In questo esempio, con <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> impostata su `false`, i dati aggiuntivi noti al client eseguono una sequenza di andata e ritorno al client.  
  
 [!code-csharp[DCAContainerNoValidation#1](~/samples/snippets/csharp/VS_Snippets_CFX/dcacontainernovalidation/cs/services.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica che le eccezioni di esecuzione generiche non gestite devono essere convertite in una classe <see cref="T:System.ServiceModel.FaultException`1" /> di tipo <see cref="T:System.ServiceModel.ExceptionDetail" /> e inviate come messaggio di errore. Impostare questa proprietà su <see langword="true" /> solo durante la fase di sviluppo per la risoluzione dei problemi di un servizio.</summary>
        <value>
          <see langword="true" /> se le eccezioni non gestite devono essere restituite come errori SOAP; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> su `true` per abilitare il flusso delle informazioni sulle eccezioni ai client per fini debug. Per questa proprietà è necessaria un'associazione che supporti messaggi di richiesta-risposta o duplex.  
  
 Tutte le applicazioni gestite prevedono che gli errori di elaborazione siano rappresentati dagli oggetti <xref:System.Exception>. Nelle applicazioni basate su SOAP, ad esempio le applicazioni WCF, informazioni sugli errori tramite messaggi di errore SOAP vengono comunicate dai metodi che implementano operazioni del servizio. Poiché le applicazioni WCF vengono eseguite con entrambi i tipi di sistemi di errore, eventuali informazioni sulle eccezioni gestite che deve essere inviato al client devono essere convertite da eccezioni in errori SOAP. Per altre informazioni, vedere [se si specifica e gestione degli errori in contratti e servizi](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).  
  
 Durante lo sviluppo, può essere necessario che il servizio invii anche altre accezioni al client per agevolare il debug. Si tratta di una funzionalità destinata solo allo sviluppo e non deve essere utilizzata nei servizi distribuiti.  
  
 Per facilitare il debug, impostare il <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> a `true` nel codice o utilizzando un file di configurazione dell'applicazione.  
  
 Quando è abilitata, il servizio restituisce automaticamente al chiamante informazioni più sicure sulle eccezioni. Il client considera questi errori come oggetti <xref:System.ServiceModel.FaultException%601> di tipo <xref:System.ServiceModel.ExceptionDetail>.  
  
> [!IMPORTANT]
>  L'impostazione <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> a `true` le eccezioni dei metodi di servizio consente ai client per ottenere informazioni su interni; è consigliabile solo come modalità temporanea di debug di un'applicazione di servizio. Inoltre, il codice WSDL di un metodo che restituisce in questo modo eccezioni gestite senza tuttavia gestirle non contiene il contratto dell'eccezione <xref:System.ServiceModel.FaultException%601> di tipo <xref:System.ServiceModel.ExceptionDetail>. Per ottenere correttamente le informazioni di debug, i client devono prevedere la possibilità di ricevere un errore SOAP sconosciuto.  
  
 Impostando questa proprietà su `true` può essere eseguita anche utilizzando un file di configurazione dell'applicazione e il [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) elemento, come illustrato nell'esempio di codice seguente.  
  
 [!code-xml[OperationBehaviorAttribute1#10](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#10)]   
   
  
## Examples  
 Nell'esempio di codice seguente vengono illustrate le proprietà della classe <xref:System.ServiceModel.ServiceBehaviorAttribute>. La classe `BehaviorService` utilizza l'attributo <xref:System.ServiceModel.ServiceBehaviorAttribute> per indicare quanto segue:  
  
-   I metodi di implementazione sono richiamati sul thread UI.  
  
-   È presente un solo oggetto servizio per ogni sessione.  
  
-   Il servizio è a thread singolo e non supporta le chiamate rientranti.  
  
 Inoltre, a livello di operazione, i valori della classe <xref:System.ServiceModel.OperationBehaviorAttribute> indicano che il metodo `TxWork` viene inserito automaticamente nelle transazioni propagate o crea una nuova transazione per l'esecuzione dell'operazione e che, se non si verifica alcuna eccezione non gestita, viene eseguito automaticamente il commit della transazione.  
  
 [!code-csharp[OperationBehaviorAttribute1#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute1#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute1/vb/services.vb#2)]  
  
 Affinché l'esempio di codice seguente venga eseguito correttamente, è necessario che l'associazione sottostante supporti le transazioni propagate. Per supportare le transazioni propagate utilizzando l'associazione <xref:System.ServiceModel.WSHttpBinding>, ad esempio, impostare la proprietà <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> su `true` nel codice o in un file di configurazione dell'applicazione. Nell'esempio di codice seguente viene illustrato il file di configurazione per l'esempio precedente.  
  
 [!code-xml[OperationBehaviorAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContextMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContextMode InstanceContextMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.InstanceContextMode InstanceContextMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceContextMode As InstanceContextMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContextMode InstanceContextMode { System::ServiceModel::InstanceContextMode get(); void set(System::ServiceModel::InstanceContextMode value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceContextMode : System.ServiceModel.InstanceContextMode with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore che indica quando vengono creati nuovi oggetti servizio.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.ServiceModel.InstanceContextMode" />; il valore predefinito è <see cref="F:System.ServiceModel.InstanceContextMode.PerSession" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.InstanceContextMode> per specificare quando vengono creati nuovi oggetti servizio. Poiché l'oggetto servizio non è connesso direttamente al canale di comunicazione, la durata degli oggetti servizio è indipendente dalla durata del canale tra un client e l'applicazione del servizio. Il valore predefinito, <xref:System.ServiceModel.InstanceContextMode.PerSession>, indica all'applicazione del servizio di creare un nuovo oggetto servizio quando viene stabilita una nuova sessione di comunicazione tra un client e l'applicazione del servizio. Le chiamate successive all'interno della stessa sessione vengono gestite dallo stesso oggetto.  
  
 <xref:System.ServiceModel.InstanceContextMode.PerSession> indica che ogni oggetto servizio gestisce le richieste da un solo canale client.  
  
> [!NOTE]
>  La proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> interagisce con altre impostazioni. Ad esempio, se si imposta il valore <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> su <xref:System.ServiceModel.InstanceContextMode.Single>, il servizio può elaborare un solo messaggio alla volta, a meno che il valore di <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> non venga impostato su <xref:System.ServiceModel.ConcurrencyMode.Multiple>. Questa proprietà genera inoltre un comportamento in combinazione con la proprietà <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType>. Per informazioni dettagliate, vedere [sessioni, relativo alle istanze e concorrenza](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).  
  
 In caso di funzionamento di durata Singleton (ad esempio, l'applicazione host chiama il costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%2A> e passa un oggetto da utilizzare come servizio), la classe del servizio deve impostare la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> su `Single`. In caso contrario viene generata un'eccezione in fase di esecuzione.  
  
   
  
## Examples  
 Nell'esempio di codice seguente vengono illustrate le proprietà della classe <xref:System.ServiceModel.ServiceBehaviorAttribute>. La classe `BehaviorService` utilizza l'attributo <xref:System.ServiceModel.ServiceBehaviorAttribute> per indicare quanto segue:  
  
-   I metodi di implementazione sono richiamati sul thread UI.  
  
-   È presente un solo oggetto servizio per ogni sessione.  
  
-   Il servizio è a thread singolo e non supporta le chiamate rientranti.  
  
 Inoltre, a livello di operazione, i valori della classe <xref:System.ServiceModel.OperationBehaviorAttribute> indicano che il metodo `TxWork` viene inserito automaticamente nelle transazioni propagate o crea una nuova transazione per l'esecuzione dell'operazione e che, se non si verifica alcuna eccezione non gestita, viene eseguito automaticamente il commit della transazione.  
  
 [!code-csharp[OperationBehaviorAttribute1#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute1#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute1/vb/services.vb#2)]  
  
 Affinché l'esempio di codice seguente venga eseguito correttamente, è necessario che l'associazione sottostante supporti le transazioni propagate. Per supportare le transazioni propagate utilizzando l'associazione <xref:System.ServiceModel.WSHttpBinding>, ad esempio, impostare la proprietà <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> su `true` nel codice o in un file di configurazione dell'applicazione. Nell'esempio di codice seguente viene illustrato il file di configurazione per l'esempio precedente.  
  
 [!code-xml[OperationBehaviorAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore non appartiene all'enumerazione <see cref="T:System.ServiceModel.InstanceContextMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxItemsInObjectGraph : int with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero massimo di elementi consentiti in un oggetto serializzato.</summary>
        <value>Numero massimo di elementi consentiti in un oggetto. Il valore predefinito è 65.536 byte (64 KB).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> per impostare un limite sul numero di elementi di un oggetto grafico che vengono serializzati. È anche possibile impostare tale proprietà utilizzando il [ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) elemento in un file di configurazione dell'applicazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore dell'attributo del nome nell'elemento di servizio in WSDL (Web Services Description Language).</summary>
        <value>Valore dell'attributo del nome nell'elemento <see langword="&lt;wsdl:service&gt;" /> quando viene esportato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore dello spazio dei nomi di destinazione per il servizio in WSDL (Web Services Description Language).</summary>
        <value>Valore dell'attributo <see langword="targetNamespace" /> per l'elemento <see langword="&lt;wsdl:definitions&gt;" /> che contiene l'elemento <see langword="&lt;wsdl:service&gt;" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseServiceInstanceOnTransactionComplete">
      <MemberSignature Language="C#" Value="public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseServiceInstanceOnTransactionComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReleaseServiceInstanceOnTransactionComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseServiceInstanceOnTransactionComplete : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se l'oggetto servizio viene rilasciato al completamento della transazione corrente.</summary>
        <value>
          <see langword="true" /> se l'oggetto servizio deve essere rilasciato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si noti che è necessario impostare in modo esplicito la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> su `false` se è presente un'operazione con la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> impostata su true e si imposta la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> su <xref:System.ServiceModel.ConcurrencyMode.Reentrant>. In caso contrario, viene generata un'eccezione di convalida perché il valore predefinito della proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> è `true`.  
  
 È inoltre importante comprendere che, se il servizio viene creato passando un oggetto servizio al costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType>, il valore di questa proprietà viene trattato come fosse `false`.  
  
   
  
## Examples  
 Nell'esempio di codice seguente il livello di isolamento della transazione è impostato su <xref:System.Transactions.IsolationLevel.ReadCommitted>, viene disabilitato il supporto delle transazioni simultanee, è richiesta una transazione propagata dalla chiamata all'operazione e viene eseguito automaticamente il commit della transazione sul servizio se non si verificano eccezioni non gestite.  
  
 [!code-csharp[SBA.Transactions#2](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/services.cs#2)]
 [!code-vb[SBA.Transactions#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/sba.transactions/vb/services.vb#2)]  
  
 Affinché l'esempio di codice seguente venga eseguito correttamente, è necessario che l'associazione sottostante supporti le transazioni propagate. Per supportare le transazioni propagate utilizzando l'associazione <xref:System.ServiceModel.WSHttpBinding>, ad esempio, impostare la proprietà <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> su `true` nel codice o in un file di configurazione dell'applicazione. Nell'esempio di codice seguente viene illustrato un file di configurazione per l'esempio precedente.  
  
 [!code-xml[SBA.Transactions#1](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWellKnownSingleton">
      <MemberSignature Language="C#" Value="public void SetWellKnownSingleton (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWellKnownSingleton(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWellKnownSingleton (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWellKnownSingleton(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetWellKnownSingleton : obj -&gt; unit" Usage="serviceBehaviorAttribute.SetWellKnownSingleton value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Istanza singleton del servizio.</param>
        <summary>Specifica un oggetto che implementa il servizio e che viene utilizzato come l'istanza singleton del servizio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fornisce l'istanza del servizio alla quale verranno inviati tutti i messaggi indirizzati al servizio.  
  
 Se il metodo <xref:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton%2A> è impostato su un valore diverso da `null`, la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> deve essere impostata su <xref:System.ServiceModel.InstanceContextMode.Single>; in caso contrario viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore impostato è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeConfigurationName">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeConfigurationName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeConfigurationName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeConfigurationName () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeConfigurationName();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeConfigurationName : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeConfigurationName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se la proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> è cambiata rispetto al valore predefinito e deve essere serializzata.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReleaseServiceInstanceOnTransactionComplete">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReleaseServiceInstanceOnTransactionComplete () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReleaseServiceInstanceOnTransactionComplete : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se la proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> è cambiata rispetto al valore predefinito e deve essere serializzata.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionAutoCompleteOnSessionClose">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionAutoCompleteOnSessionClose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionAutoCompleteOnSessionClose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionAutoCompleteOnSessionClose () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionAutoCompleteOnSessionClose();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionAutoCompleteOnSessionClose : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se la proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> è cambiata rispetto al valore predefinito e deve essere serializzata.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionIsolationLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionIsolationLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionIsolationLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionIsolationLevel();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionIsolationLevel : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se la proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> è cambiata rispetto al valore predefinito e deve essere serializzata.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionTimeout">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionTimeout () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionTimeout();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionTimeout : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeTransactionTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se la proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> è cambiata rispetto al valore predefinito e deve essere serializzata.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione del servizio.</param>
        <param name="serviceHostBase">Host del servizio.</param>
        <param name="endpoints">Gli endpoint del servizio.</param>
        <param name="parameters">Oggetti dati necessari alle associazioni per supportare il comportamento.</param>
        <summary>Passa gli oggetti dati personalizzati alle associazioni che supportano le proprietà di comportamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione del servizio.</param>
        <param name="serviceHostBase">Host del servizio.</param>
        <summary>Personalizza il runtime del servizio per supportare le proprietà di comportamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione del servizio.</param>
        <param name="serviceHostBase">Host del servizio.</param>
        <summary>Conferma che la descrizione e l'host del servizio sono in grado di supportare il comportamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoCompleteOnSessionClose">
      <MemberSignature Language="C#" Value="public bool TransactionAutoCompleteOnSessionClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoCompleteOnSessionClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoCompleteOnSessionClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoCompleteOnSessionClose : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se completare automaticamente le transazioni in sospeso alla chiusura senza errori della sessione corrente.</summary>
        <value>
          <see langword="true" /> se le transazioni in sospeso devono essere completate alla chiusura senza errori della sessione corrente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel TransactionIsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionIsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel TransactionIsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionIsolationLevel : System.Transactions.IsolationLevel with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il livello di isolamento per le nuove transazioni create all'interno del servizio e per le transazioni in ingresso propagate da un client.</summary>
        <value>Valore dell'enumerazione <see cref="T:System.Transactions.IsolationLevel" /> che specifica il livello di isolamento della transazione. Il valore predefinito è <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il livello di isolamento nel quale viene eseguita la transazione determina le modalità di trattamento dei dati nel caso in cui vengano apportate modifiche in altre transazioni e per quanto tempo la transazione deve mantenere i blocchi per proteggersi da tali modifiche. Ad esempio, il valore predefinito, <xref:System.Transactions.IsolationLevel.Unspecified>, specifica che non può avvenire alcun aggiornamento o inserimento fino a quando la transazione non è completata.  
  
 Questa proprietà può inoltre essere utilizzata per limitare il livello di isolamento delle transazioni in ingresso propagate da un client.  
  
   
  
## Examples  
 Nell'esempio di codice seguente il livello di isolamento della transazione è impostato su <xref:System.Transactions.IsolationLevel.ReadCommitted>, non sono supportate le transazioni simultanee, è richiesta una transazione propagata dalla chiamata al metodo e viene eseguito automaticamente il commit della transazione se non si verificano eccezioni non gestite.  
  
 [!code-csharp[SBA.Transactions#2](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/services.cs#2)]
 [!code-vb[SBA.Transactions#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/sba.transactions/vb/services.vb#2)]  
  
 Affinché l'esempio di codice seguente venga eseguito correttamente, è necessario che l'associazione sottostante supporti le transazioni propagate. Per supportare le transazioni propagate utilizzando l'associazione <xref:System.ServiceModel.WSHttpBinding>, ad esempio, impostare la proprietà <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> su `true` nel codice o in un file di configurazione dell'applicazione. Nell'esempio di codice seguente viene illustrato un file di configurazione per l'esempio precedente.  
  
 [!code-xml[SBA.Transactions#1](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore non appartiene all'enumerazione <see cref="T:System.Transactions.IsolationLevel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionTimeout">
      <MemberSignature Language="C#" Value="public string TransactionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionTimeout As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionTimeout { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionTimeout : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il periodo di tempo entro il quale deve essere completata una transazione.</summary>
        <value>Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il periodo di tempo entro il quale le transazioni devono essere completate o interrotte automaticamente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore imposta la proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=nameWithType>. È anche possibile impostare tale proprietà utilizzando il [ &lt;serviceTimeouts&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicetimeouts.md) elemento in un file di configurazione dell'applicazione.  
  
   
  
## Examples  
 Nel file di configurazione seguente viene specificato un periodo di timeout della transazione di tre minuti.  
  
 [!code-csharp[SBA.TransactionTimeout#2](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactiontimeout/cs/services.cs#2)]
 [!code-vb[SBA.TransactionTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/sba.transactiontimeout/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore è minore di <see cref="F:System.TimeSpan.Zero" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseSynchronizationContext">
      <MemberSignature Language="C#" Value="public bool UseSynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSynchronizationContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSynchronizationContext { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSynchronizationContext : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se utilizzare il contesto di sincronizzazione corrente per scegliere il thread di esecuzione.</summary>
        <value>
          <see langword="true" /> se tutte le chiamate al servizio devono essere eseguite sul thread specificato da <see cref="T:System.Threading.SynchronizationContext" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per fornire l'affinità di thread dell'interfaccia utente richiesta da alcune applicazioni. Ad esempio, è possibile che un'applicazione Windows Form sia registrata come oggetto servizio singleton. In questo caso, tutte le chiamate nel servizio devono essere eseguite sul thread di Windows Form. Nel caso predefinito, ovvero quando la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> è impostata su `true`, tutte le chiamate al servizio vengono sincronizzate per essere eseguite sul thread acquisito dalla classe <xref:System.Threading.SynchronizationContext?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMustUnderstand">
      <MemberSignature Language="C#" Value="public bool ValidateMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateMustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateMustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateMustUnderstand : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se il sistema o l'applicazione applica l'elaborazione dell'intestazione <see langword="MustUnderstand" /> SOAP.</summary>
        <value>
          <see langword="true" /> se il sistema deve eseguire l'elaborazione dell'intestazione <see langword="MustUnderstand" /> SOAP. In caso contrario <see langword="false" />, che indica che l'applicazione esegue questa elaborazione. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> per disattivare la convalida obbligatoria delle intestazioni dei messaggi in entrata. In condizioni normali, le intestazioni dei messaggi vengono confrontate con la proprietà <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> per verificare che le intestazioni in entrata vengano gestite in modo esplicito dal servizio. Impostare questa proprietà su `false` per disabilitare questo controllo. Se viene impostata su `false`, l'applicazione deve controllare le intestazioni contrassegnate con MustUnderstand = "true" e restituire un errore se una o più intestazioni non vengono riconosciute. Questo sistema è utile quando l'applicazione deve accettare tutti i messaggi SOAP in ingresso (ad esempio, in caso di messaggi tipizzati o non tipizzati) ed eseguire l'elaborazione dell'intestazione personalizzata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>