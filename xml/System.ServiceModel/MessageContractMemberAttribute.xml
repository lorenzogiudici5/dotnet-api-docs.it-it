<Type Name="MessageContractMemberAttribute" FullName="System.ServiceModel.MessageContractMemberAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b486b8979cc884c2f86e40e8d80c647fc6c4dce" />
    <Meta Name="ms.sourcegitcommit" Value="eccec77340eb3a642e6ad8d4fa59099403a695b6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/29/2018" />
    <Meta Name="ms.locfileid" Value="43179279" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageContractMemberAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageContractMemberAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageContractMemberAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageContractMemberAttribute abstract : Attribute" />
  <TypeSignature Language="F#" Value="type MessageContractMemberAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5e83f-101">Consente di dichiarare i membri di base degli attributi <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> e <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e83f-101">Declares the base members for <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> and <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e83f-102">Questa classe contiene proprietà comuni a tutte le parti di un messaggio SOAP.</span><span class="sxs-lookup"><span data-stu-id="5e83f-102">This class contains properties common to all parts of a SOAP message.</span></span> <span data-ttu-id="5e83f-103">Ad esempio, tutte le parti presentano un nome e uno spazio dei nomi nonché un eventuale livello di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="5e83f-103">For example, all parts have a name and a namespace, and potentially a level of security applied.</span></span>  
  
 <span data-ttu-id="5e83f-104">Per informazioni su come controllare la serializzazione del contenuto di un corpo SOAP senza modificare la SOAP envelope predefinita, vedere <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), e [uso di dati I contratti](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="5e83f-104">For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), and [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="5e83f-105">Per altre informazioni sulla creazione di contratti di messaggio, vedere [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="5e83f-105">For more information about creating message contracts, see [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e83f-106">Gli esempi di codice seguente viene mostrato un contratto di messaggio personalizzato che usa il <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, e <xref:System.ServiceModel.MessageBodyMemberAttribute> attributi (ognuno dei quali eredita da <xref:System.ServiceModel.MessageContractMemberAttribute>) per creare messaggi tipizzati personalizzati da usare nelle operazioni.</span><span class="sxs-lookup"><span data-stu-id="5e83f-106">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="5e83f-107">In questo caso vi sono tre membri serializzati nell'elemento del corpo del messaggio SOAP: `sourceAccount`, `targetAccount` e il valore `amount`, che viene serializzato in un elemento denominato `transactionAmount`.</span><span class="sxs-lookup"><span data-stu-id="5e83f-107">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="5e83f-108">Inoltre, l'elemento dell'intestazione SOAP `IsAudited` risiede nello spazio dei nomi `http://schemas.contosobank.com/auditing/2005` e l'elemento `sourceAccount` è crittografato e protetto con firma digitale.</span><span class="sxs-lookup"><span data-stu-id="5e83f-108">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e83f-109">I tipi `Operation` e `Account` devono presentare un contratto dati.</span><span class="sxs-lookup"><span data-stu-id="5e83f-109">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader]   
  public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")]   
  public bool IsAudited;  
  [MessageBody(ProtectionLevel=ProtectionLevel.EncryptAndSign)]   
  public Account sourceAccount;  
  [MessageBody]   
  public Account targetAccount;  
  [MessageBody(Name="transactionAmount")]   
  public int amount;  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageContractMemberAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageContractMemberAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageContractMemberAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e83f-110">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-110">Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e83f-111">Quando viene sottoposto a override in una classe derivata, consente di ottenere un valore che indica se al membro è stato assegnato un livello di protezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-111">When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e83f-112">
            <see langword="true" /> se al membro è stato assegnato un livello di protezione. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-112">
              <see langword="true" /> if the member has a protection level; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e83f-113">Specifica il nome dell'elemento che corrisponde a questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-113">Specifies the name of the element that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e83f-114">Nome dell'elemento che corrisponde a questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-114">The name of the element that corresponds to this member.</span>
          </span>
          <span data-ttu-id="5e83f-115">Questa stringa deve essere un nome di elemento XML valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-115">This string must be a valid XML element name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5e83f-116">Negli esempi di codice seguenti viene mostrato un contratto di messaggio personalizzato che utilizza gli attributi <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute> e <xref:System.ServiceModel.MessageBodyMemberAttribute> per creare messaggi personalizzati e fortemente tipizzati da utilizzare come parametri.</span><span class="sxs-lookup"><span data-stu-id="5e83f-116">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes to create custom, strongly-typed messages to use as parameters.</span></span> <span data-ttu-id="5e83f-117">In questo caso vi sono tre membri di dati serializzati nell'elemento del corpo del messaggio SOAP: `sourceAccount`, `targetAccount` e il valore `amount`, che viene serializzato in un elemento denominato `transactionAmount`.</span><span class="sxs-lookup"><span data-stu-id="5e83f-117">In this case, there are three data members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="5e83f-118">Inoltre, l'elemento dell'intestazione SOAP `IsAudited` risiede nello spazio dei nomi `http://schemas.contosobank.com/auditing/2005`.</span><span class="sxs-lookup"><span data-stu-id="5e83f-118">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e83f-119">Infine, i tipi `Operation` e `Account` devono presentare un contratto dati.</span><span class="sxs-lookup"><span data-stu-id="5e83f-119">The `Operation` and `Account` types must also have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e83f-120">Specifica lo spazio dei nomi dell'elemento che corrisponde a questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-120">Specifies the namespace of the element that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e83f-121">URI dello spazio dei nomi dell'elemento che corrisponde a questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-121">A namespace URI of the element that corresponds to this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5e83f-122">Gli esempi di codice seguente viene mostrato un contratto di messaggio personalizzato che usa il <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, e <xref:System.ServiceModel.MessageBodyMemberAttribute> attributi (ognuno dei quali eredita da <xref:System.ServiceModel.MessageContractMemberAttribute>) per creare messaggi tipizzati personalizzati da usare nelle operazioni.</span><span class="sxs-lookup"><span data-stu-id="5e83f-122">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="5e83f-123">In questo caso vi sono tre membri serializzati nell'elemento del corpo del messaggio SOAP: `sourceAccount`, `targetAccount` e il valore `amount`, che viene serializzato in un elemento denominato `transactionAmount`.</span><span class="sxs-lookup"><span data-stu-id="5e83f-123">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="5e83f-124">Inoltre, l'elemento dell'intestazione SOAP `IsAudited` risiede nello spazio dei nomi `http://schemas.contosobank.com/auditing/2005` e l'elemento `sourceAccount` è crittografato e protetto con firma digitale.</span><span class="sxs-lookup"><span data-stu-id="5e83f-124">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e83f-125">I tipi `Operation` e `Account` devono presentare un contratto dati.</span><span class="sxs-lookup"><span data-stu-id="5e83f-125">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e83f-126">Specifica se il membro deve essere trasmesso senza alcuna protezione, solo firmato oppure firmato e crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-126">Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e83f-127">Uno dei valori di <see cref="T:System.Net.Security.ProtectionLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-127">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span>
          </span>
          <span data-ttu-id="5e83f-128">Il valore predefinito è <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e83f-128">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e83f-129">Per utilizzare la proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> nell' attributo <xref:System.ServiceModel.MessageHeaderAttribute> o nell'attributo <xref:System.ServiceModel.MessageBodyMemberAttribute> è necessario configurare correttamente l'associazione e i comportamenti.</span><span class="sxs-lookup"><span data-stu-id="5e83f-129">To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors.</span></span> <span data-ttu-id="5e83f-130">Se queste funzionalità di sicurezza vengono utilizzate senza essere state configurate correttamente (ad esempio, se si utilizza il valore <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> in una parte del messaggio senza fornire credenziali di sicurezza), il sistema genera un'eccezione in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="5e83f-130">If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> with a message part without supplying security credentials) an exception is thrown at run time.</span></span>  
  
 <span data-ttu-id="5e83f-131">Inoltre, il livello di protezione è determinato in modo specifico per ogni intestazione.</span><span class="sxs-lookup"><span data-stu-id="5e83f-131">In addition, the protection level is determined for each header individually.</span></span> <span data-ttu-id="5e83f-132">Tuttavia, il corpo SOAP presenta un solo livello di protezione, indipendentemente dal numero di parti del corpo.</span><span class="sxs-lookup"><span data-stu-id="5e83f-132">However, the SOAP body has only one protection level, regardless of the number of body parts.</span></span> <span data-ttu-id="5e83f-133">Il livello di protezione del corpo è determinato in base al valore della proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> più elevato fra tutte le parti del corpo.</span><span class="sxs-lookup"><span data-stu-id="5e83f-133">The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts.</span></span> <span data-ttu-id="5e83f-134">Si consideri ad esempio la classe seguente:</span><span class="sxs-lookup"><span data-stu-id="5e83f-134">For example, consider the following class:</span></span>  
  
```csharp  
[MessageContract]  
public class PatientRecord  
{  
   [MessageHeader(ProtectionLevel=None)] public int recordID;  
   [MessageHeader(ProtectionLevel=Sign)] public string patientName;  
   [MessageHeader(ProtectionLevel=EncryptAndSign)] public string SSN;  
   [MessageBody(ProtectionLevel=None)] public string comments;  
   [MessageBody(ProtectionLevel=Sign)] public string diagnosis;  
   [MessageBody(ProtectionLevel=EncryptAndSign)] public string medicalHistory;  
}  
```  
  
 <span data-ttu-id="5e83f-135">In questo esempio, l'intestazione `recordID` non è protetta, la parte `patientName` è firmata e la parte `SSN` è crittografata e firmata.</span><span class="sxs-lookup"><span data-stu-id="5e83f-135">In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed.</span></span> <span data-ttu-id="5e83f-136">È presente almeno una parte del corpo, ovvero `medicalHistory`, per cui è stato impostato il livello <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>. Di conseguenza, anche se le parti del corpo `comments` e `diagnosis` presentano livelli di protezione inferiori, l'intero corpo del messaggio è crittografato e firmato.</span><span class="sxs-lookup"><span data-stu-id="5e83f-136">There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels.</span></span>  
  
 <span data-ttu-id="5e83f-137">Il comportamento della protezione in fase di esecuzione deriva dall'unione dei valori a livello di sicurezza su cui sono impostate le proprietà elencate di seguito.</span><span class="sxs-lookup"><span data-stu-id="5e83f-137">The protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="5e83f-138">Queste proprietà presentano una struttura gerarchica.</span><span class="sxs-lookup"><span data-stu-id="5e83f-138">These properties have a hierarchical structure.</span></span> <span data-ttu-id="5e83f-139">La configurazione del valore esterno determina l'impostazione predefinita per tutti gli ambiti più ristretti a meno che non venga impostato esplicitamente un valore diverso per un ambito più ristretto.</span><span class="sxs-lookup"><span data-stu-id="5e83f-139">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="5e83f-140">In questo caso, il valore esterno rimane l'impostazione predefinita per tutti gli ambiti più ristretti, ad eccezione di quello impostato in modo specifico.</span><span class="sxs-lookup"><span data-stu-id="5e83f-140">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="5e83f-141">Ad esempio, se la proprietà <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> e nessuno degli altri ambiti più ristretti presenta impostazioni riguardanti il livello di protezione, tutti i messaggi di un contratto dell'operazione vengono crittografati e firmati.</span><span class="sxs-lookup"><span data-stu-id="5e83f-141">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="5e83f-142">Se tuttavia per una di queste operazioni la proprietà <xref:System.ServiceModel.OperationContractAttribute> è impostata su <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, i messaggi di tale operazione vengono firmati. Tutti gli altri messaggi del contratto vengono invece crittografati e firmati.</span><span class="sxs-lookup"><span data-stu-id="5e83f-142">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="5e83f-143">Per informazioni dettagliate sui livelli di protezione e relativi presupposti e gli ambiti, vedere [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="5e83f-143">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="5e83f-144">Gli ambiti di impostazione di questi valori sono:</span><span class="sxs-lookup"><span data-stu-id="5e83f-144">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="5e83f-145">La proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e83f-145">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5e83f-146">La proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e83f-146">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5e83f-147">Quando nel contratto non è stato specificato in modo esplicito alcun livello di protezione e l'associazione sottostante supporta la sicurezza (sia essa a livello di trasporto o di messaggio), il livello di protezione effettivo dell'intero contratto è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e83f-147">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e83f-148">Se l'associazione non supporta la sicurezza (ad esempio <xref:System.ServiceModel.BasicHttpBinding>), il livello di sicurezza <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> effettivo è <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> per l'intero contratto.</span><span class="sxs-lookup"><span data-stu-id="5e83f-148">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="5e83f-149">Ne consegue che a seconda dell'associazione dell'endpoint i client possono richiedere un sistema diverso di protezione a livello di messaggio o di trasporto anche se il contratto prevede il livello di sicurezza <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e83f-149">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>