<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75386b1415afc28f87a36c0beb232d9411091574" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317282" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica il comportamento di esecuzione locale di un metodo di un servizio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare l'attributo <xref:System.ServiceModel.OperationBehaviorAttribute> per indicare il comportamento specifico che l'operazione deve avere durante l'esecuzione. Per specificare il comportamento di esecuzione a livello di servizio, utilizzare l'attributo <xref:System.ServiceModel.ServiceBehaviorAttribute>.  
  
> [!NOTE]
>  L'attributo <xref:System.ServiceModel.OperationBehaviorAttribute> può essere inoltre utilizzato per configurare un'operazione di un contratto di callback in un'applicazione client duplex. Se viene utilizzato in un'operazione di callback, la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> deve essere <xref:System.ServiceModel.ReleaseInstanceMode.None>; in caso contrario verrà generata un'eccezione <xref:System.InvalidOperationException> in fase di esecuzione.  
  
 Il <xref:System.ServiceModel.OperationBehaviorAttribute> attributo è una funzionalità del modello di programmazione Windows Communication Foundation (WCF) che abilita funzionalità comuni che essere implementate dagli sviluppatori in caso contrario.  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> controlla se gli oggetti parametro passati a un'operazione vengono eliminati al termine dell'operazione.  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> specifica se viene eseguito automaticamente il commit della transazione in cui viene eseguito il metodo se non si verificano eccezioni non gestite.  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> specifica se un metodo deve essere eseguito all'interno di una transazione.  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> specifica se l'operazione del servizio può, non può o deve rappresentare l'identità del chiamante.  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> specifica quando riciclare oggetti servizio durante il processo di chiamata del metodo.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrata un'operazione eseguita all'interno di una transazione distribuita obbligatoria. La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> indica che il metodo viene eseguito nella transazione del chiamante, mentre la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> indica che, se non si verificano eccezioni non gestite, viene eseguito automaticamente il commit della transazione. Se si verifica un'eccezione non gestita, la transazione viene interrotta.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore predefinito crea un'istanza della classe con i valori predefiniti seguenti:  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> è `true`.  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> è `false`.  
  
-   La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> è <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
-   L'elemento <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> è <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta se i parametri devono essere eliminati automaticamente.</summary>
        <value>
          <see langword="true" /> se i parametri devono essere eliminati automaticamente. In caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà determina se il servizio elimina tutti i parametri eliminabili (di input, di output o per riferimento) creati durante l'elaborazione di un messaggio. Il valore predefinito è `true`. Impostare questa proprietà su `false` per evitare che il sistema elimini risorse e, se necessario, per memorizzarle nella cache.  
  
 Ad esempio, se <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> è `false`, il mittente è responsabile della chiusura del flusso sul lato di invio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica il livello di rappresentazione del chiamante supportato dall'operazione.</summary>
        <value>Uno dei valori di <see cref="T:System.ServiceModel.ImpersonationOption" />. Il valore predefinito è <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> (insieme con una configurazione di associazione che supporta la rappresentazione) per consentire a metodi specificati (quelli contrassegnati con la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> impostata su <xref:System.ServiceModel.ImpersonationOption.Allowed> o <xref:System.ServiceModel.ImpersonationOption.Required>) l'esecuzione con l'identità del chiamante. Per informazioni dettagliate, incluso come viene eseguita la rappresentazione quando si utilizza <xref:System.ServiceModel.ImpersonationOption.Allowed> insieme al <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> proprietà, vedere [delega e rappresentazione](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) e [procedura: rappresentare un Client in un servizio](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).  
  
> [!NOTE]
>  Quando si aggiunge a livello di codice un endpoint di servizio che esegue la rappresentazione, è necessario utilizzare uno dei metodi <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> o il metodo <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> per caricare correttamente il contratto in un nuovo oggetto <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>. Se si utilizza un file di configurazione, non sono necessari passaggi aggiuntivi.  
  
 In alcuni scenari specifici la rappresentazione non è supportata. Per altre informazioni, vedere [scenari non supportati](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).  
  
   
  
## Examples  
 Nell'esempio di codice seguente la rappresentazione viene richiesta impostando la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> su <xref:System.ServiceModel.ImpersonationOption.Required>.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 Nell'esempio di codice seguente viene illustrato l'utilizzo della proprietà <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> per impostare le credenziali dell'applicazione client prima di richiamare l'operazione che necessita di tali credenziali per la rappresentazione.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica quando riciclare l'oggetto servizio nel corso della chiamata a un'operazione.</summary>
        <value>Uno dei valori di <see cref="T:System.ServiceModel.ReleaseInstanceMode" />. Il valore predefinito è <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> proprietà per specificare quando Windows Communication Foundation (WCF) ricicla un oggetto servizio durante l'esecuzione di un metodo. Il comportamento predefinito è riciclare un oggetto servizio in base al valore della proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>. L'impostazione della proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> modifica tale comportamento predefinito.  
  
 La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> non fornisce alcuna garanzia di threading. Se è necessario disporre di un oggetto nuovo non modificato quando il servizio viene eseguito, impostare la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> su <xref:System.ServiceModel.InstanceContextMode.PerCall>.  
  
 Negli scenari di transazione, la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> viene spesso utilizzata per garantire la pulitura dei dati non aggiornati associati all'oggetto servizio prima di elaborare una chiamata a un metodo. È inoltre possibile garantire che gli oggetti servizio associati a transazioni vengano riciclati al termine della transazione impostando la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> su `true`.  
  
 È possibile scegliere i comportamenti seguenti:  
  
-   Riciclo di un oggetto servizio prima della chiamata di un'operazione.  
  
-   Riciclo di un oggetto servizio dopo la chiamata di un'operazione.  
  
-   Riciclo di un oggetto servizio prima e dopo la chiamata di un'operazione.  
  
-   Nessun comportamento di riciclo.  
  
 L'attributo <xref:System.ServiceModel.OperationBehaviorAttribute> può essere inoltre utilizzato per configurare un'operazione di un contratto di callback in un'applicazione client duplex. Se viene utilizzato in un'operazione di callback, la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> deve essere <xref:System.ServiceModel.ReleaseInstanceMode.None>; in caso contrario verrà generata un'eccezione <xref:System.InvalidOperationException> in fase di esecuzione.  
  
 È inoltre importante comprendere che, se il servizio viene creato passando un oggetto servizio al costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType>, il valore di questa proprietà viene trattato come fosse <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene mostrato come utilizzare l'oggetto <xref:System.ServiceModel.ReleaseInstanceMode> per riciclare gli oggetti servizio sia prima sia dopo una chiamata.  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore non appartiene all'enumerazione <see cref="T:System.ServiceModel.ReleaseInstanceMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione dell'operazione modificata per supportare le proprietà <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="parameters">Parametri di associazione passati per supportare i comportamenti di associazione.</param>
        <summary>Implementa il metodo <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione dell'operazione modificata per supportare le proprietà <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="proxy">Punto di estendibilità per inserire modifiche client personalizzate per questa operazione.</param>
        <summary>Implementa il comportamento dell'operazione client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione dell'operazione modificata per supportare le proprietà <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="dispatch">Punto di estensibilità per inserire modifiche di servizio personalizzate per questa operazione.</param>
        <summary>Implementa il comportamento dell'operazione del servizio.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione dell'operazione da convalidare.</param>
        <summary>Implementa il comportamento di convalida.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se completare automaticamente l'ambito di transazione corrente se non si verifica alcuna eccezione non gestita.</summary>
        <value>
          <see langword="true" /> per completare automaticamente l'ambito di transazione in caso di esecuzione dell'operazione senza errori; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> su `false` per completare o interrompere le transazioni direttamente nel codice per la proprietà.  
  
 È possibile che durante l'operazione vengano generate eccezioni gestite senza che la transazione venga automaticamente interrotta. Solo le eccezioni non gestite generano un'interruzione automatica.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrata un'operazione eseguita all'interno di una transazione distribuita obbligatoria. La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> indica che l'operazione viene eseguita nell'ambito di transazione, mentre la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> indica che, se non si verificano eccezioni non gestite, l'ambito di transazione viene completato automaticamente. Se si verifica un'eccezione non gestita, la transazione viene interrotta.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se per l'esecuzione del metodo è necessario un ambito di transazione.</summary>
        <value>
          <see langword="true" /> se per l'esecuzione del metodo è necessario un ambito di transazione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> su `true` per richiedere che l'operazione sia eseguita all'interno di un ambito di transazione. Se è disponibile una transazione propagata, l'operazione viene eseguita all'interno di tale transazione. In caso contrario, per l'esecuzione dell'operazione viene creata e utilizzata una nuova transazione. L'associazione specificata nell'endpoint controlla se sono supportate le transazioni propagate. Per ottenere il comportamento corretto, è pertanto necessario comprendere l'interazione tra la propagazione transazionale eventualmente consentita dall'associazione e la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>. Nella tabella seguente vengono illustrati i possibili comportamenti.  
  
|TransactionScopeRequired|L'associazione consente la propagazione transazionale|Il chiamante propaga la transazione|Risultato|  
|-|-|-|-|  
|False|False|No|Il metodo viene eseguito senza una transazione.|  
|True|False|No|Il metodo crea e viene eseguito all'interno di una nuova transazione.|  
|True o false.|False|Yes|Viene restituito un errore SOAP per l'intestazione della transazione.|  
|False|True|Yes|Il metodo viene eseguito senza una transazione.|  
|True|True|Yes|Il metodo viene eseguito nella transazione propagata.|  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrata un'operazione eseguita all'interno di una transazione distribuita obbligatoria. La proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> indica che l'operazione viene eseguita nell'ambito di transazione, mentre la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> indica che, se non si verificano eccezioni non gestite, l'ambito di transazione viene completato automaticamente. Se si verifica un'eccezione non gestita, la transazione viene interrotta.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>