<Type Name="ServiceContractAttribute" FullName="System.ServiceModel.ServiceContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc7da9c7d356483570677d227277a7a50b6d8755" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48775690" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ServiceContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica che un'interfaccia o una classe definisce un contratto di servizio in un'applicazione Windows Communication Foundation (WCF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare l'attributo <xref:System.ServiceModel.ServiceContractAttribute> su un'interfaccia (o su una classe) per definire un contratto di servizio. Utilizzare quindi l'attributo <xref:System.ServiceModel.OperationContractAttribute> in uno o più metodi della classe (o dell'interfaccia) per definire le operazioni di servizio del contratto. Quando il contratto di servizio viene implementato e combinato con un [associazioni](~/docs/framework/wcf/bindings.md) e un <xref:System.ServiceModel.EndpointAddress> dell'oggetto, il contratto di servizio viene esposta per l'uso da parte dei client. Per una panoramica del processo su esempi semplici, vedere [esercitazione introduttiva](~/docs/framework/wcf/getting-started-tutorial.md). Per altre informazioni sulla creazione di contratti di servizio, vedere [progettazione e implementazione di servizi](~/docs/framework/wcf/designing-and-implementing-services.md).  
  
 Le informazioni espresse da un attributo <xref:System.ServiceModel.ServiceContractAttribute> e dalla relativa interfaccia presentano una correlazione ridotta con l'elemento `<portType>` del linguaggio WSDL (Web Services Description Language). I contratti di servizio vengono utilizzati sul lato server per specificare gli elementi che l'endpoint di servizio espone ai chiamanti. I contratti di servizio vengono inoltre utilizzati sul lato client per specificare il contratto dell'endpoint con cui il client comunica e, se tale contratto è duplex, per specificare (mediante la proprietà <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>) il contratto di callback che il client deve implementare per poter partecipare a una conversazione duplex.  
  
> [!NOTE]
>  Un'interfaccia o una classe decorata con l'attributo <xref:System.ServiceModel.ServiceContractAttribute> deve inoltre presentare almeno un metodo contrassegnato con l'attributo <xref:System.ServiceModel.OperationContractAttribute> per esporre le proprie funzionalità. Nella sezione degli esempi è disponibile un esempio di codice che descrive una procedura semplicissima per definire e implementare un servizio tramite questi due attributi.  
  
 Utilizzare le proprietà dell'attributo <xref:System.ServiceModel.ServiceContractAttribute> per modificare il contratto di servizio.  
  
-   La proprietà <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> specifica il nome dell'elemento di servizio da utilizzare fra quelli contenuti nel file di configurazione.  
  
-   Le proprietà <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> e <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> controllano il nome e lo spazio dei nomi del contratto nell'elemento `<portType>` del linguaggio WSDL.  
  
-   La proprietà <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> specifica se il contratto richiede un'associazione che supporta le sessioni.  
  
-   La proprietà <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> specifica il contratto di callback in una conversazione bidirezionale (duplex).  
  
-   Le proprietà <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> e <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> indicano se la proprietà <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> è stata definita in modo esplicito per tutti i messaggi che supportano il contratto e, in tal caso, il valore impostato per questa proprietà.  
  
 I servizi implementano i contratti di servizio, che rappresentano lo scambio di dati supportato da un tipo di servizio. Una classe di servizio può implementare un contratto di servizio mediante l'implementazione di un'interfaccia contrassegnata con l'attributo <xref:System.ServiceModel.ServiceContractAttribute> e che presenta metodi contrassegnati con l'attributo <xref:System.ServiceModel.OperationContractAttribute>. In alternativa, una classe di servizio può essere contrassegnata con l'attributo <xref:System.ServiceModel.ServiceContractAttribute> e applicare l'attributo <xref:System.ServiceModel.OperationContractAttribute> ai propri metodi. Le classi che implementano un'interfaccia contrassegnata con l'attributo <xref:System.ServiceModel.ServiceContractAttribute> non possono essere contrassegnate con l'attributo <xref:System.ServiceModel.ServiceContractAttribute>. I metodi applicabili ai tipi di servizio contrassegnati con l'attributo <xref:System.ServiceModel.OperationContractAttribute> sono trattati come parte di un contratto di servizio predefinito specificato dal tipo di servizio stesso. Per informazioni dettagliate sulle operazioni di servizio, vedere <xref:System.ServiceModel.OperationContractAttribute>.  
  
 Per impostazione predefinita, le proprietà <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> e <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> corrispondono rispettivamente al nome del tipo di contratto e allo spazio dei nomi `http://tempuri.org` e la proprietà <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> è impostata su <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>. È consigliabile utilizzare queste proprietà per impostare in modo esplicito i nomi, gli spazi dei nomi e i livelli di protezione dei contratti di servizio. Ciò consente di raggiungere due obiettivi. Il primo è che il contratto compilato con queste proprietà non è connesso direttamente alle informazioni sui tipi gestiti, il che consente di eseguire il refactoring del codice e degli spazi dei nomi gestiti senza violare il contratto secondo quanto espresso in WSDL. Il secondo è che la richiesta esplicita di un certo livello di protezione all'interno del contratto stesso consente di verificare in fase di esecuzione se la configurazione dell'associazione supporta tale livello di sicurezza. Ciò consente di evitare la divulgazione di informazioni riservate a causa di una configurazione inappropriata. Per altre informazioni sui livelli di protezione, vedere [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  
  
 Per esporre un servizio per l'utilizzo dalle applicazioni client, creare un'applicazione host per registrare l'endpoint di servizio con Windows Communication Foundation (WCF). È possibile ospitare servizi WCF mediante Windows Activation Services (WAS), in applicazioni console, applicazioni di servizio di Windows, le applicazioni ASP.NET, applicazioni Windows Forms o qualsiasi altro tipo di dominio dell'applicazione.  
  
 L'hosting in WAS è molto simile alla creazione di un'applicazione ASP.NET. Per informazioni dettagliate, vedere [procedura: ospitare un servizio WCF in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md).  
  
 I client utilizzano l'interfaccia del contratto di servizio (ovvero l'interfaccia contrassegnata con l'attributo <xref:System.ServiceModel.ServiceContractAttribute>) per creare un canale connesso al servizio oppure utilizzano gli oggetti client (che combinano le informazioni sui tipi dell'interfaccia del contratto di servizio con la classe <xref:System.ServiceModel.ClientBase%601> ) per comunicare con il servizio. Per informazioni dettagliate sui canali client ai servizi, vedere la <xref:System.ServiceModel.ChannelFactory%601> classe e [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md).  
  
 L'utilizzo di una classe o di un'interfaccia <xref:System.ServiceModel.ServiceContractAttribute> per ereditare da un'altra classe o interfaccia <xref:System.ServiceModel.ServiceContractAttribute> consente di estendere il contratto padre. Ad esempio, se un'interfaccia `IChildContract` è contrassegnata con l'attributo <xref:System.ServiceModel.ServiceContractAttribute> e ha ereditato da un'altra interfaccia di contratto di servizio, ad esempio `IParentContract`, il contratto di servizio `IChildContract` contiene sia i metodi dell'interfaccia `IParentContract` sia i metodi di dell'interfaccia `IChildContract`. L'estensione dei contratti (sia di classi sia di interfacce) è molto simile all'estensione di classi e interfacce gestite.  
  
 L'approccio più flessibile alla creazione dei servizi è definire anzitutto l'interfaccia del contratto di servizio e quindi fare in modo che la classe di servizio implementi tale interfaccia. Questo approccio è inoltre il modo più semplice per compilare i servizi se occorre implementare contratti di servizio definiti da terzi. La compilazione dei servizi in modo diretto tramite l'applicazione dell'attributo <xref:System.ServiceModel.ServiceContractAttribute> a una classe e dell'attributo <xref:System.ServiceModel.OperationContractAttribute> ai metodi di tale classe rappresenta un approccio efficace quando il servizio espone un solo contratto, che tuttavia può essere esposto da più di un endpoint.  
  
 Usare il <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> proprietà per indicare un altro contratto di servizio che, quando associato insieme al contratto di servizio originale, definisce uno scambio di messaggi che può scorrere in modo indipendente in due modi. Per informazioni dettagliate, vedere <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene mostrato come applicare l'attributo <xref:System.ServiceModel.ServiceContractAttribute> a un'interfaccia per definire un contratto di servizio avente un solo metodo di servizio, indicato dall'attributo <xref:System.ServiceModel.OperationContractAttribute>. In questo caso, il livello di protezione che le associazioni devono applicare a tutti i messaggi è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.  
  
 L'esempio di codice prevede quindi l'implementazione del suddetto contratto nella classe `SampleService`.  
  
 [!code-csharp[ServiceContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/services.cs#1)]
 [!code-vb[ServiceContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/services.vb#1)]  
  
 Nell'esempio di codice seguente viene mostrato un semplice file di configurazione del servizio precedente che crea un solo endpoint.  
  
 [!code-xml[ServiceContractAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/hostapplication.exe.config#2)]   
  
 Nell'esempio di codice seguente viene mostrato un semplice client che richiama la classe `SampleService` precedente.  
  
 [!code-csharp[ServiceContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/client.cs#3)]
 [!code-vb[ServiceContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.OperationContractAttribute" />
    <related type="Article" href="http://msdn.microsoft.com/library/036fae20-7c55-4002-b71d-ac4466e167a3">Definizione dei contratti di servizio</related>
    <related type="Article" href="http://msdn.microsoft.com/library/192be927-6be2-4fda-98f0-e513c4881acc">Hosting di un servizio</related>
    <related type="Article" href="http://msdn.microsoft.com/library/7cf21bfe-23bd-46aa-8033-609f851dbf76">Panoramica della creazione del servizio</related>
    <related type="Article" href="http://msdn.microsoft.com/library/28dfff47-d95b-4cc2-9d5c-b3b9ba71fd50">Creazione di un Client</related>
    <related type="Article" href="http://msdn.microsoft.com/library/d780af9f-73c5-42db-9e52-077a5e4de7fe">Cenni preliminari sulla creazione di proxy</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceContractAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore crea un'istanza dell'attributo senza alcun requisito di sessione né contratto di callback e utilizzando il nome e lo spazio dei nomi predefiniti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackContract">
      <MemberSignature Language="C#" Value="public Type CallbackContract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackContract { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CallbackContract : Type with get, set" Usage="System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di contratto di callback quando il contratto è duplex.</summary>
        <value>Oggetto <see cref="T:System.Type" /> che indica il contratto di callback. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specificare un'interfaccia nella proprietà <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> che rappresenta il contratto omologo necessario in un scambio di messaggi bidirezionale (o duplex). Ciò consente alle applicazioni client di restare in ascolto delle chiamate di operazioni in ingresso che l'applicazione di servizio lato server può inviare indipendentemente dall'attività dei client. I contratti di callback contenenti operazioni unidirezionali rappresentano le chiamate provenienti dal servizio che il client è in grado di gestire.  
  
> [!NOTE]
>  Nei contratti di callback l'attributo <xref:System.ServiceModel.ServiceContractAttribute> viene ignorato. Per configurare il comportamento in fase di esecuzione degli oggetti callback, utilizzare l'attributo <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene mostrato un servizio che specifica un contratto di callback in cui si indica che per un servizio di tipo `IDuplexHello` deve esistere un servizio corrispondente che implementa un servizio di tipo `IHelloCallbackContract`. Inoltre, il contratto `IHelloCallbackContract` implementa un metodo di callback unidirezionale, consentendo al servizio di chiamare il client senza dover attendere una risposta per supportare un client distribuito e basato sugli eventi.  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationName">
      <MemberSignature Language="C#" Value="public string ConfigurationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationName : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere o impostare il nome usato per individuare il servizio in un file di configurazione dell'applicazione.</summary>
        <value>Nome utilizzato per individuare l'elemento di servizio in un file di configurazione dell'applicazione. Il valore predefinito è il nome della classe di implementazione di servizio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni su come impostare il valore in base a cui il sistema di configurazione individua un valore di contratto nel file di configurazione, vedere <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se al membro è stato assegnato un livello di protezione.</summary>
        <value>
          <see langword="true" /> se la proprietà <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> non è <see cref="F:System.Net.Security.ProtectionLevel.None" />; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> indica se per il contratto è stato impostato un valore di livello di protezione diverso da `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'elemento <see langword="&lt;portType&gt;" /> in WSDL (Web Services Description Language).</summary>
        <value>Il valore predefinito è il nome della classe o dell'interfaccia a cui è applicato l'attributo <see cref="T:System.ServiceModel.ServiceContractAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare le proprietà <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> e <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> per controllare il nome e lo spazio dei nomi dell'elemento `<portType>` nel linguaggio WSDL.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene mostrato come utilizzare le proprietà <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> e <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> dell'attributo <xref:System.ServiceModel.ServiceContractAttribute> per impostare i valori corrispondenti in WSDL.  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 Esempio di codice seguente viene illustrato un client Windows Communication Foundation (WCF) per il precedente servizio WSDL importato utilizzando il [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). Anziché utilizzare un client `HelloWorldProxy` come mostrato nell'esempio riportato nella sezione degli esempi dell'attributo `SampleServiceProxy`, questo client utilizza un client <xref:System.ServiceModel.ServiceContractAttribute>.  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spazio dei nomi dell'elemento <see langword="&lt;portType&gt;" /> in WSDL (Web Services Description Language).</summary>
        <value>Spazio dei nomi WSDL dell'elemento <see langword="&lt;portType&gt;" />. Il valore predefinito è "http://tempuri.org".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice seguente viene mostrato come utilizzare le proprietà <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> e <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> dell'attributo <xref:System.ServiceModel.ServiceContractAttribute> per impostare i valori corrispondenti in WSDL.  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 Esempio di codice seguente viene illustrato un client Windows Communication Foundation (WCF) per il precedente servizio WSDL importato utilizzando il [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). Anziché utilizzare un client `HelloWorldClient` come mostrato nell'esempio riportato nella sezione degli esempi dell'attributo `SampleServiceClient`, questo client utilizza un client <xref:System.ServiceModel.ServiceContractAttribute>.  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di specificare se l'associazione del contratto deve supportare il valore della proprietà <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Net.Security.ProtectionLevel" />. Il valore predefinito è <see cref="F:System.Net.Security.ProtectionLevel.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> per specificare il livello di sicurezza (crittografia, firme digitali o entrambi) che l'associazione del contratto deve applicare agli endpoint che espongono il contratto. Il valore impostato per questa proprietà rappresenta il valore predefinito per tutti i messaggi di operazione, compresi gli errori.  
  
 È importante ricordare che il comportamento di protezione in fase di esecuzione deriva dalla combinazione dei valori relativi al livello di protezione su cui sono impostate le proprietà seguenti. Queste proprietà presentano una struttura gerarchica. La configurazione del valore esterno determina l'impostazione predefinita per tutti gli ambiti più ristretti a meno che non venga impostato esplicitamente un valore diverso per un ambito più ristretto. In questo caso, il valore esterno rimane l'impostazione predefinita per tutti gli ambiti più ristretti, ad eccezione di quello impostato in modo specifico.  
  
 Ad esempio, se la proprietà <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> e nessuno degli altri ambiti più ristretti presenta impostazioni riguardanti il livello di protezione, tutti i messaggi di un contratto dell'operazione vengono crittografati e firmati. Se tuttavia per una di queste operazioni la proprietà <xref:System.ServiceModel.OperationContractAttribute> è impostata su <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, i messaggi di tale operazione vengono firmati. Tutti gli altri messaggi del contratto vengono invece crittografati e firmati.  
  
 Per informazioni dettagliate sui livelli di protezione e relativi presupposti e gli ambiti, vedere [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  
  
 Gli ambiti di impostazione di questi valori sono:  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 La proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.  
  
 La proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> è impostata su <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.  
  
 Quando nel contratto non è stato specificato in modo esplicito alcun livello di protezione e l'associazione sottostante supporta la sicurezza (sia essa a livello di trasporto o di messaggio), il livello di protezione effettivo dell'intero contratto è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>. Se l'associazione non supporta la sicurezza (ad esempio <xref:System.ServiceModel.BasicHttpBinding>), il livello di sicurezza <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> effettivo è <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> per l'intero contratto. Ne consegue che a seconda dell'associazione dell'endpoint i client possono richiedere un sistema diverso di protezione a livello di messaggio o di trasporto anche se il contratto prevede il livello di sicurezza <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore non appartiene all'enumerazione <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.SessionMode SessionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.SessionMode SessionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionMode As SessionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::SessionMode SessionMode { System::ServiceModel::SessionMode get(); void set(System::ServiceModel::SessionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SessionMode : System.ServiceModel.SessionMode with get, set" Usage="System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere o impostare un valore che stabilisce se le sessioni sono consentite, non consentite oppure obbligatorie.</summary>
        <value>Oggetto <see cref="T:System.ServiceModel.SessionMode" /> che stabilisce se le sessioni sono consentite, non consentite oppure obbligatorie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la proprietà <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> per richiedere associazioni che supportano sessioni tra endpoint. Mediante una sessione è possibile correlare un set di messaggi scambiati tra due o più endpoint. Se il servizio supporta le sessioni di canale, è possibile utilizzare la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> per specificare la relazione tra le istanze dell'implementazione del contratto di servizio e la sessione di canale. Se un'associazione non supporta le sessioni viene generata un'eccezione.  
  
 Se ad esempio la proprietà <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> è impostata su <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType> e la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> è impostata su <xref:System.ServiceModel.InstanceContextMode.PerSession>, i client possono utilizzare la stessa connessione per eseguire chiamate ripetute allo stesso oggetto servizio.  
  
 Per altre informazioni sulle sessioni e istanze del servizio, vedere [utilizzando le sessioni](~/docs/framework/wcf/using-sessions.md) e [sessioni, relativo alle istanze e concorrenza](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).  
  
> [!NOTE]
>  Un canale che supporta le sessioni supporta l'associazione predefinita fra un'istanza di servizio e una determinata sessione. Tuttavia, oltre al controllo della creazione delle istanze basato sulle sessioni, ogni implementazione di sessione supporta funzionalità specifiche. WCF offre quattro tipi di sessioni che è possibile usare per fornire il comportamento di applicazioni con sessione. ogni tipo di sessione presenta comportamenti aggiuntivi specifici per il tipo di sessione che è.  
  
1.  L'elemento <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType> supporta sessioni di sicurezza in cui entrambi le parti di comunicazione hanno stabilito un accordo sul processo di crittografia e/o firma digitale. Tutti i messaggi sono correlati con tale conversazione protetta specifica. Per altre informazioni, vedere [Securing Services](~/docs/framework/wcf/securing-services.md). Ad esempio, l'associazione <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType>, che contiene il supporto sia per le sessioni di sicurezza sia per le sessioni affidabili, per impostazione predefinita utilizza solo una sessione protetta che esegue la crittografia e la firma digitale dei messaggi.  
  
2.  L'associazione <xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType> supporta le sessioni esposte dalle connessioni TCP/IP al fine di garantire che tutti i messaggi siano correlati in base alla sessione di connessione a livello di socket.  
  
3.  L'elemento <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>, che implementa la specifica WS-ReliableMessaging, supporta le sessioni affidabili in cui i messaggi vengono inviati in ordine ed esattamente una volta. Ciò consente di rendere affidabile l'elemento, anche quando durante la conversazione i messaggi passano per più nodi. Per altre informazioni, vedere [sessioni affidabili](~/docs/framework/wcf/feature-details/reliable-sessions.md).  
  
4.  L'associazione <xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType> fornisce sessioni di datagramma di MSMQ. Per altre informazioni, vedere [code in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md).  
  
 Ricordare che l'impostazione della proprietà <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> non specifica il tipo di sessione richiesto dal contratto ma soltanto che il contratto ne richiede una.  
  
   
  
## Examples  
 Il contratto di servizio seguente richiede che le associazioni configurate utilizzino le sessioni durante l'interazione con le implementazioni di servizio `SampleDuplexHello`.  
  
 [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]
 [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore non appartiene all'enumerazione <see cref="T:System.ServiceModel.SessionMode" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>