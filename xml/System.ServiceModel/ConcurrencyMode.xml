<Type Name="ConcurrencyMode" FullName="System.ServiceModel.ConcurrencyMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0587fcb8009be11754769f2ed4c60a6553c4d22" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConcurrencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConcurrencyMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ConcurrencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConcurrencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConcurrencyMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifica se una classe del servizio supporta modalità operative a thread singolo o multithread.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'enumerazione <xref:System.ServiceModel.ConcurrencyMode> viene utilizzata insieme alla proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> per specificare se una classe del servizio supporta modalità operative a thread singolo o multithread. Un'operazione a thread singolo può essere rientrante o non rientrante.  
  
 Nella tabella seguente viene illustrato quando Windows Communication Foundation (WCF) consente di essere richiamato mentre un altro è in corso un'operazione varia a seconda del <xref:System.ServiceModel.ConcurrencyMode>.  
  
|Valore di ConcurrencyMode|Possibilità di richiamare una nuova operazione|  
|---------------------------|-------------------------------------|  
|Single|Mai|  
|Reentrant|Solo durante la chiamata di un altro servizio o un callback|  
|Selezione multipla|Sempre|  
  
   
  
## Examples  
 Esempio di codice seguente illustrate le differenze tra l'utilizzo singolo, rientrante e più. Questo esempio non viene compilato senza un'effettiva implementazione sottostante, ma serve a illustrare il tipo del threading in modo che WCF rende e ciò significa che per il codice operativo.  
  
 [!code-csharp[C_BestPractices-Concurrency#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_bestpractices-concurrency/cs/reentrantandmultiple.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="Multiple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Multiple = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Multiple" />
      <MemberSignature Language="VB.NET" Value="Multiple" />
      <MemberSignature Language="C++ CLI" Value="Multiple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>L'istanza del servizio è multithread. Non viene resa alcuna garanzia di sincronizzazione. Poiché è possibile che altri thread modifichino l'oggetto servizio in qualsiasi momento, è necessario gestire sempre la sincronizzazione e la coerenza dello stato.</summary>
      </Docs>
    </Member>
    <Member MemberName="Reentrant">
      <MemberSignature Language="C#" Value="Reentrant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Reentrant = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Reentrant" />
      <MemberSignature Language="VB.NET" Value="Reentrant" />
      <MemberSignature Language="C++ CLI" Value="Reentrant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>L'istanza del servizio è a thread singolo e accetta chiamate rientranti. Il servizio rientrante accetta chiamate quando viene chiamato un altro servizio; è pertanto responsabilità dello sviluppatore garantire la coerenza dello stato dell'oggetto prima dei callout ed è necessario confermare che i dati locali dell'operazione siano validi dopo i callout. Si noti che l'istanza del servizio viene sbloccata solo chiamando un altro servizio su un canale WCF. In questo caso, il servizio chiamato può rientrare nel primo servizio tramite un callback. Se il primo servizio non è rientrante, la sequenza di chiamate determina un deadlock. Per informazioni dettagliate, vedere <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Single = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>L'istanza del servizio è a thread singolo e non accetta chiamate rientranti. Se la proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> è <see cref="F:System.ServiceModel.InstanceContextMode.Single" /> e giungono altri messaggi mentre l'istanza elabora una chiamata, tali messaggi restano in attesa fino a quando il servizio non diventa disponibile o fino al loro timeout.</summary>
      </Docs>
    </Member>
  </Members>
</Type>