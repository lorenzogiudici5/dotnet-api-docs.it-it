<Type Name="ConcurrencyMode" FullName="System.ServiceModel.ConcurrencyMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a1b1516b1eb9ad2e3072372fb6887da9290a394" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36411803" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConcurrencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConcurrencyMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ConcurrencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConcurrencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConcurrencyMode" />
  <TypeSignature Language="F#" Value="type ConcurrencyMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="ccbf9-101">Specifica se una classe del servizio supporta modalità operative a thread singolo o multithread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccbf9-101">Specifies whether a service class supports single-threaded or multi-threaded modes of operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccbf9-102">L'enumerazione <xref:System.ServiceModel.ConcurrencyMode> viene utilizzata insieme alla proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> per specificare se una classe del servizio supporta modalità operative a thread singolo o multithread.</span><span class="sxs-lookup"><span data-stu-id="ccbf9-102"><xref:System.ServiceModel.ConcurrencyMode> is used in conjunction with the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property to specify whether a service class supports single-threaded or multi-threaded modes of operation.</span></span> <span data-ttu-id="ccbf9-103">Un'operazione a thread singolo può essere rientrante o non rientrante.</span><span class="sxs-lookup"><span data-stu-id="ccbf9-103">A single-threaded operation can be either reentrant or non-reentrant.</span></span>  
  
 <span data-ttu-id="ccbf9-104">Nella tabella seguente viene illustrato quando Windows Communication Foundation (WCF) consente di essere richiamato mentre un altro è in corso un'operazione varia a seconda del <xref:System.ServiceModel.ConcurrencyMode>.</span><span class="sxs-lookup"><span data-stu-id="ccbf9-104">The following table shows when Windows Communication Foundation (WCF) permits an operation to be invoked while another one is in progress, depending upon the <xref:System.ServiceModel.ConcurrencyMode>.</span></span>  
  
|<span data-ttu-id="ccbf9-105">Valore di ConcurrencyMode</span><span class="sxs-lookup"><span data-stu-id="ccbf9-105">ConcurrencyMode Value</span></span>|<span data-ttu-id="ccbf9-106">Possibilità di richiamare una nuova operazione</span><span class="sxs-lookup"><span data-stu-id="ccbf9-106">Can a new operation be invoked?</span></span>|  
|---------------------------|-------------------------------------|  
|<span data-ttu-id="ccbf9-107">Single</span><span class="sxs-lookup"><span data-stu-id="ccbf9-107">Single</span></span>|<span data-ttu-id="ccbf9-108">Mai</span><span class="sxs-lookup"><span data-stu-id="ccbf9-108">Never.</span></span>|  
|<span data-ttu-id="ccbf9-109">Reentrant</span><span class="sxs-lookup"><span data-stu-id="ccbf9-109">Reentrant</span></span>|<span data-ttu-id="ccbf9-110">Solo durante la chiamata di un altro servizio o un callback</span><span class="sxs-lookup"><span data-stu-id="ccbf9-110">Only while invoking another service or a callback.</span></span>|  
|<span data-ttu-id="ccbf9-111">Selezione multipla</span><span class="sxs-lookup"><span data-stu-id="ccbf9-111">Multiple</span></span>|<span data-ttu-id="ccbf9-112">Sempre</span><span class="sxs-lookup"><span data-stu-id="ccbf9-112">Always.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ccbf9-113">Esempio di codice seguente vengono illustrate le differenze tra l'utilizzo singolo, multiplo e rientrante.</span><span class="sxs-lookup"><span data-stu-id="ccbf9-113">The following code example demonstrates the different between using Single, Reentrant, and Multiple.</span></span> <span data-ttu-id="ccbf9-114">Questo esempio non viene compilato senza un'effettiva implementazione sottostante, ma serve a illustrare il tipo del threading in modo che WCF rende e ciò significa che per il codice operativo.</span><span class="sxs-lookup"><span data-stu-id="ccbf9-114">This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that WCF makes and what that means for your operation code.</span></span>  
  
 [!code-csharp[C_BestPractices-Concurrency#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_bestpractices-concurrency/cs/reentrantandmultiple.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="Multiple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Multiple = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Multiple" />
      <MemberSignature Language="VB.NET" Value="Multiple" />
      <MemberSignature Language="C++ CLI" Value="Multiple" />
      <MemberSignature Language="F#" Value="Multiple = 2" Usage="System.ServiceModel.ConcurrencyMode.Multiple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccbf9-115">L'istanza del servizio è multithread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-115">The service instance is multi-threaded.</span>
          </span>
          <span data-ttu-id="ccbf9-116">Non viene resa alcuna garanzia di sincronizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-116">No synchronization guarantees are made.</span>
          </span>
          <span data-ttu-id="ccbf9-117">Poiché è possibile che altri thread modifichino l'oggetto servizio in qualsiasi momento, è necessario gestire sempre la sincronizzazione e la coerenza dello stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-117">Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Reentrant">
      <MemberSignature Language="C#" Value="Reentrant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Reentrant = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Reentrant" />
      <MemberSignature Language="VB.NET" Value="Reentrant" />
      <MemberSignature Language="C++ CLI" Value="Reentrant" />
      <MemberSignature Language="F#" Value="Reentrant = 1" Usage="System.ServiceModel.ConcurrencyMode.Reentrant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccbf9-118">L'istanza del servizio è a thread singolo e accetta chiamate rientranti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-118">The service instance is single-threaded and accepts reentrant calls.</span>
          </span>
          <span data-ttu-id="ccbf9-119">Il servizio rientrante accetta chiamate quando viene chiamato un altro servizio; è pertanto responsabilità dello sviluppatore garantire la coerenza dello stato dell'oggetto prima dei callout ed è necessario confermare che i dati locali dell'operazione siano validi dopo i callout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-119">The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</span>
          </span>
          <span data-ttu-id="ccbf9-120">Si noti che l'istanza del servizio viene sbloccata solo chiamando un altro servizio su un canale WCF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-120">Note that the service instance is unlocked only by calling another service over a WCF channel.</span>
          </span>
          <span data-ttu-id="ccbf9-121">In questo caso, il servizio chiamato può rientrare nel primo servizio tramite un callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-121">In this case, the called service can reenter the first service via a callback.</span>
          </span>
          <span data-ttu-id="ccbf9-122">Se il primo servizio non è rientrante, la sequenza di chiamate determina un deadlock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-122">If the first service is not reentrant, the sequence of calls results in a deadlock.</span>
          </span>
          <span data-ttu-id="ccbf9-123">Per informazioni dettagliate, vedere <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-123">For details, see <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Single = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 0" Usage="System.ServiceModel.ConcurrencyMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccbf9-124">L'istanza del servizio è a thread singolo e non accetta chiamate rientranti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-124">The service instance is single-threaded and does not accept reentrant calls.</span>
          </span>
          <span data-ttu-id="ccbf9-125">Se la proprietà <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> è <see cref="F:System.ServiceModel.InstanceContextMode.Single" /> e giungono altri messaggi mentre l'istanza elabora una chiamata, tali messaggi restano in attesa fino a quando il servizio non diventa disponibile o fino al loro timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccbf9-125">If the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> property is <see cref="F:System.ServiceModel.InstanceContextMode.Single" />, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>