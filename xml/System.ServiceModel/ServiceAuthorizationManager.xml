<Type Name="ServiceAuthorizationManager" FullName="System.ServiceModel.ServiceAuthorizationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39b3897e9970821b056f7253dfe60037ce36844c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36410516" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceAuthorizationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceAuthorizationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceAuthorizationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceAuthorizationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAuthorizationManager" />
  <TypeSignature Language="F#" Value="type ServiceAuthorizationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce il controllo di accesso di autorizzazione per le operazioni del servizio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe ha lo scopo di valutare tutti i criteri (regole che definiscono le operazioni consentite a un utente), confrontarli con le attestazioni eseguite da un client, impostare la classe <xref:System.IdentityModel.Policy.AuthorizationContext> risultante su <xref:System.ServiceModel.ServiceSecurityContext>e fornire la decisione di autorizzazione per consentire o negare a un chiamante l'accesso a una determinata operazione del servizio.  
  
 Il <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> metodo viene chiamato dall'infrastruttura di Windows Communication Foundation (WCF) ogni volta che viene eseguito un tentativo di accedere a una risorsa. Il metodo restituisce `true` o `false` rispettivamente per consentire o per negare l'accesso.  
  
 Il <xref:System.ServiceModel.ServiceAuthorizationManager> fa parte di WCF*identità modello* dell'infrastruttura. che consente di creare criteri e schemi di autorizzazione personalizzati.  Per ulteriori informazioni sul funzionamento del modello di identità, vedere [gestione attestazioni e autorizzazioni con il modello di identità](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md).  
  
## <a name="custom-authorization"></a>Autorizzazione personalizzata  
 Questa classe non esegue alcuna autorizzazione e consente agli utenti di accedere a tutte le operazioni del servizio. Per fornire un'autorizzazione più restrittiva è necessario creare un gestore autorizzazioni personalizzato che controlla i criteri personalizzati. A tale scopo, è necessario ereditare da questa classe ed eseguire l'override del metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>. Per specificare l'istanza della classe derivata utilizzare la proprietà <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A>.  
  
 In <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>, l'applicazione può utilizzare l'oggetto <xref:System.ServiceModel.OperationContext> per accedere all'identità del chiamante (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>).  
  
 Ottenendo la proprietà <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, che restituisce un oggetto <xref:System.ServiceModel.Channels.MessageHeaders>, l'applicazione può accedere al servizio (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) e all'operazione (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>).  
  
 Ottenendo la proprietà <xref:System.ServiceModel.OperationContext.RequestContext%2A>, che restituisce un oggetto <xref:System.ServiceModel.Channels.RequestContext>, l'applicazione può accedere all'intero messaggio di richiesta (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) e prendere di conseguenza la decisione di autorizzazione.  
  
 Per un esempio, vedere [procedura: creare un gestore autorizzazioni personalizzato per un servizio](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).  
  
 Per creare criteri di autorizzazione personalizzati, implementare la classe <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  Per un esempio, vedere [procedura: creare un criterio di autorizzazione personalizzato](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md).  
  
 Per creare un'attestazione personalizzata, utilizzare la classe <xref:System.IdentityModel.Claims.Claim>.  Per un esempio, vedere [procedura: creare un'attestazione personalizzata](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md). Per confrontare le attestazioni personalizzate, è necessario confrontare le attestazioni, come illustrato [procedura: confrontare attestazioni](~/docs/framework/wcf/extending/how-to-compare-claims.md).  
  
 Per altre informazioni, vedere [autorizzazione personalizzata](~/docs/framework/wcf/extending/custom-authorization.md).  
  
 È possibile impostare il tipo di un gestore autorizzazioni personalizzato utilizzando la [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) in un file di configurazione dell'applicazione client.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata una classe denominata `MyServiceAuthorizationManager` che eredita dalla classe <xref:System.ServiceModel.ServiceAuthorizationManager> ed esegue l'override del metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.  
  
 [!code-csharp[c_CustomAuthMgr#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)]
 [!code-vb[c_CustomAuthMgr#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAuthorizationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckAccess">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica l'autorizzazione per il contesto dell'operazione specificato e il messaggio facoltativo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">Oggetto <see cref="T:System.ServiceModel.OperationContext" />.</param>
        <summary>Verifica l'autorizzazione per il contesto dell'operazione specificato.</summary>
        <returns>
          <see langword="true" /> se l'accesso viene concesso. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In generale, le applicazioni devono eseguire l'override del metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> anziché di questo metodo.  
  
 Eseguire l'override del metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> se l'applicazione associa o introduce un set di criteri diverso per la classe <xref:System.ServiceModel.ServiceSecurityContext> risultante oppure fornire un diverso modello (concatenamento) di valutazione dei criteri.  
  
 Questo metodo è responsabile della chiamata al metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come eseguire l'override di questo metodo per applicare i requisiti di controllo di accesso personalizzati.  
  
 [!code-csharp[c_Federation#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#1)]
 [!code-vb[c_Federation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext, ref System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext, class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext, System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess (operationContext, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="operationContext">Oggetto <see cref="T:System.ServiceModel.OperationContext" />.</param>
        <param name="message">Classe <see cref="T:System.ServiceModel.Channels.Message" /> da esaminare per determinare l'autorizzazione.</param>
        <summary>Verifica l'autorizzazione per il contesto dell'operazione specificato quando viene richiesto l'accesso a un messaggio.</summary>
        <returns>
          <see langword="true" /> se l'accesso viene concesso. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In generale, le applicazioni devono eseguire l'override del metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> anziché di questo metodo, che deve essere utilizzato solo se la decisione di autorizzazione dipende dal corpo del messaggio. A causa di problemi riguardanti le prestazioni, è consigliabile ridisegnare l'applicazione, se possibile, in modo tale che per la decisione di autorizzazione non sia necessario l'accesso al corpo del messaggio.  
  
 Eseguire l'override di questo metodo se l'applicazione associa o introduce un set di criteri diverso per le classi <xref:System.ServiceModel.ServiceSecurityContext> e <xref:System.ServiceModel.Channels.Message> risultanti oppure fornire un diverso modello (concatenamento) di valutazione dei criteri.  
  
 Questo metodo è responsabile della chiamata al metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come eseguire l'override di questo metodo per applicare i requisiti di controllo di accesso personalizzati che richiedono l'accesso al corpo del messaggio.  
  
 [!code-csharp[c_Federation#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#6)]
 [!code-vb[c_Federation#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccessCore">
      <MemberSignature Language="C#" Value="protected virtual bool CheckAccessCore (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckAccessCore(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckAccessCore(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccessCore operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">Classe <see cref="T:System.ServiceModel.OperationContext" /> della richiesta di autorizzazione corrente.</param>
        <summary>Verifica l'autorizzazione per il contesto dell'operazione specificato in base alla valutazione dei criteri predefinita.</summary>
        <returns>
          <see langword="true" /> se l'accesso viene concesso. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> è generalmente il risultato della valutazione dei criteri predefinita.  
  
 Eseguire l'override di questo metodo per fornire decisioni di autorizzazione personalizzate.  
  
 Questo metodo può essere utilizzato per prendere decisioni di autorizzazione basate su set di attestazioni derivati dai token in ingresso o aggiunti attraverso criteri di autorizzazione esterni. Può inoltre essere utilizzato per decisioni basate su proprietà dei messaggi in ingresso, ad esempio sull'intestazione dell'azione.  
  
 In questo metodo, l'applicazione può utilizzare il parametro `operationContext` per accedere all'identità del chiamante (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>). Con la restituzione dell'oggetto <xref:System.ServiceModel.Channels.RequestContext> dalla proprietà <xref:System.ServiceModel.OperationContext.RequestContext%2A>, l'applicazione può accedere all'intero messaggio di richiesta (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>). Con la restituzione dell'oggetto <xref:System.ServiceModel.Channels.MessageHeaders> dalla proprietà <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, l'applicazione può accedere all'URL del servizio (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) e all'operazione (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>). Con queste informazioni, l'applicazione può prendere di conseguenza la decisione di autorizzazione.  
  
 Le attestazioni eseguite da un utente si trovano nella classe <xref:System.IdentityModel.Claims.ClaimSet> restituita dalla proprietà <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> di `AuthorizationContext`. L'`AuthorizationContext` corrente viene restituito dalla proprietà <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> della classe <xref:System.ServiceModel.OperationContext>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un override del metodo <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.  
  
 [!code-csharp[c_CustomAuthMgr#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)]
 [!code-vb[c_CustomAuthMgr#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)]  
  
 Per un altro esempio, vedere [procedura: creare un gestore autorizzazioni personalizzato per un servizio](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationPolicies">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ GetAuthorizationPolicies(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;&#xA;override this.GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="serviceAuthorizationManager.GetAuthorizationPolicies operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">Classe <see cref="T:System.ServiceModel.OperationContext" /> della richiesta di autorizzazione corrente.</param>
        <summary>Ottiene il set di criteri che partecipano alla valutazione dei criteri.</summary>
        <returns>
          <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> di tipo <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione di Windows Communication Foundation (WCF) fornisce un set predefinito di criteri di autorizzazione. Questi includono il token primario contenente le credenziali del richiedente e tutti i token di supporto, i token di trasporto e i criteri esterni, se specificati.  
  
 È possibile eseguire l'override di questa implementazione e fornire un set diverso di criteri.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>