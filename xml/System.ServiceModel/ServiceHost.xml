<Type Name="ServiceHost" FullName="System.ServiceModel.ServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc0149a800a359334b4485a2453d74929b5e70b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHost : System::ServiceModel::ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ff440-101">Fornisce un host di servizi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff440-101">Provides a host for services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-102">Implementa l'host utilizzato dal modello di programmazione del modello di servizi del sistema [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ff440-102">Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model.</span></span>  
  
 <span data-ttu-id="ff440-103">Utilizzare la classe <xref:System.ServiceModel.ServiceHost> per configurare ed esporre un servizio in modo che possa essere utilizzato dalle applicazioni client quando non si utilizzano i servizi IIS (Information Services) o WAS (Windows Activation Services) per esporre un servizio.</span><span class="sxs-lookup"><span data-stu-id="ff440-103">Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</span></span> <span data-ttu-id="ff440-104">Sia IIS sia WAS interagiscono automaticamente con un oggetto <xref:System.ServiceModel.ServiceHost>.</span><span class="sxs-lookup"><span data-stu-id="ff440-104">Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.</span></span>  
  
 <span data-ttu-id="ff440-105">Per esporre un servizio in modo da poter essere utilizzato dai chiamanti, il sistema [!INCLUDE[indigo2](~/includes/indigo2-md.md)] richiede una descrizione completa del servizio, rappresentata dalla classe <xref:System.ServiceModel.Description.ServiceDescription>.</span><span class="sxs-lookup"><span data-stu-id="ff440-105">To expose a service for use by callers, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class).</span></span> <span data-ttu-id="ff440-106">La classe <xref:System.ServiceModel.ServiceHost> crea una descrizione <xref:System.ServiceModel.Description.ServiceDescription> a partire dal tipo e dalle informazioni di configurazione del servizio e quindi utilizza tale descrizione per creare oggetti<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> per ogni endpoint riportato nella descrizione.</span><span class="sxs-lookup"><span data-stu-id="ff440-106">The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.</span></span>  
  
 <span data-ttu-id="ff440-107">L'oggetto <xref:System.ServiceModel.ServiceHost> consente di caricare un servizio, configurare gli endpoint, applicare impostazioni di sicurezza e avviare i listener di gestione delle richieste in ingresso.</span><span class="sxs-lookup"><span data-stu-id="ff440-107">Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]
 [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff440-108">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-108">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff440-109">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-109">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-110">Sono disponibili due costruttori per creare un'istanza della classe <xref:System.ServiceModel.ServiceHost>.</span><span class="sxs-lookup"><span data-stu-id="ff440-110">There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class.</span></span> <span data-ttu-id="ff440-111">Utilizzare il costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> che in genere accetta il tipo di servizio come parametro di input.</span><span class="sxs-lookup"><span data-stu-id="ff440-111">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time.</span></span> <span data-ttu-id="ff440-112">L'host può utilizzare questo costruttore per creare nuovi servizi nel modo desiderato.</span><span class="sxs-lookup"><span data-stu-id="ff440-112">The host can use this to create new services as needed.</span></span> <span data-ttu-id="ff440-113">Se invece si desidera che l'host del servizio utilizzi un'istanza singleton specifica del servizio è necessario utilizzare il costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="ff440-113">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance">
          <span data-ttu-id="ff440-114">Istanza del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-114">The instance of the hosted service.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="ff440-115">Matrice <see cref="T:System.Array" /> di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-115">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-116">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceHost" /> con l'istanza del servizio e i relativi indirizzi di base specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-116">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the instance of the service and its base addresses specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-117">Utilizzare questo costruttore come alternativa all'implementazione di un'interfaccia <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> personalizzata quando si desidera fornire un'istanza specifica dell'oggetto utilizzabile da un servizio singleton.</span><span class="sxs-lookup"><span data-stu-id="ff440-117">Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> when you want to provide a specific object instance for use by a singleton service.</span></span> <span data-ttu-id="ff440-118">Questo overload può risultare utile quando il tipo di implementazione del servizio è difficile da costruire, ad esempio se non implementa alcun costruttore pubblico predefinito privo di parametri.</span><span class="sxs-lookup"><span data-stu-id="ff440-118">You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</span></span>  
  
 <span data-ttu-id="ff440-119">Si noti che quando un oggetto viene fornito a questo overload, alcune funzionalità relative al comportamento di creazione delle istanze del sistema [!INCLUDE[indigo1](~/includes/indigo1-md.md)] possono operare in modo diverso.</span><span class="sxs-lookup"><span data-stu-id="ff440-119">Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] instancing behavior work differently.</span></span> <span data-ttu-id="ff440-120">Ad esempio, quando si utilizza questo overload di costruttore per fornire un'istanza di un oggetto noto, una chiamata al metodo <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> non produce alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="ff440-120">For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> have no effect when a well-known object instance is provided using this constructor overload.</span></span> <span data-ttu-id="ff440-121">Analogamente, qualsiasi altro meccanismo di rilascio delle istanze viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="ff440-121">Similarly, any other instance release mechanism is ignored.</span></span> <span data-ttu-id="ff440-122">L'host <xref:System.ServiceModel.ServiceHost> si comporta sempre come se la proprietà <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> fosse impostata su <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> per tutte le operazioni.</span><span class="sxs-lookup"><span data-stu-id="ff440-122">The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> property is set to <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> for all operations.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost2#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost2/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost2#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost2/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-123">
            <paramref name="singletonInstance" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-123">
              <paramref name="singletonInstance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ff440-124">Tipo di servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-124">The type of hosted service.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="ff440-125">Matrice di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-125">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-126">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceHost" /> con il tipo di servizio e i relativi indirizzi di base specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-126">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the type of service and its base addresses specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-127">Utilizzare questo costruttore quando si dispone del tipo di servizio e si è in grado di crearne nuove istanze ogni volta che sia necessario, anche nel caso in cui occorra creare un'istanza singleton.</span><span class="sxs-lookup"><span data-stu-id="ff440-127">Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</span></span> <span data-ttu-id="ff440-128">Se invece si desidera che l'host del servizio utilizzi un'istanza singleton specifica del servizio è necessario utilizzare il costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="ff440-128">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff440-129">Questo esempio illustra come utilizzare la classe <xref:System.ServiceModel.ServiceHost> per ospitare un servizio Windows Communication Foundation:</span><span class="sxs-lookup"><span data-stu-id="ff440-129">This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:</span></span>  
  
 [!code-csharp[S_UEServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-130">
            <paramref name="serviceType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-130">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff440-131">Consente di aggiungere un endpoint di servizio al servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-131">Adds a service endpoint to the hosted service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="ff440-132">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-132">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="ff440-133">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-133">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="ff440-134">Indirizzo dell'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-134">The address for the endpoint added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-135">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'indirizzo endpoint specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-135">Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff440-136">Endpoint <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunto al servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-136">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#3)]
 [!code-vb[S_UEServiceHost#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-137">Il parametro <paramref name="implementedContract" />, il parametro <paramref name="binding" /> o il parametro <paramref name="address" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-137">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="ff440-138">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-138">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="ff440-139">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-139">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="ff440-140">URI <see cref="T:System.Uri" /> contenente l'indirizzo dell'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-140">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-141">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'URI contenente l'indirizzo endpoint specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-141">Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff440-142">Endpoint <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunto al servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-142">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#4)]
 [!code-vb[S_UEServiceHost#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-143">Il parametro <paramref name="implementedContract" />, il parametro <paramref name="binding" /> o il parametro <paramref name="address" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-143">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="ff440-144">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-144">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="ff440-145">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-145">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="ff440-146">Indirizzo endpoint del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-146">The endpoint address for the service.</span>
          </span>
        </param>
        <param name="listenUri">
          <span data-ttu-id="ff440-147">Oggetto <see cref="T:System.Uri" /> su cui gli endpoint di servizio possono essere in ascolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-147">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-148">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'indirizzo endpoint specificati nonché l'URI su cui il servizio è in ascolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-148">Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff440-149">Endpoint <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunto al servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-149">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-150">Utilizzare questa versione del metodo quando più endpoint devono essere in ascolto sullo stesso URI specificato.</span><span class="sxs-lookup"><span data-stu-id="ff440-150">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#5)]
 [!code-vb[S_UEServiceHost#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-151">Il parametro <paramref name="implementedContract" />, il parametro <paramref name="binding" /> o il parametro <paramref name="address" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-151">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="ff440-152">Tipo <see cref="T:System.Type" /> del contratto relativo all'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-152">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="ff440-153">Associazione <see cref="T:System.ServiceModel.Channels.Binding" /> dell'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-153">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="ff440-154">URI <see cref="T:System.Uri" /> contenente l'indirizzo dell'endpoint aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-154">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span>
          </span>
        </param>
        <param name="listenUri">
          <span data-ttu-id="ff440-155">Oggetto <see cref="T:System.Uri" /> su cui gli endpoint di servizio possono essere in ascolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-155">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-156">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'URI contenente l'indirizzo endpoint specificati nonché l'URI su cui il servizio è in ascolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-156">Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff440-157">Endpoint <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aggiunto al servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-157">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-158">Utilizzare questa versione del metodo quando più endpoint devono essere in ascolto sullo stesso URI specificato.</span><span class="sxs-lookup"><span data-stu-id="ff440-158">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#6)]
 [!code-vb[S_UEServiceHost#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-159">Il parametro <paramref name="implementedContract" />, il parametro <paramref name="binding" /> o il parametro <paramref name="address" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-159">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ff440-160">I contratti non sono stati inizializzati oppure risulta impossibile trovare le chiavi di contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-160">The contracts are not initialized or the contract keys cannot be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void ApplyConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ApplyConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff440-161">Carica la descrizione del servizio dal file di configurazione e la applica al runtime che viene creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-161">Loads the service description from the configuration file and applies it to the runtime being constructed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">
          <span data-ttu-id="ff440-162">Interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> contenente coppie di chiavi di tipo <see cref="T:System.String" />/<see cref="T:System.ServiceModel.Description.ContractDescription" /> contenente i contratti con chiave del servizio ospitato che sono stati implementati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-162">The <see cref="T:System.Collections.Generic.IDictionary`2" /> with key pairs of type (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) that contains the keyed-contracts of the hosted service that have been implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-163">Consente di creare una descrizione del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-163">Creates a description of the service hosted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff440-164">Descrizione <see cref="T:System.ServiceModel.Description.ServiceDescription" /> del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-164">A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-165">Questo metodo viene utilizzato per costruire descrizioni di contratto a partire da modelli di programmazione personalizzati.</span><span class="sxs-lookup"><span data-stu-id="ff440-165">This method is used to construct contract descriptions from customized programming models.</span></span> <span data-ttu-id="ff440-166">Per implementare il modello personalizzato, eseguire l'override del metodo della classe di base corrispondente, ovvero <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>.</span><span class="sxs-lookup"><span data-stu-id="ff440-166">Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ff440-167">Il tipo di servizio ospitato è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-167">The type of service hosted is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InitializeDescription">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff440-168">Consente di inizializzare una descrizione del servizio ospitato in base al tipo o all'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-168">Initializes a description of the service hosted based on its type or instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-169">Questo metodo consente di eliminare il requisito relativo al passaggio degli indirizzi di base come parte del costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff440-169">This method removes the requirement for passing base addresses as part of <xref:System.ServiceModel.ServiceHost.%23ctor%2A>.</span></span> <span data-ttu-id="ff440-170">Le classi che ereditano dalla classe <xref:System.ServiceModel.ServiceHost> possono chiamare il metodo <xref:System.ServiceModel.ServiceHost.%23ctor%2A> e quindi uno dei metodi <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> quando un indirizzo di base diventa disponibile.</span><span class="sxs-lookup"><span data-stu-id="ff440-170">Classes that inherit from <xref:System.ServiceModel.ServiceHost> can call <xref:System.ServiceModel.ServiceHost.%23ctor%2A> and then can call one of the <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> when a base address is available.</span></span> <span data-ttu-id="ff440-171">Lo strumento Service Model Metadata Utility Tool (Svcutil.exe) è implementato in questo modo.</span><span class="sxs-lookup"><span data-stu-id="ff440-171">This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(object singletonInstance, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (singletonInstance As Object, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(System::Object ^ singletonInstance, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="singletonInstance">
          <span data-ttu-id="ff440-172">Istanza del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-172">The instance of the hosted service.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="ff440-173">Raccolta <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> contenente gli indirizzi di base del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-173">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-174">Consente di inizializzare una descrizione del servizio ospitato in base all'istanza e agli indirizzi di base specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-174">Initializes a description of the service hosted based on its instance and specified base addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-175">
            <paramref name="singletonInstance" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-175">
              <paramref name="singletonInstance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(class System.Type serviceType, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (serviceType As Type, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(Type ^ serviceType, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ff440-176">Tipo <see cref="T:System.Type" /> del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-176">The <see cref="T:System.Type" /> of service hosted.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="ff440-177">Raccolta <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> contenente gli indirizzi di base del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-177">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff440-178">Consente di inizializzare una descrizione del servizio ospitato in base al tipo e agli indirizzi di base specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-178">Initializes a description of the service hosted based on its type and specified base addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff440-179">
            <paramref name="serviceType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-179">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff440-180">Consente di eliminare i servizi eliminabili ospitati quando l'host del servizio viene chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-180">Disposes of disposable services that are being hosted when the service host is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-181">Quando si esegue l'override di <xref:System.ServiceModel.ServiceHost.OnClosed%2A> metodo è necessario assicurarsi di base. OnClosed viene chiamato, anche se si verifica un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ff440-181">When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs.</span></span> <span data-ttu-id="ff440-182">Il codice seguente viene illustrato come eseguire questa operazione.</span><span class="sxs-lookup"><span data-stu-id="ff440-182">The following code illustrates how to do this.</span></span>  
  
```  
protected override void OnClosed()  
{  
    try  
    {  
        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  
        {  
            FaultFlagService.faultFlag = ThrowDuring.Never;  
            throw new ServiceActivationException("Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed");  
        }  
    }  
    finally  
    {  
        base.OnClosed();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonInstance">
      <MemberSignature Language="C#" Value="public object SingletonInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SingletonInstance" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHost.SingletonInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingletonInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SingletonInstance { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff440-183">Consente di ottenere l'istanza singleton del servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-183">Gets the singleton instance of the hosted service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff440-184">Oggetto che rappresenta il servizio ospitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff440-184">The hosted service object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff440-185">Utilizzare il costruttore <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> per inizializzare un'istanza singleton del servizio da ospitare quando si desidera controllare l'istanza del servizio utilizzato.</span><span class="sxs-lookup"><span data-stu-id="ff440-185">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>