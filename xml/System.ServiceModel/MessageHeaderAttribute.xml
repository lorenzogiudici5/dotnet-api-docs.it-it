<Type Name="MessageHeaderAttribute" FullName="System.ServiceModel.MessageHeaderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0e812b1978170a2455061fb66a6e77f7c590709" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49153247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageHeaderAttribute extends System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageHeaderAttribute&#xA;Inherits MessageContractMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageHeaderAttribute : System::ServiceModel::MessageContractMemberAttribute" />
  <TypeSignature Language="F#" Value="type MessageHeaderAttribute = class&#xA;    inherit MessageContractMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageContractMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica che un membro dati è un'intestazione di messaggio SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'attributo <xref:System.ServiceModel.MessageHeaderAttribute> consente di associare campi e proprietà di un tipo contrassegnato con l'attributo <xref:System.ServiceModel.MessageContractAttribute> alle intestazioni di messaggio SOAP. Il tipo del campo o della proprietà può essere semplice o composito, purché serializzabile.  
  
 Per informazioni su come controllare la serializzazione del contenuto di un corpo SOAP senza modificare la SOAP envelope predefinita, vedere <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), e [uso di dati I contratti](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Per altre informazioni sulla creazione di contratti di messaggio, vedere [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).  
  
 Lo standard SOAP definisce gli attributi che possono esistere in un'intestazione. Tali attributi sono:  
  
-   `Actor` o `Role` (`Actor` in SOAP 1.1, `Role` in SOAP 1.2)  
  
-   `MustUnderstand`  
  
-   `Relay`  
  
 L'attributo `Actor` o `Role` specifica l'URI del nodo per cui è prevista una determinata intestazione. L'attributo `MustUnderstand` specifica se l'intestazione riconosce l'elaborazione del nodo. L'attributo `Relay` specifica se l'intestazione deve essere inoltrata ai nodi downstream. Windows Communication Foundation (WCF) non esegue alcuna elaborazione di questi attributi nei messaggi in arrivo, ad eccezione di `MustUnderstand` attributo.  
  
 Questi attributi possono tuttavia essere letti e modificati, anche se non sono inviati per impostazione predefinita. I valori di questi attributi possono essere impostati in due modi. Il primo modo consiste nel modificare le proprietà <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> e <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> dell'attributo <xref:System.ServiceModel.MessageHeaderAttribute>. Non è prevista la proprietà `Role`. Se si utilizza SOAP 1.2, per passare la proprietà <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> è sufficiente impostare la proprietà `Role`. Ad esempio:  
  
  
  
 Il secondo modo per controllare questi attributi è impostare il parametro di tipo della classe <xref:System.ServiceModel.MessageHeader%601> sul tipo di intestazione desiderato e quindi utilizzare il tipo ottenuto insieme all'attributo <xref:System.ServiceModel.MessageHeaderAttribute>. Infine, utilizzare a livello di programmazione le proprietà dell'intestazione <xref:System.ServiceModel.MessageHeader%601> per impostare gli attributi SOAP. Ad esempio:  
  
  
  
  
  
 Se si utilizza sia il meccanismo di controllo dinamico sia quello statico, le impostazioni statiche rappresentano le impostazioni predefinite. In questo caso è tuttavia possibile ignorarle mediante il meccanismo dinamico. Ad esempio:  
  
  
  
  
  
 È consentito creare intestazioni ripetute dotate del controllo dinamico degli attributi. Ad esempio:  
  
```  
[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  
```  
  
 Sul lato ricevente, la lettura di questi attributi SOAP può essere eseguita solo se si utilizza la classe <xref:System.ServiceModel.MessageHeader%601> generica. Per individuare le impostazioni degli attributi del messaggio ricevuto è possibile esaminare le proprietà <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> o <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> di un'intestazione di tipo <xref:System.ServiceModel.MessageHeader%601>.  
  
 Quando si riceve un messaggio e quindi lo si invia nuovamente all'origine, il roundtrip delle impostazioni degli attributi SOAP viene eseguito solo per le intestazioni di tipo <xref:System.ServiceModel.MessageHeader%601>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.ServiceModel.MessageHeaderAttribute> per creare un'intestazione SOAP per il messaggio di risposta le cui proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> e <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> sono impostate su valori appropriati per tale intestazione. L'esempio di codice è seguito da un esempio del messaggio quando viene inviato.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageHeaderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageHeaderAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : string with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottenere o impostare un URI che indica il nodo a cui è indirizzata questa intestazione. Tale URI è associato all'attributo di intestazione Role quando si utilizza SOAP 1.2 e all'attributo di intestazione Actor quando si utilizza SOAP 1.1.</summary>
        <value>URI che indica il nodo a cui è indirizzata questa intestazione. Tale URI è associato all'attributo di intestazione Role quando si utilizza 1.2 SOAP e all'attributo di intestazione Actor quando si utilizza SOAP 1.1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni, vedere la sezione Note di <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MustUnderstand : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica se è necessario che il nodo che svolge il ruolo <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> riconosca questa intestazione. Questa proprietà è associata all'attributo di intestazione SOAP <see langword="mustUnderstand" />.</summary>
        <value>
          <see langword="true" /> se è necessario che il nodo che svolge il ruolo <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> riconosca questa intestazione. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni, vedere la sezione Note di <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
> [!IMPORTANT]
>  È importante ricordare che se la proprietà <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> di un messaggio inviato è `true` e l'applicazione sul lato ricevente non riconosce l'intestazione, il sistema genera un errore. Viceversa, se un'intestazione con il `mustUnderstand` attributo di intestazione SOAP impostato su `true` viene ricevuto da Windows Communication Foundation (WCF), deve essere una parte del contratto di messaggio (o deve essere elaborata da uno di Windows Communication Foundation (WCF) canali). in caso contrario, si presuppone che l'intestazione è stata riconosciuta e verrà generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.ServiceModel.MessageHeaderAttribute> per creare un'intestazione SOAP per il messaggio di risposta le cui proprietà <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> e <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> sono impostate su valori appropriati per tale intestazione. L'esempio di codice è seguito da un esempio del messaggio quando viene inviato.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Relay : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica se per questa intestazione è necessario eseguire il relaying ai nodi downstream. Questa proprietà è associata all'attributo di intestazione SOAP <see langword="relay" />.</summary>
        <value>
          <see langword="true" /> se per questa intestazione è necessario eseguire il relaying ai nodi downstream. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si utilizza SOAP 1.1, questa proprietà viene ignorata. Per ulteriori informazioni, vedere la sezione Note di <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>