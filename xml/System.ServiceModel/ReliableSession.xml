<Type Name="ReliableSession" FullName="System.ServiceModel.ReliableSession">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e767c7463e81ab7a2e1857936992be0009ca9b7" />
    <Meta Name="ms.sourcegitcommit" Value="01f28caab7b3f23878dd07b402a8dd48b9478c8c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="39140673" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReliableSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReliableSession extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReliableSession" />
  <TypeSignature Language="VB.NET" Value="Public Class ReliableSession" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSession" />
  <TypeSignature Language="F#" Value="type ReliableSession = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Consente di accedere agevolmente alle proprietà di un elemento di associazione di una sessione affidabile che sono disponibili quando si utilizza una delle associazioni fornite dal sistema.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le proprietà contenute nella classe <xref:System.ServiceModel.ReliableSession> rappresentano il subset di quelle contenute nella classe <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> a cui è possibile accedere da un'associazione predefinita. Tale subset è costituito dalle proprietà <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> e <xref:System.ServiceModel.ReliableSession.Ordered%2A>. La classe <xref:System.ServiceModel.ReliableSession> fa riferimento agli stessi oggetti a cui fa riferimento la classe <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>; pertanto, la modifica del valore dell'una modifica anche il valore dell'altra. Questa classe raggruppa queste due proprietà di un elemento di associazione di una sessione affidabile per consentire una migliore esposizione all'individuazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una nuova sessione affidabile, come accedere ai valori delle proprietà di tale sessione e come modificarli. La classe <xref:System.ServiceModel.ReliableSession> consente di scrivere quanto segue:  
  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ReliableSession" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ReliableSession" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ reliableSessionBindingElement);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement binding) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As ReliableSessionBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession binding" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliableSessionBindingElement" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reliableSessionBindingElement">Elemento <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> il cui valori delle proprietà vengono utilizzati per inizializzare la sessione affidabile.</param>
        <param name="binding">Elemento <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> il cui valori delle proprietà vengono utilizzati per inizializzare la sessione affidabile.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ReliableSession" /> a partire da un elemento di associazione di una sessione affidabile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="reliableSessionBindingElement" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'intervallo di tempo durante il quale un servizio può rimanere inattivo prima di essere chiuso.</summary>
        <value>Struttura <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo massimo per cui un servizio può rimanere inattivo prima di essere chiuso. Il valore predefinito è 10 minuti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà ottiene e imposta il valore della proprietà <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>.  
  
 L'attività in un canale viene definita come ricezione di un messaggio di un'applicazione o di un'infrastruttura. La proprietà relativa al timeout di inattività controlla l'intervallo di tempo massimo per cui una sessione può essere mantenuta inattiva. Se trascorre un intervallo di tempo superiore al valore di <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> specificato senza che venga eseguita alcuna attività, la sessione viene interrotta dall'infrastruttura e il canale restituisce un errore. La sessione attendibile viene eliminata in modo unilaterale.  
  
 Se l'applicazione di invio non ha messaggi da inviare, la sessione attendibile non viene in genere interrotta per inattività, ma viene invece mantenuta attiva a tempo indeterminato da un meccanismo keep-alive. Il dispatcher può comunque interrompere la sessione attendibile in maniera indipendente qualora non vengano inviati né ricevuti messaggi di applicazioni. Pertanto, il timeout di inattività scade in genere se le condizioni della rete sono tali che non vengono ricevuti messaggi di alcun tipo o se si è verificato un errore nel mittente.  
  
 L'impostazione di questo timeout impedisce al server di mantenere una sessione di sicurezza se non viene chiusa dal client. Se la sessione di sicurezza non ha ricevuto un messaggio entro l'intervallo di inattività, viene chiusa dal server. In questo modo si riduce il rischio di attacchi di tipo Denial of Service.  
  
 Quando si utilizza una sessione affidabile, è necessario rispettare due diversi timer di inattività per mantenere attiva la connessione. Se uno dei timer di inattività viene disattivato, la connessione viene eliminata.  
  
-   Il primo timer di inattività si trova nella sessione affidabile ed è denominato <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. Questo timer di inattività viene attivato se entro il periodo di timeout specificato non viene ricevuto alcun messaggio, né dell'applicazione né dell'infrastruttura. Per messaggio dell'infrastruttura si intende un messaggio che non contiene dati dell'applicazione e che viene generato per uno dei protocolli nello stack dei canali, ad esempio keep-alive o acknowledgment.  
  
-   Il secondo timer di inattività si trova nel servizio e utilizza l'impostazione <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> dell'associazione. Questo timer di inattività viene attivato se entro il periodo di timeout specificato non viene ricevuto alcun messaggio dell'applicazione.  
  
 Poiché la connessione viene eliminata all'attivazione di uno dei timer di inattività, l'aumento di <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> una volta raggiunto un valore maggiore di <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> non produrrà alcun effetto. Poiché l'impostazione predefinita per entrambi i timeout è 10 minuti, è sempre necessario aumentarli entrambi per creare una differenza quando si utilizza una sessione affidabile.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore impostato è minore o uguale a zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ordered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="System.ServiceModel.ReliableSession.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il recapito dei messaggi deve rispettare l'ordine in cui i messaggi vengono inviati.</summary>
        <value>
          <see langword="true" /> se i messaggi devono essere recapitati nell'ordine in cui vengono inviati. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà ottiene e imposta il valore della proprietà <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>