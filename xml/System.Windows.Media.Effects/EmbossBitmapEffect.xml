<Type Name="EmbossBitmapEffect" FullName="System.Windows.Media.Effects.EmbossBitmapEffect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ca7c9ead7de39ba305692ac0e094d9f4c3da49f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EmbossBitmapEffect : System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EmbossBitmapEffect extends System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbossBitmapEffect&#xA;Inherits BitmapEffect" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbossBitmapEffect sealed : System::Windows::Media::Effects::BitmapEffect" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Effects.BitmapEffect</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Crea un bump mapping dell'oggetto visivo per creare l'impressione di profondità e trama da una sorgente di luce artificiale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] gli effetti bitmap sono rendering software. e anche qualsiasi oggetto che applica un effetto verrà sottoposto a rendering in modalità software. Non è consigliabile applicare effetti bitmap grandi oggetti visivi o animazioni come questo può influire negativamente sulle prestazioni.  
  
 <xref:System.Windows.Media.Effects.EmbossBitmapEffect> è uno dei molti effetti forniti con il SDK. Altri effetti includono:  
  
-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.BlurBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.BevelBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>  
  
 Un rilievo rende una selezione sollevata o stampata convertendo il colore di riempimento in grigio e traccia i bordi con il colore di riempimento originale. La figura seguente mostra un <xref:System.Windows.Media.Effects.EmbossBitmapEffect> applicato a un oggetto visivo (in questo caso un <xref:System.Windows.Controls.Image>).  
  
 ![Schermata: Confronto dell'immagine con e senza rilievo](~/add/media/effects-embosssimple.png "schermata: confronto dell'immagine con e senza rilievo")  
  
 L'effetto visivo di un rilievo può essere modificato utilizzando il <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A> e <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A> proprietà.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">per la creazione di un'istanza di <see cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" /> classe. Enumerazioni associate: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbossBitmapEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbossBitmapEffect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.EmbossBitmapEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.EmbossBitmapEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.EmbossBitmapEffect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As EmbossBitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::EmbossBitmapEffect ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.EmbossBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Crea un clone modificabile di questo oggetto <see cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" />, eseguendo copie complete dei valori dell'oggetto. Durante la copia delle proprietà di dipendenza, questo metodo copia i riferimenti alle risorse e i data binding (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per comodità, questo metodo nasconde la versione ereditata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.EmbossBitmapEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.EmbossBitmapEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As EmbossBitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::EmbossBitmapEffect ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.EmbossBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" />, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, ma vengono copiati i relativi valori correnti.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per comodità, questo metodo nasconde la versione ereditata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnmanagedEffect">
      <MemberSignature Language="C#" Value="protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateUnmanagedEffect () As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Runtime::InteropServices::SafeHandle ^ CreateUnmanagedEffect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightAngle">
      <MemberSignature Language="C#" Value="public double LightAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LightAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property LightAngle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LightAngle { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Ottiene o imposta la direzione della luce artificiale sull'oggetto in rilievo.</summary>
        <value>Direzione della luce artificiale sull'oggetto in rilievo. L'intervallo valido è da <c>0-360</c> (gradi) con <c>0</c> indica il lato destro dell'oggetto e i valori successivi lo spostamento in senso antiorario attorno all'oggetto. Il valore predefinito è <c>45</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La direzione della luce proiettata sull'oggetto in rilievo interessa lo shadowing dell'oggetto visivo in rilievo.  
  
 Il diagramma seguente mostra la direzione luce proviene da un determinato valore di questa proprietà:  
  
 ![Diagramma: Direzione di DropShadow](~/add/media/effects-dropshadowdirection2.png "diagramma: direzione di DropShadow")  
  
<a name="dependencyPropertyInfo_LightAngle"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LightAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LightAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LightAngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LightAngleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relief">
      <MemberSignature Language="C#" Value="public double Relief { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Relief" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief" />
      <MemberSignature Language="VB.NET" Value="Public Property Relief As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Relief { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Ottiene o imposta la quantità di rilievo.</summary>
        <value>Quantità di rilievo. L'intervallo di valori valido è <c>0-1</c> con <c>0</c> corrisponde al rilievo minore e <c>1</c> quello maggiore. Il valore predefinito è <c>0,44</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella figura seguente viene illustrato l'effetto di questa proprietà:  
  
 ![Schermata: Confronto tra rilievo minimo e massimo](~/add/media/effects-embossrelief.png "schermata: confronto rilievo minimo e massimo")  
  
<a name="dependencyPropertyInfo_Relief"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliefProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ReliefProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ReliefProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ReliefProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ReliefProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Nota: questa API è ora obsoleta.** L'alternativa non obsoleta è <see cref="T:System.Windows.Media.Effects.Effect" />. Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUnmanagedPropertyState">
      <MemberSignature Language="C#" Value="protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateUnmanagedPropertyState(class System.Runtime.InteropServices.SafeHandle unmanagedEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateUnmanagedPropertyState (unmanagedEffect As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateUnmanagedPropertyState(System::Runtime::InteropServices::SafeHandle ^ unmanagedEffect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedEffect" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="unmanagedEffect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>