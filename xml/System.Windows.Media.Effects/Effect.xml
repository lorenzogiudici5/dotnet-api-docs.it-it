<Type Name="Effect" FullName="System.Windows.Media.Effects.Effect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47b91689fb74b0903ecd15c3a5a9f88e7c383f6e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30667035" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Effect : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract Effect extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.Effect" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Effect&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Effect abstract : System::Windows::Media::Animation::Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Genera un effetto bitmap personalizzato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Derivare la <xref:System.Windows.Media.Effects.Effect> classe per implementare un effetto bitmap personalizzato. Nella maggior parte dei casi, si esegue la derivazione da <xref:System.Windows.Media.Effects.ShaderEffect>.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">per l'accesso completo alle risorse dell'interfaccia utente. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
    <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Effect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.Effect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Effect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.Effects.Effect" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.Effect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.Effect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::Effect ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Media.Effects.Effect" />, eseguendo copie complete dei valori di tale oggetto. Durante la copia delle proprietà di dipendenza di questo oggetto, questo metodo copia i riferimenti alle risorse e i data binding (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.</summary>
        <returns>Clone modificabile di questa istanza. Il clone restituito è effettivamente una copia completa dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> del clone è <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.Effects.Effect.Clone%2A> metodo può essere utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti. Per comodità, questo metodo nasconde ereditato <xref:System.Windows.Freezable.Clone%2A> metodo per fornire un'implementazione fortemente tipizzata.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.Effect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.Effect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::Effect ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Media.Effects.Effect" />, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, mentre vengono copiati i relativi valori correnti.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per comodità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectMapping">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.GeneralTransform EffectMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.GeneralTransform EffectMapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.Effect.EffectMapping" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property EffectMapping As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Media::GeneralTransform ^ EffectMapping { System::Windows::Media::GeneralTransform ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando se ne effettua l'override in una classe derivata, l'input del mouse e i sistemi di coordinate verranno trasformati tramite l'effetto.</summary>
        <value>Trasformazione da applicare. L'impostazione predefinita è la trasformazione di identità.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di <xref:System.Windows.Media.Effects.Effect.EffectMapping%2A> proprietà da assegnare una trasformazione diversa dalla trasformazione di identità predefinito.  
  
 L'input viene trasformato tramite l'inverso di questa trasformazione. Il <xref:System.Windows.Media.Visual.TransformToAncestor%2A> e <xref:System.Windows.Media.Visual.TransformToDescendant%2A> metodi hanno inoltre la <xref:System.Windows.Media.Effects.Effect.EffectMapping%2A> trasformazione applicata.  
  
 I punti di ingresso devono essere in [0-1] intervallo e punti di uscita è necessario eseguire il mapping a [0-1] intervallo. Il <xref:System.Windows.Media.GeneralTransform.Inverse%2A> proprietà deve restituire un <xref:System.Windows.Media.GeneralTransform> che calcola il mapping inverso.  
  
 La trasformazione inversa esegue il mapping di un punto dopo l'applicazione per il punto da cui proviene l'effetto prima l'effetto. Non inversa trasforma un punto da prima l'effetto viene applicato a dopo aver applicato l'effetto di mappe.  
  
 Si noti che la trasformazione non include informazioni sulle dimensioni in pixel fisici in uso e funziona nell'intervallo di unità.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="ImplicitInput">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Brush ImplicitInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.Brush ImplicitInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.Effect.ImplicitInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ImplicitInput As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Brush ^ ImplicitInput { System::Windows::Media::Brush ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene <see cref="T:System.Windows.Media.Brush" /> che, se usato come input per <see cref="T:System.Windows.Media.Effects.Effect" />, trasforma la bitmap di <see cref="T:System.Windows.UIElement" /> a cui è applicato <see cref="T:System.Windows.Media.Effects.Effect" /> in tale input.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.Brush" /> che funge da input.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Media.Effects.Effect.ImplicitInput%2A> proprietà come valore da un input con valori di pennello a un <xref:System.Windows.Media.Effects.ShaderEffect>.  
  
 Il <xref:System.Windows.Media.Effects.Effect.ImplicitInput%2A> proprietà rappresenta l'input dello shader da cui deriva il rendering del <xref:System.Windows.UIElement> che il <xref:System.Windows.Media.Effects.Effect> viene applicato a.  
  
> [!NOTE]
>  Il comportamento sarà indefinito quando <xref:System.Windows.Media.Effects.Effect.ImplicitInput%2A> viene usata come pennello in altre classi WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
  </Members>
</Type>