<Type Name="BitmapEffect" FullName="System.Windows.Media.Effects.BitmapEffect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aafd57deacb9a88f6d6d1c910462c00599fca836" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37499451" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BitmapEffect extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BitmapEffect&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitmapEffect abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type BitmapEffect = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.Effect" />.  Defines a bitmap effect. Derived classes define effects that can be applied to a <see cref="T:System.Windows.Media.Visual" /> object, such as a <see cref="T:System.Windows.Controls.Button" /> or an <see cref="T:System.Windows.Controls.Image" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] gli effetti bitmap sono rendering software. e anche qualsiasi oggetto che applica un effetto verrà sottoposto a rendering in modalità software. Gli effetti bitmap non devono essere applicati per oggetti visivi di grandi dimensioni o animazioni, perché ciò può influire negativamente sulle prestazioni.  
  
> [!CAUTION]
>  Gli effetti bitmap non supportano l'esecuzione in attendibilità parziale. Per l'uso degli effetti bitmap, un'applicazione deve disporre di autorizzazioni di attendibilità completa.  
  
 Trasformazioni di scala vengono applicate a un oggetto visivo, prima di applicata un effetto. In caso di una trasformazione di scala non uniforme, verrà utilizzato il più elevato tra i valori della scala l'effetto.  
  
 Gli aggiornamenti per la struttura ad albero visuale di un <xref:System.Windows.Media.VisualBrush> non verranno propagati se un <xref:System.Windows.Media.Effects.BitmapEffect> nella catena padre del pennello. È possibile risolvere questa limitazione, forzando un aggiornamento della scena nell'oggetto padre dell'effetto. È possibile chiamare <xref:System.Windows.UIElement.InvalidateVisual%2A> o includere un'animazione per forzare un aggiornamento di scena.  
  
 Effetti personalizzati ereditano questa classe per creare un'interfaccia gestita per l'effetto non gestito. Per altre informazioni, vedere la [BitmapEffect non gestita](https://msdn.microsoft.com/library/ms735092.aspx) API.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">per l'ereditarietà di <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> classe. Enumerazioni associate: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <block subset="none" type="overrides">
      <para>
        <see cref="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect" /> deve essere sottoposto a override per inizializzare un effetto non gestito nel codice gestito.  <see cref="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" /> deve essere sottoposto a override quando un effetto non gestito dispone di proprietà che gli utenti possono modificare. Usare questo metodo in combinazione con <see cref="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)" /> aggiornare le proprietà non gestite.</para>
    </block>
    <altmember cref="T:System.Windows.Media.Effects.BitmapEffectInput" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BitmapEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BitmapEffect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.BitmapEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::BitmapEffect ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Effects.BitmapEffect" Usage="bitmapEffect.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per praticità, questo metodo nasconde la versione ereditata.  
  
 Per altre informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.BitmapEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::BitmapEffect ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.Effects.BitmapEffect" Usage="bitmapEffect.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per praticità, questo metodo nasconde la versione ereditata.  
  
 Per altre informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmapEffectOuter">
      <MemberSignature Language="C#" Value="protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateBitmapEffectOuter () As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Runtime::InteropServices::SafeHandle ^ CreateBitmapEffectOuter();" />
      <MemberSignature Language="F#" Value="static member CreateBitmapEffectOuter : unit -&gt; System.Runtime.InteropServices.SafeHandle" Usage="System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a handle to an [IMILBitmapEffect](http://msdn.microsoft.com/library/4bd5697d-bdde-4485-a05b-b3fea1403e16) object that is used to initialize a custom effect.</summary>
        <returns>A handle to an [IMILBitmapEffect](http://msdn.microsoft.com/library/4bd5697d-bdde-4485-a05b-b3fea1403e16) object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Framework interazione con gli effetti personalizzati è gestita tramite un [IMILBitmapEffect](http://msdn.microsoft.com/library/4bd5697d-bdde-4485-a05b-b3fea1403e16) oggetto. L'effetto esterno viene inizializzata con gli effetti personalizzati tramite il <xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione di <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> che usa il <xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter%2A> metodo per recuperare un oggetto di effetto di wrapper.  
  
 [!code-csharp[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/samples/snippets/csharp/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/CSharp/RGBFilterBitmapEffect.cs#createunmanagedeffect)]
 [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/visualbasic/rgbfilterbitmapeffect.vb#createunmanagedeffect)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnmanagedEffect">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateUnmanagedEffect () As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::InteropServices::SafeHandle ^ CreateUnmanagedEffect();" />
      <MemberSignature Language="F#" Value="abstract member CreateUnmanagedEffect : unit -&gt; System.Runtime.InteropServices.SafeHandle" Usage="bitmapEffect.CreateUnmanagedEffect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, creates a clone of the unmanaged effect.</summary>
        <returns>A handle to the unmanaged effect clone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato un override del <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> (metodo).  
  
 [!code-csharp[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/samples/snippets/csharp/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/CSharp/RGBFilterBitmapEffect.cs#createunmanagedeffect)]
 [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/visualbasic/rgbfilterbitmapeffect.vb#createunmanagedeffect)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.BitmapSource GetOutput(class System.Windows.Media.Effects.BitmapEffectInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutput (input As BitmapEffectInput) As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Imaging::BitmapSource ^ GetOutput(System::Windows::Media::Effects::BitmapEffectInput ^ input);" />
      <MemberSignature Language="F#" Value="member this.GetOutput : System.Windows.Media.Effects.BitmapEffectInput -&gt; System.Windows.Media.Imaging.BitmapSource" Usage="bitmapEffect.GetOutput input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Windows.Media.Effects.BitmapEffectInput" />
      </Parameters>
      <Docs>
        <param name="input">The input to apply the effect to.</param>
        <summary>Returns the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that results when the effect is applied to the specified <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" />.</summary>
        <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> with the effect applied to the input.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBitmapEffect">
      <MemberSignature Language="C#" Value="protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void InitializeBitmapEffect(class System.Runtime.InteropServices.SafeHandle outerObject, class System.Runtime.InteropServices.SafeHandle innerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub InitializeBitmapEffect (outerObject As SafeHandle, innerObject As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void InitializeBitmapEffect(System::Runtime::InteropServices::SafeHandle ^ outerObject, System::Runtime::InteropServices::SafeHandle ^ innerObject);" />
      <MemberSignature Language="F#" Value="static member InitializeBitmapEffect : System.Runtime.InteropServices.SafeHandle * System.Runtime.InteropServices.SafeHandle -&gt; unit" Usage="System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect (outerObject, innerObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outerObject" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="innerObject" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="outerObject">The outer IMILBitmapEffect wrapper to initialize.</param>
        <param name="innerObject">The inner IMILBitmapEffectPrimitive.</param>
        <summary>Initializes an [IMILBitmapEffect](https://msdn.microsoft.com/library/ms735317.aspx) handle obtained from <see cref="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter" /> with the given [IMILBitmapEffectPrimitive](https://msdn.microsoft.com/library/ms735258.aspx).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione di <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> che usa il <xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A> metodo per inizializzare l'oggetto di wrapper con gli effetti personalizzati.  
  
 [!code-csharp[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/samples/snippets/csharp/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/CSharp/RGBFilterBitmapEffect.cs#createunmanagedeffect)]
 [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/visualbasic/rgbfilterbitmapeffect.vb#createunmanagedeffect)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void SetValue(class System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub SetValue (effect As SafeHandle, propertyName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void SetValue(System::Runtime::InteropServices::SafeHandle ^ effect, System::String ^ propertyName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValue : System.Runtime.InteropServices.SafeHandle * string * obj -&gt; unit" Usage="System.Windows.Media.Effects.BitmapEffect.SetValue (effect, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="effect">The handle to the effect that contains the property to change.</param>
        <param name="propertyName">The name of the property to change.</param>
        <param name="value">The value to use to set the property.</param>
        <summary>Sets the specified property to the given value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è inteso come un metodo helper per <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>. Quando esegue l'override <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>, usare <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A> per aggiornare i valori delle proprietà non gestito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUnmanagedPropertyState">
      <MemberSignature Language="C#" Value="protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateUnmanagedPropertyState(class System.Runtime.InteropServices.SafeHandle unmanagedEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateUnmanagedPropertyState (unmanagedEffect As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateUnmanagedPropertyState(System::Runtime::InteropServices::SafeHandle ^ unmanagedEffect);" />
      <MemberSignature Language="F#" Value="abstract member UpdateUnmanagedPropertyState : System.Runtime.InteropServices.SafeHandle -&gt; unit" Usage="bitmapEffect.UpdateUnmanagedPropertyState unmanagedEffect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedEffect" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="unmanagedEffect">The handle to the effect that contains the properties to update.</param>
        <summary>When overridden in a derived class, updates the property states of the unmanaged properties of the effect.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione delle proprietà non gestite all'interno di un override di questo metodo, usare il metodo helper <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>