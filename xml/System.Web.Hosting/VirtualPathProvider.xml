<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0760a40706475ab4bb5f46ab822d59bfa635262" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un insieme di metodi che consentono a un'applicazione Web di recuperare risorse da un file system virtuale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Hosting.VirtualPathProvider> classe fornisce un set di metodi per l'implementazione di un file system virtuale per un'applicazione Web. In un file system virtuale, i file e directory gestite da un archivio dati diverso nel sistema di file fornito dal sistema operativo del server. Ad esempio, è possibile utilizzare un file system virtuale per archiviare il contenuto in un database di SQL Server.  
  
 È possibile archiviare qualsiasi file che viene elaborato su richiesta in un file system virtuale. vale a dire:  
  
-   Le pagine ASP.NET, pagine master, controlli utente e altri oggetti.  
  
-   Pagine Web standard con estensione htm e con estensione jpg.  
  
-   Qualsiasi estensione personalizzata di cui è stato eseguito il mapping a un <xref:System.Web.Compilation.BuildProvider> istanza.  
  
-   Qualsiasi tema denominato nella `App_Theme` cartella.  
  
 È possibile archiviare i file che generano gli assembly a livello di applicazione in un file system virtuale o cartelle dell'applicazione ASP.NET. vale a dire:  
  
-   Il file Global. asax.  
  
-   File Web. config.  
  
-   File di dati mappa utilizzati dal sito di <xref:System.Web.XmlSiteMapProvider>.  
  
-   Directory contenenti assembly dell'applicazione o che generano gli assembly dell'applicazione: `Bin`, `App_Code`, `App_GlobalResources`, qualsiasi `App_LocalResources`.  
  
-   La cartella application data, `App_Data`.  
  
> [!NOTE]
>  Se un sito Web precompilato per la distribuzione, il contenuto fornito da un <xref:System.Web.Hosting.VirtualPathProvider> istanza non è compilata e non <xref:System.Web.Hosting.VirtualPathProvider> le istanze vengono utilizzate dal sito precompilato.  
  
## <a name="registering-a-virtualpathprovider"></a>Registrazione di un oggetto VirtualPathProvider  
 Un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> istanza deve essere registrata con il sistema di compilazione ASP.NET utilizzando il <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> metodo prima di qualsiasi pagina analisi o la compilazione viene eseguita dall'applicazione Web.  
  
 In genere, un <xref:System.Web.Hosting.VirtualPathProvider> istanza registrata un `AppInitialize` definito nel metodo il `App_Code` directory, o durante il `Application_Start` evento nel `Global.asax` file. Per un esempio di registrazione di un <xref:System.Web.Hosting.VirtualPathProvider> dell'istanza in un `AppInitialize` metodo, vedere la sezione esempio.  
  
 È possibile registrare un <xref:System.Web.Hosting.VirtualPathProvider> istanza durante altri eventi, ma le pagine compilata e memorizzata nella cache prima di <xref:System.Web.Hosting.VirtualPathProvider> istanza registrata non verranno invalidate, anche se il nuovo <xref:System.Web.Hosting.VirtualPathProvider> istanza fornisca l'origine per l'in precedenza pagina compilata.  
  
   
  
## Examples  
 L'esempio di codice seguente è un <xref:System.Web.Hosting.VirtualPathProvider> implementazione della classe che consente di creare un file system virtuale utilizzando le informazioni archiviate un <xref:System.Data.DataSet> oggetto. L'esempio di codice interagisce con gli esempi di codice per il <xref:System.Web.Hosting.VirtualFile> e <xref:System.Web.Hosting.VirtualDirectory> classi per fornire risorse virtuali da un tipo di dati di archivio che viene caricato in un <xref:System.Data.DataSet> oggetto.  
  
 In questo esempio è costituito da quattro parti: il <xref:System.Web.Hosting.VirtualPathProvider> implementazione della classe, un file di dati XML utilizzati per popolare il <xref:System.Data.DataSet> oggetto, un `AppStart` oggetto che contiene un `AppInitialize` metodo utilizzato per registrare il <xref:System.Web.Hosting.VirtualPathProvider> classe con la compilazione il sistema e una pagina ASP.NET che vengono forniti i collegamenti ai file virtuali.  
  
 Per utilizzare questo codice di esempio in un'applicazione, seguire questi passaggi.  
  
1.  Creare un'applicazione di esempio nel server Web.  
  
2.  Copiare il codice sorgente per l'oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> oggetto (vedere sotto) in un file dell'applicazione `App_Code` directory.  
  
3.  Copiare il codice sorgente per l'oggetto personalizzato <xref:System.Web.Hosting.VirtualDirectory> oggetto (vedere la sezione di <xref:System.Web.Hosting.VirtualDirectory> Cenni preliminari sulla classe) in un file dell'applicazione `App_Code` directory.  
  
4.  Copiare il codice sorgente per l'oggetto personalizzato <xref:System.Web.Hosting.VirtualFile> oggetto (vedere la sezione di <xref:System.Web.Hosting.VirtualFile> Cenni preliminari sulla classe) in un file dell'applicazione `App_Code` directory.  
  
5.  Copiare il codice sorgente per il `AppStart` oggetto (vedere sotto) in un file dell'applicazione `App_Code` directory.  
  
6.  Copiare i dati XML (vedere sotto) in un file denominato `XMLData.xml` in un file dell'applicazione `App_Data` directory.  
  
7.  Copia il `default.aspx` file (vedere sotto) nella directory radice dell'applicazione di esempio. Utilizzare un Web browser per aprire la `default.aspx` file e quindi fare clic sui collegamenti nella pagina per visualizzare il contenuto dei file virtuali.  
  
 Il primo esempio è un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe. Il <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> e <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metodi sottoposti a override per indicare se una directory richiesta è presente nel file system virtuale. Il <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> e <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metodi sottoposti a override per restituire personalizzato <xref:System.Web.Hosting.VirtualDirectory> e <xref:System.Web.Hosting.VirtualFile> istanze contenenti informazioni dal file system virtuale.  
  
 La classe fornisce anche un `GetVirtualData` utilizzato dal metodo di <xref:System.Web.Hosting.VirtualDirectory> e <xref:System.Web.Hosting.VirtualFile> classi per l'accesso di <xref:System.Data.DataSet> oggetto contenente i dati di sistema virtuale del file. In un'implementazione di produzione, questo metodo potrebbe essere implementato in genere in un oggetto business responsabile per l'interazione con l'archivio dati.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 Nel secondo esempio è il file di dati XML utilizzato per popolare il <xref:System.Data.DataSet> oggetto restituito da personalizzata <xref:System.Web.Hosting.VirtualPathProvider> oggetto. Questi dati XML vengono utilizzati per illustrare l'utilizzo di <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, e <xref:System.Web.Hosting.VirtualFile> gli oggetti per recuperare dati da dati esterni e non può rappresentare un archivio dati di produzione.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Il terzo esempio fornisce un `AppStart` oggetto che contiene un `AppInitialize` metodo. Questo metodo viene chiamato durante l'inizializzazione di un'applicazione ASP.NET per eseguire qualsiasi inizializzazione personalizzata necessaria. In questo caso, la registrazione personalizzata <xref:System.Web.Hosting.VirtualPathProvider> sistema di compilazione con ASP.NET.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 Nell'ultimo esempio è una pagina ASP.NET che contiene i collegamenti ai file virtuali contenuti nel file system virtuale.  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si eredita da <see cref="T:System.Web.Hosting.VirtualPathProvider" />, è necessario eseguire l'override dei membri seguenti:  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />  
  
 Se personalizzato <see cref="T:System.Web.Hosting.VirtualPathProvider" /> classe supporta le directory nel file system virtuale, è necessario eseguire l'override dei membri seguenti.  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para>  
 Se il file system virtuale conterrà i temi per il sito Web (tramite la creazione di una macchina <c>App_Themes</c> directory), personalizzato <see cref="T:System.Web.Hosting.VirtualPathProvider" /> classe deve supportare le directory.  
  
</para></block>  
  
 Un oggetto personalizzato <see cref="T:System.Web.Hosting.VirtualPathProvider" /> classe funziona con le classi derivate di <see cref="T:System.Web.Hosting.VirtualFile" /> e <see cref="T:System.Web.Hosting.VirtualDirectory" /> classi. È necessario implementare le classi derivate da questi tipi per fornire informazioni di file e directory dal file system virtuale. Per un esempio di un oggetto personalizzato <see cref="T:System.Web.Hosting.VirtualFile" /> implementazione, vedere la sezione esempio del <see cref="T:System.Web.Hosting.VirtualFile" /> Cenni preliminari sulla classe. Per un esempio di un oggetto personalizzato <see cref="T:System.Web.Hosting.VirtualDirectory" /> implementazione, vedere la sezione esempio del <see cref="T:System.Web.Hosting.VirtualDirectory" /> Cenni preliminari sulla classe.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza la classe per l'uso da parte di un'istanza di una classe ereditata. Questo costruttore può essere chiamato solo da una classe ereditata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si esegue l'override di <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> costruttore, posticipare qualsiasi inizializzazione che deve verificarsi dopo il <xref:System.Web.Hosting.VirtualPathProvider> l'oggetto è registrato per il <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> costruttore che inizializza un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Percorso di base dell'applicazione.</param>
        <param name="relativePath">Percorso della risorsa virtuale, relativo al percorso di base.</param>
        <summary>Combina un percorso di base con un percorso relativo per restituire un percorso completo a una risorsa virtuale.</summary>
        <returns>Percorso completo di una risorsa virtuale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> per esaminare il contenuto di un percorso relativo a una risorsa virtuale e apportare eventuali modifiche necessarie.  
  
 L'implementazione predefinita combina il `basePath` e `relativePath` parametri in base a standard ASP.NET percorso durante l'elaborazione.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se si sostituisce l'implementazione predefinita del <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> metodo, verrà richiesto di convertire una sintassi speciale con il <paramref name="relativePath" /> parametro in un percorso virtuale valido. È responsabile per la sintassi di controllo, la convalida del percorso e la gestione di input non valido, come casi limite per l'input corretto.  
  
 Nella maggior parte dei casi non sarà necessario sostituire il valore predefinito <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> metodo. Tuttavia, se è necessario modificare il percorso, è consigliabile limitare il <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> implementazione alla modifica di token specifici per il provider del percorso virtuale nel <paramref name="relativeUrl" /> parametro e quindi chiamare l'implementazione di base per eseguire normali Elaborazione del percorso ASP.NET.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Percorso della directory virtuale.</param>
        <summary>Ottiene un valore che indica se una directory esiste nel file system virtuale.</summary>
        <returns>
          <see langword="true" /> se la directory esiste nel file system virtuale. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metodo per indicare al sistema di compilazione che la risorsa rappresentata da `virtualDir` esiste nel file system virtuale forniti da questo <xref:System.Web.Hosting.VirtualPathProvider> istanza.  
  
 Se personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe non supporta le directory, il <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metodo dovrebbe restituire `false`.  
  
> [!NOTE]
>  Se il file system virtuale conterrà i temi per il sito Web (tramite la creazione di una macchina `App_Themes` directory), personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe deve supportare le directory.  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metodo in un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso del file virtuale.</param>
        <summary>Ottiene un valore che indica se un file esiste nel file system virtuale.</summary>
        <returns>
          <see langword="true" /> se il file esiste nel file system virtuale. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metodo per indicare al sistema di compilazione che la risorsa rappresentata da `virtualPath` esiste nel file system virtuale forniti da questo <xref:System.Web.Hosting.VirtualPathProvider> istanza.  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metodo in un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso della risorsa virtuale primaria.</param>
        <param name="virtualPathDependencies">Matrice di percorsi di altre risorse richieste dalla risorsa virtuale primaria.</param>
        <param name="utcStart">Ora UTC in cui sono state lette le risorse virtuali.</param>
        <summary>Crea una dipendenza della cache basata sui percorsi virtuali specificati.</summary>
        <returns>Oggetto <see cref="T:System.Web.Caching.CacheDependency" /> per le risorse virtuali specificate.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita del <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> restituisce `null`. Per le risorse virtuali della cache per un utilizzo successivo è necessario eseguire l'override di <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metodo o <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio di codice viene implementato il <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metodo per un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso della risorsa virtuale.</param>
        <summary>Restituisce una chiave di cache da utilizzare per il percorso virtuale specificato.</summary>
        <returns>Chiave di cache per la risorsa virtuale specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> metodo per fornire una chiave di cache personalizzata per le risorse virtuali. Se esegue l'override di <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> metodo, il percorso virtuale viene utilizzato per la chiave di cache.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Eseguire l'override solo il valore predefinito <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> metodo se la creazione di una chiave di cache in base al percorso virtuale non funzionerà per l'applicazione.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Percorso della directory virtuale.</param>
        <summary>Ottiene una directory virtuale dal file system virtuale.</summary>
        <returns>Discendente della classe <see cref="T:System.Web.Hosting.VirtualDirectory" /> che rappresenta una directory nel file system virtuale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> metodo restituisce un discendente del <xref:System.Web.Hosting.VirtualDirectory> classe che contiene i file e le directory contenute nella directory specificata nel `virtualDir` parametro.  
  
 Se personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe non supporta le directory, il <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> metodo dovrebbe restituire `null`.  
  
> [!NOTE]
>  Se il file system virtuale conterrà i temi per il sito Web (tramite la creazione di una macchina `App_Themes` directory), personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe deve supportare le directory.  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> metodo in un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso del file virtuale.</param>
        <summary>Ottiene un file virtuale dal file system virtuale.</summary>
        <returns>Discendente della classe <see cref="T:System.Web.Hosting.VirtualFile" /> che rappresenta un file nel file system virtuale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> restituisce un discendente del metodo di <xref:System.Web.Hosting.VirtualFile> classe che rappresenta il file specificato dal `virtualPath` parametro.  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metodo in un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> classe. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso della risorsa virtuale primaria.</param>
        <param name="virtualPathDependencies">Matrice di percorsi di altre risorse virtuali richieste dalla risorsa virtuale primaria.</param>
        <summary>Restituisce un hash dei percorsi virtuali specificati.</summary>
        <returns>Hash dei percorsi virtuali specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> metodo per fornire un hash delle dipendenze per una risorsa di sistema di file virtuale.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza l'istanza di <see cref="T:System.Web.Hosting.VirtualPathProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metodo viene chiamato dopo che il provider è registrato con il sistema di compilazione ASP.NET. Il <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metodo viene utilizzato per fornire qualsiasi inizializzazione richiesta dopo il <xref:System.Web.Hosting.VirtualPathProvider> istanza si trova nell'ambiente di occupato dall'applicazione.  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metodo che imposta il percorso di un file di dati dell'applicazione <xref:System.Web.Hosting.HostingEnvironment> istanza. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornisce all'oggetto <see cref="T:System.Web.Hosting.VirtualPathProvider" /> una durata infinita impedendo la creazione di lease.</summary>
        <returns>Sempre <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'override di <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metodo nella classe base. Restituisce sempre `null` e, pertanto, impedisce la creazione di lease per limita il <xref:System.Web.Hosting.VirtualPathProvider> durata dell'oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso del file virtuale.</param>
        <summary>Restituisce un flusso da un file virtuale.</summary>
        <returns>Oggetto <see cref="T:System.IO.Stream" /> in sola lettura per il file o la risorsa virtuale specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> è un metodo pratico che consente di ottenere un flusso da un file virtuale senza creare un <xref:System.Web.Hosting.VirtualPathProvider> istanza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento a un oggetto <see cref="T:System.Web.Hosting.VirtualPathProvider" /> registrato in precedenza nel sistema di compilazione.</summary>
        <value>L'oggetto <see cref="T:System.Web.Hosting.VirtualPathProvider" /> successivo nel sistema di compilazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Web.Hosting.VirtualPathProvider> oggetto è stato registrato con il sistema di compilazione ASP.NET, viene aggiunto a una catena di provider. Utilizzare il <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> proprietà per l'elaborazione di mano disattivato al precedente <xref:System.Web.Hosting.VirtualPathProvider> oggetto nella catena, se il percorso richiesto non viene fornito da questo <xref:System.Web.Hosting.VirtualPathProvider> istanza.  
  
 La catena di provider di percorsi termina sempre con il provider ASP.NET predefinito, che serve i file dal file system.  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metodo. Se la directory virtuale richiesta non inizia con la stringa `"/vrdir"`, il metodo utilizza il <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> proprietà per passare la richiesta al successivo <xref:System.Web.Hosting.VirtualPathProvider> oggetto nella catena. Per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>