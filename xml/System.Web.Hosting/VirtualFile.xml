<Type Name="VirtualFile" FullName="System.Web.Hosting.VirtualFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d836ceafaf02295d93210a7a96948628d4d83d27" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37751680" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualFile : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFile extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFile" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFile&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFile abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualFile = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un oggetto file in un file virtuale o nello spazio delle risorse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Hosting.VirtualFile> classe è la classe base per gli oggetti che rappresentano i file in un file system virtuale. In genere, si implementa un discendente del <xref:System.Web.Hosting.VirtualFile> per ogni classe <xref:System.Web.Hosting.VirtualPathProvider> oggetto discendente nell'applicazione Web.  
  
   
  
## Examples  
 L'esempio di codice seguente è un <xref:System.Web.Hosting.VirtualFile> implementazione della classe che combina le informazioni archiviate in un <xref:System.Data.DataSet> oggetto con un file di modello per restituire dati HTML. Questo esempio di codice funziona con gli esempi di codice per il <xref:System.Web.Hosting.VirtualPathProvider> e <xref:System.Web.Hosting.VirtualDirectory> alle classi di fornire virtuale risorse da un archivio dati che vengono caricati in un <xref:System.Data.DataSet> oggetto. Per le istruzioni complete per la compilazione ed esecuzione dell'esempio, vedere la sezione di esempio di <xref:System.Web.Hosting.VirtualPathProvider> Cenni preliminari sulla classe.  
  
 In questo esempio è costituito da tre parti: la <xref:System.Web.Hosting.VirtualFile> implementazione della classe, un file di dati XML utilizzati per popolare il <xref:System.Data.DataSet> oggetto e il file di modello di pagina.  
  
 Il primo esempio di codice è un'implementazione del <xref:System.Web.Hosting.VirtualFile> classe. Il costruttore utilizza un metodo in una classe personalizzata <xref:System.Web.Hosting.VirtualPathProvider> per restituire un <xref:System.Data.DataSet> oggetto. E quindi cerca il <xref:System.Data.DataSet> oggetto per recuperare le informazioni associate al percorso del file virtuale fornito. Nel <xref:System.Web.Hosting.VirtualFile.Open%2A> metodo combina le informazioni dal <xref:System.Data.DataSet> oggetto con un file di modello e restituisce la combinazione come un <xref:System.IO.Stream> oggetto.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#40)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#40)]  
  
 Nel secondo esempio è il file di dati XML utilizzato per popolare la <xref:System.Data.DataSet> oggetto restituito dall'oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> oggetto. Questi dati XML vengono utilizzati per illustrare l'uso di <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, e <xref:System.Web.Hosting.VirtualDirectory> classi per recuperare dati da dati esterni e non può rappresentare un archivio dati di produzione di qualità.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
<resource type="dir"   
          path="/vrDir"   
          parentPath=""   
          content="">  
  <resource type="file"   
            path="/vrDir/Level1FileA.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileA.">  
  </resource>  
  <resource type="file"   
            path="/vrDir/Level1FileB.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileB.">  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirA"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirB"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Nel terzo esempio è il file di testo utilizzato come modello per il file virtuale. I segnaposto nel file sono rappresentati da testo tra i segni di percentuale (), ad esempio `%file%` e `%content%`. I timestamp vengono utilizzati per monitorare le modifiche ai dati memorizzati nella cache file virtuale.  
  
```  
<html>  
  <head>  
    <title>File name: %file%</title>  
  </head>  
  
  <body>  
    <h1>%file%</h1>  
    <p>%content%</p>  
    <p>Page timestamp: %pageTimestamp%<br>  
       Data timestamp: %dataTimestamp%<br>  
       Template timestamp: %templateTimestamp%</p>  
  </body>  
</html>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si eredita dal <see cref="T:System.Web.Hosting.VirtualFile" /> (classe), è necessario eseguire l'override di <see cref="M:System.Web.Hosting.VirtualFile.Open" /> metodo per restituire un flusso di sola lettura per il contenuto della risorsa virtuale.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="new System.Web.Hosting.VirtualFile virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso virtuale della risorsa rappresentata da questa istanza.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Hosting.VirtualFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualFile.%23ctor%2A> costruttore che recupera informazioni sui file virtuale da un <xref:System.Data.DataSet> oggetto fornito da un oggetto personalizzato <xref:System.Web.Hosting.VirtualPathProvider> oggetto. Per il codice completo necessario per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.Hosting.VirtualFile> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#41)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFile.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualFile.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica che si tratta di una risorsa virtuale che deve essere considerata come un file.</summary>
        <value>Sempre <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.Open" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Open () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; System.IO.Stream" Usage="virtualFile.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe derivata, restituisce un flusso in sola lettura alla risorsa virtuale.</summary>
        <returns>Flusso in sola lettura per la risorsa virtuale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Hosting.VirtualFile.Open%2A> metodo restituisce un flusso contenente i dati gestiti come un file con il <xref:System.Web.Hosting.VirtualPathProvider> classe. Il flusso è di sola lettura e consente la ricerca (il <xref:System.IO.Stream.CanSeek%2A> proprietà è true).  
  
   
  
## Examples  
 Esempio di codice seguente è un'implementazione del <xref:System.Web.Hosting.VirtualFile.Open%2A> metodo che combina virtuale--informazioni specifiche sul file con un file di modello e quindi restituisce la combinazione. Il file del modello viene memorizzato nella cache per ridurre l'overhead di leggere il file system più volte per recuperare il file di modello. Per il codice completo necessario per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.Hosting.VirtualFile> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#42)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#42)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Nelle classi derivate di <see cref="M:System.Web.Hosting.VirtualFile.Open" /> metodo deve restituire un flusso ricercabile. Se il metodo restituisce un flusso che non supporta la ricerca, una <see cref="T:System.NotSupportedException" /> viene generata quando il flusso viene passato al <see cref="T:System.Web.HttpResponse" /> oggetto da scrivere i dati. L'eccezione si verifica perché la risposta tenta di leggere il <see cref="P:System.IO.Stream.Length" /> proprietà, e in un flusso non ricercabile, il tentativo di accedere alla proprietà genera un'eccezione. Per altre informazioni, vedere il <see cref="P:System.IO.Stream.CanSeek" /> proprietà.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>