<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f707beb8a89da95aee97edce8e516a22b60703dc" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="it-IT" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53225567" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type ApplicationManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2bbb4-101">Gestisce i domini applicazione ASP.NET per un'applicazione di hosting ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-102">Il <xref:System.Web.Hosting.ApplicationManager> oggetto fornisce la gestione della durata degli oggetti nell'ambiente di hosting per un'applicazione ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="2bbb4-103">È responsabile per:</span><span class="sxs-lookup"><span data-stu-id="2bbb4-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="2bbb4-104">L'attivazione e l'inizializzazione di applicazioni ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="2bbb4-105">La gestione della durata dell'applicazione e la durata degli oggetti registrati nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="2bbb4-106">Esposizione di oggetti usati dall'ambiente host per elaborare le richieste dell'applicazione ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="2bbb4-107">Fornire un elenco delle applicazioni in esecuzione nel processo di hosting in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="applicationManager.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bbb4-108">Chiude tutti i domini applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-109">Se una chiamata ai <xref:System.Web.Hosting.ApplicationManager.Close%2A> metodo riduce il conteggio dei riferimenti delle applicazioni che usano la gestione di applicazioni su 0, il <xref:System.Web.Hosting.ApplicationManager.Close%2A> chiamate al metodo il <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2bbb4-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bbb4-110">Crea un oggetto per il dominio dell'applicazione e il tipo di oggetto specificati.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : System.Web.Hosting.IApplicationHost * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appHost, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="2bbb4-111">Oggetto <see cref="T:System.Web.Hosting.IApplicationHost" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="2bbb4-112">Tipo di oggetto da creare.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="2bbb4-113">Crea un oggetto per il dominio applicazione specificato, in base al tipo.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-114">Nuovo oggetto del tipo specificato in <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> è stato introdotto in .NET Framework versione 3.5.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="2bbb4-116">Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="2bbb4-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2bbb4-117">Non esiste un percorso fisico per l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bbb4-118"><paramref name="appHost" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2bbb4-119">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-119">\- or -</span></span> 
 <span data-ttu-id="2bbb4-120"><paramref name="type" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="2bbb4-121">Identificatore univoco dell'applicazione a cui appartiene l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="2bbb4-122">Tipo di oggetto da creare.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="2bbb4-123">Percorso virtuale dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="2bbb4-124">Percorso fisico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-124">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="2bbb4-125"><see langword="true" /> per generare un'eccezione se un oggetto del tipo specificato è attualmente registrato, <see langword="false" /> per restituire l'oggetto registrato del tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="2bbb4-126">Crea un oggetto per il dominio applicazione specificato in base al tipo, ai percorsi fisico e virtuale e a un valore booleano che indica un comportamento di errore quando un oggetto del tipo specificato esiste già.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-127">Nuovo oggetto di <paramref name="type" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-128">Il <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo viene utilizzato per creare e registrare gli oggetti nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="2bbb4-129">Un solo oggetto di ogni tipo può essere creato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-129">Only one object of each type can be created.</span></span> <span data-ttu-id="2bbb4-130">Se è necessario creare più oggetti dello stesso tipo, è necessario implementare una object factory.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="2bbb4-131">Per altre informazioni, vedere l'esempio di codice in questo argomento.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="2bbb4-132">Ogni applicazione, identificato da un identificatore univoco dell'applicazione, viene eseguita nel proprio dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="2bbb4-133">Il <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo crea un oggetto del tipo specificato nel dominio dell'applicazione dell'applicazione specificata nel `appID` parametro.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="2bbb4-134">Se non esiste un dominio dell'applicazione per l'applicazione specificata, ne viene creato prima che l'oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="2bbb4-135">Il `failIfExists` parametro controlla il comportamento del <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo quando nell'applicazione esiste già un oggetto del tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="2bbb4-136">Quando `failIfExists` viene `true`, il <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo genera un <xref:System.InvalidOperationException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="2bbb4-137">Quando `failIfExists` viene `false`, il <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo restituisce l'oggetto registrato esistente del tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="2bbb4-138">Il <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo chiama l'overload che accetta un ulteriore `throwOnError` parametro con `throwOnError` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bbb4-139">Esempio di codice seguente è un'implementazione del modello di progettazione di oggetti factory per gli oggetti registrati.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="2bbb4-140">Usando il modello di factory consente di registrare più istanze di un oggetto.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="2bbb4-141">L'esempio contiene due oggetti: `SampleComponent`, che rappresenta l'oggetto applicazione utilizzerà più istanze, e `SampleComponentFactory`, che gestisce un elenco di `SampleComponent` istanze.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2bbb4-142"><paramref name="physicalPath" /> è <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="2bbb4-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="2bbb4-143">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-143">\- or -</span></span> 
 <span data-ttu-id="2bbb4-144"><paramref name="physicalPath" /> non è un percorso di applicazione valido.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="2bbb4-145">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-145">\- or -</span></span> 
 <span data-ttu-id="2bbb4-146"><paramref name="type" /> non implementa l'interfaccia <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bbb4-147"><paramref name="appID" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2bbb4-148">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-148">\- or -</span></span> 
 <span data-ttu-id="2bbb4-149"><paramref name="type" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2bbb4-150"><paramref name="failIfExists" /> è <see langword="true" /> e un oggetto del tipo specificato è già registrato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="2bbb4-151">Identificatore univoco dell'applicazione a cui appartiene l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="2bbb4-152">Tipo di oggetto da creare.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="2bbb4-153">Percorso virtuale dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="2bbb4-154">Percorso fisico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-154">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="2bbb4-155"><see langword="true" /> per generare un'eccezione se un oggetto del tipo specificato è attualmente registrato, <see langword="false" /> per restituire l'oggetto registrato del tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="2bbb4-156"><see langword="true" /> per generare eccezioni provocate da errori di inizializzazione dell'host, <see langword="false" /> per non generare tali eccezioni.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="2bbb4-157">Crea un oggetto per il dominio applicazione specificato in base al tipo, ai percorsi fisico e virtuale, a un valore booleano che indica un comportamento di errore quando un oggetto del tipo specificato esiste già e a un altro valore booleano che indica se vengono generate eccezioni provocate da errori di inizializzazione dell'host.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-158">Nuovo oggetto di <paramref name="type" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-159">Questo overload del metodo di <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo fornisce il `throwOnError` parametro, che consente di controllare se vengono generate eccezioni di inizializzazione host.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="2bbb4-160">L'overload dei metodi di <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodo che non fornisce `throwOnError` chiamate a questo overload con il parametro impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2bbb4-161"><paramref name="physicalPath" /> è <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="2bbb4-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="2bbb4-162">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-162">\- or -</span></span> 
 <span data-ttu-id="2bbb4-163"><paramref name="physicalPath" /> non è un percorso di applicazione valido.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="2bbb4-164">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-164">\- or -</span></span> 
 <span data-ttu-id="2bbb4-165"><paramref name="type" /> non implementa l'interfaccia <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bbb4-166"><paramref name="appID" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2bbb4-167">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-167">\- or -</span></span> 
 <span data-ttu-id="2bbb4-168"><paramref name="type" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2bbb4-169"><paramref name="failIfExists" /> è <see langword="true" /> e un oggetto del tipo specificato è già registrato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bbb4-170">Ottiene il dominio applicazione di un'applicazione specificata.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : string -&gt; AppDomain" Usage="applicationManager.GetAppDomain appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="2bbb4-171">Identificatore univoco dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="2bbb4-172">Ottiene il dominio applicazione dell'applicazione specificata.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-173">Dominio applicazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : System.Web.Hosting.IApplicationHost -&gt; AppDomain" Usage="applicationManager.GetAppDomain appHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="2bbb4-174">Host per cui ottenere il dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="2bbb4-175">Ottiene il dominio applicazione di un'applicazione utilizzando l'host specificato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-176">Dominio applicazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberSignature Language="F#" Value="static member GetApplicationManager : unit -&gt; System.Web.Hosting.ApplicationManager" Usage="System.Web.Hosting.ApplicationManager.GetApplicationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bbb4-177">Restituisce la singola istanza dell'oggetto <see cref="T:System.Web.Hosting.ApplicationManager" /> associato a questo processo host ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-178">Singola istanza dell'oggetto <see cref="T:System.Web.Hosting.ApplicationManager" /> associato al processo host ASP.NET in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-179">Solo un'istanza del <xref:System.Web.Hosting.ApplicationManager> oggetto creato da un processo host ASP.NET nel dominio applicazione predefinito.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="2bbb4-180">Se un'istanza del <xref:System.Web.Hosting.ApplicationManager> classe non è disponibile, il <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metodo prima di tutto crea un'istanza del <xref:System.Web.Hosting.ApplicationManager> classe e quindi restituisce l'oggetto appena creato.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="2bbb4-181">Se un'istanza del <xref:System.Web.Hosting.ApplicationManager> classe creata in precedenza, il <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metodo restituisce l'oggetto esistente.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bbb4-182">Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metodo per recuperare il <xref:System.Web.Hosting.ApplicationManager> istanza per un'applicazione Web.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetObject : string * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.GetObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="2bbb4-183">Identificatore univoco dell'applicazione a cui appartiene l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="2bbb4-184">Tipo di oggetto da restituire.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="2bbb4-185">Restituisce l'oggetto registrato del tipo specificato dall'applicazione specificata.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-186">Oggetto registrato del tipo specificato o <see langword="null" /> se il tipo non è stato registrato mediante una chiamata al metodo <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bbb4-187"><paramref name="appId" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2bbb4-188">oppure</span><span class="sxs-lookup"><span data-stu-id="2bbb4-188">-or-</span></span> 
 <span data-ttu-id="2bbb4-189"><paramref name="type" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberSignature Language="F#" Value="member this.GetRunningApplications : unit -&gt; System.Web.Hosting.ApplicationInfo[]" Usage="applicationManager.GetRunningApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bbb4-190">Restituisce uno snapshot delle applicazioni in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-191">Matrice di oggetti <see cref="T:System.Web.Hosting.ApplicationInfo" /> che contiene informazioni sulle applicazioni gestite da questa istanza <see cref="T:System.Web.Hosting.ApplicationManager" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2bbb4-192">Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> metodo per visualizzare informazioni sulle applicazioni gestite da un <xref:System.Web.Hosting.ApplicationManager> istanza.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="applicationManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bbb4-193">Fornisce una durata infinita al dominio applicazione impedendo la creazione di lease.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-194">Sempre <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-195">Questo metodo esegue l'override di <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metodo nella classe base.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="2bbb4-196">Restituisce sempre `null` e pertanto impedisce la creazione di lease per limita la durata del dominio dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="member this.IsIdle : unit -&gt; bool" Usage="applicationManager.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bbb4-197">Restituisce un valore che indica se tutte le applicazioni contenute dal processo sono inattive e non stanno elaborando alcuna richiesta.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns><span data-ttu-id="2bbb4-198"><see langword="true" /> se tutte le applicazioni nel processo sono inattive. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-199">Il <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> restituzione del metodo `true` se tutte le applicazioni contenute dal processo sono inattive.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="applicationManager.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bbb4-200">Effettua un incremento thread-safe del numero dei riferimenti utente dell'istanza ApplicationManager.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberSignature Language="F#" Value="member this.ShutdownAll : unit -&gt; unit" Usage="applicationManager.ShutdownAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bbb4-201">Scarica tutte le risorse dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-202">Chiama il <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> metodo è equivalente alla chiamata il <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> in tutti i domini di applicazione gestita da questo metodo <xref:System.Web.Hosting.ApplicationManager> istanza; tuttavia, il <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> metodo può essere chiamato dall'esterno dei domini di applicazione gestita.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.ShutdownApplication : string -&gt; unit" Usage="applicationManager.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="2bbb4-203">Identificatore univoco dell'applicazione da scaricare.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="2bbb4-204">Scarica l'applicazione specificata.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bbb4-205">Chiama il <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> metodo è equivalente alla chiamata il <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> metodo per un dominio applicazione specifico; tuttavia, il <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> metodo può essere chiamato da domini di applicazione gestita all'esterno.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bbb4-206"><paramref name="appId" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.StopObject : string * Type -&gt; unit" Usage="applicationManager.StopObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="2bbb4-207">Identificatore univoco dell'applicazione a cui appartiene l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="2bbb4-208">Tipo di oggetto da scaricare.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="2bbb4-209">Rimuove l'oggetto specificato dall'elenco degli oggetti registrati in un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="2bbb4-210">Se l'oggetto da rimuovere è l'ultimo nell'elenco degli oggetti registrati in un'applicazione, quest'ultima viene scaricata.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bbb4-211"><paramref name="appId" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2bbb4-212">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="2bbb4-212">\- or -</span></span> 
 <span data-ttu-id="2bbb4-213"><paramref name="type" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bbb4-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>