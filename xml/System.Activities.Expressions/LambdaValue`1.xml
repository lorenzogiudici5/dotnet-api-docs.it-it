<Type Name="LambdaValue&lt;TResult&gt;" FullName="System.Activities.Expressions.LambdaValue&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0eba326f113c23699f2c040d44d65872735cb001" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39839735" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LambdaValue&lt;TResult&gt; : System.Activities.CodeActivity&lt;TResult&gt;, System.Activities.XamlIntegration.IValueSerializableExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LambdaValue`1&lt;TResult&gt; extends System.Activities.CodeActivity`1&lt;!TResult&gt; implements class System.Activities.XamlIntegration.IValueSerializableExpression" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Expressions.LambdaValue`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LambdaValue(Of TResult)&#xA;Inherits CodeActivity(Of TResult)&#xA;Implements IValueSerializableExpression" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class LambdaValue sealed : System::Activities::CodeActivity&lt;TResult&gt;, System::Activities::XamlIntegration::IValueSerializableExpression" />
  <TypeSignature Language="F#" Value="type LambdaValue&lt;'Result&gt; = class&#xA;    inherit CodeActivity&lt;'Result&gt;&#xA;    interface IValueSerializableExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.CodeActivity&lt;TResult&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">TResult</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.XamlIntegration.IValueSerializableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">Tipo di valore restituito dall'espressione.</typeparam>
    <summary>Rappresenta un'espressione lambda utilizzata come r-value, che supporta l'associazione di argomenti <see cref="F:System.Activities.ArgumentDirection.In" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Expressions.LambdaValue%601> viene utilizzato per le espressioni lambda specificate nel codice e non può essere serializzato in XAML. Se viene effettuato un tentativo di serializzare un flusso di lavoro che contiene un oggetto <xref:System.Activities.Expressions.LambdaValue%601>, viene generato un oggetto <xref:System.Activities.Expressions.LambdaSerializationException>. Se il flusso di lavoro contenitore richiede la serializzazione XAML, utilizzare <xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601> o utilizzare <xref:System.Activities.Expressions.ExpressionServices> per convertire <xref:System.Activities.Expressions.LambdaValue%601> in un formato che può essere serializzato.  
  
 Questa attività Usa il provider di entità LINQ to per valutare le espressioni LINQ. Qualsiasi espressione di LINQ utilizzate con questa attività devono essere analizzabile da ADO.Net Entity Data Model. Ad esempio, espressioni LINQ non possono essere utilizzate per fare riferimento le attività, variabili o argomenti del flusso di lavoro stesso.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LambdaValue (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,TResult&gt;&gt; lambdaValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, !TResult&gt;&gt; lambdaValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.LambdaValue`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lambdaValue As Expression(Of Func(Of ActivityContext, TResult)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LambdaValue(System::Linq::Expressions::Expression&lt;Func&lt;System::Activities::ActivityContext ^, TResult&gt; ^&gt; ^ lambdaValue);" />
      <MemberSignature Language="F#" Value="new System.Activities.Expressions.LambdaValue&lt;'Result&gt; : System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext, 'Result&gt;&gt; -&gt; System.Activities.Expressions.LambdaValue&lt;'Result&gt;" Usage="new System.Activities.Expressions.LambdaValue&lt;'Result&gt; lambdaValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lambdaValue" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="lambdaValue">Espressione lambda che rappresenta il valore di <see cref="T:System.Activities.Expressions.LambdaValue`1" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Activities.Expressions.LambdaValue`1" /> con l'espressione specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.LambdaValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::CodeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.CodeActivityMetadata -&gt; unit" Usage="lambdaValue.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertToString (context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="lambdaValue.CanConvertToString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
        <summary>Questo metodo restituisce sempre <see langword="true" /> e viene utilizzato insieme a <see cref="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" /> per fornire messaggi di errore descrittivi quando viene effettuato un tentativo di serializzare questa attività in XAML.</summary>
        <returns>Questo metodo restituisce sempre <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Expressions.LambdaValue%601> viene utilizzato per le espressioni lambda specificate nel codice e non può essere serializzato in XAML. Se viene effettuato un tentativo di serializzare un flusso di lavoro che contiene un oggetto <xref:System.Activities.Expressions.LambdaValue%601>, viene generato un oggetto <xref:System.Activities.Expressions.LambdaSerializationException>. Se il flusso di lavoro contenitore richiede la serializzazione XAML, utilizzare <xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601> o utilizzare <xref:System.Activities.Expressions.ExpressionServices> per convertire <xref:System.Activities.Expressions.LambdaValue%601> in un formato che può essere serializzato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="lambdaValue.ConvertToString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
        <summary>Genera un oggetto <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> e viene utilizzato insieme a <see cref="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" /> per fornire messaggi di errore descrittivi quando viene effettuato un tentativo di serializzare questa attività in XAML.</summary>
        <returns>Se chiamato, genera un oggetto <see cref="T:System.Activities.Expressions.LambdaSerializationException" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Expressions.LambdaValue%601> viene utilizzato per le espressioni lambda specificate nel codice e non può essere serializzato in XAML. Se viene effettuato un tentativo di serializzare un flusso di lavoro che contiene un oggetto <xref:System.Activities.Expressions.LambdaValue%601>, viene generato un oggetto <xref:System.Activities.Expressions.LambdaSerializationException>. Se il flusso di lavoro contenitore richiede la serializzazione XAML, utilizzare <xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601> o utilizzare <xref:System.Activities.Expressions.ExpressionServices> per convertire <xref:System.Activities.Expressions.LambdaValue%601> in un formato che può essere serializzato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override TResult Execute (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance !TResult Execute(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.LambdaValue`1.Execute(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (context As CodeActivityContext) As TResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override TResult Execute(System::Activities::CodeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Activities.CodeActivityContext -&gt; 'Result" Usage="lambdaValue.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>