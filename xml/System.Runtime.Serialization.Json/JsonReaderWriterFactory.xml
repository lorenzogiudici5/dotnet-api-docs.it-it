<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="06938-101">Produce istanze di <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati codificati con JSON (JavaScript Object Notation) da un flusso o da un buffer e mapparli a un InfoSet XML, nonché istanze di <see cref="T:System.Xml.XmlDictionaryWriter" /> in grado di mappare un InfoSet XML a JSON e scrivere dati con codifica JSON in un flusso.</span><span class="sxs-lookup"><span data-stu-id="06938-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="06938-102"> elabora i messaggi JSON mediante un mapping tra i dati JSON e l'InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-102"> processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="06938-103">In genere, si tratta di un'operazione nascosta.</span><span class="sxs-lookup"><span data-stu-id="06938-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="06938-104">In alcuni scenari avanzati, può tuttavia essere necessario eseguire manualmente la conversione tra JSON e XML.</span><span class="sxs-lookup"><span data-stu-id="06938-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="06938-105">In questo caso, è possibile utilizzare la classe <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> per creare i lettori e i writer XML necessari.</span><span class="sxs-lookup"><span data-stu-id="06938-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="06938-106">Si noti che non tutti gli elementi InfoSet XML possono essere mappati a JSON. </span><span class="sxs-lookup"><span data-stu-id="06938-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> <span data-ttu-id="06938-107">Per ulteriori informazioni sul mapping, vedere [procedura: serializzare e deserializzare dati JSON](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="06938-107">For more information about mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06938-108">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare flussi o buffer codificati con JSON (JavaScript Object Notation) a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-109">Ogni overload utilizza una classe <xref:System.Xml.XmlDictionaryReaderQuotas> per impedire attacchi di tipo Denial of Service (DoS) durante la lettura di dati non attendibili.</span><span class="sxs-lookup"><span data-stu-id="06938-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> <span data-ttu-id="06938-110">Per ulteriori informazioni sull'utilizzo <xref:System.Xml.XmlDictionaryReaderQuotas> per impedire attacchi Denial of Service durante la lettura dei dati non attendibili, vedere [considerazioni sulla sicurezza per i dati](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="06938-110">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="06938-111">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</span><span class="sxs-lookup"><span data-stu-id="06938-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="06938-112">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</span><span class="sxs-lookup"><span data-stu-id="06938-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="06938-113">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="06938-114">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di elaborare dati JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="06938-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-115">Questo overload non accetta <xref:System.Text.Encoding> come parametro.</span><span class="sxs-lookup"><span data-stu-id="06938-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="06938-116">La codifica dei caratteri (UTF-8, Unicode o Unicode big-endian) viene rilevata automaticamente al momento della lettura dei dati.</span><span class="sxs-lookup"><span data-stu-id="06938-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="06938-117">Per ulteriori informazioni sull'utilizzo <xref:System.Xml.XmlDictionaryReaderQuotas> per impedire attacchi Denial of Service durante la lettura dei dati non attendibili, vedere [considerazioni sulla sicurezza per i dati](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="06938-117">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="06938-118">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</span><span class="sxs-lookup"><span data-stu-id="06938-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="06938-119">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</span><span class="sxs-lookup"><span data-stu-id="06938-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="06938-120">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare flussi codificati con JSON (JavaScript Object Notation) a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="06938-121">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="06938-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-122">Questo overload non accetta <xref:System.Text.Encoding> come parametro.</span><span class="sxs-lookup"><span data-stu-id="06938-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="06938-123">La codifica dei caratteri (UTF-8, Unicode o Unicode big-endian) viene rilevata automaticamente al momento della lettura dei dati.</span><span class="sxs-lookup"><span data-stu-id="06938-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="06938-124">Per ulteriori informazioni sull'utilizzo <xref:System.Xml.XmlDictionaryReaderQuotas> per impedire attacchi Denial of Service durante la lettura dei dati non attendibili, vedere [considerazioni sulla sicurezza per i dati](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="06938-124">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="06938-125">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</span><span class="sxs-lookup"><span data-stu-id="06938-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="06938-126">Posizione iniziale dalla quale leggere in <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="06938-126">Starting position from which to read in <c>buffer</c>.</span></span></param>
        <param name="count"><span data-ttu-id="06938-127">Numero di byte che possono essere letti da <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="06938-127">Number of bytes that can be read from <c>buffer</c>.</span></span></param>
        <param name="quotas"><span data-ttu-id="06938-128">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</span><span class="sxs-lookup"><span data-stu-id="06938-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="06938-129">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) e con dimensioni e offset specificati a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="06938-130">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="06938-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-131">Questo overload non accetta <xref:System.Text.Encoding> come parametro.</span><span class="sxs-lookup"><span data-stu-id="06938-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="06938-132">La codifica dei caratteri (UTF-8, Unicode o Unicode big-endian) viene rilevata automaticamente al momento della lettura dei dati.</span><span class="sxs-lookup"><span data-stu-id="06938-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="06938-133">Per ulteriori informazioni sull'utilizzo <xref:System.Xml.XmlDictionaryReaderQuotas> per impedire attacchi Denial of Service durante la lettura dei dati non attendibili, vedere [considerazioni sulla sicurezza per i dati](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="06938-133">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="06938-134">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</span><span class="sxs-lookup"><span data-stu-id="06938-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="06938-135">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal lettore.</span><span class="sxs-lookup"><span data-stu-id="06938-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="06938-136">Se come valore è specificato <see langword="null" />, il lettore tenta di rilevare automaticamente la codifica.</span><span class="sxs-lookup"><span data-stu-id="06938-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="06938-137">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</span><span class="sxs-lookup"><span data-stu-id="06938-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="06938-138">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="06938-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span></param>
        <summary><span data-ttu-id="06938-139">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare flussi codificati con JSON (JavaScript Object Notation) e con dimensioni e offset specificati a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="06938-140">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="06938-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-141">Per ulteriori informazioni sull'utilizzo <xref:System.Xml.XmlDictionaryReaderQuotas> per impedire attacchi Denial of Service durante la lettura dei dati non attendibili, vedere [considerazioni sulla sicurezza per i dati](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="06938-141">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="06938-142">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</span><span class="sxs-lookup"><span data-stu-id="06938-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="06938-143">Posizione iniziale dalla quale leggere in <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="06938-143">Starting position from which to read in <c>buffer</c>.</span></span></param>
        <param name="count"><span data-ttu-id="06938-144">Numero di byte che possono essere letti da <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="06938-144">Number of bytes that can be read from <c>buffer</c>.</span></span></param>
        <param name="encoding"><span data-ttu-id="06938-145">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal lettore.</span><span class="sxs-lookup"><span data-stu-id="06938-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="06938-146">Se come valore è specificato <see langword="null" />, il lettore tenta di rilevare automaticamente la codifica.</span><span class="sxs-lookup"><span data-stu-id="06938-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="06938-147">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</span><span class="sxs-lookup"><span data-stu-id="06938-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="06938-148">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="06938-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span> <span data-ttu-id="06938-149">Il valore predefinito è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06938-149">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="06938-150">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) e con dimensioni, offset e codifica dei caratteri specificati a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="06938-151">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="06938-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-152">Per ulteriori informazioni sull'utilizzo <xref:System.Xml.XmlDictionaryReaderQuotas> per impedire attacchi Denial of Service durante la lettura dei dati non attendibili, vedere [considerazioni sulla sicurezza per i dati](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="06938-152">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06938-153">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso.</span><span class="sxs-lookup"><span data-stu-id="06938-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-154">Il metodo statico <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> restituisce un'istanza di <xref:System.Xml.XmlDictionaryWriter> in grado di mappare un InfoSet XML a un flusso JSON.</span><span class="sxs-lookup"><span data-stu-id="06938-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="06938-155"><xref:System.Xml.XmlDictionaryWriter> non produce necessariamente JSON valido.</span><span class="sxs-lookup"><span data-stu-id="06938-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="06938-156">Se viene utilizzata in un modo non supportato dal mapping JSON-XML, è possibile che venga generata un'eccezione o che venga scritto un documento JSON non valido.</span><span class="sxs-lookup"><span data-stu-id="06938-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="06938-157">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</span><span class="sxs-lookup"><span data-stu-id="06938-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <summary><span data-ttu-id="06938-158">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso.</span><span class="sxs-lookup"><span data-stu-id="06938-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <returns><span data-ttu-id="06938-159">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-160">La codifica dei caratteri predefinita è UTF-8.</span><span class="sxs-lookup"><span data-stu-id="06938-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="06938-161">Alla chiusura del writer, anche il flusso viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="06938-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="06938-162">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</span><span class="sxs-lookup"><span data-stu-id="06938-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="06938-163">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer.</span><span class="sxs-lookup"><span data-stu-id="06938-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="06938-164">La codifica predefinita è UTF-8.</span><span class="sxs-lookup"><span data-stu-id="06938-164">The default encoding is UTF-8.</span></span></param>
        <summary><span data-ttu-id="06938-165">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con una codifica dei caratteri specificata.</span><span class="sxs-lookup"><span data-stu-id="06938-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="06938-166">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06938-167">Alla chiusura del writer, anche il flusso viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="06938-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="06938-168">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</span><span class="sxs-lookup"><span data-stu-id="06938-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="06938-169">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer.</span><span class="sxs-lookup"><span data-stu-id="06938-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="06938-170">La codifica predefinita è UTF-8.</span><span class="sxs-lookup"><span data-stu-id="06938-170">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="06938-171">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06938-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="06938-172">Il valore predefinito è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06938-172">The default value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="06938-173">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con una codifica dei caratteri specificata.</span><span class="sxs-lookup"><span data-stu-id="06938-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="06938-174">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="06938-175">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</span><span class="sxs-lookup"><span data-stu-id="06938-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="06938-176">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer.</span><span class="sxs-lookup"><span data-stu-id="06938-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="06938-177">La codifica predefinita è UTF-8.</span><span class="sxs-lookup"><span data-stu-id="06938-177">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="06938-178">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06938-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="06938-179">Il valore predefinito è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06938-179">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="06938-180">Se <see langword="true" />, nell'output viene utilizzato il formato multiriga, impostando un adeguato rientro per ogni livello; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06938-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="06938-181">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con un carattere specificato.</span><span class="sxs-lookup"><span data-stu-id="06938-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="06938-182">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="06938-183">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</span><span class="sxs-lookup"><span data-stu-id="06938-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="06938-184">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer.</span><span class="sxs-lookup"><span data-stu-id="06938-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="06938-185">La codifica predefinita è UTF-8.</span><span class="sxs-lookup"><span data-stu-id="06938-185">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="06938-186">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06938-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="06938-187">Il valore predefinito è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06938-187">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="06938-188">Se <see langword="true" />, nell'output viene utilizzato il formato multiriga, impostando un adeguato rientro per ogni livello; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06938-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <param name="indentChars"><span data-ttu-id="06938-189">Stringa utilizzata per impostare un rientro per ogni livello.</span><span class="sxs-lookup"><span data-stu-id="06938-189">The string used to indent each level.</span></span></param>
        <summary><span data-ttu-id="06938-190">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con un carattere specificato.</span><span class="sxs-lookup"><span data-stu-id="06938-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="06938-191">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</span><span class="sxs-lookup"><span data-stu-id="06938-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>