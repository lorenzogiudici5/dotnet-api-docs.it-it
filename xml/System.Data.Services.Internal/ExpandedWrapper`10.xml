<Type Name="ExpandedWrapper&lt;TExpandedElement,TProperty0,TProperty1,TProperty2,TProperty3,TProperty4,TProperty5,TProperty6,TProperty7,TProperty8&gt;" FullName="System.Data.Services.Internal.ExpandedWrapper&lt;TExpandedElement,TProperty0,TProperty1,TProperty2,TProperty3,TProperty4,TProperty5,TProperty6,TProperty7,TProperty8&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41bbfdd2f78fc746e64116526360c17f6d17dae1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36683837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpandedWrapper&lt;TExpandedElement,TProperty0,TProperty1,TProperty2,TProperty3,TProperty4,TProperty5,TProperty6,TProperty7,TProperty8&gt; : System.Data.Services.Internal.ExpandedWrapper&lt;TExpandedElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpandedWrapper`10&lt;TExpandedElement, TProperty0, TProperty1, TProperty2, TProperty3, TProperty4, TProperty5, TProperty6, TProperty7, TProperty8&gt; extends System.Data.Services.Internal.ExpandedWrapper`1&lt;!TExpandedElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Internal.ExpandedWrapper`10" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpandedWrapper(Of TExpandedElement, TProperty0, TProperty1, TProperty2, TProperty3, TProperty4, TProperty5, TProperty6, TProperty7, TProperty8)&#xA;Inherits ExpandedWrapper(Of TExpandedElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TExpandedElement, typename TProperty0, typename TProperty1, typename TProperty2, typename TProperty3, typename TProperty4, typename TProperty5, typename TProperty6, typename TProperty7, typename TProperty8&gt;&#xA;public ref class ExpandedWrapper sealed : System::Data::Services::Internal::ExpandedWrapper&lt;TExpandedElement&gt;" />
  <TypeSignature Language="F#" Value="type ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt; = class&#xA;    inherit ExpandedWrapper&lt;'ExpandedElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TExpandedElement" />
    <TypeParameter Name="TProperty0" />
    <TypeParameter Name="TProperty1" />
    <TypeParameter Name="TProperty2" />
    <TypeParameter Name="TProperty3" />
    <TypeParameter Name="TProperty4" />
    <TypeParameter Name="TProperty5" />
    <TypeParameter Name="TProperty6" />
    <TypeParameter Name="TProperty7" />
    <TypeParameter Name="TProperty8" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Services.Internal.ExpandedWrapper&lt;TExpandedElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TExpandedElement">TExpandedElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TExpandedElement">
      <span data-ttu-id="ecc87-101">Tipo dell'elemento espanso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-101">The type of the expanded element.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty0">
      <span data-ttu-id="ecc87-102">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-102">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty1">
      <span data-ttu-id="ecc87-103">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-103">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty2">
      <span data-ttu-id="ecc87-104">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-104">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty3">
      <span data-ttu-id="ecc87-105">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-105">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty4">
      <span data-ttu-id="ecc87-106">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-106">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty5">
      <span data-ttu-id="ecc87-107">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-107">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty6">
      <span data-ttu-id="ecc87-108">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-108">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty7">
      <span data-ttu-id="ecc87-109">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-109">The type of the property to expand.</span>
      </span>
    </typeparam>
    <typeparam name="TProperty8">
      <span data-ttu-id="ecc87-110">Tipo della proprietà da espandere.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-110">The type of the property to expand.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ecc87-111">Questa classe è utilizzata internamente dal sistema per implementare il supporto delle query con caricamento eager delle entità correlate.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecc87-111">This class is used internally by the system to implement support for queries with eager loading of related entities.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecc87-112">Lo spazio dei nomi include numerose variazioni del `ExpandedWrapper` classe.</span><span class="sxs-lookup"><span data-stu-id="ecc87-112">The namespace includes a number of variations of the `ExpandedWrapper` class.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandedWrapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Internal.ExpandedWrapper`10.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandedWrapper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-113">Crea un'istanza della classe <see cref="T:System.Data.Services.Internal.ExpandedWrapper`10" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-113">Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`10" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InternalGetExpandedPropertyValue">
      <MemberSignature Language="C#" Value="protected override object InternalGetExpandedPropertyValue (int nameIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object InternalGetExpandedPropertyValue(int32 nameIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Internal.ExpandedWrapper`10.InternalGetExpandedPropertyValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InternalGetExpandedPropertyValue (nameIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ InternalGetExpandedPropertyValue(int nameIndex);" />
      <MemberSignature Language="F#" Value="override this.InternalGetExpandedPropertyValue : int -&gt; obj" Usage="expandedWrapper.InternalGetExpandedPropertyValue nameIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nameIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty0">
      <MemberSignature Language="C#" Value="public TProperty0 ProjectedProperty0 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty0 ProjectedProperty0" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty0" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty0 As TProperty0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty0 ProjectedProperty0 { TProperty0 get(); void set(TProperty0 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty0 : 'TProperty0 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty0</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-114">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-114">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-115">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-115">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty1">
      <MemberSignature Language="C#" Value="public TProperty1 ProjectedProperty1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty1 ProjectedProperty1" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty1" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty1 As TProperty1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty1 ProjectedProperty1 { TProperty1 get(); void set(TProperty1 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty1 : 'TProperty1 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-116">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-116">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-117">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-117">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty2">
      <MemberSignature Language="C#" Value="public TProperty2 ProjectedProperty2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty2 ProjectedProperty2" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty2" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty2 As TProperty2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty2 ProjectedProperty2 { TProperty2 get(); void set(TProperty2 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty2 : 'TProperty2 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-118">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-118">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-119">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-119">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty3">
      <MemberSignature Language="C#" Value="public TProperty3 ProjectedProperty3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty3 ProjectedProperty3" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty3" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty3 As TProperty3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty3 ProjectedProperty3 { TProperty3 get(); void set(TProperty3 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty3 : 'TProperty3 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-120">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-120">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-121">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-121">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty4">
      <MemberSignature Language="C#" Value="public TProperty4 ProjectedProperty4 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty4 ProjectedProperty4" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty4" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty4 As TProperty4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty4 ProjectedProperty4 { TProperty4 get(); void set(TProperty4 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty4 : 'TProperty4 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-122">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-122">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-123">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-123">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty5">
      <MemberSignature Language="C#" Value="public TProperty5 ProjectedProperty5 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty5 ProjectedProperty5" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty5" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty5 As TProperty5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty5 ProjectedProperty5 { TProperty5 get(); void set(TProperty5 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty5 : 'TProperty5 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-124">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-124">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-125">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-125">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty6">
      <MemberSignature Language="C#" Value="public TProperty6 ProjectedProperty6 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty6 ProjectedProperty6" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty6" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty6 As TProperty6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty6 ProjectedProperty6 { TProperty6 get(); void set(TProperty6 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty6 : 'TProperty6 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-126">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-126">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-127">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-127">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty7">
      <MemberSignature Language="C#" Value="public TProperty7 ProjectedProperty7 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty7 ProjectedProperty7" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty7" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty7 As TProperty7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty7 ProjectedProperty7 { TProperty7 get(); void set(TProperty7 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty7 : 'TProperty7 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-128">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-128">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-129">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-129">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty8">
      <MemberSignature Language="C#" Value="public TProperty8 ProjectedProperty8 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty8 ProjectedProperty8" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty8" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty8 As TProperty8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty8 ProjectedProperty8 { TProperty8 get(); void set(TProperty8 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty8 : 'TProperty8 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1, 'TProperty2, 'TProperty3, 'TProperty4, 'TProperty5, 'TProperty6, 'TProperty7, 'TProperty8&gt;.ProjectedProperty8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty8</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecc87-130">Ottiene o imposta la proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-130">Get or sets the property to expand.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecc87-131">Proprietà da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecc87-131">The property to expand.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>