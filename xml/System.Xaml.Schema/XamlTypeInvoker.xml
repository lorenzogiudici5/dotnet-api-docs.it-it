<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd266704ee3fe75b84f3b0e3aa578f64c1e8009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36445044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <TypeSignature Language="F#" Value="type XamlTypeInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="769e1-101">Fornisce un punto di estensione che può costruire le istanze di un tipo XAML con tecniche diverse dalla reflection e dai costruttori.</span>
      <span class="sxs-lookup">
        <span data-stu-id="769e1-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-102">Lo scopo della <xref:System.Xaml.Schema.XamlTypeInvoker> consiste nell'abilitare un sistema di tipi XAML estensibile, schema e un runtime che non si basa interamente sulle funzionalità di Common Language Runtime, ad esempio attributi CLR, informazioni sulla reflection tramite lavoro <xref:System.Type> e <xref:System.Reflection.MemberInfo>e così via.</span><span class="sxs-lookup"><span data-stu-id="769e1-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="769e1-103">Le sottoclassi di <xref:System.Xaml.Schema.XamlTypeInvoker> vengono utilizzati come parametri di input per i costruttori delle classi di schema XAML alternativi, ad esempio <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="769e1-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="769e1-104">Si crea una sottoclasse <xref:System.Xaml.XamlType> e passare il <xref:System.Xaml.Schema.XamlTypeInvoker> tramite al costruttore di base.</span><span class="sxs-lookup"><span data-stu-id="769e1-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="769e1-105">Oltre a definire un <xref:System.Xaml.Schema.XamlTypeInvoker> per il costruttore, è necessario fornire anche le sostituzioni per almeno alcune delle `Lookup` metodi di <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="769e1-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="769e1-106"><xref:System.Xaml.Schema.XamlTypeInvoker> ha un'implementazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="769e1-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="769e1-107">L'implementazione predefinita segue un modello simile per l'implementazione predefinita di tipi dello schema XAML <xref:System.Xaml.XamlType> e <xref:System.Xaml.XamlMember>: il sistema di tipi CLR viene utilizzato per la creazione di istanze, i valori e le ricerche, incluso l'uso di attributi CLR, <xref:System.Type> e<xref:System.Reflection.MemberInfo>e così via.</span><span class="sxs-lookup"><span data-stu-id="769e1-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="769e1-108"><xref:System.Xaml.Schema.XamlTypeInvoker> fornisce metodi per la creazione di istanze di base (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) e i metodi rilevanti per i tipi in cui la <xref:System.Xaml.XamlType> rappresenta una raccolta, dizionario o una matrice (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="769e1-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="769e1-109">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="769e1-110">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-111">L'implementazione predefinita è vuota.</span><span class="sxs-lookup"><span data-stu-id="769e1-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="769e1-112">Questo costruttore viene richiamato internamente per fornire un valore per <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="769e1-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="769e1-113">Per un <xref:System.Xaml.Schema.XamlTypeInvoker> sottoclasse, è previsto che è utilizzare la <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> firma per la costruzione o fornire una sostituzione che chiama <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> come base.</span><span class="sxs-lookup"><span data-stu-id="769e1-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="769e1-114">Fornire il <xref:System.Xaml.XamlType> implementa un modello predefinito where <xref:System.Xaml.Schema.XamlTypeInvoker> non può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="769e1-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeInvoker : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="new System.Xaml.Schema.XamlTypeInvoker type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="769e1-115">Valore <see cref="T:System.Xaml.XamlType" /> per il tipo XAML specifico relativo all'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="769e1-116">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> in base a un oggetto <see cref="T:System.Xaml.XamlType" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-117">Questo costruttore viene chiamato internamente in base il <xref:System.Xaml.XamlType> in cui il <xref:System.Xaml.Schema.XamlTypeInvoker> viene utilizzato per la costruzione.</span><span class="sxs-lookup"><span data-stu-id="769e1-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="769e1-118">Il `type` fornite di seguito è rilevante per tutte le altre chiamate al metodo per <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="769e1-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="769e1-119">
            <paramref name="type" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-119">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToCollection : obj * obj -&gt; unit&#xA;override this.AddToCollection : obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToCollection (instance, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="769e1-120">Istanza del tipo specificato da <see cref="T:System.Xaml.XamlType" /> per la costruzione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="769e1-121">Elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-121">The item to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="769e1-122">Aggiunge l'elemento fornito a un'istanza del tipo relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-123">È necessario chiamare questo metodo solo su un <xref:System.Xaml.XamlType> che rappresenta una raccolta.</span><span class="sxs-lookup"><span data-stu-id="769e1-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="769e1-124">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlType" /> sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="769e1-125">**-oppure-** Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> in cui il tipo rilevante non è una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-125">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="769e1-126">
            <paramref name="instance" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-126">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="769e1-127">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> per questo oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-127">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="769e1-128">
            <para>L'implementazione di base include una chiamata al supporto interno <c>ThrowIfUnknown</c>. Questo supporto genera sempre un'eccezione per i casi in cui un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basa sconosciuto <see cref="T:System.Xaml.XamlType" />, inclusi i casi nel <see cref="P:System.Xaml.XamlType.UnderlyingType" /> del <see cref="T:System.Xaml.XamlType" /> è <see langword="null" />.  Internamente, le chiamate di implementazione di base <see cref="P:System.Xaml.XamlType.IsCollection" />e genera un'eccezione se il risultato è <see langword="false" />.  L'implementazione di base non necessariamente utilizza un proprio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementazione. Innanzitutto, un cast di <paramref name="instance" /> a <see cref="T:System.Collections.IList" /> viene eseguito un tentativo. Se l'esito è positivo, una chiamata a <see cref="M:System.Collections.IList.Add(System.Object)" /> viene eseguita e il metodo restituisce. In caso contrario, l'implementazione di base utilizza CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> per richiamare sottostante <see langword="Add" /> (metodo), così come ottenuto da una chiamata a <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> per questo <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  Nell'implementazione di base viene generata alcuna eccezione, questo livello se <paramref name="item" /> è <see langword="null" />. È comunque possibile che l'oggetto sottostante <see langword="Add" /> metodo genererà un'eccezione quando viene richiamato. Altre eccezioni in fase di esecuzione sono possibili se <see cref="P:System.Xaml.XamlType.ItemType" /> non restituisce un risultato valido.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-128">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />. It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked. Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToDictionary : obj * obj * obj -&gt; unit&#xA;override this.AddToDictionary : obj * obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToDictionary (instance, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="769e1-129">Istanza del tipo specificato da <see cref="T:System.Xaml.XamlType" /> per la costruzione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-129">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="769e1-130">Chiave del dizionario per l'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-130">Dictionary key for the item to add.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="769e1-131">Valore dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-131">The item value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="769e1-132">Aggiunge la chiave e il valore dell'elemento forniti a un'istanza del tipo relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-132">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-133">È necessario chiamare questo metodo solo su un <xref:System.Xaml.XamlType> che rappresenta un dizionario.</span><span class="sxs-lookup"><span data-stu-id="769e1-133">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="769e1-134">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlType" /> sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-134">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="769e1-135">**-oppure-** Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> in cui il tipo rilevante non è un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-135">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="769e1-136">
            <paramref name="instance" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-136">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="769e1-137">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> per questo oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-137">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="769e1-138">
            <para>L'implementazione di base include una chiamata al supporto interno <c>ThrowIfUnknown</c>. Questo supporto genera sempre un'eccezione per i casi in cui un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basa sconosciuto <see cref="T:System.Xaml.XamlType" />, inclusi i casi nel <see cref="P:System.Xaml.XamlType.UnderlyingType" /> del <see cref="T:System.Xaml.XamlType" /> è <see langword="null" />.  Internamente, le chiamate di implementazione di base <see cref="P:System.Xaml.XamlType.IsDictionary" />e genera un'eccezione se il risultato è <see langword="false" />.  L'implementazione di base non necessariamente utilizza un proprio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementazione. Innanzitutto, un cast di <paramref name="instance" /> a <see cref="T:System.Collections.IDictionary" /> viene eseguito un tentativo. Se l'esito è positivo, una chiamata a <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> viene eseguita e il metodo restituisce. In caso contrario, l'implementazione di base utilizza CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> per richiamare sottostante <see langword="Add" /> (metodo), così come ottenuto da una chiamata a <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> per questo <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  Nell'implementazione di base viene generata alcuna eccezione, questo livello se <paramref name="item" /> oppure <paramref name="key" /> sono <see langword="null" />. È comunque possibile che l'oggetto sottostante <see langword="Add" /> metodo genererà un'eccezione quando viene richiamato. Altre eccezioni in fase di esecuzione sono possibili se <see cref="P:System.Xaml.XamlType.ItemType" /> non restituisce un risultato valido.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-138">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />. It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked. Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj[] -&gt; obj&#xA;override this.CreateInstance : obj[] -&gt; obj" Usage="xamlTypeInvoker.CreateInstance arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="769e1-139">Matrice di oggetti che forniscono <see langword="x:ConstructorArgs" /> per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-139">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span>
          </span>
          <span data-ttu-id="769e1-140">Può essere <see langword="null" /> per tipi che non richiedono né utilizzano <see langword="x:ConstructorArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-140">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="769e1-141">Crea un'istanza dell'oggetto in base all'oggetto <see cref="T:System.Xaml.XamlType" /> in costruzione per l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-141">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="769e1-142">Istanza creata in base all'oggetto <see cref="T:System.Xaml.XamlType" /> in costruzione per l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-142">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="769e1-143">Impossibile risolvere un costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-143">Could not resolve a constructor.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="769e1-144">
            <para>L'implementazione di base include una chiamata al supporto interno <c>ThrowIfUnknown</c>. Questo supporto genera sempre un'eccezione per i casi in cui un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basa sconosciuto <see cref="T:System.Xaml.XamlType" />, inclusi i casi nel <see cref="P:System.Xaml.XamlType.UnderlyingType" /> del <see cref="T:System.Xaml.XamlType" /> è <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-144">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo&#xA;override this.GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetAddMethod contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="769e1-145">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di elemento utilizzato dal metodo <see langword="Add" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-145">
              <see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="769e1-146">Restituisce il metodo <see langword="Add" /> pertinente per un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relativo a un insieme o a un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-146">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="769e1-147">Informazioni <see cref="T:System.Reflection.MethodInfo" /> CLR per il metodo <see langword="Add" /> o null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-147">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-148">Questo metodo deve restituire `null` nei casi in cui la <xref:System.Xaml.XamlType> per questo <xref:System.Xaml.Schema.XamlTypeInvoker> non è una raccolta scrivibile o un dizionario.</span><span class="sxs-lookup"><span data-stu-id="769e1-148">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="769e1-149">In particolare, deve restituire `null` nei casi in cui <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> restituisce `None`.</span><span class="sxs-lookup"><span data-stu-id="769e1-149">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="769e1-150">Se non si accede a un sistema di tipi XAML completamente attendibile, questo metodo ha la possibilità di false report <xref:System.Reflection.MethodInfo> informazioni ai chiamanti.</span><span class="sxs-lookup"><span data-stu-id="769e1-150">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="769e1-151">
            <paramref name="contentType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-151">
              <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="769e1-152">
            <para>Restituisce l'implementazione di base <see langword="null" /> nei casi in cui un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> si basa su sconosciuto <see cref="T:System.Xaml.XamlType" />, che include i casi nel <see cref="P:System.Xaml.XamlType.UnderlyingType" /> del <see cref="T:System.Xaml.XamlType" /> è <see langword="null" />. L'operatore restituisce inoltre <see langword="null" /> se <see cref="P:System.Xaml.XamlType.ItemType" /> è <see langword="null" />.  Le raccolte XAML sono potenzialmente più <see langword="Add" /> metodo, perché una raccolta XAML potenzialmente può supportare più di un tipo di contenuto (vedere <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, oppure vedere <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> per informazioni su un'implementazione di questo concetto in WPF). L'implementazione predefinita utilizza la logica interna per restituire la migliore corrispondenza in base alle firme e il tipo dell'oggetto fornito <paramref name="contentType" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-152">
              <para>The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />. It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.  XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF). The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetEnumeratorMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="769e1-153">Restituisce un oggetto che rappresenta un metodo che può enumerare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-153">Returns an object representing a method that can enumerate over items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="769e1-154">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per un metodo enumeratore o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-154">
              <see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-155">Deve restituire `null` nei casi in cui <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> restituisce `None`.</span><span class="sxs-lookup"><span data-stu-id="769e1-155">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="769e1-156">Se non si accede a un sistema di tipi XAML completamente attendibile, questo metodo ha la possibilità di false report <xref:System.Reflection.MethodInfo> informazioni ai chiamanti.</span><span class="sxs-lookup"><span data-stu-id="769e1-156">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="769e1-157">
            <para>L'implementazione di base chiama un metodo di supporto interno. Tale supporto restituisce <see langword="null" /> nei casi in cui un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> si basa su sconosciuto <see cref="T:System.Xaml.XamlType" />, che include i casi nel <see cref="P:System.Xaml.XamlType.UnderlyingType" /> del <see cref="T:System.Xaml.XamlType" /> è <see langword="null" />. L'operatore restituisce inoltre <see langword="null" /> nei casi in cui <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> restituisce <see langword="None" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-157">
              <para>The base implementation calls an internal helper method. That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />. It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetItems : obj -&gt; System.Collections.IEnumerator&#xA;override this.GetItems : obj -&gt; System.Collections.IEnumerator" Usage="xamlTypeInvoker.GetItems instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="769e1-158">Istanza del tipo specificato da <see cref="T:System.Xaml.XamlType" /> per la costruzione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-158">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="769e1-159">Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che rappresenta il set di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-159">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="769e1-160">Oggetto <see cref="T:System.Collections.IEnumerator" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-160">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="769e1-161">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlType" /> sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-161">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="769e1-162">**-oppure-** Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> in cui il tipo rilevante non è una raccolta o un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-162">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="769e1-163">
            <paramref name="instance" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-163">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="769e1-164">
            <para>L'implementazione di base include una chiamata al supporto interno <c>ThrowIfUnknown</c>. Questo supporto genera sempre un'eccezione per i casi in cui un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basa sconosciuto <see cref="T:System.Xaml.XamlType" />, inclusi i casi nel <see cref="P:System.Xaml.XamlType.UnderlyingType" /> del <see cref="T:System.Xaml.XamlType" /> è <see langword="null" />.  L'implementazione di base non necessariamente utilizza un proprio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementazione. Innanzitutto, un cast di <paramref name="instance" /> a <see cref="T:System.Collections.IEnumerable" /> viene eseguito un tentativo. Se l'esito è positivo, una chiamata a <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> viene eseguita e il metodo restituisce che restituiscono valori. In caso contrario, l'implementazione di base utilizza CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> per richiamare sottostante <see langword="GetEnumerator" /> (metodo), così come ottenuto da una chiamata a <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> per questo <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-164">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMarkupExtensionHandler : EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="769e1-165">Ottiene il gestore da utilizzare quando un oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> viene chiamato in un oggetto <see cref="T:System.Windows.Markup.MarkupExtension" /> implementato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-165">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="769e1-166">Implementazione del gestore che gestisce questo caso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-166">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-167">Il gestore dell'evento basa <xref:System.EventHandler%601> vincolati con <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="769e1-167">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="769e1-168">Il valore restituito richiama il <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> comportamento del <xref:System.Xaml.XamlType> che il <xref:System.Xaml.Schema.XamlTypeInvoker> base.</span><span class="sxs-lookup"><span data-stu-id="769e1-168">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="769e1-169">Il valore restituito sarà `null` per un <xref:System.Xaml.Schema.XamlTypeInvoker> basato su sconosciuto <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="769e1-169">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetTypeConverterHandler : EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="769e1-170">Ottiene il gestore da utilizzare quando un oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> viene chiamato in un oggetto <see cref="T:System.ComponentModel.TypeConverter" /> implementato da CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-170">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="769e1-171">Implementazione del gestore che gestisce questo caso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-171">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-172">Il gestore dell'evento basa <xref:System.EventHandler%601> vincolati con <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="769e1-172">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="769e1-173">Il valore restituito richiama il <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> comportamento del <xref:System.Xaml.XamlType> che il <xref:System.Xaml.Schema.XamlTypeInvoker> base.</span><span class="sxs-lookup"><span data-stu-id="769e1-173">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="769e1-174">Il valore restituito sarà `null` per un <xref:System.Xaml.Schema.XamlTypeInvoker> basato su sconosciuto <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="769e1-174">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="769e1-175">Fornisce un valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> sconosciuto non completamente implementato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-175">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="769e1-176">Valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> sconosciuto non completamente implementato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="769e1-176">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="769e1-177">Fornire questo valore per un <xref:System.Xaml.Schema.XamlTypeInvoker> API definita parametro di System. XAML in genere causerà il codice chiamato generare eccezioni.</span><span class="sxs-lookup"><span data-stu-id="769e1-177">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>