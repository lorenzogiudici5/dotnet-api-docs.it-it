<Type Name="XamlValueConverter&lt;TConverterBase&gt;" FullName="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;">
  <TypeSignature Language="C#" Value="public class XamlValueConverter&lt;TConverterBase&gt; : IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt; where TConverterBase : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlValueConverter`1&lt;class TConverterBase&gt; extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlValueConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlValueConverter(Of TConverterBase)&#xA;Implements IEquatable(Of XamlValueConverter(Of TConverterBase))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : classpublic ref class XamlValueConverter : IEquatable&lt;System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverterBase">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverterBase"><span data-ttu-id="71250-101">Classe base CLR per il convertitore specifico rappresentato dall'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-101">The CLR base class for the particular converter that this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> represents.</span></span> <span data-ttu-id="71250-102">Si tratta in genere di uno dei seguenti elementi: <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" /> o <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="71250-102">Typically this is one of the following: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span></span></typeparam>
    <summary><span data-ttu-id="71250-103">Fornisce una superficie API comune per le tecniche che generano valori di inizializzazione o serializzazione per XAML in base a un input diverso dal tipo di destinazione finale.</span><span class="sxs-lookup"><span data-stu-id="71250-103">Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</span></span> <span data-ttu-id="71250-104">Include le estensioni di markup e i convertitori di tipi.</span><span class="sxs-lookup"><span data-stu-id="71250-104">This includes markup extensions and type converters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71250-105">Istanze di questo tipo vengono restituite dai metodi dello schema XAML API, ad esempio <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="71250-105">Instances of this type are returned by methods of the XAML schema API such as <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span></span> <span data-ttu-id="71250-106">L'implementazione generica di <xref:System.Xaml.Schema.XamlValueConverter%601> fornisce un riferimento indiretto per l'assembly System. XAML in modo che il sistema XAML di schema e il tipo base non è necessario acquisire le dipendenze del valore differenti tecniche di conversione che sono in genere le implementazioni in altre assembly.</span><span class="sxs-lookup"><span data-stu-id="71250-106">The generic implementation of <xref:System.Xaml.Schema.XamlValueConverter%601> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</span></span>  
  
 <span data-ttu-id="71250-107">Oggetto <xref:System.Xaml.Schema.XamlValueConverter%601> può essere costruito con un tipo di implementazione null, ma ad un <xref:System.Xaml.Schema.XamlValueConverter%601> restituirà `null` per <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="71250-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="71250-108">Le firme del costruttore per <xref:System.Xaml.Schema.XamlValueConverter%601> utilizzare un `converterType` parametro che fa riferimento al tipo specifico che implementa il comportamento di conversione.</span><span class="sxs-lookup"><span data-stu-id="71250-108">Constructor signatures for <xref:System.Xaml.Schema.XamlValueConverter%601> use a `converterType` parameter that references the specific type that implements the conversion behavior.</span></span> <span data-ttu-id="71250-109">Per un corretto funzionamento del <xref:System.Xaml.Schema.XamlValueConverter%601> (uno che dispone di un valore diverso da null <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), il `converterType` tipo deve essere possibile eseguire il casting di `TConverterBase` vincolo.</span><span class="sxs-lookup"><span data-stu-id="71250-109">For a properly functioning <xref:System.Xaml.Schema.XamlValueConverter%601> (one that has a nonnull <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), the `converterType` type is expected to be castable to the `TConverterBase` constraint.</span></span> <span data-ttu-id="71250-110">Una condizione di mancata corrispondenza non viene applicata dai costruttori, ma potrebbe produrre un <xref:System.InvalidCastException> in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="71250-110">A mismatch condition is not enforced by constructors, but might produce an <xref:System.InvalidCastException> at run time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71250-111">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="71250-112">Oggetto <see cref="T:System.Type" /> che implementa il comportamento del convertitore.</span><span class="sxs-lookup"><span data-stu-id="71250-112">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="71250-113">Oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-113">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <summary><span data-ttu-id="71250-114">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> in base a un convertitore che implementa <see cref="T:System.Type" /> e al tipo di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-114">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> and the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="71250-115">Oggetto <see cref="T:System.Type" /> che implementa il comportamento del convertitore.</span><span class="sxs-lookup"><span data-stu-id="71250-115">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="71250-116">Oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-116">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <param name="name"><span data-ttu-id="71250-117">Nome della stringa.</span><span class="sxs-lookup"><span data-stu-id="71250-117">The string name.</span></span></param>
        <summary><span data-ttu-id="71250-118">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> in base a un convertitore che implementa <see cref="T:System.Type" />, al tipo di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e a un nome di stringa.</span><span class="sxs-lookup"><span data-stu-id="71250-118">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, and a string name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71250-119">Se `name` viene fornito come `null`, viene generato un nome predefinito basato su `converterType` o `targetType`.</span><span class="sxs-lookup"><span data-stu-id="71250-119">If `name` is provided as `null`, a default name is generated based on either `converterType` or `targetType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="71250-120">I tre parametri sono tutti <see langword="null" /> (è necessario che almeno uno sia non null).</span><span class="sxs-lookup"><span data-stu-id="71250-120">All three parameters are <see langword="null" /> (at least one is required to be non-null).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConverterInstance">
      <MemberSignature Language="C#" Value="public TConverterBase ConverterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TConverterBase ConverterInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterInstance As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TConverterBase ConverterInstance { TConverterBase get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71250-121">Ottiene un'istanza creata dell'implementazione del convertitore.</span><span class="sxs-lookup"><span data-stu-id="71250-121">Gets a created instance of the converter implementation.</span></span></summary>
        <value><span data-ttu-id="71250-122">Istanza creata dell'implementazione del convertitore o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71250-122">A created instance of the converter implementation, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71250-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> chiama l'implementazione predefinita protetto di <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> per ottenere il relativo valore (e potrebbe essere l'accesso a un valore archiviato se <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> è stato già chiamato una volta su <xref:System.Xaml.Schema.XamlValueConverter%601>.</span><span class="sxs-lookup"><span data-stu-id="71250-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> calls the protected default implementation of <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> to get its value (and might be accessing a stored value if <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> was already called once on this <xref:System.Xaml.Schema.XamlValueConverter%601>.</span></span>  
  
 <span data-ttu-id="71250-124">Oggetto <xref:System.Xaml.Schema.XamlValueConverter%601> può essere costruito con un tipo di implementazione null, ma ad un <xref:System.Xaml.Schema.XamlValueConverter%601> restituirà `null` per <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="71250-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConverterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71250-125">Ottiene l'oggetto <see cref="T:System.Type" /> per la classe che implementa il comportamento del convertitore.</span><span class="sxs-lookup"><span data-stu-id="71250-125">Gets the <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></summary>
        <value><span data-ttu-id="71250-126">Oggetto <see cref="T:System.Type" /> per la classe che implementa il comportamento del convertitore.</span><span class="sxs-lookup"><span data-stu-id="71250-126">The <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual TConverterBase CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TConverterBase CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TConverterBase CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71250-127">Restituisce un'istanza dell'implementazione del convertitore.</span><span class="sxs-lookup"><span data-stu-id="71250-127">Returns an instance of the converter implementation.</span></span></summary>
        <returns><span data-ttu-id="71250-128">Istanza dell'implementazione del convertitore o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71250-128">An instance of the converter implementation, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71250-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> è protetto.</span><span class="sxs-lookup"><span data-stu-id="71250-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> is protected.</span></span> <span data-ttu-id="71250-130">Per ottenere un'istanza del convertitore con un'API pubblica, ottenere il valore di <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="71250-130">To get a converter instance with a public API, get the value of <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 <span data-ttu-id="71250-131">Oggetto <xref:System.Xaml.Schema.XamlValueConverter%601> può essere costruito con un tipo di implementazione null, ma ad un <xref:System.Xaml.Schema.XamlValueConverter%601> restituirà `null` per <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="71250-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="71250-132">Il convertitore non ha implementato il tipo di base corretto.</span><span class="sxs-lookup"><span data-stu-id="71250-132">Converter did not implement the correct base type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71250-133">Determina se questa istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e un oggetto hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="71250-133">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and an object have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="71250-134">Oggetto da confrontare.</span><span class="sxs-lookup"><span data-stu-id="71250-134">The object to compare.</span></span></param>
        <summary><span data-ttu-id="71250-135">Consente di determinare se questa istanza dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e un oggetto specificato, che deve essere anch'esso un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="71250-135">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and a specified object, which must also be a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="71250-136"><see langword="true" /> se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e il relativo valore corrisponde a quello di questa istanza; in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="71250-136"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="71250-137">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="71250-137">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> to compare.</span></span></param>
        <summary><span data-ttu-id="71250-138">Determina se questa istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e un altro oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="71250-138">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and another <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="71250-139"><see langword="true" /> se il parametro <paramref name="other" /> è un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e il relativo valore corrisponde a quello di questa istanza; in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="71250-139"><see langword="true" /> if <paramref name="other" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71250-140">Restituisce il codice hash per questo oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-140">Returns the hash code for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="71250-141">Codice hash di un intero.</span><span class="sxs-lookup"><span data-stu-id="71250-141">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71250-142">Ottiene un nome di stringa per l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-142">Gets a string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="71250-143">Nome di stringa per l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-143">A string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71250-144">Il valore di questa proprietà viene stabilito da uno dei valori seguenti:</span><span class="sxs-lookup"><span data-stu-id="71250-144">The value of this property is established by one of the following:</span></span>  
  
-   <span data-ttu-id="71250-145">Un parametro di costruttore (vedere <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="71250-145">A constructor parameter (see <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="71250-146">Logica interna che elabora gli altri input di costruttore e forma una stringa.</span><span class="sxs-lookup"><span data-stu-id="71250-146">Internal logic that processes other constructor inputs and forms a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="71250-147">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71250-147">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="71250-148">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71250-148">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="71250-149">Determina se due oggetti <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> specificati hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="71250-149">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="71250-150"><see langword="true" /> se il valore di <paramref name="converter1" /> è uguale al valore di <paramref name="converter2" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="71250-150"><see langword="true" /> if the value of <paramref name="converter1" /> is the same as the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="71250-151">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71250-151">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="71250-152">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71250-152">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="71250-153">Determina se due oggetti <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> specificati hanno valori diversi.</span><span class="sxs-lookup"><span data-stu-id="71250-153">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="71250-154"><see langword="true" /> se il valore di <paramref name="converter1" /> è diverso dal valore di <paramref name="converter2" />; in caso contrario, <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="71250-154"><see langword="true" /> if the value of <paramref name="converter1" /> is different than the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71250-155">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-155">Gets the target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="71250-156">Oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-156">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71250-157">Restituisce un oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-157">Returns a <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="71250-158">Oggetto <see cref="T:System.String" /> che rappresenta questo oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="71250-158">A <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71250-159">Il <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> valore si basa su <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="71250-159">The <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> value is based on <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>