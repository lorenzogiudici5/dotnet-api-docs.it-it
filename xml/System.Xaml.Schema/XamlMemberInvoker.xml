<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="243bd847b5407c0b553d0c054eac1c272bf164ea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39994770" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1da12-101">Fornisce un punto di estensione che può accedere alle caratteristiche di un membro XAML con tecniche diverse dalla reflection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1da12-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da12-102">Lo scopo della <xref:System.Xaml.Schema.XamlMemberInvoker> consiste nell'abilitare un sistema di tipi XAML estendibile, schema e un runtime che non si basa interamente sulle funzionalità di Common Language Runtime, ad esempio gli attributi CLR, informazioni sulla reflection tramite lavoro <xref:System.Type> e <xref:System.Reflection.MemberInfo>e così via.</span><span class="sxs-lookup"><span data-stu-id="1da12-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="1da12-103">Le sottoclassi della <xref:System.Xaml.Schema.XamlMemberInvoker> vengono usati come parametri di input per i costruttori delle classi dello schema XAML alternativi, ad esempio <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="1da12-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="1da12-104">Si crea una sottoclasse <xref:System.Xaml.XamlMember> e passare il <xref:System.Xaml.Schema.XamlMemberInvoker> tramite al costruttore di base.</span><span class="sxs-lookup"><span data-stu-id="1da12-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="1da12-105">Oltre a definire un <xref:System.Xaml.Schema.XamlMemberInvoker> per il costruttore, è necessario fornire anche le sostituzioni per almeno alcune delle `Lookup` metodi di <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="1da12-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="1da12-106"><xref:System.Xaml.Schema.XamlMemberInvoker> ha un'implementazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="1da12-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="1da12-107">L'implementazione predefinita segue un modello simile per l'implementazione predefinita di tipi di schema XAML <xref:System.Xaml.XamlType> e <xref:System.Xaml.XamlMember>: viene usato il sistema di tipi CLR per la creazione di istanze, i valori e le ricerche, incluso l'uso di attributi CLR, <xref:System.Type> e<xref:System.Reflection.MemberInfo>e così via.</span><span class="sxs-lookup"><span data-stu-id="1da12-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="1da12-108"><xref:System.Xaml.Schema.XamlMemberInvoker> fornisce metodi per la base operazioni get e set (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="1da12-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="1da12-109">Fornisce inoltre la proprietà <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> e <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, ma non è virtuale.</span><span class="sxs-lookup"><span data-stu-id="1da12-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1da12-110">È possibile ottenere un <xref:System.Xaml.Schema.XamlMemberInvoker> valore che rappresenta una direttiva XAML, che viene implementata come una classe privata nell'implementazione di System. Xaml.</span><span class="sxs-lookup"><span data-stu-id="1da12-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="1da12-111">Se si tenta di chiamare <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> o <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> su questo invoker, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="1da12-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1da12-112">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1da12-113">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da12-114">L'implementazione predefinita è vuota.</span><span class="sxs-lookup"><span data-stu-id="1da12-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="1da12-115">Questo costruttore viene chiamato internamente per fornire un valore per <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="1da12-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="1da12-116">Per un <xref:System.Xaml.Schema.XamlMemberInvoker> sottoclasse, è previsto che è utilizzare il <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> firma per la costruzione o fornire una sostituzione che chiama <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> come base.</span><span class="sxs-lookup"><span data-stu-id="1da12-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="1da12-117">Fornire il <xref:System.Xaml.XamlMember> implementa un modello predefinito in cui <xref:System.Xaml.Schema.XamlMemberInvoker> non può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="1da12-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="1da12-118">Valore <see cref="T:System.Xaml.XamlMember" /> per il membro XAML specifico relativo all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1da12-119">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> in base a un oggetto <see cref="T:System.Xaml.XamlMember" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da12-120">Questo costruttore viene chiamato internamente in base il <xref:System.Xaml.XamlMember> in cui il <xref:System.Xaml.Schema.XamlMemberInvoker> viene usato per la costruzione.</span><span class="sxs-lookup"><span data-stu-id="1da12-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1da12-121">
            <paramref name="member" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-121">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1da12-122">Istanza del tipo di proprietario per il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-122">An instance of the owner type for the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1da12-123">Ottiene un valore della proprietà pertinente da un'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-123">Gets a value of the relevant property from an instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1da12-124">Valore della proprietà richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-124">The requested property value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1da12-125">
            <paramref name="instance" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-125">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1da12-126">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlMember" /> sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="1da12-127">**-oppure-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-127">**-or-**</span>
          </span>
          <span data-ttu-id="1da12-128">Richiamato questo metodo su un membro in sola scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-128">Invoked this method on a write-only member.</span>
          </span>
          <span data-ttu-id="1da12-129">**-oppure-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-129">**-or-**</span>
          </span>
          <span data-ttu-id="1da12-130">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-130">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="1da12-131">
            <para>L'implementazione di base include una chiamata al supporto interno <c>ThrowIfUnknown</c>. Genera sempre questo helper per i casi in cui un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> si basa su sconosciuta <see cref="T:System.Xaml.XamlMember" />, che include casi in cui le <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> del <see cref="T:System.Xaml.XamlMember" /> è <see langword="null" />.  L'implementazione di base genera un'eccezione se <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> è <see langword="null" />.  Per le proprietà statiche (<see cref="P:System.Reflection.MethodBase.IsStatic" /> viene <see langword="true" /> per ogni <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) l'implementazione predefinita chiama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> sul <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passando <see langword="null" /> come primo parametro e in pacchetto <paramref name="instance" /> nella seconda. Per le proprietà statiche, chiama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> e inoltra il <paramref name="instance" /> come primo parametro e un pacchetto vuoto come secondo parametro.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-131">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.  The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.  For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second. For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1da12-132">Istanza del tipo di proprietario per il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-132">An instance of the owner type for the member.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1da12-133">Valore della proprietà da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-133">The property value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1da12-134">Imposta un valore della proprietà pertinente in un'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-134">Sets a value of the relevant property on an instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1da12-135">
            <paramref name="instance" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-135">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1da12-136">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlMember" /> sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-136">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="1da12-137">**-oppure-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-137">**-or-**</span>
          </span>
          <span data-ttu-id="1da12-138">Richiamato questo metodo su un membro in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-138">Invoked this method on a read-only member.</span>
          </span>
          <span data-ttu-id="1da12-139">**-oppure-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-139">**-or-**</span>
          </span>
          <span data-ttu-id="1da12-140">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-140">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="1da12-141">
            <para>L'implementazione di base include una chiamata al supporto interno <c>ThrowIfUnknown</c>. Genera sempre questo helper per i casi in cui un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> si basa su sconosciuta <see cref="T:System.Xaml.XamlMember" />, che include casi in cui le <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> del <see cref="T:System.Xaml.XamlMember" /> è <see langword="null" />.  L'implementazione di base genera un'eccezione se <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> è <see langword="null" />.  Per le proprietà statiche (<see cref="P:System.Reflection.MethodBase.IsStatic" /> viene <see langword="true" /> per ogni <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) l'implementazione predefinita chiama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> sul <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passando <see langword="null" /> come il primo parametro e creazione di pacchetti <paramref name="instance" /> e <paramref name="value" /> come il secondo parametro. Per le proprietà statiche, chiama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> e lo inoltra <paramref name="instance" /> come primo parametro e <paramref name="value" /> come secondo parametro.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-141">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.  The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.  For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter. For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1da12-142">Istanza con la proprietà di cui verificare la persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-142">The instance with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1da12-143">Indica se il valore deve essere conservato dai processi di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-143">Indicates whether the value needs to be persisted by serialization processes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1da12-144">Valore dell'enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-144">A value of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da12-145">L'implementazione predefinita restituisce <xref:System.Xaml.Schema.ShouldSerializeResult.Default> se il membro XAML stessa <xref:System.Xaml.XamlMember.IsUnknown%2A>, o se nessun-reflection CLR rilevanti `ShouldSerialize` metodo si trova il membro sottostante tramite reflection predefinito.</span><span class="sxs-lookup"><span data-stu-id="1da12-145">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1da12-146">Ottiene l'oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che ottiene i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-146">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1da12-147">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che ottiene i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-147">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da12-148">Questa proprietà si basa sulla chiamata <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> sulla costruzione <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="1da12-148">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="1da12-149">Per sconosciuta <xref:System.Xaml.XamlMember>, oppure nei casi in cui <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> restituisce `null`, questa proprietà restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="1da12-149">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1da12-150">Ottiene l'oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che imposta i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-150">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1da12-151">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che imposta i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-151">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da12-152">Questa proprietà si basa sulla chiamata <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> sulla costruzione <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="1da12-152">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="1da12-153">Per sconosciuta <xref:System.Xaml.XamlMember>, oppure nei casi in cui <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> restituisce `null`, questa proprietà restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="1da12-153">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1da12-154">Fornisce un valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> sconosciuto non completamente implementato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-154">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1da12-155">Valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> sconosciuto non completamente implementato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da12-155">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da12-156">Si fornisce questo valore per un <xref:System.Xaml.Schema.XamlMemberInvoker> parametro di System. XAML definito API causerà in genere il codice chiamato generare eccezioni.</span><span class="sxs-lookup"><span data-stu-id="1da12-156">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>