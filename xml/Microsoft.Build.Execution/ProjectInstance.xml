<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6642ad14b3b8dd429eb71937677222b45993c952" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36668933" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fd655-101">Rappresenta un'istanza del progetto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd655-101">Represents a project instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-102">Le istanze di questa classe verificarsi quando un progetto viene duplicato.</span><span class="sxs-lookup"><span data-stu-id="fd655-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="fd655-103">I costruttori sono interni per richiedere agli utenti di creare istanze di progetto dai progetti esistenti.</span><span class="sxs-lookup"><span data-stu-id="fd655-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="fd655-104">Le nuove istanze di progetto sono immutabili, ad eccezione del fatto che gli elementi istanza possono essere aggiunti ad essi e le proprietà dell'istanza è impostata su di essi.</span><span class="sxs-lookup"><span data-stu-id="fd655-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="fd655-105">Le istanze del progetto sono utili perché può essere modificati e compilati più volte senza interferire con il progetto originale.</span><span class="sxs-lookup"><span data-stu-id="fd655-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="fd655-106">Questa classe né uno qualsiasi dei suoi componenti può contenere riferimenti a <xref:Microsoft.Build.Construction> o <xref:Microsoft.Build.Evaluation> oggetti.</span><span class="sxs-lookup"><span data-stu-id="fd655-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="fd655-107">Progetto è destinato a istanza, i servizi host e il Registro di sistema di attività non sono esposti.</span><span class="sxs-lookup"><span data-stu-id="fd655-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-108">Crea una nuova istanza del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-108">Creates a new project instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="fd655-109">Elemento radice del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-109">The project root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-110">Crea una nuova istanza del progetto e la inizializza dalla radice del progetto specificata, utilizzando l'insieme di progetti predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-111">Nessun intermedio <xref:Microsoft.Build.Evaluation.Project> oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="fd655-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fd655-112">Ciò è utile se un progetto sta per essere compilato, ma non visualizzate o modificate.</span><span class="sxs-lookup"><span data-stu-id="fd655-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fd655-113">Nome del file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-113">The name of the project file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-114">Crea una nuova istanza del progetto e la inizializza dal file di progetto specificato, utilizzando l'insieme di progetti predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-115">Nessun intermedio <xref:Microsoft.Build.Evaluation.Project> oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="fd655-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fd655-116">Ciò è utile se un progetto sta per essere compilato, ma non visualizzate o modificate.</span><span class="sxs-lookup"><span data-stu-id="fd655-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fd655-117">Nome del file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-117">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fd655-118">Proprietà globali da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-118">The global properties to use.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fd655-119">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-119">The tools version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-120">Crea una nuova istanza del progetto e la inizializza dal file di progetto specificato, utilizzando le proprietà globali e la versione degli strumenti specificata e l'insieme di progetti predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-121">Nessun intermedio <xref:Microsoft.Build.Evaluation.Project> oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="fd655-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fd655-122">Ciò è utile se un progetto sta per essere compilato, ma non visualizzate o modificate.</span><span class="sxs-lookup"><span data-stu-id="fd655-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="fd655-123">Elemento radice del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-123">The project root element</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fd655-124">Proprietà globali da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-124">The global properties to use.</span>
          </span>
          <span data-ttu-id="fd655-125">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-125">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fd655-126">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-126">The tools version.</span>
          </span>
          <span data-ttu-id="fd655-127">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-127">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fd655-128">Raccolta di progetti</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-128">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-129">Crea una nuova istanza del progetto e la inizializza dalla radice di progetto specificata, utilizzando le proprietà globali, la versione degli strumenti e l'insieme di progetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-130">Nessun intermedio <xref:Microsoft.Build.Evaluation.Project> oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="fd655-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fd655-131">Ciò è utile se un progetto sta per essere compilato, ma non visualizzate o modificate.</span><span class="sxs-lookup"><span data-stu-id="fd655-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fd655-132">Nome del file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-132">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fd655-133">Proprietà globali da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-133">The global properties to use.</span>
          </span>
          <span data-ttu-id="fd655-134">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-134">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fd655-135">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-135">The tools version.</span>
          </span>
          <span data-ttu-id="fd655-136">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-136">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fd655-137">Raccolta di progetti</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-137">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-138">Crea una nuova istanza del progetto e la inizializza dal file di progetto specificato, utilizzando le proprietà globali, la versione degli strumenti e l'insieme di progetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-139">Nessun intermedio <xref:Microsoft.Build.Evaluation.Project> oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="fd655-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fd655-140">Ciò è utile se un progetto sta per essere compilato, ma non visualizzate o modificate.</span><span class="sxs-lookup"><span data-stu-id="fd655-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="fd655-141">Elemento radice del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-141">The project root element.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fd655-142">Proprietà globali da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-142">The global properties to use.</span>
          </span>
          <span data-ttu-id="fd655-143">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-143">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fd655-144">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-144">The tools version.</span>
          </span>
          <span data-ttu-id="fd655-145">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-145">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="fd655-146">La versione del subset di strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-146">The sub toolset version.</span>
          </span>
          <span data-ttu-id="fd655-147">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-147">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fd655-148">Raccolta di progetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-148">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-149">Crea una nuova istanza del progetto e la inizializza dalla radice di progetto specificata, utilizzando le proprietà globali, la versione degli strumenti e la raccolta di progetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-150">Nessun intermedio <xref:Microsoft.Build.Evaluation.Project> oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="fd655-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fd655-151">Ciò è utile se un progetto sta per essere compilato, ma non visualizzate o modificate.</span><span class="sxs-lookup"><span data-stu-id="fd655-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fd655-152">Nome del file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-152">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fd655-153">Proprietà globali da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-153">The global properties to use.</span>
          </span>
          <span data-ttu-id="fd655-154">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-154">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fd655-155">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-155">The tools version.</span>
          </span>
          <span data-ttu-id="fd655-156">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-156">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="fd655-157">La versione del subset di strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-157">The sub toolset version.</span>
          </span>
          <span data-ttu-id="fd655-158">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-158">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fd655-159">Raccolta di progetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-159">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-160">Crea una nuova istanza del progetto e la inizializza dal file di progetto specificato, utilizzando le proprietà globali, la versione degli strumenti, la versione del subset di strumenti e la raccolta di progetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-161">Nessun intermedio <xref:Microsoft.Build.Evaluation.Project> oggetto viene creato.</span><span class="sxs-lookup"><span data-stu-id="fd655-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fd655-162">Ciò è utile se un progetto sta per essere compilato, ma non visualizzate o modificate.</span><span class="sxs-lookup"><span data-stu-id="fd655-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-163">Aggiunge un elemento senza metadati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-163">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fd655-164">Tipo di elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-164">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="fd655-165">Attributo Include valutato dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-165">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-166">Aggiunge un elemento senza metadati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-166">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-167">Restituisce il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-167">Returns the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-168">Abbiamo non avrà alcun oggetto ProjectItemInstance per assicurarsi che non abbiamo che è già in uso da un altro oggetto ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="fd655-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fd655-169">Tipo di elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-169">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="fd655-170">Attributo Include valutato dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-170">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="fd655-171">Metadati dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-171">The metadata of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-172">Aggiunge un elemento con i metadati specificati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-172">Adds an item with the given metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-173">Restituisce il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-173">Return the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-174">Abbiamo non avrà alcun oggetto ProjectItemInstance per assicurarsi che non abbiamo che è già in uso da un altro oggetto ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="fd655-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-175">Compila le destinazioni predefinite del progetto con i logger dell'insieme di progetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-175">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd655-176">Compila le destinazioni predefinite del progetto con i logger dell'insieme di progetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-176">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-177">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-177">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="fd655-178">Logger da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-178">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-179">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-179">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-180">Compila le destinazioni predefinite del progetto con i logger specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-180">Builds the default targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-181">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-181">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-182">Genera un'eccezione InvalidOperationException se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione.</span><span class="sxs-lookup"><span data-stu-id="fd655-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="fd655-183">Logger da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-183">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-184">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-184">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fd655-185">Logger remoti da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-185">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-186">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-186">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-187">Compila le destinazioni predefinite del progetto con i logger specificati e quelli remoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-187">Builds the default targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-188">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-188">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-189">Genera un'eccezione InvalidOperationException se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione.</span><span class="sxs-lookup"><span data-stu-id="fd655-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fd655-190">Destinazione da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-190">The target to build.</span>
          </span>
          <span data-ttu-id="fd655-191">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-191">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fd655-192">Logger da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-192">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-193">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-193">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-194">Compila la destinazione specificata del progetto con i logger specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-194">Builds the given target of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-195">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-195">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-196">Genera un'eccezione InvalidOperationException se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione.</span><span class="sxs-lookup"><span data-stu-id="fd655-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fd655-197">Destinazioni da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-197">The targets to build.</span>
          </span>
          <span data-ttu-id="fd655-198">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-198">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fd655-199">Logger da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-199">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-200">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-200">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-201">Compila le destinazioni specificate del progetto con i logger specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-201">Builds the given targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-202">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-202">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-203">Genera un'eccezione InvalidOperationException se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione.</span><span class="sxs-lookup"><span data-stu-id="fd655-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fd655-204">Destinazione da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-204">The target to build.</span>
          </span>
          <span data-ttu-id="fd655-205">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-205">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fd655-206">Logger da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-206">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-207">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-207">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fd655-208">Logger remoti da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-208">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-209">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-209">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-210">Compila la destinazione specificata del progetto con i logger specificati e quelli remoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-210">Builds the given target of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-211">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-211">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-212">Genera un'eccezione InvalidOperationException se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione.</span><span class="sxs-lookup"><span data-stu-id="fd655-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fd655-213">Elenco di destinazioni da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-213">List of targets to build.</span>
          </span>
          <span data-ttu-id="fd655-214">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-214">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fd655-215">Elenco enumerato di logger da utilizzare per la compilazione delle destinazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-215">Enumerated list of loggers to use for building targets.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="fd655-216">Output di compilazioni di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-216">Outputs of target builds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-217">Compila un elenco di destinazioni con i logger specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-217">Build a list of targets with specified loggers.</span>
          </span>
          <span data-ttu-id="fd655-218">Le destinazioni possono essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-218">Targets may be null.</span>
          </span>
          <span data-ttu-id="fd655-219">I logger possono essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-219">Loggers may be null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-220">Restituisce true se l'operazione ha esito positivo, false in caso di esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-220">Returns true on success, false on failure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-221">Se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione che viene passato, genera un'eccezione InvalidOperationException.</span><span class="sxs-lookup"><span data-stu-id="fd655-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fd655-222">Destinazioni da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-222">The targets to build.</span>
          </span>
          <span data-ttu-id="fd655-223">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-223">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fd655-224">Logger da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-224">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-225">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-225">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fd655-226">Logger remoti da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-226">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-227">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-227">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-228">Compila le destinazioni specificate del progetto con i logger specificati e quelli remoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-228">Builds the given targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-229">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-229">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-230">Genera un'eccezione InvalidOperationException se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione.</span><span class="sxs-lookup"><span data-stu-id="fd655-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fd655-231">Destinazioni da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-231">The targets to build.</span>
          </span>
          <span data-ttu-id="fd655-232">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-232">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fd655-233">Logger da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-233">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-234">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-234">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fd655-235">Logger remoti da utilizzare per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-235">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fd655-236">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-236">May be null.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="fd655-237">Output di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-237">The target outputs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-238">Compila le destinazioni specificate con gli output di destinazione specificati, i logger specificati e quelli remoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-239">Restituisce true se la compilazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-239">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-240">Genera un'eccezione InvalidOperationException se uno qualsiasi dei logger fornito sono già connessi al servizio di registrazione.</span><span class="sxs-lookup"><span data-stu-id="fd655-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-241">Crea un clone indipendente e profondo del progetto e di tutto il contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-241">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="fd655-242">È utile per la compilazione di un singolo file o per mantenere i risultati tra le compilazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-242">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd655-243">Crea un clone indipendente e profondo del progetto e di tutto il contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-243">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="fd655-244">Il duplicato ha la stessa modificabilità dell'originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-244">Clone has the same mutability as the original.</span>
          </span>
          <span data-ttu-id="fd655-245">È utile per la compilazione di un singolo file o per mantenere i risultati tra le compilazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-245">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-246">Crea un clone indipendente e profondo del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-246">Creates an independent, deep clone of this project.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isImmutable">
          <span data-ttu-id="fd655-247">Flag che indica la modificabilità del clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-247">Flag indicating clone mutability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-248">Crea un clone indipendente e profondo del progetto e di tutto il contenuto, con modificabilità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span>
          </span>
          <span data-ttu-id="fd655-249">È utile per la compilazione di un singolo file o per mantenere i risultati tra le compilazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-249">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-250">Restituisce un clone completo indipendente del progetto, con la modificabilità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-250">Returns an independent, deep clone of this project, with specified mutability.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-251">Ottiene o imposta l'elenco di destinazioni predefinite per il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-251">Gets or sets the list of default targets for this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-252">Restituisce l'elenco di destinazioni predefinite per il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-252">Returns the list of default targets for this project.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-253">Se delle destinazioni viene specificata in modo esplicito, vengono compilate destinazioni predefinite.</span><span class="sxs-lookup"><span data-stu-id="fd655-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-254">Ottiene la directory radice del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-254">Gets the project root directory.</span>
          </span>
          <span data-ttu-id="fd655-255">Utilizzato per la valutazione dei percorsi relativi e l'impostazione della directory corrente durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-255">Used for evaluation of relative paths and setting the current directory during build.</span>
          </span>
          <span data-ttu-id="fd655-256">Non è mai Null. I progetti non caricati da disco utilizzano la directory corrente dall'avvio della compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-257">Restituisce la directory radice del progetto, che non è mai Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-257">Returns the project root directory, which is never null.</span>
          </span>
          <span data-ttu-id="fd655-258">I progetti non caricati da disco restituiscono la directory corrente all'avvio della compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-258">Projects not loaded from disk return the current directory at the time the build was started.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="fd655-259">Stringa da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-259">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-260">Valuta la stringa fornita come condizione espandendo elementi e proprietà, utilizzando gli elementi e le proprietà correnti disponibili ed effettuando quindi una valutazione logica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-261">Restituisce true se la stringa viene valutata true. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-261">Returns true if the string evaluates to true; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-262">Ciò è utile per la finestra controllo immediato.</span><span class="sxs-lookup"><span data-stu-id="fd655-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="fd655-263">Non consente di espandere le espressioni di metadati bare.</span><span class="sxs-lookup"><span data-stu-id="fd655-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue">
          <span data-ttu-id="fd655-264">Stringa da espandere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-264">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-265">Valuta la stringa fornita espandendo elementi e proprietà, utilizzando gli elementi e le proprietà correnti disponibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-266">Restituisce il valore di stringa espanso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-266">Returns the expanded string value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-267">Ciò è utile per alcuni host o per la finestra controllo immediato del debugger.</span><span class="sxs-lookup"><span data-stu-id="fd655-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="fd655-268">Non consente di espandere le espressioni di metadati bare.</span><span class="sxs-lookup"><span data-stu-id="fd655-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-269">Ottiene il percorso completo del file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-269">Gets the full path to the project file.</span>
          </span>
          <span data-ttu-id="fd655-270">Utilizzato per la registrazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-270">Used for logging.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-271">Restituisce il percorso completo del file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-271">Returns the full path to the project file.</span>
          </span>
          <span data-ttu-id="fd655-272">Restituisce Null se il progetto non è mai stato denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-272">Returns null if the project was never named.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-273">Ottiene il valore valutato e preceduto da carattere di escape dell'attributo Include della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-273">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fd655-274">Definizione di elemento che deve essere valutata e preceduta da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-274">The item definition to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-275">Ottiene il valore valutato e preceduto da carattere di escape dell'attributo Include della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-275">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-276">Restituisce il valore valutato e preceduto da carattere di escape dell'attributo Include della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-276">Returns the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fd655-277">Elemento che deve essere valutato e preceduto da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-277">The item to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-278">Ottiene il valore valutato e preceduto da carattere di escape dell'attributo Include dell'elemento fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-278">Gets the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-279">Restituisce il valore valutato e preceduto da carattere di escape dell'attributo Include dell'elemento fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-279">Returns the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fd655-280">Tipo di elemento degli elementi da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-280">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-281">Ottiene tutti gli elementi del tipo specificato presenti in questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-281">Gets all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="fd655-282">Questo elenco è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-282">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-283">Restituisce tutti gli elementi del tipo specificato presenti in questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-283">Returns all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="fd655-284">Se non ne viene trovato alcuno, restituisce un elenco vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-284">Returns an empty list if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fd655-285">Tipo di elemento degli elementi da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-285">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="fd655-286">Il valore valutato dell'attributo Include degli elementi da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-286">The evaluated include value of the items to be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-287">Ottiene tutti gli elementi del tipo specificato presenti in questo progetto e il valore Include valutato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-287">Gets all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="fd655-288">Questo elenco è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-288">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-289">Restituisce tutti gli elementi del tipo specificato presenti in questo progetto e il valore Include valutato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-289">Returns all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="fd655-290">Se non ne viene trovato alcun, restituisce una raccolta vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-290">Returns an empty collection if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-291">Ottiene il valore preceduto da carattere di escape del metadato con il nome fornito della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-291">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum">
          <span data-ttu-id="fd655-292">Metadato che deve essere preceduto da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-292">The metadatum to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-293">Ottiene il valore preceduto da carattere di escape del metadato fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-293">Gets the escaped value of the provided metadatum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-294">Restituisce il valore preceduto da carattere di escape del metadato fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-294">Returns the escaped value of the provided metadatum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fd655-295">Definizione di elemento che fornisce il valore del metadato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-295">The item definition to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fd655-296">Nome del metadato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-296">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-297">Ottiene il valore preceduto da carattere di escape del metadato con il nome fornito della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-297">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-298">Restituisce il valore preceduto da carattere di escape del metadato con il nome fornito della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-298">Returns the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fd655-299">Elemento che fornisce il valore del metadato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-299">The item to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fd655-300">Nome del metadato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-300">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-301">Ottiene il valore preceduto da carattere di escape del metadato con il nome fornito dell'elemento fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-301">Gets the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-302">Restituisce il valore preceduto da carattere di escape del metadato con il nome fornito nell'elemento fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-302">Returns the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fd655-303">Nome della proprietà da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-303">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-304">Ottiene la proprietà con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-304">Get the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-305">Restituisce la proprietà con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-305">Returns the property with the given name.</span>
          </span>
          <span data-ttu-id="fd655-306">Restituisce Null se non esistono proprietà con tale nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-306">Returns null if no property exists with that name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fd655-307">Nome della proprietà di cui è necessario recuperare il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-307">The name of the property whose value is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-308">Ottiene il valore della proprietà con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-308">Get the value of the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-309">Restituisce il valore della proprietà con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-309">Returns the value of the property with the given name.</span>
          </span>
          <span data-ttu-id="fd655-310">Restituisce una stringa vuota se non esistono proprietà con tale nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-310">Returns an empty string if no property exists with that name.</span>
          </span>
          <span data-ttu-id="fd655-311">Il valore restituito non ha sequenze di caratteri di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-311">The value returned has no escaped character sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-312">Questo metodo non distingue tra una proprietà con un valore di stringa vuota e nessuna proprietà con il nome specificato.</span><span class="sxs-lookup"><span data-stu-id="fd655-312">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="fd655-313">Proprietà che deve essere preceduta da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-313">The property to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-314">Ottiene il valore preceduto da carattere di escape della proprietà fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-314">Get the escaped value of the provided property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-315">Restituisce il valore preceduto da carattere di escape della proprietà fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-315">Returns the escaped value of the provided property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-316">Ottiene il dizionario delle proprietà globali con cui è stato valutato il progetto, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-316">Gets the dictionary of global properties this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-317">Restituisce il dizionario delle proprietà globali con cui è stato valutato il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-317">Returns the dictionary of global properties this project was evaluated with.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-318">Insieme di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="fd655-318">Read only collection.</span></span>  
  
 <span data-ttu-id="fd655-319">Consente di attraversare i riferimenti al progetto.</span><span class="sxs-lookup"><span data-stu-id="fd655-319">Traverses project references.</span></span>  
  
 <span data-ttu-id="fd655-320">Questo è il metodo di richiamo esposto pubblicamente, che si traduce in un IDictionary di messaggi non recapitabili di sola lettura\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="fd655-320">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-321">Ottiene l'elenco di destinazioni iniziali per il progetto e tutte le relative importazioni, con priorità di profondità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-321">Gets the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
          <span data-ttu-id="fd655-322">Queste destinazioni vengono compilate prima di qualsiasi altra destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-322">These targets are built before any other targets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-323">Restituisce l'elenco di destinazioni iniziali per il progetto e tutte le relative importazioni, con priorità di profondità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-323">Returns the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-324">Ottiene un flag che indica che l'istanza di progetto non è modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-324">Gets a flag indicating that the project instance is immutable.</span>
          </span>
          <span data-ttu-id="fd655-325">Questo flag viene impostato in modo permanente quando viene creata l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-325">This flag is set permanently when the instance is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-326">Restituisce il flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-326">Returns the flag.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-327">Ottiene un dizionario di sola lettura delle definizioni di elementi del progetto, ordinate per tipo di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-327">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-328">Restituisce un dizionario di sola lettura delle definizioni di elementi del progetto, ordinate per tipo di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-328">Returns a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-329">Ottiene tutti gli elementi di questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-329">Gets all items in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-330">Restituisce tutti gli elementi di questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-330">Returns all items in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-331">Ottiene tutti i tipi di elementi di questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-331">Gets all item types in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-332">Restituisce tutti i tipi di elementi di questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-332">Returns all item types in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-333">Ottiene la posizione dello stesso file di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-333">Gets the location of the originating file itself.</span>
          </span>
          <span data-ttu-id="fd655-334">Mai null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-334">Never null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-335">Restituisce la posizione del file di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-335">Returns the location of the originating file.</span>
          </span>
          <span data-ttu-id="fd655-336">Non restituisce mai Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-336">Never returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-337">Ottiene tutte le proprietà di questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-337">Gets all properties in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-338">Restituisce tutte le proprietà di questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-338">Returns all properties in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fd655-339">Elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-339">The item to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-340">Rimuove un elemento dal progetto, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-340">Removes an item from the project, if present.</span>
          </span>
          <span data-ttu-id="fd655-341">Restituisce true se l'elemento era presente. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-341">Returns true if it was present, false otherwise.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-342">Restituisce true se l'elemento era presente prima della rimozione. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-342">Returns true if the item was present before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fd655-343">Nome della proprietà da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-343">The name of the property to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-344">Rimuove una proprietà con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-344">Removes a property with the given name.</span>
          </span>
          <span data-ttu-id="fd655-345">Restituisce true se la proprietà conteneva un valore (eventualmente una stringa vuota). In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-345">Returns true if the property had a value (possibly empty string), otherwise false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-346">Restituisce true se la proprietà conteneva un valore (eventualmente una stringa vuota) prima della rimozione. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-346">Returns true if the property had a value (possibly an empty string) before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fd655-347">Nome della proprietà da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-347">The name of the property to add.</span>
          </span>
        </param>
        <param name="evaluatedValue">
          <span data-ttu-id="fd655-348">Valore valutato della proprietà da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-348">The evaluated value of the property to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-349">Aggiunge al progetto una proprietà con il nome e il valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-349">Add a property with the specified name and value to the project.</span>
          </span>
          <span data-ttu-id="fd655-350">Sovrascrive qualsiasi proprietà con lo stesso nome già presente nell'insieme di proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-350">Overwrites any property with the same name already in the property collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-351">Restituisce la nuova proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-351">Returns the new property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-352">Ci si prende per assicurarsi che non abbiamo che è già in uso da un altro alcun oggetto ProjectItemInstance.</span><span class="sxs-lookup"><span data-stu-id="fd655-352">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-353">Ottiene un enumeratore su tutte le destinazioni del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-353">Gets an enumerator over all targets in this project.</span>
          </span>
          <span data-ttu-id="fd655-354">La raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-354">This collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-355">Restituisce un enumeratore su tutte le destinazioni del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-355">Returns an enumerator over all targets in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd655-356">Ottiene la versione degli strumenti con cui è stato valutato il progetto, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-356">Gets the tools version this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd655-357">Restituisce la versione degli strumenti con cui è stato valutato il progetto, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-357">Returns the tools version this project was evaluated with, if any.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd655-358">Il risultato non è necessariamente lo stesso come la versione degli strumenti sul tag di progetto, se presente. è possibile sia stata specificata esternamente, ad esempio con un'opzione /TV.</span><span class="sxs-lookup"><span data-stu-id="fd655-358">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd655-359">Crea un elemento ProjectRootElement dal contenuto di questo elemento ProjectInstance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-359">Creates a ProjectRootElement from the contents of this ProjectInstance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd655-360">Restituisce un elemento ProjectRootElement che rappresenta l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-360">Returns a ProjectRootElement which represents this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" />
      </Parameters>
      <Docs>
        <param name="projectState">
          <span data-ttu-id="fd655-361">Oggetto <see langword="ProjectInstance" /> da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-361">The <see langword="ProjectInstance" /> to update from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd655-362">Sostituisce lo stato <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> e <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> di progetto con quelli dell'oggetto <see cref="T:Microsoft.Build.Execution.ProjectInstance" />specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd655-362">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>