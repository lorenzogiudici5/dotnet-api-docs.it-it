<Type Name="HtmlInputFile" FullName="System.Web.UI.HtmlControls.HtmlInputFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cc6a5794a0a1dfaae0abb38194dd6ca4ad85b50" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputFile : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputFile extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputFile" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputFile&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputFile : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente l'accesso a livello di codice all'elemento HTML <see langword="&lt;input type= file&gt;" /> sul server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputFile> per gestire il caricamento di file binario o di testo da un client browser al server di controllo del server. Caricamento del file funziona con Microsoft Internet Explorer 3.02 o versione successiva.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo è progettato per essere utilizzato solo negli scenari di postback e non in scenari di postback asincroni durante il rendering parziale della pagina. Quando si utilizza un <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo all'interno di un <xref:System.Web.UI.UpdatePanel> (controllo), il file deve essere caricato tramite un controllo che è un <xref:System.Web.UI.PostBackTrigger> oggetto per il pannello. <xref:System.Web.UI.UpdatePanel> i controlli vengono utilizzati per aggiornare aree selezionate di una pagina anziché aggiornare l'intera pagina con un postback. Per ulteriori informazioni, vedere [Cenni preliminari sul controllo UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) e [Panoramica per il Rendering parziale della pagina](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Per specificare il file da caricare, immettere il percorso completo del file, ad esempio, "C:\MyFiles\Test.txt", nella casella di testo del controllo. È anche possibile selezionare il file facendo clic di **Sfoglia** pulsante e posizionarlo nella **Choose file** la finestra di dialogo.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> proprietà di un <xref:System.Web.UI.HtmlControls.HtmlForm> controllo deve essere impostato su "multipart/form-data" per questo controllo per il corretto funzionamento.  
  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo non dispone di un metodo incorporato per il postback al server. Per caricare il file server, utilizzare il <xref:System.Web.HttpPostedFile.SaveAs%2A> metodo il <xref:System.Web.HttpPostedFile?displayProperty=nameWithType> oggetti contenuti nel <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> proprietà. Questa operazione viene in genere eseguita in un metodo di gestione degli eventi, ad esempio per un pulsante fare clic su.  
  
> [!NOTE]
>  Quando si utilizza il <xref:System.Web.HttpPostedFile.SaveAs%2A> metodo la <xref:System.Web.HttpPostedFile> classe, assicurarsi di specificare un percorso completo (ad esempio, "C:\MyFiles\Test.txt"). Il comportamento del <xref:System.Web.HttpPostedFile.SaveAs%2A> metodo può essere specificato nel [elemento httpRuntime (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) sezione di configurazione con il `requireRootedSaveAsPath` attributo. Il valore predefinito di questo attributo è `true`. Se si imposta questo attributo su `false`, quindi utilizzando il <xref:System.Web.HttpPostedFile.SaveAs%2A> metodo senza un percorso specificato verrà eseguito un tentativo di inserire il file nella `systemroot` \system32\inetsrv directory. Per impostazione predefinita, questa directory è protetto da scrittura; Pertanto, il file non può essere salvato non esiste. Assicurarsi di fornire le autorizzazioni di scrittura per l'account utilizzato da ASP.NET per la directory in cui si desidera archiviare il file.  
  
 Quando si caricano file di grandi dimensioni, utilizzare il `maxRequestLength` attributo del [elemento httpRuntime (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento per aumentare la dimensione file massima consentita. Quando il file supera la dimensione specificata, viene generato un errore DNS nel browser. Inoltre, si potrebbe essere visualizzato il messaggio di errore seguente durante il caricamento di file di grandi dimensioni:  
  
 aspnet_wp.exe (PID: 1520) è stato riciclato perché il consumo di memoria superava 460 MB (60% della RAM disponibile).  
  
 Se viene visualizzato questo messaggio di errore, aumentare il valore della `memoryLimit` attributo la [elemento processModel (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) elemento del file Machine. config.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlInputFile>, vedere il <xref:System.Web.UI.HtmlControls.HtmlInputFile.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo per creare uno scenario di caricamento di file semplice. Per questo esempio, per funzionare correttamente, è necessario creare una directory denominata `Temp` nel computer unità C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpPostedFile" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputFile();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.HtmlControls.HtmlInputFile> classe.  
  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlInputFile>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|La stringa letterale "file".|  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come creare una nuova istanza della classe <xref:System.Web.UI.HtmlControls.HtmlInputFile>. Per questo esempio, per funzionare correttamente, è necessario creare una directory denominata `Temp` nel computer unità C.  
  
 [!code-aspx-csharp[HtmlInputFileCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileCtor/CS/htmlinputfilectorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileCtor/VB/htmlinputfilectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Property Accept As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accept { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un elenco di codifiche MIME separate da virgole utilizzato per aggiungere vincoli ai tipi di file che possono essere selezionati dall'utente.</summary>
        <value>Elenco di codifiche MIME separate da virgole.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per specificare il tipo di file che può essere caricato nel server. Ad esempio, per limitare la selezione di immagini, impostare questa proprietà su "image / *".  
  
> [!NOTE]
>  Supporto per questa proprietà è dipendente dal browser. Controllare il browser per determinare se supporta questa proprietà. È consigliabile utilizzare il codice lato server per verificare che il file sia del tipo previsto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> proprietà per impedire all'utente di selezionare un file di immagine. Per questo esempio, per funzionare correttamente, è necessario creare una directory denominata `Temp` nel computer unità C. Poiché il supporto per il <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> è dipendente dal browser, viene eseguito un controllo di sul lato server per garantire che solo le immagini vengono caricate. Viene generata un'eccezione se il file caricato non può essere letto come un <xref:System.Drawing.Image> tipo.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificatore di chiave per il controllo.</param>
        <param name="postCollection">Raccolta di tutti i valori di nome in ingresso.</param>
        <summary>Elabora i dati di postback per il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />.</summary>
        <returns>Questo metodo restituisce sempre <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo implementa il <xref:System.Web.UI.IPostBackDataHandler> interfaccia, che dispone di due metodi: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> e <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>. Il <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> metodo viene chiamato dal <xref:System.Web.UI.HtmlControls.HtmlInputFile.System%23Web%23UI%23IPostBackDataHandler%23RaisePostDataChangedEvent%2A> (metodo) e restituisce sempre `false`, a indicare che il <xref:System.Web.UI.HtmlControls.HtmlInputFile> stato del controllo non è gestito dal framework della pagina ASP.NET.  
  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la lunghezza massima del percorso del file da caricare dal computer client.</summary>
        <value>Lunghezza massima del percorso del file. Il valore predefinito -1 indica che la proprietà non è stata impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per specificare un limite per il numero di caratteri che possono essere immessi per il percorso del file da caricare.  
  
> [!NOTE]
>  Supporto per questa proprietà è dipendente dal browser. Controllare il browser per determinare se supporta questa proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.PreRender" /> per il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è specificata alcuna codifica per la pagina Web <xref:System.Web.UI.HtmlControls.HtmlForm> (controllo), il <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> proprietà è impostata su "multipart/form-data".  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender%2A> metodo in modo che un `Title` attributo verrà sempre aggiunti a ogni personalizzato <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo. Per questo esempio, per funzionare correttamente, è necessario creare una directory denominata `Temp` nel computer unità C.  
  
 [!code-aspx-csharp[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'accesso al file caricato specificato da un client.</summary>
        <value>Oggetto <see cref="T:System.Web.HttpPostedFile" /> per l'accesso al file da caricare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le restrizioni di sicurezza del browser impediscano che questo valore viene mantenuta in più richieste.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> proprietà per avviare l'utilità che trasferisce il file al server. Si noti che se la dimensione del file caricato in byte supera il valore di <xref:System.Web.HttpPostedFile.ContentLength%2A> proprietà, il file non è stata caricata. Per questo esempio, per funzionare correttamente, è necessario creare una directory denominata `Temp` nel computer unità C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica al controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> che lo stato del controllo è cambiato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo implementa il <xref:System.Web.UI.IPostBackDataHandler> interfaccia, che dispone di due metodi: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> e <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>. Il <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType> (metodo) non fa parte dell'elaborazione del <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo ed è incluso per completare l'implementazione dell'interfaccia.  
  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la larghezza della casella di testo in cui inserire il percorso del file.</summary>
        <value>Larghezza della casella di testo per il percorso del file. Il valore predefinito -1 indica che la proprietà non è stata impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per specificare la larghezza della casella di testo in cui immettere il percorso del file.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputFile.Size%2A> proprietà per specificare la larghezza della casella di testo in cui l'utente immette il percorso del file. Per questo esempio, per funzionare correttamente, è necessario creare una directory denominata `Temp` nel computer unità C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Size Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Size Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificatore di chiave per il controllo.</param>
        <param name="postCollection">Raccolta di tutti i valori di nome in ingresso.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns>
          <see langword="true" /> se lo stato del controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> è cambiato in seguito al postback; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.HtmlControls.HtmlInputFile> a un'interfaccia <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.HtmlControls.HtmlInputFile> a un'interfaccia <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso completo del file sul computer client.</summary>
        <value>Percorso completo del file del client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> proprietà recupera il percorso completo del file nel computer client (ad esempio "C:\MyFiles\Test.txt"). Ciò è utile quando è necessario conoscere in cui il file viene archiviato nel computer di invio del file. Questa proprietà viene spesso utilizzata anche per determinare il nome del file originale. Per ottenere il nome del file originale, analizzare il valore di questa proprietà.  
  
> [!NOTE]
>  La proprietà <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> è di sola lettura. Se si tenta di assegnare un valore per questa proprietà, un <xref:System.NotSupportedException?displayProperty=nameWithType> viene generata un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> proprietà per visualizzare il percorso completo del file nel computer client. Per questo esempio, per funzionare correttamente, è necessario creare una directory denominata `Temp` nel computer unità C.  
  
 [!code-aspx-csharp[HtmlInputFileValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileValue/CS/htmlinputfilevaluecs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileValue/VB/htmlinputfilevaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">È stato effettuato un tentativo di assegnare un valore a questa proprietà.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
        <altmember cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
  </Members>
</Type>