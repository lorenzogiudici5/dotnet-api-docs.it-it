<Type Name="HtmlInputPassword" FullName="System.Web.UI.HtmlControls.HtmlInputPassword">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31b97d0d59db902629c83cfc79d8f7190e28c208" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30588435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputPassword extends System.Web.UI.HtmlControls.HtmlInputText implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputPassword&#xA;Inherits HtmlInputText" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputPassword : System::Web::UI::HtmlControls::HtmlInputText" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputText</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente l'accesso a livello di codice all'elemento HTML <see langword="&lt;input type= password&gt;" /> sul server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputPassword> viene derivata dal <xref:System.Web.UI.HtmlControls.HtmlInputText> e viene utilizzata per creare una casella di testo a riga singola che consente all'utente di immettere una password. Quando si utilizza il <xref:System.Web.UI.HtmlControls.HtmlInputPassword> (controllo), il <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> proprietà viene registrata ogni volta che il form viene inviato al server. Il <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> proprietà per il <xref:System.Web.UI.HtmlControls.HtmlInputPassword> controllo non è persistente in stato di visualizzazione.  
  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> proprietà specifica il numero massimo di caratteri che possono essere immessi nella casella di testo. Il <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> proprietà consente di specificare la larghezza della casella di testo. Utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> proprietà per determinare il valore immesso nella casella di testo dall'utente. Il <xref:System.Web.UI.HtmlControls.HtmlInputPassword> controllo fornisce un <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> evento che viene generato quando il <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> proprietà viene modificato tra gli invii al server. Ciò consente di creare un gestore eventi che esegue un set di istruzioni personalizzato ogni volta che viene generato l'evento.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.HtmlControls.HtmlInputPassword> controllo non fornisce un metodo incorporato per il postback al server. È necessario specificare un altro controllo pagina Web che supporti il postback al server, ad esempio un <xref:System.Web.UI.HtmlControls.HtmlButton> o <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> controllo.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, vedere il <xref:System.Web.UI.HtmlControls.HtmlInputPassword.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il `<input type=text>`, `<input type=password>`, e `<input type=submit>` controlli HTML in modo dichiarativo in una pagina Web Form.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/CS/htmlinputcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/VB/htmlinputvb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come aggiungere gli stessi controlli HTML a livello di codice durante una chiamata al `Page_Load` metodo.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputPassword();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> utilizzando i valori predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.HtmlControls.HtmlInputPassword> controllare utilizzando i valori predefiniti. Crea un `password` digitare controllo casella di testo.  
  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlInputPassword>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|La stringa letterale "password".|  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come aggiungere a livello di programmazione <xref:System.Web.UI.HtmlControls.HtmlInputText>, <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, e <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> controlli a una pagina Web Form utilizzando i costruttori predefiniti per creare una schermata di accesso semplice.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto di cui è stato eseguito il rendering.</param>
        <summary>Esegue il rendering degli attributi del controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> sull'oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes%2A> metodo rimuove il `Value` attributo dalla raccolta degli stati di visualizzazione per evitare che viene eseguito il rendering e quindi chiama la classe di base <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>