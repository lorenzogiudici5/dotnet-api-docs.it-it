<Type Name="HtmlButton" FullName="System.Web.UI.HtmlControls.HtmlButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10c70bfab1266f4795ea34a6b6f4f3163fb8230e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590315" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlButton : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlButton extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlButton" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlButton&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlButton : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente l'accesso a livello di codice al tag HTML <see langword="&lt;button&gt;" /> sul server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `<button>` elemento consente agli sviluppatori Web creare pulsanti di modulo di interfaccia utente che possono essere costituiti da elementi HTML incorporati, inclusi altri controlli server.  
  
> [!NOTE]
>  Il `<button>` elemento è definito nella specifica HTML 4.0 ed è supportata solo in Microsoft Internet Explorer versione 4.0 e versioni successive. Per creare pulsanti di form dell'interfaccia utente per l'utilizzo in altri browser, è consigliabile utilizzare la <xref:System.Web.UI.HtmlControls.HtmlInputImage> classe.  
  
 Per eseguire una serie di istruzioni personalizzate quando il <xref:System.Web.UI.HtmlControls.HtmlButton> si fa clic sul controllo, fornire un gestore personalizzato per il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.HtmlControls.HtmlButton> controllo esegue il rendering di ECMAScript nel browser client. Il client deve avere ECMAScript abilitata per questo controllo per funzionare correttamente. Per ulteriori informazioni sullo script client, vedere [lo Script Client in ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlButton>, vedere il <xref:System.Web.UI.HtmlControls.HtmlButton.%23ctor%2A> costruttore.  
  
> [!CAUTION]
>  Per visualizzare l'input dell'utente che può includere uno script client dannoso, è possibile utilizzare questo controllo. Verificare tutte le informazioni inviate da un client per uno script eseguibile, istruzioni SQL o altro codice prima di visualizzarlo nell'applicazione. ASP.NET fornisce una funzionalità di convalida richiesta di input per bloccare script e HTML nell'input dell'utente. Controlli server di convalida vengono inoltre forniti per valutare l'input dell'utente. Per ulteriori informazioni, vedere [sintassi dei controlli di convalida Server](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento per visualizzare il nome immesso nella casella di testo.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.HtmlControls.HtmlButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.HtmlControls.HtmlButton> controllo.  
  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlButton>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|La stringa letterale "button".|  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come aggiungere in modo dinamico un <xref:System.Web.UI.HtmlControls.HtmlButton> controllo alla pagina Web Form.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se viene eseguita la convalida quando si fa clic sul controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" />.</summary>
        <value>
          <see langword="true" /> se viene eseguita la convalida quando si fa clic sul controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, viene eseguita la convalida della pagina quando un <xref:System.Web.UI.HtmlControls.HtmlButton> si fa clic sul controllo. La convalida della pagina determina se i controlli di input associata a un controllo di convalida nella pagina che passano le regole di convalida specificate dal controllo di convalida.  
  
 È possibile specificare o determinare se la convalida viene eseguita sia il client e server quando un <xref:System.Web.UI.HtmlControls.HtmlButton> si fa clic sul controllo utilizzando il <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> proprietà. Per evitare che venga eseguita la convalida, impostare il <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> proprietà `false`.  
  
 Questa proprietà viene comunemente utilizzata nel gestore eventi per il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> impedisca la convalida della pagina quando viene premuto un pulsante Annulla o la reimpostazione dell'evento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> proprietà per impedire la convalida della pagina. Si noti che il <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> metodo attiva ogni controllo di convalida in modo indipendente.  
  
 [!code-aspx-csharp[HtmlButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonCausesValidation/CS/htmlbuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonCausesValidation/VB/htmlbuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.PreRender" /> e registra uno script client per la generazione di un postback.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlButton.OnPreRender%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.HtmlControls.HtmlButton> controllo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.HtmlControls.HtmlButton.OnPreRender%2A> metodo in un server personalizzato controllare in modo che venga sempre visualizzato il <xref:System.Web.UI.HtmlControls.HtmlButton> con testo in grassetto.  
  
 [!code-aspx-csharp[CustomHtmlButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/CS/custom_htmlbutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/VB/custom_htmlbutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/CS/custom_htmlbutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/VB/custom_htmlbutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />. In tal modo è possibile fornire un gestore personalizzato per l'evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento viene generato quando il <xref:System.Web.UI.HtmlControls.HtmlButton> si fa clic sul controllo. Questo evento provoca un round trip al verificarsi dal client al server e viceversa. È volutamente diverso dal lato client `OnClick` evento. Se esiste un conflitto tra il codice eseguito con un <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento e il codice eseguito da un lato client `OnClick` evento, l'evento sul lato server istruzioni sostituiranno il codice sul lato client.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.HtmlControls.HtmlButton.OnServerClick%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come specificare in modo dichiarativo e codice di un gestore eventi per il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento. Quando il <xref:System.Web.UI.HtmlControls.HtmlButton> si fa clic sul controllo, viene visualizzato il valore immesso nella casella di testo.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 Esempio di codice riportato di seguito viene illustrato come specificare a livello di codice e codificare un gestore eventi per il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argomento per l'evento.</param>
        <summary>Genera eventi per il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> durante il postback al server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent%2A> metodo viene utilizzato il <xref:System.Web.UI.HtmlControls.HtmlButton> controllo, quando è selezionato, per generare un <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento.  
  
 Se il <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> proprietà è `true`, <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> metodo viene chiamato con il gruppo di controlli specificato nella <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> proprietà.  
  
 Questo metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.HtmlControls.HtmlButton> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente il flusso di output per il rendering sul client.</param>
        <summary>Esegue il rendering degli attributi del controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> nell'oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> metodo scrive il `onclick` attributo dell'oggetto sottoposto a rendering <xref:System.Web.UI.HtmlControls.HtmlButton> controllare e quindi chiama il metodo base <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=nameWithType> metodo.  
  
 Il <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.HtmlControls.HtmlButton> controllo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> metodo in un server personalizzato controllare in modo che verrà sempre visualizzato un titolo per il <xref:System.Web.UI.HtmlControls.HtmlButton> controllo.  
  
 [!code-aspx-csharp[CustomHtmlButtonRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/CS/custom_htmlbutton_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlButtonRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/VB/custom_htmlbutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlButtonRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/CS/custom_htmlbutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlButtonRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/VB/custom_htmlbutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando l'utente fa clic su un controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> nella pagina Web del client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento viene generato quando il <xref:System.Web.UI.HtmlControls.HtmlButton> si fa clic sul controllo. Questo evento server provoca un round trip al verificarsi dal client al server e viceversa. È volutamente diverso dal lato client `OnClick` evento. Se esiste un conflitto tra il codice eseguito con un <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento e il codice eseguito da un lato client `OnClick` evento, l'evento sul lato server istruzioni sostituiranno il codice sul lato client.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come specificare in modo dichiarativo e codice di un gestore eventi per il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento. Quando il <xref:System.Web.UI.HtmlControls.HtmlButton> si fa clic sul controllo, viene visualizzato il valore immesso nella casella di testo.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 Esempio di codice riportato di seguito viene illustrato come specificare a livello di codice e codificare un gestore eventi per il <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argomenti dell'evento.</param>
        <summary>Genera eventi per il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> durante il postback al server.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il gruppo di controlli per il quale il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> causa la convalida in occasione del postback al server.</summary>
        <value>Gruppo di controlli per il quale il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> causa la convalida in occasione del postback al server. Il valore predefinito è una stringa vuota (""), che indica che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gruppi di convalida consentono di assegnare i controlli di convalida in una pagina a una categoria specifica. Ogni gruppo di convalida può essere convalidato in modo indipendente da altri gruppi di convalida della pagina. Utilizzare il <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> proprietà per specificare il nome del gruppo di convalida per il quale il <xref:System.Web.UI.HtmlControls.HtmlButton> controllo causa la convalida quando esegue il postback al server.  
  
 Questa proprietà ha effetto solo quando il valore di <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> è impostata su `true`. Quando si specifica un valore per il <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> solo i controlli di convalida che fanno parte del gruppo specificato di proprietà, vengono convalidati quando il <xref:System.Web.UI.HtmlControls.HtmlButton> il postback al server di controllo. Se non si specifica un valore per questa proprietà e <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> è impostata su `true`, tutti i controlli di convalida della pagina che non sono assegnati a un gruppo di convalida vengono convalidati quando il controllo esegue il postback al server.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> proprietà per specificare i controlli per la convalida quando un <xref:System.Web.UI.HtmlControls.HtmlButton> il postback al server di controllo. La pagina contiene due caselle di testo per acquisire i dati da parte dell'utente e due <xref:System.Web.UI.WebControls.RequiredFieldValidator> controlli per assicurarsi che l'utente non lasciare una casella di testo vuoto. Il <xref:System.Web.UI.WebControls.RequiredFieldValidator> controllare per prima casella di testo è nel `CityInfoGroup` gruppo di convalida e <xref:System.Web.UI.WebControls.RequiredFieldValidator> per la seconda casella di controllo di `StateInfoGroup` gruppo di convalida. Quando il `CityQueryButton` si fa clic, solo il controllo di `CityInfoGroup` viene convalidato il gruppo di convalida. Quando il `StateQueryButton` si fa clic, solo il controllo di `StateInfoGroup` viene convalidato il gruppo di convalida.  
  
 [!code-aspx-csharp[HtmlButtonValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonValidationGroup/CS/htmlbuttonvalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonValidationGroup/VB/htmlbuttonvalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>