<Type Name="HtmlInputButton" FullName="System.Web.UI.HtmlControls.HtmlInputButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a0163017f1271f0df7af867e8ff93f0df691b2c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36588473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputButton extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputButton" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputButton&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputButton : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type HtmlInputButton = class&#xA;    inherit HtmlInputControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente l'accesso a livello di codice agli elementi HTML <see langword="&lt;input type= button&gt;" />, <see langword="&lt;input type= submit&gt;" /> e <see langword="&lt;input type= reset&gt;" /> sul server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la <xref:System.Web.UI.HtmlControls.HtmlInputButton> classe per creare i controlli pulsante in una pagina Web. Un `<input type=button>` elemento HTML è un pulsante di comando con alcun comportamento predefinito quando si fa clic. Un `<input type=submit>` elemento HTML è un pulsante che invia un form quando si fa clic. Un `<input type=reset>` HTML pulsante Reimposta tutti i controlli in base ai valori iniziali quando si fa clic.  
  
 In ASP.NET 2.0, usare il <xref:System.Web.UI.HtmlControls.HtmlInputReset> classe e il <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> classe per creare i pulsanti di invio e la reimpostazione, rispettivamente.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlInputButton>, vedere il <xref:System.Web.UI.HtmlControls.HtmlInputButton.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputButton> controllo per creare un pulsante di comando, un pulsante di invio e un pulsante Reimposta.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/cs/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/vb/htmlinputbuttonvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlButton" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> utilizzando i valori predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlInputButton>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|La stringa letterale "button".|  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una nuova istanza di un <xref:System.Web.UI.HtmlControls.HtmlInputButton> utilizzando il costruttore predefinito.  
  
 [!code-aspx-csharp[HtmlInputButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor/CS/htmlinputbuttonctorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor/VB/htmlinputbuttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputButton(System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlInputButton : string -&gt; System.Web.UI.HtmlControls.HtmlInputButton" Usage="new System.Web.UI.HtmlControls.HtmlInputButton type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Tipo del pulsante di input.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> utilizzando il tipo di pulsante specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.HtmlControls.HtmlInputButton>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Valore del parametro `type`.|  
  
 Nella tabella seguente vengono illustrati i diversi valori possibili per il `type` parametro.  
  
|Valore|Descrizione|  
|-----------|-----------------|  
|`button`|Un pulsante di comando.|  
|`submit`|Pulsante che invia il form al server.|  
|`reset`|Un pulsante che consente di cancellare il form.|  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una nuova istanza di <xref:System.Web.UI.HtmlControls.HtmlInputButton> utilizzando il costruttore di overload.  
  
 [!code-aspx-csharp[HtmlInputButtonCtor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor2/CS/htmlinputbuttonctor2cs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCtor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor2/VB/htmlinputbuttonctor2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se viene eseguita la convalida quando si fa clic sul controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" />.</summary>
        <value>
          <see langword="true" /> se viene eseguita la convalida quando si fa clic sul controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, viene eseguita la convalida della pagina quando un <xref:System.Web.UI.HtmlControls.HtmlInputButton> fa clic sul controllo. La convalida della pagina determina se i controlli di input associata a un controllo di convalida nella pagina che passano le regole di convalida specificate dal controllo di convalida.  
  
 È possibile specificare o determinare se la convalida viene eseguita sia il client e server quando un <xref:System.Web.UI.HtmlControls.HtmlInputButton> si fa clic sul controllo utilizzando il <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> proprietà. Per evitare che venga eseguita la convalida, impostare il <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> proprietà `false`.  
  
 Questa proprietà viene comunemente utilizzata nel gestore eventi per il <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> impedisca la convalida della pagina quando viene premuto un pulsante Annulla o la reimpostazione dell'evento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> proprietà per evitare la convalida della pagina. Si noti il modo in cui <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> metodo attiva ogni controllo di convalida in modo indipendente.  
  
 [!code-aspx-csharp[HtmlInputButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/CS/htmlinputbuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/VB/htmlinputbuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlInputButton.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> e registra uno script client per la generazione del postback.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> override dei metodi di <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> metodo. <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> viene usata principalmente dagli sviluppatori di controlli.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> metodo in modo che venga sempre visualizzato un oggetto personalizzato <xref:System.Web.UI.HtmlControls.HtmlInputButton> controllo con testo in grassetto.  
  
 [!code-aspx-csharp[CustomHtmlInputButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerClick : EventArgs -&gt; unit&#xA;override this.OnServerClick : EventArgs -&gt; unit" Usage="htmlInputButton.OnServerClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />. Consente di gestire l'evento direttamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> evento viene generato quando un <xref:System.Web.UI.HtmlControls.HtmlInputButton> fa clic sul controllo.  
  
> [!NOTE]
>  Un pulsante di reimpostazione non genera la <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> evento.  
  
 Quando si crea un delegato di <xref:System.Web.UI.HtmlControls.HtmlInputButton>, si identifica il metodo con cui gestire l'evento. Per associare l'evento al gestore eventi in uso, aggiungere all'evento un'istanza del delegato. Il gestore eventi viene chiamato ogni volta che si verifica l'evento, a meno che non venga rimosso il delegato. Per ulteriori informazioni sui delegati del gestore eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come specificare e codificare un gestore per il <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> evento. Il gestore eventi aggiunge i valori di due caselle di testo nella pagina e vengono visualizzati i risultati.  
  
 [!code-aspx-csharp[HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputButtonServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="htmlInputButton.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argomento per l'evento.</param>
        <summary>Genera eventi per il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> durante il postback al server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent%2A> metodo viene utilizzato per il <xref:System.Web.UI.HtmlControls.HtmlInputButton> (controllo), quando è selezionato, per generare un <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> evento.  
  
 Se il <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> proprietà è `true`, la <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> viene chiamato tramite il gruppo di controlli specificato nella <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> proprietà.  
  
 Questo metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.HtmlControls.HtmlInputButton> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputButton.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto di cui è stato eseguito il rendering.</param>
        <summary>Esegue il rendering degli attributi nel writer specificato, quindi chiama il metodo <see cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A> metodo esegue l'override della base <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=nameWithType>. Method. <xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A> viene usata principalmente dagli sviluppatori di controlli.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> metodo in un server personalizzato controllare in modo specifico titolo, accessibile come descrizione comando, viene sempre visualizzato per il <xref:System.Web.UI.HtmlControls.HtmlInputButton>.  
  
 [!code-aspx-csharp[CustomHtmlInputButtonRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputButtonRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputButtonRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerClick;" />
      <MemberSignature Language="F#" Value="member this.ServerClick : EventHandler " Usage="member this.ServerClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando si seleziona un controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> sulla pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato quando un <xref:System.Web.UI.HtmlControls.HtmlInputButton> fa clic sul controllo.  
  
> [!NOTE]
>  Un pulsante di reimpostazione non genera la <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come specificare e codificare un gestore per il <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> evento. Il gestore eventi aggiunge i valori di due caselle di testo nella pagina e vengono visualizzati i risultati.  
  
 [!code-aspx-csharp[HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputButtonServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Oggetto <see cref="T:System.String" /> che rappresenta un argomento di evento facoltativo da passare al gestore eventi.</param>
        <summary>Implementa il metodo <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" /> mediante la chiamata del metodo <see cref="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il gruppo di controlli per il quale il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> causa la convalida in occasione del postback al server.</summary>
        <value>Gruppo di controlli per il quale il controllo <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> causa la convalida in occasione del postback al server. Il valore predefinito è una stringa vuota (""), che indica che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gruppi di convalida consentono di assegnare i controlli di convalida in una pagina a una categoria specifica. Ogni gruppo di convalida può essere convalidato in modo indipendente da altri gruppi di convalida nella pagina. Usare la <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> proprietà per specificare il nome del gruppo di convalida per il quale il <xref:System.Web.UI.HtmlControls.HtmlInputButton> controllo causa la convalida quando esegue il postback al server.  
  
 Questa proprietà ha effetto solo quando il valore di <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> è impostata su `true`. Quando si specifica un valore per il <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> solo i controlli di convalida che fanno parte del gruppo specificato di proprietà, vengono convalidati quando il <xref:System.Web.UI.HtmlControls.HtmlInputButton> il postback al server di controllo. Se non si specifica un valore per questa proprietà e il <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> è impostata su `true`, tutti i controlli di convalida nella pagina che non sono assegnati a un gruppo di convalida vengono convalidati quando il controllo esegue il postback al server.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> proprietà per specificare i controlli per la convalida quando un <xref:System.Web.UI.HtmlControls.HtmlInputButton> il postback al server di controllo. La pagina contiene due caselle di testo per acquisire i dati da parte dell'utente e due <xref:System.Web.UI.WebControls.RequiredFieldValidator> controlli per assicurarsi che l'utente non rischia di lasciare una casella di testo vuoto. Il <xref:System.Web.UI.WebControls.RequiredFieldValidator> controllare per prima casella di testo è nel `CityInfoGroup` gruppo di convalida e il <xref:System.Web.UI.WebControls.RequiredFieldValidator> per la seconda casella di controllo di `StateInfoGroup` gruppo di convalida. Quando il `CityQueryButton` fa, solo il controllo nel `CityInfoGroup` gruppo di convalida viene convalidato. Quando il `StateQueryButton` fa, solo il controllo nel `StateInfoGroup` gruppo di convalida viene convalidato.  
  
 [!code-aspx-csharp[HtmlInputButtonValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/CS/htmlinputbuttonvalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/VB/htmlinputbuttonvalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>