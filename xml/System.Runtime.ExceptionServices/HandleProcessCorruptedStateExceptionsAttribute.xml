<Type Name="HandleProcessCorruptedStateExceptionsAttribute" FullName="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5713d1583a1d1ee0f3d65b449efaee6521bf597" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30476945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HandleProcessCorruptedStateExceptionsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HandleProcessCorruptedStateExceptionsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HandleProcessCorruptedStateExceptionsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleProcessCorruptedStateExceptionsAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente al codice gestito di gestire le eccezioni che indicano uno stato di processo danneggiato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eccezioni di stato processo danneggiato sono eccezioni che indicano che lo stato di un processo è stato danneggiato. Non è consigliabile eseguire l'applicazione in questo stato.  
  
 Per impostazione predefinita, common language runtime (CLR) non recapita queste eccezioni nel codice gestito e `try` / `catch` blocchi (e altre clausole di gestione delle eccezioni) non vengono richiamate per loro. Se si è assolutamente certi che si desidera mantenere la gestione di queste eccezioni, è necessario applicare il <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> attributo al metodo il cui clausole di gestione delle eccezioni che si desidera eseguire. CLR fornisce eccezione dello stato di processo danneggiato per le clausole di eccezione applicabili solo nei metodi che presentano entrambi il <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> e <xref:System.Security.SecurityCriticalAttribute> gli attributi.  
  
 È inoltre possibile aggiungere il file di configurazione dell'applicazione. Ciò garantisce che le eccezioni di stato danneggiato vengano recapitate ai gestori di eccezioni senza il <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> o <xref:System.Security.SecurityCriticalAttribute> attributo. Questo elemento di configurazione non ha alcun effetto sulle applicazioni che sono stati compilati nelle versioni precedenti al [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ma vengono eseguiti [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] o versioni successive; eccezioni di stato danneggiato verranno continueranno a essere recapitati per le applicazioni. Il <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> attributo viene ignorato quando viene rilevata nel codice parzialmente attendibile o trasparente, perché un host attendibile non deve consentire un componente aggiuntivo non attendibile di intercettare e ignorare queste eccezioni grave.  
  
 Per ulteriori informazioni sulle eccezioni stato processo danneggiato, vedere la voce [la gestione delle eccezioni di stato danneggiato](http://go.microsoft.com/fwlink/?LinkID=179681) nel blog di CLR Inside Out.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleProcessCorruptedStateExceptionsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleProcessCorruptedStateExceptionsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>