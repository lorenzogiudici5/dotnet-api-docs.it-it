<Type Name="MenuAdapter" FullName="System.Web.UI.WebControls.Adapters.MenuAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b55a1124efdb51a8f02504a8c2202ff67c3a2cb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590625" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuAdapter&#xA;Inherits WebControlAdapter&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Consente di modificare il comportamento del controllo <see cref="T:System.Web.UI.WebControls.Menu" /> per browser specifici.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> modifica il markup o un comportamento di un <xref:System.Web.UI.WebControls.Menu> controllo per un browser specifico o di una classe del browser oppure agisce come un filtro su alcune funzionalità.  
  
 Per impostazione predefinita, il <xref:System.Web.UI.WebControls.MenuItem> gli oggetti di <xref:System.Web.UI.WebControls.Menu> controllo vengono visualizzate come collegamenti ipertestuali per supportare la navigazione menu. Il <xref:System.Web.UI.WebControls.Menu> classe mantiene lo stato mediante l'implementazione di <xref:System.Web.UI.IPostBackEventHandler> interfaccia in modo che possa rispondere e generare eventi specifici durante il postback. È possibile estendere il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> classe per personalizzare ulteriormente il rendering o il comportamento del <xref:System.Web.UI.WebControls.Menu> controllo.  
  
 La richiesta iniziale per un adattatore, .NET Framework per la ricerca di un adattatore mappato per il controllo, considerando le caratteristiche del browser richiedente. La <xref:System.Web.HttpBrowserCapabilities> classe utilizza file di definizione del browser per identificare le caratteristiche del browser del client ed eseguire il mapping dell'adattatore al tipo di browser.  
  
 Per ulteriori informazioni sul rendering adattivo in ASP.NET, vedere [dell'architettura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.AspNetHostingPermission" />
    <altmember cref="T:System.Web.HttpBrowserCapabilities" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La richiesta iniziale per un adattatore, .NET Framework per la ricerca di un adattatore mappato per il controllo, considerando le caratteristiche del browser richiedente. Dopo aver trovata la scheda, il controllo contiene un riferimento all'istanza dell'adattatore mappato nel relativo <xref:System.Web.UI.Control.Adapter%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.Menu Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Menu Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As Menu" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::Menu ^ Control { System::Web::UI::WebControls::Menu ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera un riferimento fortemente tipizzato al controllo <see cref="T:System.Web.UI.WebControls.Menu" /> associato a questo oggetto <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />.</summary>
        <value>Controllo <see cref="T:System.Web.UI.WebControls.Menu" /> associato all'oggetto <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A> proprietà fornisce un modo per fare riferimento di controllo corrispondente dell'adattatore. Quando un adapter è associato a un particolare controllo, .NET Framework chiamerà i metodi del ciclo di vita dell'adapter anziché o oltre ai metodi del ciclo di vita del controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A> proprietà per recuperare il <xref:System.Web.UI.WebControls.Menu> controllo della classe padre. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/CS/contosomenuadapter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/VB/contosomenuadapter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadAdapterControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadAdapterControlState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Object" /> sotto forma di dizionario contenente le informazioni sullo stato dell'adattatore.</param>
        <summary>Carica eventuali informazioni sullo stato del controllo salvate mediante il metodo <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" /> durante una richiesta precedente della pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un adapter deve conservare informazioni sullo stato privato, è possibile eseguire l'override di <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> e <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> metodi. In caso del <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> classe, in cui la gerarchia di menu visualizzata dipende selezionato in precedenza <xref:System.Web.UI.WebControls.MenuItem> oggetto `state` fornisce un dizionario di coppie nome/valore contenente il percorso dell'elemento selezionato nella gerarchia di menu. Il `state` parametro è un <xref:System.Web.UI.Pair> oggetto salvato mediante il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> durante una richiesta precedente alla pagina.  
  
 Se il controllo non è registrato per la partecipazione in stato di controllo, è necessario registrare l'adapter per lo stato del controllo. Lo stato del controllo scheda viene mantenuto oltre che dello stato per il controllo, a differenza di altri metodi del ciclo di vita.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati <see cref="T:System.EventArgs" /> associati a questo evento.</param>
        <summary>Registra il controllo <see cref="T:System.Web.UI.WebControls.Menu" /> associato come uno che richiede lo stato del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> metodo registra il controllo associato come uno che richiede lo stato del controllo. Per impostazione predefinita, .NET Framework chiama il controllo server Web proprio <xref:System.Web.UI.Control.OnInit%2A> metodo. Tuttavia, dopo il <xref:System.Web.UI.Control.Adapter%2A> del controllo server viene impostata, .NET Framework verrà chiamata l'implementazione dell'adattatore di <xref:System.Web.UI.Control.OnInit%2A> metodo invece l'implementazione del controllo.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> metodo per inizializzare le impostazioni del controllo. Durante un postback, questa è una fase importante per gestire l'interazione con i dati dello stato di visualizzazione esistenti. Per ulteriori informazioni, vedere [dell'architettura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se l'adapter esegue l'override di <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" /> (metodo), è necessario chiamare il metodo corrispondente nella classe base. In caso contrario, il controllo <see cref="E:System.Web.UI.Control.Init" /> non verrà generato l'evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati <see cref="T:System.EventArgs" /> associati a questo evento.</param>
        <summary>Gestisce il metodo <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> per il controllo <see cref="T:System.Web.UI.WebControls.Menu" /> associato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> metodo chiama interna `OnPreRender` metodo la <xref:System.Web.UI.WebControls.Menu> classe. Tutte le altre funzioni di pre-rendering delle classi padre, ad esempio l'associazione dati, l'applicazione di stili e le assegnazioni di evento eseguono come previsto.  
  
 Per impostazione predefinita, .NET Framework chiama la <xref:System.Web.UI.WebControls.Menu> del controllo <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> metodo. Tuttavia, dopo il <xref:System.Web.UI.Control.Adapter%2A> del controllo è impostata, .NET Framework chiamerà l'implementazione dell'adattatore di <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> metodo invece l'implementazione del controllo.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> metodo per rendere effettive le impostazioni del controllo. Le modifiche apportate alle proprietà del controllo in questa fase verranno salvate per lo stato di visualizzazione, ma le modifiche apportate nel <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> (metodo) non sono state salvate. Per ulteriori informazioni, vedere [dell'architettura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se l'adapter esegue l'override di <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" /> (metodo), è necessario chiamare il metodo corrispondente nella classe base. In caso contrario, il controllo <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> (metodo) non verrà generato.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Oggetto <see cref="T:System.String" /> che rappresenta il percorso del nodo corrente nella gerarchia di menu.</param>
        <summary>Utilizzato per mantenere il percorso del menu quando viene generato un evento di postback.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent%2A> metodo viene chiamato quando il <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> viene generato l'evento e viene utilizzato per mantenere il percorso di navigazione del menu. Il `eventArgument` parametro contiene una stringa delimitata di voci di menu che identificano la posizione corrente nella gerarchia di menu.  
  
 La pagina passa il valore di `eventArgument` per il controllo associato <xref:System.Web.UI.WebControls.Menu.RaisePostBackEvent%2A> metodo. L'oggetto associato <xref:System.Web.UI.WebControls.Menu> controllo inoltre esegue il rendering dell'elemento di markup che determina il verificarsi del postback. Se il controllo esegue il rendering dello script lato client per il postback, l'argomento dello script viene passato il `eventArgument` parametro. Se il postback è causato da un semplice invio `eventArgument` è `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La profondità del nodo corrente è maggiore rispetto a quella consentita. Ciò può essere causato da una dichiarazione non valida, da una modifica apportata dall'ultima richiesta o da una richiesta manomessa (falsificata).</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="protected override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Istanza di <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per compilare ed eseguire il rendering dell'output specifico della periferica.</param>
        <summary>Aggiunge attributi di tag e scrive il markup per il tag di apertura del controllo nel flusso di output emesso nel browser o nel dispositivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> metodo aggiunge attributi di tag e scrive il markup per il tag di apertura del controllo di flusso di output emesso nel flusso di risposta per il browser client. Il <xref:System.Web.UI.WebControls.MenuItem> verranno visualizzati gli oggetti singolarmente nel <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> (metodo) e il controllo verrà chiuso con una chiamata alla successiva <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> metodo.  
  
 Eseguire l'override <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> quando si desidera implementare un comportamento personalizzato. Ad esempio, eseguire l'override del metodo per scrivere più tag per il flusso di risposta prima di qualsiasi controllo contenuto, ad esempio `<table><tr><td>`. Utilizzare il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> metodo in combinazione con il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> per garantire l'apertura e chiusura uniformità dei tag nell'output.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per compilare ed eseguire il rendering dell'output specifico del dispositivo.</param>
        <summary>Scrive le voci di menu associate nel controllo <see cref="T:System.Web.UI.WebControls.Menu" /> associato nel flusso di output come serie di collegamenti ipertestuali.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> metodo scrive il <xref:System.Web.UI.WebControls.MenuItem> oggetti della classe associata <xref:System.Web.UI.WebControls.Menu> controllo nel flusso di output come collegamenti ipertestuali. Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> metodo e viene utilizzata per apportare modifiche al codice di cui viene eseguito il rendering di un browser del dispositivo.  
  
 Prima di questa fase del ciclo di vita e solo la creazione di codice effettivo per il controllo in questo caso, è necessario specificare le proprietà del controllo. Le modifiche apportate al controllo in questa fase del ciclo di vita non vengono salvate nello stato di visualizzazione. Per salvare le modifiche apportate al controllo, eseguire l'override di <xref:System.Web.UI.Control.OnPreRender%2A> evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La profondità dell'elemento corrente è maggiore rispetto a quella consentita.  
  
 oppure  
  
 L'elemento corrente è disabilitato.</exception>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Istanza di <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per compilare ed eseguire il rendering dell'output specifico della periferica.</param>
        <summary>Crea il markup finale e scrive il markup per il tag di chiusura del controllo nel flusso di output emesso nel browser o nella periferica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> metodo scrive il markup per il tag di chiusura del controllo di flusso di output emesso nel flusso di risposta per il browser client. Attributi, gli attributi di stile e tag di apertura, il rendering viene eseguiti nel <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> metodo. Il <xref:System.Web.UI.WebControls.MenuItem> rendering singolarmente degli oggetti di <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> metodo.  
  
 Eseguire l'override <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> quando si desidera implementare un comportamento personalizzato. Ad esempio, eseguire l'override del metodo per scrivere più tag di chiusura per il flusso di risposta, ad esempio dopo il contenuto di qualsiasi controllo `</td></tr></table>`. Utilizzare il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> metodo in combinazione con il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> per garantire l'apertura e chiusura uniformità dei tag nell'output.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderItem">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderItem (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.MenuItem item, int position);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderItem(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.MenuItem item, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderItem (writer As HtmlTextWriter, item As MenuItem, position As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderItem(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::MenuItem ^ item, int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="writer">Istanza di <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per compilare ed eseguire il rendering dell'output specifico della periferica.</param>
        <param name="item">Oggetto <see cref="T:System.Web.UI.WebControls.MenuItem" /> contenente le proprietà da scrivere nel flusso di risposta.</param>
        <param name="position">Posizione dell'oggetto <see cref="T:System.Web.UI.WebControls.MenuItem" /> specificato nella gerarchia di menu.</param>
        <summary>Esegue il rendering di una singola voce di menu come collegamento ipertestuale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> metodo per recuperare gli stili e gli attributi di spaziatura dal <xref:System.Web.UI.WebControls.MenuItem> dell'oggetto e di applicarlo a un collegamento ipertestuale appena creato. Viene attraversata la gerarchia di menu nel <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> metodo e chiama il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A> metodo per eseguire il rendering di ogni elemento. Ogni elemento viene visualizzato come un collegamento ipertestuale ed eredita gli stili dell'oggetto specificato e le proprietà <xref:System.Web.UI.WebControls.MenuItem> controllo. Il collegamento ipertestuale il rendering della pagina è uno dei valori seguenti:  
  
-   Un evento di postback per aprire o selezionare l'elemento.  
  
-   Un collegamento per passare alla destinazione specificata nel <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> proprietà del <xref:System.Web.UI.WebControls.MenuItem> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveAdapterControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveAdapterControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveAdapterControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva eventuali modifiche allo stato del controllo privato dell'adattatore apportate dopo il postback della pagina nel server.</summary>
        <returns>
          <see cref="T:System.Object" /> contenente le informazioni sullo stato del controllo dell'adattatore come <see cref="T:System.Web.UI.StateBag" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> metodo utilizza il <xref:System.Web.UI.WebControls.Menu> stato per mantenere il percorso di navigazione corrente del menu del controllo. Quando un adapter deve conservare informazioni sullo stato privato, è possibile eseguire l'override di <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> e <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> metodi. Un adattatore può mantenere lo stato del controllo privato quando sono presenti funzionalità complesse che devono mantenere lo stato tra le richieste e separate dallo stato del controllo associato. L'adapter deve registrare lo stato di controllo durante la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> chiamata al metodo per ogni richiesta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Oggetto <see cref="T:System.String" /> contenente un argomento dell'evento facoltativo da passare al gestore eventi.</param>
        <summary>Abilita la classe <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> per l'elaborazione di un evento generato durante il postback di una pagina al server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> metodo consente di <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> classe a elaborare un evento che viene generato quando una pagina viene inviata al server. La pagina passa `eventArgument` per il <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
      </Docs>
    </Member>
  </Members>
</Type>