<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58d6a7b9b8156534bc27bc0b13ae178961d5c41c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6a7b9b8156534bc27bc0b13ae178961d5c41c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is a lightweight, per-instance runtime for executing a workflow program.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> è un runtime per istanza leggero per l'esecuzione di un programma di flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>It can be constructed to create a new workflow instance or from existing instance state.</source>
          <target state="translated">Può essere costruito in modo da creare una nuova istanza del flusso di lavoro o dallo stato dell'istanza esistente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The APIs that <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</source>
          <target state="translated">Le API esposte da <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> costituiscono il set minimo di controlli di runtime dai quali possono essere implementate le operazioni di livello superiore.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This API set represents the entire breadth of functionality of the runtime.</source>
          <target state="translated">Questo set di API rappresenta l'intera gamma di funzionalità del runtime.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> è una classe astratta e si basa sull'implementazione di un host dei metodi astratti per fornire funzionalità host, quali sincronizzazione, persistenza, rilevamento ed estensioni.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is single threaded and assumes that the host synchronizes all access to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> è a thread singolo e presuppone che l'host sincronizzi tutti i relativi accessi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An attempt to call multiple APIs simultaneously will result in an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown.</source>
          <target state="translated">Un tentativo di chiamare più API contemporaneamente comporterà la generazione di un oggetto <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Internally, a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> has two states: Running and Paused.</source>
          <target state="translated">Internamente, un oggetto <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> dispone di due stati: in esecuzione e sospeso.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The only way to cause the runtime to transition from paused to running is to call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">Il solo modo per effettuare la transizione del runtime dalla sospensione all'esecuzione consiste nel chiamare <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All actions (except Pause) can only be taken while the runtime is Paused.</source>
          <target state="translated">Tutte le azioni (tranne la sospensione) possono essere eseguite solo mentre è il runtime è sospeso.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The runtime will become spontaneously Paused in the following situations:</source>
          <target state="translated">Il runtime verrà automaticamente sospeso nelle situazioni seguenti:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An error fatal to the runtime has occurred.</source>
          <target state="translated">Si è verificato un errore irreversibile di runtime.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be signaled through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> (which does not signal a transition to Paused) and then notified through <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</source>
          <target state="translated">L'host verrà segnalato tramite <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> (che non segnala una transizione alla sospensione), quindi notificato tramite <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An exception in the workflow was uncaught and escaped the root.</source>
          <target state="translated">Un'eccezione nel flusso di lavoro non è stata intercettata e ha utilizzato caratteri di escape per la radice.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph> method.</source>
          <target state="translated">L'host riceverà una notifica tramite il metodo <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The scheduler has run out of work items and is now <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.</source>
          <target state="translated">L'utilità di pianificazione ha esaurito gli elementi di lavoro ed è <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> method.</source>
          <target state="translated">L'host riceverà una notifica tramite il metodo <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</source>
          <target state="translated">Si noti che l'utilità di pianificazione potrebbe avere esaurito gli elementi di lavoro perché l'istanza è inattiva o completa.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to differentiate between the two.</source>
          <target state="translated">Il valore <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> della proprietà <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> può essere utilizzato per distinguere le due condizioni.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host can request a change from Running to Paused by calling the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property.</source>
          <target state="translated">L'host può richiedere il passaggio dall'esecuzione alla sospensione chiamando i metodi <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> dell'istanza di <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> restituita dalla proprietà <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> with a specific call to pause.</source>
          <target state="translated">Non esiste una risposta specifica a questa richiesta, pertanto l'host non deve tentare di correlare un metodo OnNotify* o <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> a una chiamata specifica alla sospensione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>In response to a pause request, the runtime may transition to Paused and call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> while the scheduler still has pending work items.</source>
          <target state="translated">In risposta a una richiesta di sospensione, il runtime potrebbe eseguire la transizione alla sospensione e chiamare <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> mentre nell'utilità di pianificazione sono ancora presenti elementi di lavoro in sospeso.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</source>
          <target state="translated">Il valore <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> della proprietà <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> può essere utilizzato per determinare se l'utilità di pianificazione non dispone più di lavoro o è stata interrotta da una richiesta di sospensione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property is the only method which can be called while the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is in the Running state.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> dell'istanza di <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> restituita dalla proprietà <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> è il solo metodo che può essere chiamato mentre l'oggetto <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> è nello stato di esecuzione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All other methods will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if called.Given the rules for how <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</source>
          <target state="translated">Tutti gli altri metodi, se chiamati, genereranno un oggetto <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>. Considerate le regole di transizione di <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> da uno stato a un altro, la nozione pubblica di esecuzione e di sospensione può essere definita come segue:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Running – The state between a call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> and the next WorkflowInstance.OnNotify*.</source>
          <target state="translated">In esecuzione. Lo stato tra una chiamata a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> e il successivo metodo WorkflowInstance.OnNotify*.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">In pausa. Lo stato tra l'ultimo metodo WorkflowInstance.OnNotify* e la chiamata successiva a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">Attività che definisce il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> con la definizione del flusso di lavoro specificata.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">Attività che definisce il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">Identità della definizione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition and definition identity.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> con la definizione dei flussi di lavoro e l'identità delle definizioni specificati.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">Periodo di tempo dopo il quale interrompere il tentativo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di rilevamento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">Informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per iniziare l'invio in modo asincrono di record di rilevamento in sospeso ai partecipanti del rilevamento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">Stato dell'operazione di rilevamento corrente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> instance for this <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Ottiene l'istanza di <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> per questo oggetto <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>The controller instance for this workflow instance.</source>
          <target state="translated">Istanza del controller per questa istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>Gets or sets the definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta l'identità della definizione di <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>The definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Identità della definizione di <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph> on all extensions that implement <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>.</source>
          <target state="translated">Chiama <ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph> su tutte le estensioni che implementano <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous track operation.</source>
          <target state="translated">Stato dell'operazione di rilevamento asincrona.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to end the track operation.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per terminare l'operazione di rilevamento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">Periodo di tempo dopo il quale interrompere il tentativo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>Called by the workflow runtime to send pending tracking records to tracking participants.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per inviare record di rilevamento in sospeso ai partecipanti del rilevamento.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The deserialized runtime state.</source>
          <target state="translated">Lo stato del runtime deserializzato.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Mappa di aggiornamento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Retrieves the list of activity that is blocking the update of the workflow.</source>
          <target state="translated">Recupera l'elenco di attività che bloccano l'aggiornamento del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The list of activity that is blocking the update.</source>
          <target state="translated">L'elenco di attività che bloccano l'aggiornamento.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>The type of the extension to find.</source>
          <target state="translated">Tipo di estensione da trovare.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>Returns an extension of the specified type.</source>
          <target state="translated">Restituisce un'estensione del tipo specificato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>An extension of the specified type.</source>
          <target state="translated">Estensione del tipo specificato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>The type of the extension to find.</source>
          <target state="translated">Tipo di estensione da trovare.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>Returns all extensions found for the specified type.</source>
          <target state="translated">Restituisce tutte le estensioni trovate per il tipo specificato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>All extensions found for the specified type.</source>
          <target state="translated">Tutte le estensioni trovate per il tipo specificato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>Gets or sets the root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">Ottiene o imposta l'ambiente radice per gli argomenti e le variabili dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>The root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">Ambiente radice per gli argomenti e le variabili dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Se questa proprietà è impostata dopo l'istanza del flusso di lavoro è inizializzata e <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">Ottiene l'identificatore univoco per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>The unique identifier for the workflow instance.</source>
          <target state="translated">Identificatore univoco per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Called by the host to initialize the workflow instance.</source>
          <target state="translated">Chiamato dall'host per inizializzare l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">Stato di runtime utilizzato per eseguire il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state.</source>
          <target state="translated">Chiamato dall'host per inizializzare l'istanza del flusso di lavoro con lo stato di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Parametri di input al flusso di lavoro, con chiave basata sul nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The list of workflow execution properties.</source>
          <target state="translated">Elenco delle proprietà di esecuzione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>Called by the host to initialize the workflow instance with the argument values and execution properties.</source>
          <target state="translated">Chiamato dall'host per inizializzare l'istanza del flusso di lavoro con i valori degli argomenti e le proprietà di esecuzione.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">Stato di runtime utilizzato per eseguire il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Mappa di aggiornamento.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state and update map.</source>
          <target state="translated">Chiamato dall'host per inizializzare l'istanza del flusso di lavoro con lo stato di runtime del flusso di lavoro e la mappa degli aggiornamenti.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source>Gets a value that indicates whether the workflow instance has been initialized.</source>
          <target state="translated">Ottiene un valore che indica se l'istanza del flusso di lavoro è stata inizializzata.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance has been initialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'istanza del flusso di lavoro è stata inizializzata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The instance keys to associate with this workflow instance.</source>
          <target state="translated">Chiavi di istanza da associare a questa istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation completes.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che le nuove chiavi di istanza devono essere associate a questa istanza.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous associate keys operation.</source>
          <target state="translated">Riferimento all'operazione di associazione delle chiavi asincrona.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di rilevamento.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">Informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask host to flush pending tracking records to tracking participants.</source>
          <target state="translated">Chiamata asincrona per chiedere all'host di scaricare i record di rilevamento in sospeso nei partecipanti del rilevamento.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">Stato dell'operazione di rilevamento corrente.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di impostazione della persistenza.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask the host to persist the workflow.</source>
          <target state="translated">Chiamata asincrona per chiedere all'host di rendere persistente il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>A reference to the current persist operation.</source>
          <target state="translated">Riferimento all'operazione di impostazione della persistenza corrente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The data to be passed to the activity that created the <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</source>
          <target state="translated">Dati da passare all'attività che ha creato l'oggetto <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di ripresa prima che sia annullata e venga generato un oggetto <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di ripresa.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che sta iniziando un'operazione di ripresa di segnalibro.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous resume operation.</source>
          <target state="translated">Riferimento all'operazione di ripresa asincrona.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>The list of keys to disassociate.</source>
          <target state="translated">Elenco di chiavi da disassociare.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che un determinato set di chiavi di istanza non deve più essere associato a questa istanza.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>The reference to the asynchronous associate keys operation.</source>
          <target state="translated">Riferimento all'operazione di associazione delle chiavi asincrona.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that an associate keys operation is complete.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che un'operazione di associazione delle chiavi è stata completata.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous flush tracking records operation.</source>
          <target state="translated">Stato dell'operazione di scaricamento dei record di rilevamento asincrona.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host quando l'operazione di scaricamento dei record di rilevamento viene completata.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>The reference to the asynchronous persist operation.</source>
          <target state="translated">Riferimento all'operazione di impostazione della persistenza asincrona.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a persist operation is complete.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che un'operazione di impostazione della persistenza è stata completata.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>The reference to the asynchronous resume bookmark operation.</source>
          <target state="translated">Riferimento all'operazione di ripresa di segnalibro asincrona.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che un'operazione di ripresa di segnalibro è stata completata.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>One of the enumeration values that indicates the result of a <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph> resume operation.</source>
          <target state="translated">Uno dei valori di enumerazione indicante il risultato di un'operazione di ripresa di <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused">
          <source>Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che l'istanza del flusso di lavoro ha eseguito la transizione dallo stato di esecuzione a quello di sospensione.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unhandled exception.</source>
          <target state="translated">Eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The activity that threw the exception.</source>
          <target state="translated">Attività che ha generato l'eccezione.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unique identifier of the <ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph> representing the activity that threw the exception.</source>
          <target state="translated">Identificatore univoco dell'oggetto <ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph> che rappresenta l'attività che ha generato l'eccezione.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che si è verificata un'eccezione non gestita nell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>The reason for aborting the workflow instance.</source>
          <target state="translated">Motivo per l'interruzione dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</source>
          <target state="translated">Chiamato dal runtime del flusso di lavoro per notificare all'host che un'operazione di interruzione è stata richiesta per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Once <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called, most <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> APIs except <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> will throw an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Dopo la chiamata a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph>, la maggior parte delle API di <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> tranne <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> genererà un oggetto <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>It is expected that after <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called a host will trend toward a state in which it can satisfy the abort.</source>
          <target state="translated">Dopo la chiamata a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> è prevista la tendenza di un host verso uno stato nel quale sia possibile soddisfare l'interruzione.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>The extension manager to register.</source>
          <target state="translated">Gestore estensioni da registrare.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</source>
          <target state="translated">Chiamato dall'host per registrare il gestore estensioni specificato, confermare che tutte le estensioni obbligatorie siano presenti e inizializzare la raccolta di estensioni da utilizzare.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions are keyed by type, and a host provided extension will always be used if provided.</source>
          <target state="translated">Le estensioni dispongono di chiave basata sul tipo e un'estensione fornita dall'host verrà sempre utilizzata, se fornita.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the runtime type of the object as the type key.</source>
          <target state="translated">Le estensioni aggiunte tramite <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> utilizzano il tipo di runtime dell'oggetto come chiave del tipo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions providers added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the decared type T of the Func<ph id="ph2">\&lt;</ph>T&gt; as the type key.</source>
          <target state="translated">Provider di estensioni aggiunti tramite <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> utilizzano il tipo dichiarato T di Func<ph id="ph2">\&lt;</ph>T &gt; come chiave del tipo.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</source>
          <target state="translated">I provider di estensioni forniti dalle attività tramite svariati metodi *ActivityMetadata.AddDefaultExtensionProvider vengono rilasciati se esiste un'estensione host per il tipo dichiarato o se è presente un tipo più ampio fornito tramite AddDefaultExtensionProvider (ad esempio,</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>if Func<ph id="ph1">\&lt;</ph>StreamWriter&gt; is provided and Func<ph id="ph2">\&lt;</ph>TextWriter&gt; is provided, only Func<ph id="ph3">\&lt;</ph>StreamWriter&gt; will be kept).</source>
          <target state="translated">Se Func<ph id="ph1">\&lt;</ph>StreamWriter &gt; viene fornito e Func<ph id="ph2">\&lt;</ph>TextWriter &gt; viene fornito solo Func<ph id="ph3">\&lt;</ph>StreamWriter &gt; verranno mantenuti).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph> is thrown.</source>
          <target state="translated">Se nella raccolta non esiste un'estensione richiesta da un'attività (espressa chiamando *ActivityMetadata.RequireExtension) viene generato un oggetto <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source>Gets a value that indicates whether the host supports the association of <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a run-time instance.</source>
          <target state="translated">Ottiene un valore che indica se l'host supporta l'associazione di <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> a un'istanza del runtime.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the host supports the association of <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a workflow instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'host supporta l'associazione di <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> a un'istanza del flusso di lavoro; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> used for scheduling the workflow instance.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> utilizzato per la pianificazione dell'istanza di flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>The synchronization context used for scheduling the workflow instance.</source>
          <target state="translated">Contesto di sincronizzazione utilizzato per la pianificazione dell'istanza di flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Se questa proprietà è impostata dopo l'istanza del flusso di lavoro è inizializzata e <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>Throws an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> if the workflow instance has been initialized, as determined by <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph>.</source>
          <target state="translated">Genera un oggetto <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> se l'istanza del flusso di lavoro è stata inizializzata, come determinato da <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>If <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, then an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, quindi un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>Gets the workflow definition of the workflow instance.</source>
          <target state="translated">Ottiene la definizione del flusso di lavoro dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>The workflow definition of the workflow instance.</source>
          <target state="translated">Definizione del flusso di lavoro dell'istanza del flusso di lavoro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>