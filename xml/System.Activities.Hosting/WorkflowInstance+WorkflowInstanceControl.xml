<Type Name="WorkflowInstance+WorkflowInstanceControl" FullName="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5cdee3ff09851cdb8c63516c9909a778e0ba46f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30350925" />
  </Metadata>
  <TypeSignature Language="C#" Value="protected struct WorkflowInstance.WorkflowInstanceControl" />
  <TypeSignature Language="ILAsm" Value=".class nested protected sequential ansi sealed beforefieldinit WorkflowInstance/WorkflowInstanceControl extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />
  <TypeSignature Language="VB.NET" Value="Protected Structure WorkflowInstance.WorkflowInstanceControl" />
  <TypeSignature Language="C++ CLI" Value="protected: value class WorkflowInstance::WorkflowInstanceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i metodi che consentono alle classi derivate <see cref="T:System.Activities.Hosting.WorkflowInstance" /> di accedere alla funzionalit√† del runtime del flusso di lavoro.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Interrompe l'oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo la chiamata ad <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A>, la maggior parte delle API <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> tranne <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> genera un oggetto <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe l'oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo la chiamata ad <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A>, la maggior parte delle API <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> tranne <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> genera un oggetto <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo dell'interruzione di <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</param>
        <summary>Interrompe <see cref="T:System.Activities.Hosting.WorkflowInstance" /> tramite l'eccezione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo la chiamata ad <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A>, la maggior parte delle API <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> tranne <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> genera un oggetto <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginFlushTrackingRecords(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginFlushTrackingRecords (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlushTrackingRecords(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Periodo di tempo dopo il quale interrompere il tentativo.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione di rilevamento.</param>
        <param name="state">Informazioni sull'operazione asincrona.</param>
        <summary>Chiamato dal runtime del flusso di lavoro per iniziare l'invio in modo asincrono di record di rilevamento in sospeso ai partecipanti del rilevamento.</summary>
        <returns>Stato dell'operazione di rilevamento corrente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="public void EndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Stato dell'operazione di rilevamento asincrona.</param>
        <summary>Chiamato dal runtime del flusso di lavoro per terminare l'operazione di rilevamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare.</param>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> corrente √® uguale all'oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto √® uguale all'oggetto corrente <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushTrackingRecords">
      <MemberSignature Language="C#" Value="public void FlushTrackingRecords (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushTrackingRecords(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlushTrackingRecords (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlushTrackingRecords(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Periodo di tempo dopo il quale interrompere il tentativo.</param>
        <summary>Chiamato dal runtime del flusso di lavoro per inviare record di rilevamento in sospeso ai partecipanti del rilevamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbortReason">
      <MemberSignature Language="C#" Value="public Exception GetAbortReason ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetAbortReason() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbortReason () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetAbortReason();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'eccezione che causa l'interruzione di <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <returns>Eccezione che ha causato l'interruzione di <see cref="T:System.Activities.Hosting.WorkflowInstance" /> oppure <see langword="null" /> se <see cref="T:System.Activities.Hosting.WorkflowInstance" /> non si √® interrotto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce la raccolta di segnalibri disponibili per <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la raccolta di segnalibri disponibili per <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <returns>Raccolta di segnalibri per <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (scope As BookmarkScope) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(System::Activities::BookmarkScope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="scope">Ambito del segnalibro da controllare.</param>
        <summary>Restituisce la raccolta di segnalibri disponibili per l'oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance" /> creato nell'oggetto <see cref="T:System.Activities.BookmarkScope" /> specificato.</summary>
        <returns>Raccolta di segnalibri creati nell'oggetto <see cref="T:System.Activities.BookmarkScope" /> specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompletionState">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Activities.ActivityInstanceState" /> finale di <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompletionState">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstanceState GetCompletionState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.ActivityInstanceState GetCompletionState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompletionState () As ActivityInstanceState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstanceState GetCompletionState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstanceState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Activities.ActivityInstanceState" /> finale di <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <returns>Uno dei membri dell'enumerazione che descrive lo stato di un'istanza di un'attivit√†.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletionState">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstanceState GetCompletionState (out Exception terminationException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.ActivityInstanceState GetCompletionState([out] class System.Exception&amp; terminationException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompletionState (ByRef terminationException As Exception) As ActivityInstanceState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstanceState GetCompletionState([Runtime::InteropServices::Out] Exception ^ % terminationException);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstanceState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="terminationException" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="terminationException">Quando viene restituito questo metodo, <c>terminationException</c> contiene l'eccezione che ha causato la terminazione di <see cref="T:System.Activities.Hosting.WorkflowInstance" /> oppure <see langword="null" /> se <see cref="T:System.Activities.Hosting.WorkflowInstance" /> non √® stato terminato. Questo parametro viene passato non inizializzato.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Activities.ActivityInstanceState" /> finale di <see cref="T:System.Activities.Hosting.WorkflowInstance" />, inclusa l'eccezione di terminazione.</summary>
        <returns>Uno dei membri dell'enumerazione che descrive lo stato di un'istanza di un'attivit√†.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletionState">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstanceState GetCompletionState (out System.Collections.Generic.IDictionary&lt;string,object&gt; outputs, out Exception terminationException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.ActivityInstanceState GetCompletionState([out] class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&amp; outputs, [out] class System.Exception&amp; terminationException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompletionState (ByRef outputs As IDictionary(Of String, Object), ByRef terminationException As Exception) As ActivityInstanceState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstanceState GetCompletionState([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ % outputs, [Runtime::InteropServices::Out] Exception ^ % terminationException);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstanceState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&amp;" RefType="out" />
        <Parameter Name="terminationException" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="outputs">Quando viene restituito questo metodo, <c>outputs</c> contiene un dizionario di argomenti <see cref="F:System.Activities.ArgumentDirection.Out" /> del flusso di lavoro, con chiave basata sul nome dell'argomento. Questo parametro viene passato non inizializzato.</param>
        <param name="terminationException">Quando viene restituito questo metodo, <c>terminationException</c> contiene l'eccezione che ha causato la terminazione di <see cref="T:System.Activities.Hosting.WorkflowInstance" /> oppure <see langword="null" /> se <see cref="T:System.Activities.Hosting.WorkflowInstance" /> non √® stato terminato. Questo parametro viene passato non inizializzato.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Activities.ActivityInstanceState" /> finale di <see cref="T:System.Activities.Hosting.WorkflowInstance" />, inclusi gli output del flusso di lavoro e l'eccezione di terminazione.</summary>
        <returns>Uno dei membri dell'enumerazione che descrive lo stato di un'istanza di un'attivit√†.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per questo oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</summary>
        <returns>Codice hash per <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappedVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Activities.Hosting.LocationInfo&gt; GetMappedVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Activities.Hosting.LocationInfo&gt; GetMappedVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMappedVariables () As IDictionary(Of String, LocationInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Activities::Hosting::LocationInfo ^&gt; ^ GetMappedVariables();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Activities.Hosting.LocationInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un dizionario di variabili nell'ambito corrente specificato con <see cref="F:System.Activities.VariableModifiers.Mapped" />.</summary>
        <returns>Dizionario di variabili di cui √® stato eseguito il mapping attualmente presenti nell'ambito.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPendingTrackingRecords">
      <MemberSignature Language="C#" Value="public bool HasPendingTrackingRecords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPendingTrackingRecords" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPendingTrackingRecords As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPendingTrackingRecords { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Chiamato dal runtime del flusso di lavoro per determinare se questa istanza del flusso di lavoro dispone di record di rilevamento in sospeso e di un partecipante del rilevamento.</summary>
        <value>
          <see langword="true" /> se questa istanza del flusso di lavoro dispone di record di rilevamento in sospeso e di un partecipante del rilevamento; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistable">
      <MemberSignature Language="C#" Value="public bool IsPersistable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistable" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPersistable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPersistable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se <see cref="T:System.Activities.Hosting.WorkflowInstance" /> √® in uno stato in cui pu√≤ essere reso persistente.</summary>
        <value>
          <see langword="true" /> se <see cref="T:System.Activities.Hosting.WorkflowInstance" /> pu√≤ essere reso persistente; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl left, valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As WorkflowInstance.WorkflowInstanceControl, right As WorkflowInstance.WorkflowInstanceControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl left, System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
        <Parameter Name="right" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> da confrontare.</param>
        <param name="right">Secondo oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> da confrontare.</param>
        <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> sono uguali.</summary>
        <returns>
          <see langword="true" /> se le due istanze di <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl left, valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As WorkflowInstance.WorkflowInstanceControl, right As WorkflowInstance.WorkflowInstanceControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl left, System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
        <Parameter Name="right" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> da confrontare.</param>
        <param name="right">Secondo oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> da confrontare.</param>
        <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> non sono uguali.</summary>
        <returns>
          <see langword="true" /> se le due istanze <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseWhenPersistable">
      <MemberSignature Language="C#" Value="public void PauseWhenPersistable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PauseWhenPersistable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable" />
      <MemberSignature Language="VB.NET" Value="Public Sub PauseWhenPersistable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PauseWhenPersistable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richiede che il runtime del flusso di lavoro sospenda <see cref="T:System.Activities.Hosting.WorkflowInstance" /> in corrispondenza del successivo punto di esecuzione in cui √® possibile impostare la persistenza. Si noti che la coda dell'utilit√† di pianificazione potrebbe non essere vuota in corrispondenza di questo punto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareForSerialization">
      <MemberSignature Language="C#" Value="public object PrepareForSerialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PrepareForSerialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization" />
      <MemberSignature Language="VB.NET" Value="Public Function PrepareForSerialization () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PrepareForSerialization();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepara lo stato di <see cref="T:System.Activities.Hosting.WorkflowInstance" /> per la serializzazione.</summary>
        <returns>Stato dell'istanza del flusso di lavoro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPause">
      <MemberSignature Language="C#" Value="public void RequestPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestPause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestPause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richiede l'arresto dell'utilit√† di pianificazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica a <see cref="T:System.Activities.Hosting.WorkflowInstance" /> di iniziare l'esecuzione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScheduleBookmarkResumption">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pianifica una ripresa di <see cref="T:System.Activities.Bookmark" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScheduleBookmarkResumption">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ScheduleBookmarkResumption(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">Segnalibro da riprendere.</param>
        <param name="value">Dati da passare all'attivit√† che ha creato l'oggetto <see cref="T:System.Activities.Bookmark" />.</param>
        <summary>Pianifica una ripresa del segnalibro con il valore specificato.</summary>
        <returns>Uno dei valori di enumerazione indicante il risultato di un'operazione di pianificazione di <see cref="T:System.Activities.Bookmark" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleBookmarkResumption">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption(class System.Activities.Bookmark bookmark, object value, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ScheduleBookmarkResumption(System::Activities::Bookmark ^ bookmark, System::Object ^ value, System::Activities::BookmarkScope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="bookmark">Segnalibro da riprendere.</param>
        <param name="value">Dati da passare all'attivit√† che ha creato l'oggetto <see cref="T:System.Activities.Bookmark" />.</param>
        <param name="scope">
          <see cref="T:System.Activities.Bookmark" /> con il quale √® stato creato <see cref="T:System.Activities.Bookmark" />.</param>
        <summary>Pianifica una ripresa di <see cref="T:System.Activities.Bookmark" /> dall'oggetto <see cref="T:System.Activities.BookmarkScope" /> specificato.</summary>
        <returns>Uno dei valori di enumerazione indicante il risultato di un'operazione di pianificazione di <see cref="T:System.Activities.Bookmark" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleCancel">
      <MemberSignature Language="C#" Value="public void ScheduleCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pianifica l'annullamento di <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica una richiesta di annullamento per l'attivit√† radice di <xref:System.Activities.Hosting.WorkflowInstance>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Hosting.WorkflowInstanceState State" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As WorkflowInstanceState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceState State { System::Activities::Hosting::WorkflowInstanceState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato della classe <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <value>Uno dei valori di enumerazione che specifica lo stato di un oggetto <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">Eccezione che costituisce il motivo per terminare <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</param>
        <summary>Esegue la transizione di <see cref="T:System.Activities.Hosting.WorkflowInstance" /> allo stato <see cref="F:System.Activities.ActivityInstanceState.Faulted" /> finale tramite l'eccezione specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public void Track (System.Activities.Tracking.WorkflowInstanceRecord instanceRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Track(class System.Activities.Tracking.WorkflowInstanceRecord instanceRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Track (instanceRecord As WorkflowInstanceRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Track(System::Activities::Tracking::WorkflowInstanceRecord ^ instanceRecord);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceRecord" Type="System.Activities.Tracking.WorkflowInstanceRecord" />
      </Parameters>
      <Docs>
        <param name="instanceRecord">Record di rilevamento da aggiungere.</param>
        <summary>Chiamato dal runtime del flusso di lavoro per aggiungere il record in sospeso specificato all'elenco di record in sospeso.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingEnabled">
      <MemberSignature Language="C#" Value="public bool TrackingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrackingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Chiamato dal runtime del flusso di lavoro per determinare se il rilevamento √® abilitato in questa istanza del flusso di lavoro.</summary>
        <value>
          <see langword="true" /> se il rilevamento √® abilitato in questa istanza del flusso di lavoro; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>