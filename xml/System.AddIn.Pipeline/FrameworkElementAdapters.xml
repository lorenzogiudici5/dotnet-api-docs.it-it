<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e3f5f9a2cf8d810ccd1e3c5b6394bea9e9da66f" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31907599" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> viene usato dai componenti aggiuntivi di Windows Presentation Foundation (WPF) per eseguire la conversione tra un oggetto <see cref="T:System.Windows.FrameworkElement" /> e <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) consente di estendere il modello di componente aggiuntivo .NET Framework per consentire le interfacce utente WPF deve essere passato tra applicazioni e componenti aggiuntivi. WPF è necessario che le interfacce utente WPF che viene passati direttamente o indirettamente da <xref:System.Windows.FrameworkElement>. Tuttavia, i componenti aggiuntivi e host applicazioni vengono in genere eseguite in domini applicazione separati e sono, di conseguenza, separate da un limite di isolamento. Per questo motivo, il modello di componente aggiuntivo di .NET Framework richiede i tipi che vengono passati attraverso il limite di isolamento per essere utilizzabile in remoto. Un tipo utilizzabile in remoto è conforme a uno dei valori seguenti:  
  
-   Implementa l'interfaccia <xref:System.Runtime.Serialization.ISerializable>.  
  
-   È il <xref:System.SerializableAttribute> attributo applicato.  
  
-   Deriva la <xref:System.MarshalByRefObject> classe.  
  
 <xref:System.Windows.FrameworkElement> non è utilizzabile in remoto e deve essere convertito in un tipo utilizzabile in remoto prima di essere passato attraverso il limite di isolamento tra un componente aggiuntivo e un'applicazione host. A tale scopo, è necessario chiamare il metodo statico <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> metodo per convertire il <xref:System.Windows.FrameworkElement> a un'istanza di utilizzabile in remoto <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Una volta il <xref:System.AddIn.Contract.INativeHandleContract> viene passata attraverso il limite di isolamento, è necessario convertirlo in un tipo che può essere visualizzato dall'applicazione host o il componente aggiuntivo. In questo caso, il metodo statico <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> metodo viene chiamato per convertire un <xref:System.AddIn.Contract.INativeHandleContract> per un <xref:System.Windows.FrameworkElement>.  
  
 Per una spiegazione dei componenti aggiuntivi WPF più dettagliata, vedere [WPF Add-Ins Overview](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">Interfaccia <see cref="T:System.AddIn.Contract.INativeHandleContract" /> passata attraverso il limite di isolamento tra l'applicazione host e il componente aggiuntivo.</param>
        <summary>Restituisce <see cref="T:System.Windows.FrameworkElement" /> convertito da <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>
          <see cref="T:System.Windows.FrameworkElement" /> che verrà visualizzato dall'applicazione host o dal componente aggiuntivo, a seconda della direzione nella quale l'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] viene passata tra i due.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">Insieme <see cref="T:System.Windows.FrameworkElement" /> da passare attraverso il limite di isolamento tra l'applicazione host e il componente aggiuntivo.</param>
        <summary>Restituisce <see cref="T:System.AddIn.Contract.INativeHandleContract" /> convertita da <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> che viene passata dall'applicazione host o dal componente aggiuntivo, a seconda della direzione nella quale l'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] viene passata tra i due.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> non è l'elemento radice di una struttura ad albero di elementi.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>