<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f4f2a1f5a07c729de684d08d9155a737c64f033" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647519" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkElementAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7d8ba-101">
        <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> is used by Windows Presentation Foundation (WPF) add-ins to convert between a <see cref="T:System.Windows.FrameworkElement" /> and an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d8ba-101">
          <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> is used by Windows Presentation Foundation (WPF) add-ins to convert between a <see cref="T:System.Windows.FrameworkElement" /> and an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="7d8ba-102">Windows Presentation Foundation (WPF) consente di estendere il modello di componente aggiuntivo .NET Framework per consentire le interfacce utente WPF deve essere passato tra applicazioni e componenti aggiuntivi. WPF è necessario che le interfacce utente WPF che viene passati direttamente o indirettamente da <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-102">Windows Presentation Foundation (WPF) extends the .NET Framework add-in model to allow WPF UIs to be passed between host applications and add-ins. WPF requires that the WPF UIs that are passed either directly or indirectly derive from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="7d8ba-103">Tuttavia, i componenti aggiuntivi e host delle applicazioni vengono in genere eseguite in domini applicazione separati e sono, di conseguenza, separate da un confine di isolamento.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-103">However, add-ins and host applications are typically run in separate application domains and are, consequently, separated by an isolation boundary.</span></span> <span data-ttu-id="7d8ba-104">Per questo motivo, il modello di componente aggiuntivo di .NET Framework richiede i tipi che vengono passati attraverso il limite di isolamento per essere utilizzabile in remoto.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-104">For this reason, the .NET Framework add-in model requires the types that are passed across the isolation boundary to be remotable.</span></span> <span data-ttu-id="7d8ba-105">Un tipo utilizzabile in remoto è conforme a uno dei valori seguenti:</span><span class="sxs-lookup"><span data-stu-id="7d8ba-105">A remotable type conforms to one of the following:</span></span>  
  
-   <span data-ttu-id="7d8ba-106">Implementa l'interfaccia <xref:System.Runtime.Serialization.ISerializable>.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-106">Implements the <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
-   <span data-ttu-id="7d8ba-107">È il <xref:System.SerializableAttribute> attributo applicato.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-107">Has the <xref:System.SerializableAttribute> attribute applied.</span></span>  
  
-   <span data-ttu-id="7d8ba-108">Deriva la <xref:System.MarshalByRefObject> classe.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-108">Derives from the <xref:System.MarshalByRefObject> class.</span></span>  
  
 <span data-ttu-id="7d8ba-109"><xref:System.Windows.FrameworkElement> non è utilizzabile in remoto e deve essere convertito in un tipo utilizzabile in remoto prima che venga passata attraverso il limite di isolamento tra un componente aggiuntivo e un'applicazione host.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-109"><xref:System.Windows.FrameworkElement> is not remotable and must be converted to a remotable type before it is passed across the isolation boundary between an add-in and a host application.</span></span> <span data-ttu-id="7d8ba-110">A tale scopo, è necessario chiamare il metodo statico <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> metodo per convertire le <xref:System.Windows.FrameworkElement> a un'istanza di utilizzabile in remoto <xref:System.AddIn.Contract.INativeHandleContract>.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-110">For this purpose, you need to call the static <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> method to convert the <xref:System.Windows.FrameworkElement> to an instance of the remotable <xref:System.AddIn.Contract.INativeHandleContract>.</span></span>  
  
 <span data-ttu-id="7d8ba-111">Una volta il <xref:System.AddIn.Contract.INativeHandleContract> viene passata attraverso il limite di isolamento, deve essere convertito in un tipo che può essere visualizzato dall'applicazione host o il componente aggiuntivo.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-111">Once the <xref:System.AddIn.Contract.INativeHandleContract> is passed across the isolation boundary, it must be converted to a type that can be displayed by the host application or the add-in.</span></span> <span data-ttu-id="7d8ba-112">In questo caso, il metodo statico <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> viene chiamato per convertire un <xref:System.AddIn.Contract.INativeHandleContract> a un <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="7d8ba-112">In this case, the static <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> method is called to convert an <xref:System.AddIn.Contract.INativeHandleContract> to a <xref:System.Windows.FrameworkElement>.</span></span>  
  
 <span data-ttu-id="7d8ba-113">Per una spiegazione dei componenti aggiuntivi WPF più dettagliata, vedere [WPF Add-Ins Overview](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7d8ba-113">For more detailed exposition of WPF add-ins, see [WPF Add-Ins Overview](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Contract.INativeHandleContract -&gt; System.Windows.FrameworkElement" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter nativeHandleContract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">
          <span data-ttu-id="7d8ba-114">The <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that was passed across the isolation boundary between the host application and the add-in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d8ba-114">The <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that was passed across the isolation boundary between the host application and the add-in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d8ba-115">Returns a <see cref="T:System.Windows.FrameworkElement" /> that has been converted from an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d8ba-115">Returns a <see cref="T:System.Windows.FrameworkElement" /> that has been converted from an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d8ba-116">A <see cref="T:System.Windows.FrameworkElement" /> that will be displayed from either the host application or add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d8ba-116">A <see cref="T:System.Windows.FrameworkElement" /> that will be displayed from either the host application or add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : System.Windows.FrameworkElement -&gt; System.AddIn.Contract.INativeHandleContract" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">
          <span data-ttu-id="7d8ba-117">The <see cref="T:System.Windows.FrameworkElement" /> to be passed across the isolation boundary between the host application and the add-in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d8ba-117">The <see cref="T:System.Windows.FrameworkElement" /> to be passed across the isolation boundary between the host application and the add-in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d8ba-118">Returns an <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that has been converted from a <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d8ba-118">Returns an <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that has been converted from a <see cref="T:System.Windows.FrameworkElement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d8ba-119">An <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that is passed from either the host application or the add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d8ba-119">An <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that is passed from either the host application or the add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7d8ba-120">
            <paramref name="root" /> is not the root element of a tree of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d8ba-120">
              <paramref name="root" /> is not the root element of a tree of elements.</span>
          </span>
        </exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>