<Type Name="ContractAdapter" FullName="System.AddIn.Pipeline.ContractAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44ec91f02113038c4a4a0315783d757d624cb3d7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36715414" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ContractAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContractAdapter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractAdapter abstract sealed" />
  <TypeSignature Language="F#" Value="type ContractAdapter = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i metodi per la condivisione e il riadattamento dei componenti aggiuntivi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa classe per condividere un componente aggiuntivo con un altro host che non dispone della stessa pipeline a tale componente aggiuntivo (in particolare, un altro host che non presenta la stessa visualizzazione host del componente aggiuntivo).  
  
 Se è necessario adattare il contratto di un componente aggiuntivo attivato dalla visualizzazione host, utilizzare il <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> metodo.  
  
 Se si dispone di un'istanza del contratto e necessario convertirlo nella visualizzazione host, usare il <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> metodo.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="ContractToViewAdapter&lt;TView&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene una visualizzazione host di un componente aggiuntivo se viene trovato un adattatore lato host appropriato in un percorso specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter(Of TView) (contract As ContractHandle, location As PipelineStoreLocation) As TView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView&gt;&#xA; static TView ContractToViewAdapter(System::AddIn::Pipeline::ContractHandle ^ contract, System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Pipeline.ContractHandle * System.AddIn.Hosting.PipelineStoreLocation -&gt; 'View" Usage="System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter (contract, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Tipo che definisce la visualizzazione host del componente aggiuntivo.</typeparam>
        <param name="contract">Handle per il contratto utilizzato dal componente aggiuntivo da condividere.</param>
        <param name="location">Base dell'applicazione dell'host.</param>
        <summary>Ottiene una visualizzazione host di un componente aggiuntivo se viene trovato un adattatore lato host appropriato in un percorso specificato da un valore dall'enumerazione <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" />.</summary>
        <returns>Visualizzazione host del componente aggiuntivo condiviso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo scenario, un'entità dispone di un'istanza di un contratto e desidera adattare a una visualizzazione particolare. Utilizzare questo metodo per una query sul sistema per individuare e creare un'istanza di un adattatore per convertire in tale visualizzazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter(Of TView) (contract As ContractHandle, pipelineRoot As String) As TView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView&gt;&#xA; static TView ContractToViewAdapter(System::AddIn::Pipeline::ContractHandle ^ contract, System::String ^ pipelineRoot);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Pipeline.ContractHandle * string -&gt; 'View" Usage="System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter (contract, pipelineRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="pipelineRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Tipo che definisce la visualizzazione host del componente aggiuntivo.</typeparam>
        <param name="contract">Handle per il contratto utilizzato dal componente aggiuntivo da condividere.</param>
        <param name="pipelineRoot">Percorso dell'archivio dei componenti aggiuntivi.</param>
        <summary>Ottiene una visualizzazione host di un componente aggiuntivo se viene trovato un adattatore lato host appropriato in una posizione specificata da un percorso.</summary>
        <returns>Visualizzazione host del componente aggiuntivo condiviso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo scenario, un'entità dispone di un'istanza di un contratto e desidera adattare a una visualizzazione particolare. Utilizzare questo metodo per una query sul sistema per individuare e creare un'istanza di un adattatore per convertire in tale visualizzazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Pipeline.ContractHandle ViewToContractAdapter(object view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (view As Object) As ContractHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Pipeline::ContractHandle ^ ViewToContractAdapter(System::Object ^ view);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : obj -&gt; System.AddIn.Pipeline.ContractHandle" Usage="System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Pipeline.ContractHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="view">Visualizzazione host di un componente aggiuntivo attivato dal sistema dal dominio dell'applicazione corrente.</param>
        <summary>Ottiene l'handle per il contratto per una visualizzazione host specificata di un componente aggiuntivo.</summary>
        <returns>Handle per il contratto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo scenario, l'entità di origine (host) è un componente aggiuntivo che deve essere condiviso da un'entità di destinazione (un altro host).  
  
 Utilizzare questo metodo per ottenere l'handle per il contratto che è stata creata un'istanza per l'entità di origine dal sistema di componente aggiuntivo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="view" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>