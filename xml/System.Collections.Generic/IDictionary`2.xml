<Type Name="IDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4006cde4a08b7f53f0335dd1b180c092b153a7ed" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713393" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionary`2&lt;TKey, TValue&gt; implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;" />
  <TypeSignature Language="F#" Value="type IDictionary&lt;'Key, 'Value&gt; = interface&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="dd9ec-101">Tipo delle chiavi nel dizionario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd9ec-101">The type of keys in the dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="dd9ec-102">Tipo dei valori nel dizionario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd9ec-102">The type of values in the dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="dd9ec-103">Rappresenta una raccolta generica di coppie chiave/valore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd9ec-103">Represents a generic collection of key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-104">Il <xref:System.Collections.Generic.IDictionary%602> è l'interfaccia di base per le raccolte generiche di coppie chiave/valore.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-104">The <xref:System.Collections.Generic.IDictionary%602> interface is the base interface for generic collections of key/value pairs.</span></span>  
  
 <span data-ttu-id="dd9ec-105">Ogni elemento è una coppia chiave/valore archiviata in un <xref:System.Collections.Generic.KeyValuePair%602> oggetto.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-105">Each element is a key/value pair stored in a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="dd9ec-106">Ogni coppia deve avere una chiave univoca.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-106">Each pair must have a unique key.</span></span> <span data-ttu-id="dd9ec-107">Le implementazioni possono variare nel fatto che consentano `key` essere `null`.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-107">Implementations can vary in whether they allow `key` to be `null`.</span></span> <span data-ttu-id="dd9ec-108">Il valore può essere `null` e non deve essere univoco.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-108">The value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="dd9ec-109">Il <xref:System.Collections.Generic.IDictionary%602> interfaccia consente alle chiavi e contenuti valori da enumerare, ma non implica alcun ordinamento particolare.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-109">The <xref:System.Collections.Generic.IDictionary%602> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="dd9ec-110">Il `foreach` istruzione del linguaggio c# (`For Each` in Visual Basic `for each` in C++) restituisce un oggetto di tipo degli elementi nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-110">The `foreach` statement of the C# language (`For Each` in Visual Basic, `for each` in C++) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="dd9ec-111">Poiché ogni elemento del <xref:System.Collections.Generic.IDictionary%602> è una coppia chiave/valore, il tipo di elemento non è il tipo della chiave o il tipo del valore.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-111">Since each element of the <xref:System.Collections.Generic.IDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="dd9ec-112">Al contrario, il tipo di elemento è <xref:System.Collections.Generic.KeyValuePair%602>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-112">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="dd9ec-113">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="dd9ec-113">For example:</span></span>  
  
 [!code-cpp[Generic.IDictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.IDictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source2.cs#11)]
 [!code-vb[Generic.IDictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="dd9ec-114">Il `foreach` istruzione è un wrapper per l'enumeratore, che consente solo di leggere, non la scrittura da alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-114">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd9ec-115">Poiché le chiavi possono essere ereditate e relativo comportamento modificato, univocità assoluta non può essere garantita dal confronti usando il <xref:System.Type.Equals%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-115">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-116">Esempio di codice seguente crea un oggetto vuoto <xref:System.Collections.Generic.Dictionary%602> delle stringhe, con stringa di chiavi e accesso tramite il <xref:System.Collections.Generic.IDictionary%602> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-116">The following code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings, with string keys, and accesses it through the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="dd9ec-117">Nell'esempio di codice viene utilizzata la <xref:System.Collections.Generic.IDictionary%602.Add%2A> metodo per aggiungere alcuni elementi.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-117">The code example uses the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="dd9ec-118">Nell'esempio viene dimostrato che la <xref:System.Collections.Generic.IDictionary%602.Add%2A> metodo genera eccezioni <xref:System.ArgumentException> durante il tentativo di aggiungere una chiave duplicata.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-118">The example demonstrates that the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method throws <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="dd9ec-119">Nell'esempio viene utilizzata la <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà (l'indicizzatore in c#) per recuperare i valori, dimostrando che un <xref:System.Collections.Generic.KeyNotFoundException> viene generata quando una chiave richiesta non è presente e che il valore associato alla chiave è possibile sostituire.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-119">The example uses the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="dd9ec-120">Nell'esempio viene illustrato come utilizzare il <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> metodo in modo più efficiente per recuperare i valori se un programma deve provare spesso valori di chiave che non sono presenti nel dizionario e come utilizzare il <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> metodo per verificare se esiste una chiave prima di chiamare il <xref:System.Collections.Generic.IDictionary%602.Add%2A>metodo.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-120">The example shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and how to use the <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="dd9ec-121">Infine, nell'esempio viene illustrato come enumerare le chiavi e valori nel dizionario e illustrato come enumerare solo i valori tramite la <xref:System.Collections.Generic.IDictionary%602.Values%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-121">Finally, the example shows how to enumerate the keys and values in the dictionary, and how to enumerate the values alone using the <xref:System.Collections.Generic.IDictionary%602.Values%2A> property.</span></span>  
  
 [!code-cpp[Generic.IDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#1)]
 [!code-csharp[Generic.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="dd9ec-122">
        <para>La classe di implementazione deve avere un mezzo per confrontare le chiavi.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="dd9ec-122">
          <para>The implementing class must have a means to compare keys.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Key * 'Value -&gt; unit" Usage="iDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="dd9ec-123">Oggetto da usare come chiave dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-123">The object to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dd9ec-124">Oggetto da usare come valore dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-124">The object to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd9ec-125">Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-125">Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-126">È anche possibile usare il <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario; ad esempio `myCollection["myNonexistentKey"] = myValue` in c# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dd9ec-126">You can also use the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue` in C# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span></span> <span data-ttu-id="dd9ec-127">Tuttavia, se la chiave specificata esiste già nel dizionario, l'impostazione di <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà sovrascrive il valore precedente.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-127">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="dd9ec-128">Al contrario, il <xref:System.Collections.Generic.IDictionary%602.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-128">In contrast, the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="dd9ec-129">Le implementazioni possono variare nella modalità con cui viene determinata l'uguaglianza degli oggetti; ad esempio, il <xref:System.Collections.Generic.List%601> utilizzato dalla classe <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, mentre il <xref:System.Collections.Generic.Dictionary%602> classe consente all'utente di specificare il <xref:System.Collections.Generic.IComparer%601> implementazione da usare per confrontare le chiavi.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-129">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="dd9ec-130">Le implementazioni possono variare nel fatto che consentano `key` essere `null`.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-130">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-131">Esempio di codice seguente crea un oggetto vuoto <xref:System.Collections.Generic.Dictionary%602> di stringhe, con chiavi integer e si accede tramite il <xref:System.Collections.Generic.IDictionary%602> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-131">The following code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings, with integer keys, and accesses it through the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span> <span data-ttu-id="dd9ec-132">Nell'esempio di codice viene utilizzata la <xref:System.Collections.Generic.IDictionary%602.Add%2A> metodo per aggiungere alcuni elementi.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-132">The code example uses the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="dd9ec-133">Nell'esempio viene dimostrato che la <xref:System.Collections.Generic.IDictionary%602.Add%2A> metodo genera un <xref:System.ArgumentException> durante il tentativo di aggiungere una chiave duplicata.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-133">The example demonstrates that the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="dd9ec-134">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-134">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="dd9ec-135">Vedere <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-135">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#2)]
 [!code-csharp[Generic.IDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#2)]
 [!code-vb[Generic.IDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd9ec-136">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-136">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd9ec-137">In <see cref="T:System.Collections.Generic.IDictionary`2" /> è già presente un elemento con la stessa chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-137">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dd9ec-138">La classe <see cref="T:System.Collections.Generic.IDictionary`2" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-138">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool" Usage="iDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="dd9ec-139">Chiave da individuare in <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-139">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd9ec-140">Determina se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-140">Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd9ec-141">
            <see langword="true" /> se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-141">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-142">Le implementazioni possono variare nella modalità con cui viene determinata l'uguaglianza degli oggetti; ad esempio, il <xref:System.Collections.Generic.List%601> utilizzato dalla classe <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, mentre il <xref:System.Collections.Generic.Dictionary%602> classe consente all'utente di specificare il <xref:System.Collections.Generic.IComparer%601> implementazione da usare per confrontare le chiavi.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-142">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="dd9ec-143">Le implementazioni possono variare nel fatto che consentano `key` essere `null`.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-143">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-144">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> metodo per verificare se esiste una chiave prima di chiamare il <xref:System.Collections.Generic.IDictionary%602.Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-144">The following code example shows how to use the <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method.</span></span> <span data-ttu-id="dd9ec-145">Viene inoltre illustrato come utilizzare il <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> (metodo), che può essere un modo più efficiente per recuperare i valori se un programma prova spesso valori di chiave che non sono presenti nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-145">It also shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method, which can be a more efficient way to retrieve values if a program frequently tries key values that are not in the dictionary.</span></span> <span data-ttu-id="dd9ec-146">Infine, viene illustrato come inserire elementi utilizzando <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="dd9ec-146">Finally, it shows how to insert items using <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="dd9ec-147">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-147">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="dd9ec-148">Vedere <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-148">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#6)]
 [!code-csharp[Generic.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#6)]
 [!code-vb[Generic.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#6)]  
[!code-cpp[Generic.IDictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#5)]
[!code-csharp[Generic.IDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#5)]
[!code-vb[Generic.IDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#5)]  
[!code-cpp[Generic.IDictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd9ec-149">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-149">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="dd9ec-150">Chiave dell'elemento da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-150">The key of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd9ec-151">Ottiene o imposta l'elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-151">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dd9ec-152">Elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-152">The element with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-153">Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi seguente: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dd9ec-153">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="dd9ec-154">È anche possibile usare il <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario; ad esempio `myCollection["myNonexistentKey"] = myValue` in c# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dd9ec-154">You can also use the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue` in C# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span></span> <span data-ttu-id="dd9ec-155">Tuttavia, se la chiave specificata esiste già nel dizionario, l'impostazione di <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà sovrascrive il valore precedente.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-155">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="dd9ec-156">Al contrario, il <xref:System.Collections.Generic.IDictionary%602.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-156">In contrast, the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="dd9ec-157">Le implementazioni possono variare nella modalità con cui viene determinata l'uguaglianza degli oggetti; ad esempio, il <xref:System.Collections.Generic.List%601> utilizzato dalla classe <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, mentre il <xref:System.Collections.Generic.Dictionary%602> classe consente all'utente di specificare il <xref:System.Collections.Generic.IComparer%601> implementazione da usare per confrontare le chiavi.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-157">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="dd9ec-158">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-158">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property.</span></span> <span data-ttu-id="dd9ec-159">In Visual Basic la proprietà <xref:System.Collections.Generic.IDictionary%602.Item%2A> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-159">Visual Basic implements <xref:System.Collections.Generic.IDictionary%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="dd9ec-160">Le implementazioni possono variare nel fatto che consentano `key` essere `null`.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-160">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-161">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà (l'indicizzatore in c#) per recuperare i valori, dimostrando che un <xref:System.Collections.Generic.KeyNotFoundException> viene generata quando una chiave richiesta non è presente e che il valore associato alla chiave è possibile sostituire.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-161">The following code example uses the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="dd9ec-162">Nell'esempio viene inoltre illustrato come utilizzare il <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> metodo in modo più efficiente per recuperare i valori se un programma deve provare spesso valori di chiave che non sono presenti nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-162">The example also shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</span></span>  
  
 <span data-ttu-id="dd9ec-163">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-163">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="dd9ec-164">Vedere <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-164">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#3](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#3)]
 [!code-csharp[Generic.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#3)]
 [!code-vb[Generic.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#3)]  
[!code-cpp[Generic.IDictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#4)]  
[!code-cpp[Generic.IDictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#5)]
[!code-csharp[Generic.IDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#5)]
[!code-vb[Generic.IDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd9ec-165">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-165">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="dd9ec-166">La proprietà viene recuperata e <paramref name="key" /> non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-166">The property is retrieved and <paramref name="key" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dd9ec-167">La proprietà è stata impostata e l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-167">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TKey&gt; ^ Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;'Key&gt;" Usage="System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dd9ec-168">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-168">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dd9ec-169">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-169">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-170">L'ordine delle chiavi nell'oggetto restituito <xref:System.Collections.Generic.ICollection%601> non è specificato, ma è sicuramente identico all'ordine dei valori corrispondenti nel <xref:System.Collections.Generic.ICollection%601> restituito dal <xref:System.Collections.Generic.IDictionary%602.Values%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-170">The order of the keys in the returned <xref:System.Collections.Generic.ICollection%601> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.Generic.ICollection%601> returned by the <xref:System.Collections.Generic.IDictionary%602.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-171">Esempio di codice seguente viene illustrato come enumerare le sole chiavi utilizzando il <xref:System.Collections.Generic.IDictionary%602.Keys%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-171">The following code example shows how to enumerate keys alone using the <xref:System.Collections.Generic.IDictionary%602.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="dd9ec-172">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-172">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="dd9ec-173">Vedere <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-173">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#9)]
 [!code-csharp[Generic.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#9)]
 [!code-vb[Generic.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'Key -&gt; bool" Usage="iDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="dd9ec-174">Chiave dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-174">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd9ec-175">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-175">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd9ec-176">
            <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-176">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dd9ec-177">Questo metodo restituisce anche <see langword="false" /> se <paramref name="key" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-177">This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-178">Le implementazioni possono variare nella modalità con cui viene determinata l'uguaglianza degli oggetti; ad esempio, il <xref:System.Collections.Generic.List%601> utilizzato dalla classe <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, mentre il <xref:System.Collections.Generic.Dictionary%602> classe consente all'utente di specificare il <xref:System.Collections.Generic.IComparer%601> implementazione da usare per confrontare le chiavi.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-178">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-179">Esempio di codice seguente viene illustrato come rimuovere una coppia chiave/valore da un dizionario tramite il <xref:System.Collections.Generic.IDictionary%602.Remove%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-179">The following code example shows how to remove a key/value pair from a dictionary using the <xref:System.Collections.Generic.IDictionary%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="dd9ec-180">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-180">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="dd9ec-181">Vedere <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-181">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#10)]
 [!code-csharp[Generic.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#10)]
 [!code-vb[Generic.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd9ec-182">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-182">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dd9ec-183">La classe <see cref="T:System.Collections.Generic.IDictionary`2" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-183">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool" Usage="iDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="dd9ec-184">Chiave di cui si deve ottenere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-184">The key whose value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dd9ec-185">Quando il metodo termina, se la chiave specificata viene trovata, viene restituito il valore associato alla chiave; in caso contrario viene restituito il valore predefinito per il tipo del parametro <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-185">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <c>value</c> parameter.</span>
          </span>
          <span data-ttu-id="dd9ec-186">Questo parametro viene passato non inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-186">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd9ec-187">Ottiene il valore associato alla chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-187">Gets the value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd9ec-188">
            <see langword="true" /> se l'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-188">
              <see langword="true" /> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-189">Questo metodo combina la funzionalità del <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> metodo e il <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-189">This method combines the functionality of the <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="dd9ec-190">Se la chiave non viene trovata, il parametro `value` ottiene il valore predefinito per il tipo `TValue`; ad esempio zero (0) per i tipi Integer, `false` per i tipi Boolean e `null` per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-190">If the key is not found, then the `value` parameter gets the appropriate default value for the type `TValue`; for example, zero (0) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-191">Nell'esempio viene illustrato come utilizzare il <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> metodo per recuperare i valori.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-191">The example shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method to retrieve values.</span></span> <span data-ttu-id="dd9ec-192">Se un programma prova spesso valori di chiave che non sono in un dizionario, la <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> metodo può essere più efficiente rispetto all'utilizzo di <xref:System.Collections.Generic.IDictionary%602.Item%2A> proprietà (l'indicizzatore in c#), che genera eccezioni durante il tentativo di recupero chiavi inesistenti.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-192">If a program frequently tries key values that are not in a dictionary, the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method can be more efficient than using the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#), which throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="dd9ec-193">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-193">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="dd9ec-194">Vedere <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-194">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#5)]
 [!code-csharp[Generic.IDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#5)]
 [!code-vb[Generic.IDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#5)]  
[!code-cpp[Generic.IDictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd9ec-195">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-195">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'Value&gt;" Usage="System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dd9ec-196">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-196">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dd9ec-197">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori nell'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd9ec-197">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd9ec-198">L'ordine dei valori nell'oggetto restituito <xref:System.Collections.Generic.ICollection%601> non è specificato, ma è sicuramente identico all'ordine delle chiavi corrispondenti nel <xref:System.Collections.Generic.ICollection%601> restituito dal <xref:System.Collections.Generic.IDictionary%602.Keys%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-198">The order of the values in the returned <xref:System.Collections.Generic.ICollection%601> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <xref:System.Collections.Generic.ICollection%601> returned by the <xref:System.Collections.Generic.IDictionary%602.Keys%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd9ec-199">Esempio di codice seguente viene illustrato come enumerare solo con valori di <xref:System.Collections.Generic.IDictionary%602.Values%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-199">The following code example shows how to enumerate values alone using the <xref:System.Collections.Generic.IDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="dd9ec-200">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-200">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="dd9ec-201">Vedere <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd9ec-201">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#8)]
 [!code-csharp[Generic.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#8)]
 [!code-vb[Generic.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
      </Docs>
    </Member>
  </Members>
</Type>