<Type Name="SortedDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2bd6b63df082112fb248edca92f7f5dc1fc05da3" />
    <Meta Name="ms.sourcegitcommit" Value="850a55c780d5a95b534467969add0232fd3a6125" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/07/2018" />
    <Meta Name="ms.locfileid" Value="34829414" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="689be-101">Tipo di chiavi nel dizionario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-101">The type of the keys in the dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="689be-102">Tipo di valori nel dizionario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-102">The type of the values in the dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="689be-103">Rappresenta una raccolta di coppie chiave/valore ordinate in base alla chiave.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-103">Represents a collection of key/value pairs that are sorted on the key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-104">Il <xref:System.Collections.Generic.SortedDictionary%602> classe generica è una struttura ad albero di ricerca binaria con il recupero O (log n), dove n è il numero di elementi nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-104">The <xref:System.Collections.Generic.SortedDictionary%602> generic class is a binary search tree with O(log n) retrieval, where n is the number of elements in the dictionary.</span></span> <span data-ttu-id="689be-105">In questo senso, è simile al <xref:System.Collections.Generic.SortedList%602> classe generica.</span><span class="sxs-lookup"><span data-stu-id="689be-105">In this respect, it is similar to the <xref:System.Collections.Generic.SortedList%602> generic class.</span></span> <span data-ttu-id="689be-106">Le due classi hanno modelli a oggetti simili ed entrambi hanno un recupero O (log n).</span><span class="sxs-lookup"><span data-stu-id="689be-106">The two classes have similar object models, and both have O(log n) retrieval.</span></span> <span data-ttu-id="689be-107">In cui le due classi sono diversi è in uso della memoria e velocità di inserimento e rimozione:</span><span class="sxs-lookup"><span data-stu-id="689be-107">Where the two classes differ is in memory use and speed of insertion and removal:</span></span>  
  
-   <span data-ttu-id="689be-108"><xref:System.Collections.Generic.SortedList%602> utilizza meno memoria <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-108"><xref:System.Collections.Generic.SortedList%602> uses less memory than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
-   <span data-ttu-id="689be-109"><xref:System.Collections.Generic.SortedDictionary%602> include operazioni di inserimento e rimozione più veloci per i dati non ordinati: O (log n) anziché o (n) per <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-109"><xref:System.Collections.Generic.SortedDictionary%602> has faster insertion and removal operations for unsorted data: O(log n) as opposed to O(n) for <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
-   <span data-ttu-id="689be-110">Se l'elenco viene compilato in una sola volta da dati ordinati, <xref:System.Collections.Generic.SortedList%602> è più veloce <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-110">If the list is populated all at once from sorted data, <xref:System.Collections.Generic.SortedList%602> is faster than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="689be-111">Ogni coppia chiave/valore può essere recuperato come un <xref:System.Collections.Generic.KeyValuePair%602> , struttura o come un <xref:System.Collections.DictionaryEntry> tramite il metodo non generico <xref:System.Collections.IDictionary> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="689be-111">Each key/value pair can be retrieved as a <xref:System.Collections.Generic.KeyValuePair%602> structure, or as a <xref:System.Collections.DictionaryEntry> through the nongeneric <xref:System.Collections.IDictionary> interface.</span></span>  
  
 <span data-ttu-id="689be-112">Le chiavi devono essere non modificabile, come vengono utilizzati come chiavi di <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-112">Keys must be immutable as long as they are used as keys in the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="689be-113">Ogni chiave in un <xref:System.Collections.Generic.SortedDictionary%602> deve essere univoco.</span><span class="sxs-lookup"><span data-stu-id="689be-113">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique.</span></span> <span data-ttu-id="689be-114">Non può essere una chiave `null`, ma un valore può essere, se il valore di tipo `TValue` è un tipo riferimento.</span><span class="sxs-lookup"><span data-stu-id="689be-114">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="689be-115"><xref:System.Collections.Generic.SortedDictionary%602> richiede un'implementazione dell'operatore di confronto per eseguire confronti con chiave.</span><span class="sxs-lookup"><span data-stu-id="689be-115"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="689be-116">È possibile specificare un'implementazione del <xref:System.Collections.Generic.IComparer%601> interfaccia generica con un costruttore che accetta un `comparer` parametro; se non si specifica un'implementazione, il genericcomparer predefinito <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="689be-116">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter; if you do not specify an implementation, the default genericcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> is used.</span></span> <span data-ttu-id="689be-117">Se tipo `TKey` implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, l'operatore di confronto predefinito utilizza tale implementazione.</span><span class="sxs-lookup"><span data-stu-id="689be-117">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="689be-118">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` in Visual Basic) restituisce un oggetto di tipo degli elementi nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-118">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="689be-119">Poiché ogni elemento del <xref:System.Collections.Generic.SortedDictionary%602> è una coppia chiave/valore, il tipo di elemento non è il tipo della chiave o il tipo del valore.</span><span class="sxs-lookup"><span data-stu-id="689be-119">Since each element of the <xref:System.Collections.Generic.SortedDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="689be-120">Al contrario, il tipo di elemento è <xref:System.Collections.Generic.KeyValuePair%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-120">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="689be-121">Il codice seguente illustra la sintassi c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="689be-121">The following code shows C#, C++, and Visual Basic syntax.</span></span>  
  
 [!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]
 [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="689be-122">Il `foreach` istruzione è un wrapper per l'enumeratore, che consente solo di leggere dalla raccolta, non scrivere.</span><span class="sxs-lookup"><span data-stu-id="689be-122">The `foreach` statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-123">Esempio di codice seguente crea un oggetto vuoto <xref:System.Collections.Generic.SortedDictionary%602> di stringhe con chiavi di stringa e utilizza il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo per aggiungere alcuni elementi.</span><span class="sxs-lookup"><span data-stu-id="689be-123">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="689be-124">Nell'esempio viene illustrato che il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo genera un <xref:System.ArgumentException> durante il tentativo di aggiungere una chiave duplicata.</span><span class="sxs-lookup"><span data-stu-id="689be-124">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="689be-125">Nell'esempio viene utilizzato il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà (l'indicizzatore in c#) per recuperare i valori, che illustra un <xref:System.Collections.Generic.KeyNotFoundException> viene generata quando una chiave richiesta non è presente e che il valore associato alla chiave è possibile sostituire.</span><span class="sxs-lookup"><span data-stu-id="689be-125">The example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="689be-126">Nell'esempio viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> un modo più efficiente per recuperare i valori, se un programma deve provare valori di chiave che non sono presenti nel dizionario e viene illustrato come utilizzare il metodo di <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> metodo per verificare se esiste una chiave prima di chiamare il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-126">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="689be-127">Nell'esempio viene illustrato come enumerare le chiavi e valori nel dizionario e come enumerare le chiavi e valori da soli utilizzando il <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> proprietà e <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-127">The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property and the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="689be-128">Infine, nell'esempio viene illustrato il <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-128">Finally, the example demonstrates the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="689be-129">Statici pubblici (<see langword="Shared" /> in Visual Basic) di questo tipo sono thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-129">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="689be-130">I membri di istanza non sono garantiti come thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-130">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="689be-131">Oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> può supportare più lettori contemporaneamente, fino a quando non è possibile modificare la raccolta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-131">A <see cref="T:System.Collections.Generic.SortedDictionary`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="689be-132">Anche in questo caso, l'enumerazione di una raccolta non è quindi una procedura thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-132">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="689be-133">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-133">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="689be-134">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689be-134">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.SortedList" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689be-135">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-135">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689be-136">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e usa l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-136">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-137">Ogni chiave in un <xref:System.Collections.Generic.SortedDictionary%602> deve essere univoco in base all'operatore di confronto predefinito.</span><span class="sxs-lookup"><span data-stu-id="689be-137">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="689be-138"><xref:System.Collections.Generic.SortedDictionary%602> richiede un'implementazione dell'operatore di confronto per eseguire confronti con chiave.</span><span class="sxs-lookup"><span data-stu-id="689be-138"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="689be-139">Questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689be-139">This constructor uses the default generic equality comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="689be-140">Se tipo `TKey` implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, l'operatore di confronto predefinito utilizza tale implementazione.</span><span class="sxs-lookup"><span data-stu-id="689be-140">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="689be-141">In alternativa, è possibile specificare un'implementazione del <xref:System.Collections.Generic.IComparer%601> interfaccia generica con un costruttore che accetta un `comparer` parametro.</span><span class="sxs-lookup"><span data-stu-id="689be-141">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="689be-142">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-142">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-143">Esempio di codice seguente crea un oggetto vuoto <xref:System.Collections.Generic.SortedDictionary%602> di stringhe con chiavi di stringa e utilizza il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo per aggiungere alcuni elementi.</span><span class="sxs-lookup"><span data-stu-id="689be-143">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="689be-144">Nell'esempio viene illustrato che il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo genera un <xref:System.ArgumentException> durante il tentativo di aggiungere una chiave duplicata.</span><span class="sxs-lookup"><span data-stu-id="689be-144">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="689be-145">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.SortedDictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="689be-145">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="689be-146">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> predefinito per il tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-146">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-147">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e usa l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per il confronto delle chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-147">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-148">Ogni chiave in un <xref:System.Collections.Generic.SortedDictionary%602> deve essere univoco in base all'operatore di confronto specificato.</span><span class="sxs-lookup"><span data-stu-id="689be-148">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="689be-149"><xref:System.Collections.Generic.SortedDictionary%602> richiede un'implementazione dell'operatore di confronto per eseguire confronti con chiave.</span><span class="sxs-lookup"><span data-stu-id="689be-149"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="689be-150">Se `comparer` è `null`, questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689be-150">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="689be-151">Se tipo `TKey` implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, l'operatore di confronto predefinito utilizza tale implementazione.</span><span class="sxs-lookup"><span data-stu-id="689be-151">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="689be-152">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-153">L'esempio di codice seguente crea un <xref:System.Collections.Generic.SortedDictionary%602> con un operatore di confronto tra maiuscole e minuscole per le impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="689be-153">The following code example creates a <xref:System.Collections.Generic.SortedDictionary%602> with a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="689be-154">L'esempio aggiunge quattro elementi, alcune con chiavi minuscole e alcuni con chiavi di lettere maiuscole.</span><span class="sxs-lookup"><span data-stu-id="689be-154">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="689be-155">Nell'esempio vengono quindi tenta di aggiungere un elemento con una chiave che differisce da una chiave esistente solo per i casi, intercetta l'eccezione risulta e visualizza un messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="689be-155">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="689be-156">Infine, l'esempio mostra gli elementi dell'ordinamento tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="689be-156">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="689be-157">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-157">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-158">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene usata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-159">Ogni chiave in un <xref:System.Collections.Generic.SortedDictionary%602> deve essere univoco in base il valore predefinito operatore di confronto, pertanto, ogni chiave nell'origine `dictionary` deve essere univoca in base all'operatore di confronto predefinito.</span><span class="sxs-lookup"><span data-stu-id="689be-159">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer; therefore, every key in the source `dictionary` must also be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="689be-160"><xref:System.Collections.Generic.SortedDictionary%602> richiede un'implementazione dell'operatore di confronto per eseguire confronti con chiave.</span><span class="sxs-lookup"><span data-stu-id="689be-160"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="689be-161">Questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689be-161">This constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="689be-162">Se tipo `TKey` implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, l'operatore di confronto predefinito utilizza tale implementazione.</span><span class="sxs-lookup"><span data-stu-id="689be-162">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="689be-163">In alternativa, è possibile specificare un'implementazione del <xref:System.Collections.Generic.IComparer%601> interfaccia generica con un costruttore che accetta un `comparer` parametro.</span><span class="sxs-lookup"><span data-stu-id="689be-163">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="689be-164">Questo costruttore è un'operazione O (`n` log `n`) operazione, in cui `n` è il numero di elementi in `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="689be-164">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-165">Esempio di codice seguente viene illustrato come utilizzare <xref:System.Collections.Generic.SortedDictionary%602> per creare una copia ordinata delle informazioni in un <xref:System.Collections.Generic.Dictionary%602>, passando il <xref:System.Collections.Generic.Dictionary%602> per il <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="689be-165">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a sorted copy of the information in a <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-166">
            <paramref name="dictionary" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-166">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689be-167">
            <paramref name="dictionary" /> contiene una o più chiavi duplicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-167">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="689be-168">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-168">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="689be-169">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> predefinito per il tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-169">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-170">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene usata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per confrontare le chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-171">Ogni chiave in un <xref:System.Collections.Generic.SortedDictionary%602> deve essere univoco in base alle specificato operatore di confronto, pertanto, ogni chiave nell'origine `dictionary` deve essere univoca in base all'operatore di confronto specificato.</span><span class="sxs-lookup"><span data-stu-id="689be-171">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer; therefore, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="689be-172"><xref:System.Collections.Generic.SortedDictionary%602> richiede un'implementazione dell'operatore di confronto per eseguire confronti con chiave.</span><span class="sxs-lookup"><span data-stu-id="689be-172"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="689be-173">Se `comparer` è `null`, questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689be-173">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="689be-174">Se tipo `TKey` implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, l'operatore di confronto predefinito utilizza tale implementazione.</span><span class="sxs-lookup"><span data-stu-id="689be-174">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="689be-175">Questo costruttore è un'operazione O (`n` log `n`) operazione, in cui `n` è il numero di elementi in `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="689be-175">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-176">Esempio di codice seguente viene illustrato come utilizzare <xref:System.Collections.Generic.SortedDictionary%602> per creare una distinzione tra maiuscole e ordinati copia delle informazioni in una distinzione tra maiuscole e <xref:System.Collections.Generic.Dictionary%602>, passando il <xref:System.Collections.Generic.Dictionary%602> per il <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="689be-176">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a case-insensitive sorted copy of the information in a case-insensitive <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="689be-177">In questo esempio, gli operatori di confronto tra maiuscole e minuscole sono per le impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="689be-177">In this example, the case-insensitive comparers are for the current culture.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-178">
            <paramref name="dictionary" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-178">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689be-179">
            <paramref name="dictionary" /> contiene una o più chiavi duplicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-179">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-180">Chiave dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-180">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="689be-181">Valore dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-181">The value of the element to add.</span>
          </span>
          <span data-ttu-id="689be-182">Il valore può essere <see langword="null" /> per i tipi di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-182">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-183">Aggiunge un elemento con la chiave e il valore specificati al metodo <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-183">Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-184">È inoltre possibile utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel <xref:System.Collections.Generic.SortedDictionary%602>, ad esempio `myCollection["myNonexistentKey"] = myValue` (in Visual Basic `myCollection("myNonexistantKey") = myValue`).</span><span class="sxs-lookup"><span data-stu-id="689be-184">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue` (in Visual Basic, `myCollection("myNonexistantKey") = myValue`).</span></span> <span data-ttu-id="689be-185">Tuttavia, se la chiave specificata esiste già nel <xref:System.Collections.Generic.SortedDictionary%602>, impostando il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà sovrascrive il vecchio valore.</span><span class="sxs-lookup"><span data-stu-id="689be-185">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="689be-186">Al contrario, il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo genera un'eccezione se esiste già un elemento con la chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="689be-186">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an exception if an element with the specified key already exists.</span></span>  
  
 <span data-ttu-id="689be-187">Non può essere una chiave `null`, ma un valore può essere, se il valore di tipo `TValue` è un tipo riferimento.</span><span class="sxs-lookup"><span data-stu-id="689be-187">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="689be-188">Questo metodo è un'operazione O (log `n`) operazione, in cui `n` è <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-188">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-189">Esempio di codice seguente crea un oggetto vuoto <xref:System.Collections.Generic.SortedDictionary%602> di stringhe con chiavi di stringa e utilizza il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo per aggiungere alcuni elementi.</span><span class="sxs-lookup"><span data-stu-id="689be-189">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="689be-190">Nell'esempio viene illustrato che il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo genera un <xref:System.ArgumentException> durante il tentativo di aggiungere una chiave duplicata.</span><span class="sxs-lookup"><span data-stu-id="689be-190">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="689be-191">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.SortedDictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="689be-191">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-192">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-192">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689be-193">In <see cref="T:System.Collections.Generic.SortedDictionary`2" /> è già presente un elemento con la stessa chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-193">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689be-194">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-194">Removes all elements from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-195">Il <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> è impostata su 0 e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-195">The <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="689be-196">Questo metodo è un'operazione o (1), poiché la radice di strutture dati interne viene rilasciata semplicemente per operazione di garbage collection.</span><span class="sxs-lookup"><span data-stu-id="689be-196">This method is an O(1) operation, since the root of the internal data structures is simply released for garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-197">Ottiene l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> usata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-197">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-198">Interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> utilizzata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-198">The <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-199"><xref:System.Collections.Generic.SortedDictionary%602> richiede un'implementazione dell'operatore di confronto per eseguire confronti con chiave.</span><span class="sxs-lookup"><span data-stu-id="689be-199"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="689be-200">È possibile specificare un'implementazione del <xref:System.Collections.Generic.IComparer%601> interfaccia generica con un costruttore che accetta un `comparer` parametro.</span><span class="sxs-lookup"><span data-stu-id="689be-200">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span> <span data-ttu-id="689be-201">In caso contrario, l'operatore di confronto di uguaglianza predefinito, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="689be-201">If you do not, the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, is used.</span></span> <span data-ttu-id="689be-202">Se tipo `TKey` implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, l'operatore di confronto predefinito utilizza tale implementazione.</span><span class="sxs-lookup"><span data-stu-id="689be-202">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="689be-203">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-203">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.SortedDictionary`2.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-204">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-204">The key to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-205">Determina se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-205">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-206">
            <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-206">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-207">Questo metodo è un'operazione O (log `n`) operazione.</span><span class="sxs-lookup"><span data-stu-id="689be-207">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-208">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> metodo per verificare se esiste una chiave prima di chiamare il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-208">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span> <span data-ttu-id="689be-209">Viene inoltre illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> metodo per recuperare valori che è un modo efficiente per recuperare i valori quando un programma prova spesso chiavi che non sono presenti nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-209">It also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="689be-210">Infine, viene illustrato il modo meno efficiente per verificare se esistono chiavi, tramite il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="689be-210">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="689be-211">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.SortedDictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="689be-211">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#6)]
 [!code-vb[Generic.SortedDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-212">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-212">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689be-213">Valore da individuare in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-213">The value to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
          <span data-ttu-id="689be-214">Il valore può essere <see langword="null" /> per i tipi di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-214">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-215">Determina se la raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-215">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-216">
            <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-216">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-217">Questo metodo determina l'uguaglianza utilizzando l'operatore di confronto di uguaglianza predefinito <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> per il tipo di valore `TValue`.</span><span class="sxs-lookup"><span data-stu-id="689be-217">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  
  
 <span data-ttu-id="689be-218">Questo metodo esegue una ricerca lineare. Pertanto, il tempo medio di esecuzione è proporzionale al <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-218">This method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property.</span></span> <span data-ttu-id="689be-219">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-219">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="689be-220">Matrice unidimensionale di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> in cui effettuare la copia degli elementi della raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2" /> corrente. La matrice deve avere indice in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-220">The one-dimensional array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures that is the destination of the elements copied from the current <see cref="T:System.Collections.Generic.SortedDictionary`2" /> The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="689be-221">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-221">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-222">Copia gli elementi di <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nella matrice di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> indicata, a partire dall'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-222">Copies the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> to the specified array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures, starting at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="689be-223">Se il tipo di origine <xref:System.Collections.Generic.SortedDictionary%602> non può essere eseguire automaticamente il cast al tipo della destinazione `array`, le implementazioni non generiche di <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> generare <xref:System.InvalidCastException>, mentre le implementazioni generiche generano <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="689be-223">If the type of the source <xref:System.Collections.Generic.SortedDictionary%602> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="689be-224">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-225">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-225">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689be-226">
            <paramref name="index" /> è minore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-226">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689be-227">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-227">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-228">Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-228">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-229">Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-229">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-230">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-230">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.SortedDictionary`2/Enumerator&lt;!TKey, !TValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SortedDictionary(Of TKey, TValue).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689be-231">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-231">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-232">Oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> per <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-232">A <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> for the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-233">Ai fini dell'enumerazione, ogni elemento è un <xref:System.Collections.Generic.KeyValuePair%602> struttura che rappresenta un valore e la relativa chiave.</span><span class="sxs-lookup"><span data-stu-id="689be-233">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="689be-234">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="689be-234">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="689be-235">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="689be-235">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="689be-236">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="689be-236">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="689be-237">Il dizionario viene mantenuto l'ordinamento utilizzando una struttura interna.</span><span class="sxs-lookup"><span data-stu-id="689be-237">The dictionary is maintained in a sorted order using an internal tree.</span></span> <span data-ttu-id="689be-238">Ogni nuovo elemento è posizionato in corrispondenza della posizione di ordinamento corretto e la struttura ad albero viene regolata per mantenere l'ordinamento ogni volta che un elemento viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="689be-238">Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</span></span> <span data-ttu-id="689be-239">Durante l'enumerazione, viene mantenuto l'ordinamento.</span><span class="sxs-lookup"><span data-stu-id="689be-239">While enumerating, the sort order is maintained.</span></span>  
  
 <span data-ttu-id="689be-240">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-240">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="689be-241">In questa posizione, la <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> proprietà non è definita.</span><span class="sxs-lookup"><span data-stu-id="689be-241">At this position, the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="689be-242">Pertanto, è necessario chiamare il <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-242">Therefore, you must call the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="689be-243">Il <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> proprietà restituisce lo stesso elemento fino a quando il <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="689be-243">The <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property returns the same element until the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="689be-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> imposta <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="689be-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="689be-245">Se <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="689be-245">If <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="689be-246">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="689be-246">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="689be-247">Se l'ultima chiamata a <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> restituito `false`, <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="689be-247">If the last call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="689be-248">Non è possibile impostare nuovamente la proprietà <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</span><span class="sxs-lookup"><span data-stu-id="689be-248">You cannot set <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="689be-249">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="689be-249">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="689be-250">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> o <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="689be-250">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="689be-251">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689be-251">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="689be-252">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="689be-252">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="689be-253">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="689be-253">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="689be-254">Le implementazioni predefinite di raccolte nello spazio dei nomi <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="689be-254">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="689be-255">Questo metodo è un'operazione o (log n), dove n è count.</span><span class="sxs-lookup"><span data-stu-id="689be-255">This method is an O(log n) operation, where n is count.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-256">Chiave del valore da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-256">The key of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-257">Ottiene o imposta il valore associato alla chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-257">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-258">Valore associato alla chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-258">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="689be-259">Se la chiave specificata non viene trovata, un'operazione Get genera un'eccezione <see cref="T:System.Collections.Generic.KeyNotFoundException" />, mentre un'operazione Set crea una nuovo elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-259">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-260">Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi c# seguente: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="689be-260">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="689be-261">È inoltre possibile utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel <xref:System.Collections.Generic.SortedDictionary%602>, ad esempio `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="689be-261">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="689be-262">Tuttavia, se la chiave specificata esiste già nel <xref:System.Collections.Generic.SortedDictionary%602>, impostando il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà sovrascrive il vecchio valore.</span><span class="sxs-lookup"><span data-stu-id="689be-262">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="689be-263">Al contrario, il <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="689be-263">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="689be-264">Non può essere una chiave `null`, ma un valore può essere, se il valore di tipo `TValue` è un tipo riferimento.</span><span class="sxs-lookup"><span data-stu-id="689be-264">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="689be-265">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-265">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span> <span data-ttu-id="689be-266">In Visual Basic la proprietà <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</span><span class="sxs-lookup"><span data-stu-id="689be-266">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="689be-267">Ottenere il valore di questa proprietà è un'operazione O (log `n`) operazione; anche l'impostazione della proprietà è un'operazione O (log `n`) operazione.</span><span class="sxs-lookup"><span data-stu-id="689be-267">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-268">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà (l'indicizzatore in c#) per recuperare i valori, che illustra un <xref:System.Collections.Generic.KeyNotFoundException> viene generata quando una chiave richiesta non è presente e che il valore associato alla chiave è possibile sostituire.</span><span class="sxs-lookup"><span data-stu-id="689be-268">The following code example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="689be-269">Nell'esempio viene inoltre illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> metodo in modo più efficiente per recuperare i valori, se un programma deve provare valori di chiave che non sono presenti nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-269">The example also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</span></span>  
  
 <span data-ttu-id="689be-270">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.SortedDictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="689be-270">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#3)]
 [!code-vb[Generic.SortedDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-271">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-271">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="689be-272">Durante il recupero della proprietà, la chiave indicata nel parametro <paramref name="key" /> non è stata trovata nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-272">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.KeyCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/KeyCollection&lt;!TKey, !TValue&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As SortedDictionary(Of TKey, TValue).KeyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ Keys { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-273">Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-273">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-274">Raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-274">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-275">Le chiavi presenti nel <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> vengono ordinati in base al <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> proprietà e sono nello stesso ordine dei valori associati nel <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> restituito dal <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-275">The keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are in the same order as the associated values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="689be-276">L'oggetto restituito <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> non è una copia statica, bensì il <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> fa riferimento alle chiavi nell'originale <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-276">The returned <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="689be-277">Di conseguenza, le modifiche per il <xref:System.Collections.Generic.SortedDictionary%602> continueranno a essere apportate nel <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span><span class="sxs-lookup"><span data-stu-id="689be-277">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="689be-278">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-278">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-279">Esempio di codice seguente viene illustrato come enumerare le chiavi del dizionario tramite il <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> , proprietà e come enumerare le chiavi e valori nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-279">The following code example shows how to enumerate the keys in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="689be-280">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito.</span><span class="sxs-lookup"><span data-stu-id="689be-280">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="689be-281">Vedere <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-281">See <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#9)]
 [!code-vb[Generic.SortedDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-282">Chiave dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-282">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-283">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-283">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-284">
            <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-284">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="689be-285">Questo metodo restituisce anche <see langword="false" /> se il parametro <paramref name="key" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-285">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-286">Se il <xref:System.Collections.Generic.SortedDictionary%602> non contiene un elemento con la chiave specificata, il <xref:System.Collections.Generic.SortedDictionary%602> rimane invariato.</span><span class="sxs-lookup"><span data-stu-id="689be-286">If the <xref:System.Collections.Generic.SortedDictionary%602> does not contain an element with the specified key, the <xref:System.Collections.Generic.SortedDictionary%602> remains unchanged.</span></span> <span data-ttu-id="689be-287">Non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="689be-287">No exception is thrown.</span></span>  
  
 <span data-ttu-id="689be-288">Questo metodo è un'operazione O (log `n`) operazione.</span><span class="sxs-lookup"><span data-stu-id="689be-288">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-289">Esempio di codice seguente viene illustrato come rimuovere una coppia chiave/valore dal dizionario utilizzando il <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-289">The following code example shows how to remove a key/value pair from the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="689be-290">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.SortedDictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="689be-290">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#10)]
 [!code-vb[Generic.SortedDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-291">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-291">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="689be-292">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-292">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
          <span data-ttu-id="689be-293">La matrice deve avere un'indicizzazione in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-293">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="689be-294">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-294">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-295">Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice, iniziando dall'indice di matrice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-295">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="689be-296">Se il tipo di origine <xref:System.Collections.ICollection> non può essere eseguire automaticamente il cast al tipo della destinazione `array`, le implementazioni non generiche di <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> generano un <xref:System.InvalidCastException>, mentre le implementazioni generiche generano un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="689be-296">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw an <xref:System.InvalidCastException>, whereas the generic implementations throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="689be-297">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-297">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-298">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-298">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689be-299">
            <paramref name="index" /> è minore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-299">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689be-300">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-300">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="689be-301">-oppure-  <paramref name="array" /> non ha indicizzazione a base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-301">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="689be-302">-oppure-  Il numero di elementi nell'insieme di origine <see cref="T:System.Collections.Generic.ICollection`1" /> è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-302">-or-  The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="689be-303">-oppure-  Non è possibile eseguire automaticamente il cast del tipo dell'insieme <see cref="T:System.Collections.Generic.ICollection`1" /> di origine nel tipo dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-303">-or-  The type of the source <see cref="T:System.Collections.Generic.ICollection`1" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-304">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-304">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-305">
            <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-305">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="689be-306">Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-306">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-307">Le implementazioni predefinite di raccolte nello spazio dei nomi <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="689be-307">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="689be-308">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689be-308">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="689be-309">Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che può causare l'enumeratore generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="689be-309">Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</span></span> <span data-ttu-id="689be-310">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="689be-310">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="689be-311">Il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> proprietà restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso al <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="689be-311">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="689be-312">La sincronizzazione è efficace solo se tutti i thread di bloccano l'oggetto prima di accedere alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-312">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span>  
  
 <span data-ttu-id="689be-313">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-313">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-314">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-314">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-315">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-315">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-316">Le implementazioni predefinite di raccolte nello spazio dei nomi <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="689be-316">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="689be-317">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689be-317">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="689be-318">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="689be-318">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="689be-319">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="689be-319">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="689be-320">Il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> proprietà restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso al <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="689be-320">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="689be-321">La sincronizzazione è efficace solo se tutti i thread di bloccano l'oggetto prima di accedere alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-321">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span> <span data-ttu-id="689be-322">Il codice seguente viene illustrato come utilizzare il <xref:System.Collections.ICollection.SyncRoot%2A> proprietà per c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="689be-322">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="689be-323">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-323">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-324">Oggetto da usare come chiave dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-324">The object to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="689be-325">Oggetto da usare come valore dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-325">The object to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-326">Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-326">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-327">È inoltre possibile utilizzare il <xref:System.Collections.IDictionary.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario; ad esempio, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="689be-327">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="689be-328">Tuttavia, se la chiave specificata esiste già nel dizionario, l'impostazione di <xref:System.Collections.IDictionary.Item%2A> proprietà sovrascrive il valore precedente.</span><span class="sxs-lookup"><span data-stu-id="689be-328">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="689be-329">Al contrario, il <xref:System.Collections.IDictionary.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="689be-329">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="689be-330">Questo metodo è un'operazione O (log `n`) operazione, in cui `n` è <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-330">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-331">Esempio di codice seguente viene illustrato come accedere il <xref:System.Collections.Generic.SortedDictionary%602> classe tramite il <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="689be-331">The following code example shows how to access the <xref:System.Collections.Generic.SortedDictionary%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="689be-332">L'esempio di codice crea un oggetto vuoto <xref:System.Collections.Generic.SortedDictionary%602> di stringhe con chiavi di stringa e utilizza il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo per aggiungere alcuni elementi.</span><span class="sxs-lookup"><span data-stu-id="689be-332">The code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="689be-333">Nell'esempio viene illustrato che il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo genera un <xref:System.ArgumentException> durante il tentativo di aggiungere una chiave duplicata o quando viene fornita una chiave o il valore del tipo di dati non corretto.</span><span class="sxs-lookup"><span data-stu-id="689be-333">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="689be-334">L'esempio di codice illustra l'uso di diversi altri membri del <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="689be-334">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-335">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-335">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689be-336">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-336">
              <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="689be-337">-oppure-  <paramref name="value" /> è un tipo che non è possibile assegnare al tipo di valore <paramref name="TValue" /> dell'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-337">-or-  <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="689be-338">-oppure-  In <see cref="T:System.Collections.IDictionary" /> è già presente un elemento con la stessa chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-338">-or-  An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-339">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-339">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-340">Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-340">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-341">
            <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-341">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-342">Questo metodo restituisce `false` se `key` è un tipo che non è assegnabile al tipo di chiave `TKey` del <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-342">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="689be-343">Questo metodo è un'operazione O (log `n`) operazione, in cui `n` è <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-343">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-344">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A> metodo il <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfacciarsi con un <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-344">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="689be-345">Nell'esempio viene illustrato che il metodo restituisce `false` se viene fornita una chiave del tipo di dati non corretto.</span><span class="sxs-lookup"><span data-stu-id="689be-345">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="689be-346">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-346">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-347">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-347">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689be-348">Restituisce <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-348">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-349">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-349">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-350">Ai fini dell'enumerazione, ogni elemento è un <xref:System.Collections.DictionaryEntry> struttura.</span><span class="sxs-lookup"><span data-stu-id="689be-350">For purposes of enumeration, each item is a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="689be-351">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="689be-351">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="689be-352">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="689be-352">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="689be-353">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="689be-353">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="689be-354">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-354">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="689be-355">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="689be-355">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="689be-356">In questa posizione, la proprietà <xref:System.Collections.IDictionaryEnumerator.Entry%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="689be-356">At this position, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="689be-357">Pertanto, è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-357">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="689be-358">Il <xref:System.Collections.IDictionaryEnumerator.Entry%2A> proprietà restituisce lo stesso oggetto finché non <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="689be-358">The <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="689be-359"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IDictionaryEnumerator.Entry%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="689be-359"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="689be-360">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="689be-360">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="689be-361">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="689be-361">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="689be-362">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="689be-362">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="689be-363">Per impostare nuovamente la proprietà <xref:System.Collections.IDictionaryEnumerator.Entry%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-363">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="689be-364">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="689be-364">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="689be-365">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="689be-365">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="689be-366">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689be-366">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="689be-367">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="689be-367">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="689be-368">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="689be-368">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="689be-369">Le implementazioni predefinite di raccolte nello spazio dei nomi <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="689be-369">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="689be-370">Questo metodo è un'operazione o (log n), dove n è un numero di elementi in una raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-370">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="689be-371">Esempio di codice seguente viene illustrato come enumerare le coppie chiave/valore nel dizionario mediante il `foreach` istruzione (`For Each` in Visual Basic `for each` in C++), che nasconde l'utilizzo dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="689be-371">The following code example shows how to enumerate the key/value pairs in the dictionary by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="689be-372">In particolare, si noti che l'enumeratore per il <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfaccia restituisce <xref:System.Collections.DictionaryEntry> oggetti anziché <xref:System.Collections.Generic.KeyValuePair%602> oggetti.</span><span class="sxs-lookup"><span data-stu-id="689be-372">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="689be-373">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-373">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-374">Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> ha dimensioni fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-374">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-375">
            <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-375">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="689be-376">Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-376">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-377">Una raccolta con dimensioni fisse non consente l'aggiunta o la rimozione di elementi dopo la sua creazione, ma consente la modifica degli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="689be-377">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="689be-378">Una raccolta con una dimensione fissa è semplicemente una raccolta con un wrapper che impedisce l'aggiunta e rimozione di elementi. Pertanto, se vengono apportate modifiche alla raccolta sottostante, incluse l'aggiunta o la rimozione di elementi, la raccolta a dimensione fissa riflette le modifiche.</span><span class="sxs-lookup"><span data-stu-id="689be-378">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689be-379">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-379">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-380">Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-380">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-381">
            <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-381">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="689be-382">Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-382">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-383">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</span><span class="sxs-lookup"><span data-stu-id="689be-383">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="689be-384">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</span><span class="sxs-lookup"><span data-stu-id="689be-384">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689be-385">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-385">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-386">Chiave dell'elemento da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-386">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-387">Ottiene o imposta l'elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-387">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-388">L'elemento con la chiave specificata, o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-388">The element with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-389">Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi c# seguente: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="689be-389">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="689be-390">È inoltre possibile utilizzare il <xref:System.Collections.IDictionary.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario; ad esempio, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="689be-390">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="689be-391">Tuttavia, se la chiave specificata esiste già nel dizionario, l'impostazione di <xref:System.Collections.IDictionary.Item%2A> proprietà sovrascrive il valore precedente.</span><span class="sxs-lookup"><span data-stu-id="689be-391">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="689be-392">Al contrario, il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="689be-392">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="689be-393">Nel linguaggio c# viene utilizzata la [questo](~/docs/csharp/language-reference/keywords/this.md) (parola chiave) per definire gli indicizzatori anziché implementare la <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-393">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="689be-394">In Visual Basic la proprietà <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</span><span class="sxs-lookup"><span data-stu-id="689be-394">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="689be-395">Ottenere il valore di questa proprietà è un'operazione O (log `n`) operazione; anche l'impostazione della proprietà è un'operazione O (log `n`) operazione.</span><span class="sxs-lookup"><span data-stu-id="689be-395">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-396">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> proprietà (l'indicizzatore in c#) del <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfacciarsi con un <xref:System.Collections.Generic.SortedDictionary%602>e la proprietà le differenze tra la <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-396">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, and ways the property differs from the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="689be-397">L'esempio mostra che, come il <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> proprietà, il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> proprietà è possibile modificare il valore associato a una chiave esistente e può essere utilizzata per aggiungere una nuova coppia chiave/valore se la chiave specificata non è presente nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-397">The example shows that, like the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</span></span> <span data-ttu-id="689be-398">L'esempio mostra anche che, a differenza di <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> proprietà, il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> proprietà genera un'eccezione se `key` non è presente nel dizionario, bensì restituisce un riferimento null.</span><span class="sxs-lookup"><span data-stu-id="689be-398">The example also shows that unlike the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the dictionary, returning a null reference instead.</span></span> <span data-ttu-id="689be-399">Infine, nell'esempio viene illustrato il recupero di <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> proprietà restituisce un riferimento null se `key` non corrisponde al tipo di dati corretto e che l'impostazione della proprietà genera un'eccezione se `key` non corrisponde al tipo di dati corretto.</span><span class="sxs-lookup"><span data-stu-id="689be-399">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="689be-400">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-400">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-401">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-401">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689be-402">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-402">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
          <span data-ttu-id="689be-403">-oppure-  Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-403">-or-  A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-404">Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-404">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-405">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-405">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-406">Le chiavi nell'oggetto restituito <xref:System.Collections.ICollection> vengono ordinati in base al <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> proprietà e sono sicuramente nello stesso ordine dei valori corrispondenti nel <xref:System.Collections.ICollection> restituito dal <xref:System.Collections.IDictionary.Values%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-406">The keys in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are guaranteed to be in the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="689be-407">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-407">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-408">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Collections.IDictionary.Keys%2A> proprietà del <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfacciarsi con un <xref:System.Collections.Generic.SortedDictionary%602>, per elencare le chiavi nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-408">The following code example shows how to use the <xref:System.Collections.IDictionary.Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="689be-409">Nell'esempio viene inoltre illustrato come enumerare le coppie chiave/valore nel dizionario; Si noti che l'enumeratore per il <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfaccia restituisce <xref:System.Collections.DictionaryEntry> oggetti anziché <xref:System.Collections.Generic.KeyValuePair%602> oggetti.</span><span class="sxs-lookup"><span data-stu-id="689be-409">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="689be-410">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-410">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-411">Chiave dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-411">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-412">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-412">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-413">Questo metodo è un'operazione O (log `n`) operazione.</span><span class="sxs-lookup"><span data-stu-id="689be-413">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-414">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A> del <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfacciarsi con un <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-414">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="689be-415">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-415">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-416">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-416">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-417">Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-417">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-418">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-418">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-419">I valori nell'oggetto restituito <xref:System.Collections.ICollection> vengono ordinati in base al <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> , proprietà e sono sicuramente nello stesso ordine delle chiavi corrispondenti nella <xref:System.Collections.ICollection> restituito dal <xref:System.Collections.IDictionary.Keys%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-419">The values in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are guaranteed to be in the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="689be-420">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-420">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-421">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A> proprietà del <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfacciarsi con un <xref:System.Collections.Generic.SortedDictionary%602>per ottenere l'elenco di valori nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-421">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the values in the dictionary.</span></span> <span data-ttu-id="689be-422">Nell'esempio viene inoltre illustrato come enumerare le coppie chiave/valore nel dizionario; Si noti che l'enumeratore per il <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfaccia restituisce <xref:System.Collections.DictionaryEntry> oggetti anziché <xref:System.Collections.Generic.KeyValuePair%602> oggetti.</span><span class="sxs-lookup"><span data-stu-id="689be-422">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="689be-423">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="689be-423">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689be-424">Restituisce un enumeratore che consente di scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-424">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-425">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-425">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="689be-426">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="689be-426">The `foreach` statement of the C# language (`for each` in C++, `For Each` Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="689be-427">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="689be-427">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="689be-428">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="689be-428">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="689be-429">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-429">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="689be-430">In questa posizione, la <xref:System.Collections.IEnumerator.Current%2A> proprietà non è definita.</span><span class="sxs-lookup"><span data-stu-id="689be-430">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="689be-431">Pertanto, è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="689be-431">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="689be-432">Il <xref:System.Collections.IEnumerator.Current%2A> proprietà restituisce lo stesso elemento fino a quando il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="689be-432">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same element until the <xref:System.Collections.IEnumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="689be-433"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="689be-433"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="689be-434">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="689be-434">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="689be-435">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="689be-435">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="689be-436">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="689be-436">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="689be-437">Non è possibile impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</span><span class="sxs-lookup"><span data-stu-id="689be-437">You cannot set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="689be-438">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="689be-438">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="689be-439">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="689be-439">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="689be-440">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689be-440">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="689be-441">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="689be-441">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="689be-442">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="689be-442">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="689be-443">Le implementazioni predefinite di raccolte nello spazio dei nomi <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="689be-443">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="689be-444">Questo metodo è un'operazione o (log n), dove n è un numero di elementi in una raccolta.</span><span class="sxs-lookup"><span data-stu-id="689be-444">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="689be-445">Chiave del valore da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-445">The key of the value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="689be-446">Quando il metodo termina, se la chiave specificata viene trovata, viene restituito il valore associato alla chiave; in caso contrario viene restituito il valore predefinito per il tipo del parametro <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-446">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <c>value</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689be-447">Ottiene il valore associato alla chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-447">Gets the value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689be-448">
            <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-448">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-449">Questo metodo combina la funzionalità del <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> (metodo) e <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-449">This method combines the functionality of the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="689be-450">Se la chiave non viene trovata, il `value` parametro ottiene il valore predefinito appropriato per il tipo di valore `TValue`, ad esempio, 0 (zero) per i tipi integer, `false` per i tipi Boolean e `null` per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="689be-450">If the key is not found, then the `value` parameter gets the appropriate default value for the value type `TValue`; for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="689be-451">Questo metodo è un'operazione O (log `n`) operazione.</span><span class="sxs-lookup"><span data-stu-id="689be-451">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-452">Nell'esempio viene illustrato come utilizzare il <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> metodo in modo più efficiente per recuperare i valori in un programma che prova spesso chiavi che non sono presenti nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-452">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="689be-453">Per contrasto, l'esempio mostra anche come <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> proprietà (l'indicizzatore in c#) genera eccezioni durante il tentativo di recupero chiavi inesistenti.</span><span class="sxs-lookup"><span data-stu-id="689be-453">For contrast, the example also shows how the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="689be-454">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.SortedDictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="689be-454">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
 [!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689be-455">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-455">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.ValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/ValueCollection&lt;!TKey, !TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As SortedDictionary(Of TKey, TValue).ValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ Values { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+ValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689be-456">Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-456">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689be-457">Raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> contenente i valori di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689be-457">A <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689be-458">I valori nel <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> vengono ordinati in base al <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> , proprietà e sono nello stesso ordine delle chiavi associate nel <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> restituito dal <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="689be-458">The values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are in the same order as the associated keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="689be-459">L'oggetto restituito <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> non è una copia statica, bensì il <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> fa riferimento ai valori nell'originale <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="689be-459">The returned <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> refers back to the values in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="689be-460">Di conseguenza, le modifiche per il <xref:System.Collections.Generic.SortedDictionary%602> continueranno a essere apportate nel <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="689be-460">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>.</span></span>  
  
 <span data-ttu-id="689be-461">Ottenere il valore di questa proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="689be-461">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689be-462">Questo esempio di codice viene illustrato come enumerare i valori nel dizionario usando il <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> , proprietà e come enumerare le chiavi e valori nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="689be-462">This code example shows how to enumerate the values in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="689be-463">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.SortedDictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="689be-463">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#8)]
 [!code-vb[Generic.SortedDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>