<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReadOnlyDictionary`2.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1085a08e24f5f95c18921ba74a94f939942bf27.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1085a08e24f5f95c18921ba74a94f939942bf27</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The type of keys in the read-only dictionary.</source>
          <target state="translated">Tipo di chiavi nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The type of values in the read-only dictionary.</source>
          <target state="translated">Tipo di valori nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Represents a generic read-only collection of key/value pairs.</source>
          <target state="translated">Rappresenta una raccolta generica e di sola lettura di coppie chiave/valore.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Each element is a key/value pair that is stored in a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> object.</source>
          <target state="translated">Ogni elemento è una coppia chiave/valore archiviata in un oggetto <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Each pair must have a unique key.</source>
          <target state="translated">Ogni coppia deve avere una chiave univoca.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Implementations can vary in whether they allow you to specify a key that is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Le implementazioni possono variare per il fatto se consentono di specificare una chiave <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The value can be <ph id="ph1">`null`</ph> and does not have to be unique.</source>
          <target state="translated">Il valore può essere <ph id="ph1">`null`</ph> e non deve essere univoco.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interfaccia consente alle chiavi e contenuti i valori devono essere enumerati, ma non implica alcun ordinamento particolare.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++) requires the type of each element in the collection.</source>
          <target state="translated">L'istruzione <ph id="ph1">`foreach`</ph> del linguaggio C# (<ph id="ph2">`For Each`</ph> in Visual Basic <ph id="ph3">`for each`</ph> in C++) richiede il tipo di ogni elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Because each element of the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> interface is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Poiché ogni elemento dell'interfaccia <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> è costituito da una coppia chiave/valore, il tipo di elemento non corrisponde né al tipo della chiave né al tipo del valore.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">Il tipo di elemento è infatti <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, come illustrato nel seguente esempio.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator; it allows only reading from the collection, not writing to the collection.</source>
          <target state="translated">L'istruzione <ph id="ph1">`foreach`</ph> è un wrapper per l'enumeratore; consente solo di leggere dalla raccolta, non di scrivere in essa.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>The key to locate.</source>
          <target state="translated">La chiave da individuare.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Determines whether the read-only dictionary contains an element that has the specified key.</source>
          <target state="translated">Determina se il dizionario di sola lettura contiene un elemento con la chiave specificata.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the read-only dictionary contains an element that has the specified key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il dizionario di sola lettura contiene un elemento con la chiave specificata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in how they determine the equality of objects; for example, the class that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> might use the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property, or it might implement the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> method.</source>
          <target state="translated">Le implementazioni possono variare nella modalità con cui viene determinata l'uguaglianza degli oggetti; ad esempio, la classe che implementa <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> potrebbe utilizzare la proprietà <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> oppure implementare il metodo <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Le implementazioni possono variare nel fatto che consentano <ph id="ph1">`key`</ph> da <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The key to locate.</source>
          <target state="translated">La chiave da individuare.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Gets the element that has the specified key in the read-only dictionary.</source>
          <target state="translated">Ottiene l'elemento che dispone della chiave specificata nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The element that has the specified key in the read-only dictionary.</source>
          <target state="translated">L'elemento che dispone della chiave specificata nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>This property lets you access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Questa proprietà consente di accedere a un elemento specifico della raccolta utilizzando la sintassi seguente: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Implementations can vary in how they determine the equality of objects: for example, the class that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> might use the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property, or it might implement the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> method.</source>
          <target state="translated">Le implementazioni possono variare nella modalità con cui viene determinata l'uguaglianza degli oggetti: ad esempio, la classe che implementa <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> potrebbe utilizzare la proprietà <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> oppure implementare il metodo <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Le implementazioni possono variare nel fatto che consentano <ph id="ph1">`key`</ph> da <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not found.</source>
          <target state="translated">La proprietà viene recuperata e <ph id="ph1">&lt;paramref name="key" /&gt;</ph> non viene trovato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>Gets an enumerable collection that contains the keys in the read-only dictionary.</source>
          <target state="translated">Ottiene una raccolta enumerabile contenente le chiavi nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>An enumerable collection that contains the keys in the read-only dictionary.</source>
          <target state="translated">Raccolta enumerabile contenente le chiavi nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>The order of the keys in the enumerable collection is unspecified, but the implementation must guarantee that the keys are in the same order as the corresponding values in the enumerable collection that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">L'ordine delle chiavi nella raccolta enumerabile non è specificato, ma l'implementazione deve garantire che l'ordine di tali chiavi corrisponda a quello dei valori corrispondenti nella raccolta enumerabile restituita dalla proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>The key to locate.</source>
          <target state="translated">La chiave da individuare.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Quando il metodo termina, se la chiave specificata viene trovata, viene restituito il valore associato alla chiave; in caso contrario viene restituito il valore predefinito per il tipo del parametro <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value that is associated with the specified key.</source>
          <target state="translated">Ottiene il valore associato alla chiave specificata.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object that implements the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /&gt;</ph> interface contains an element that has the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto che implementa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /&gt;</ph> contiene un elemento con la chiave specificata; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Questo metodo combina la funzionalità del <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A&gt;</ph> (metodo) e <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>: for example, 0 (zero) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Se la chiave non viene trovata, il parametro <ph id="ph1">`value`</ph> ottiene il valore predefinito per il tipo <ph id="ph2">`TValue`</ph>: ad esempio 0 (zero) per i tipi Integer, <ph id="ph3">`false`</ph> per i tipi Boolean e <ph id="ph4">`null`</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>Gets an enumerable collection that contains the values in the read-only dictionary.</source>
          <target state="translated">Ottiene una raccolta enumerabile contenente i valori nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>An enumerable collection that contains the values in the read-only dictionary.</source>
          <target state="translated">Raccolta enumerabile contenente i valori nel dizionario di sola lettura.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>The order of the values in the enumerable collection is unspecified, but the implementation must guarantee that the values are in the same order as the corresponding keys in the enumerable collection that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">L'ordine dei valori nella raccolta enumerabile non è specificato, ma l'implementazione deve garantire che l'ordine di tali valori corrisponda a quello delle chiavi corrispondenti nella raccolta enumerabile restituita dalla proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>