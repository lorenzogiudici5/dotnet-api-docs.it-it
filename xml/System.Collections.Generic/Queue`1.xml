<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Queue`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cebeb0b7922bbafddf862e85c219d44d0e681254.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cebeb0b7922bbafddf862e85c219d44d0e681254</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Specifies the type of elements in the queue.</source>
          <target state="translated">Specifica il tipo di elementi della coda.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Queue`1">
          <source>Represents a first-in, first-out collection of objects.</source>
          <target state="translated">Rappresenta una raccolta di oggetti FIFO (First-In First-Out).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>This class implements a generic queue as a circular array.</source>
          <target state="translated">Questa classe implementa una coda generica come matrice circolare.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Objects stored in a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> are inserted at one end and removed from the other.</source>
          <target state="translated">Gli oggetti archiviati in un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> vengono inseriti in un'entità finale e rimossi da altra.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</source>
          <target state="translated">Le code e stack sono utili quando è necessaria l'archiviazione temporanea per le informazioni; ovvero, quando si potrebbe desiderare di eliminare un elemento dopo aver recuperato il relativo valore.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> if you need to access the information in the same order that it is stored in the collection.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> se è necessario accedere alle informazioni nello stesso ordine in cui sono archiviate nella raccolta.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> if you need to access the information in reverse order.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> se è necessario accedere alle informazioni in ordine inverso.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> if you need to access the collection from multiple threads concurrently.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> se è necessario accedere alla raccolta da più thread contemporaneamente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Three main operations can be performed on a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> and its elements:</source>
          <target state="translated">Tre operazioni principali possono essere eseguite su un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> e i relativi elementi:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> adds an element to the end of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Aggiunge un elemento alla fine di <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> removes the oldest element from the start of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Rimuove l'elemento meno recente dall'inizio di <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> peek returns the oldest element that is at the start of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> but does not remove it from the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Peek restituisce l'elemento meno recente all'inizio del <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> , ma non rimuoverla dal <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> è il numero di elementi di <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">È possibile diminuire la capacità chiamando <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> accetta <ph id="ph2">`null`</ph> come tipi di un valore valido per riferimento e consente elementi duplicati.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Statici pubblici (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) di questo tipo sono thread-safe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">I membri di istanza non sono garantiti come thread-safe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> può supportare più lettori contemporaneamente, fino a quando non è possibile modificare la raccolta.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Anche in questo caso, l'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Queue`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class that is empty and has the default initial capacity.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> vuota e con capacità iniziale predefinita.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">È possibile diminuire la capacità chiamando <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The following code example demonstrates this constructor and several other methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato questo costruttore e diversi metodi della <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements are copied to the new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Raccolta i cui elementi sono copiati nel nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> che contiene gli elementi copiati dalla raccolta specificata e ha la capacità sufficiente per contenere il numero di elementi copiati.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">È possibile diminuire la capacità chiamando <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> in the same order they are read by the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> of the collection.</source>
          <target state="translated">Gli elementi vengono copiati nel <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> nello stesso ordine in cui vengono letti dal <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> della raccolta.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`collection`</ph>.</source>
          <target state="translated">Questo costruttore è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è il numero di elementi in <ph id="ph3">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The following code example demonstrates this constructor and several other methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato questo costruttore e diversi metodi della <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> can contain.</source>
          <target state="translated">Numero iniziale degli elementi che <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class that is empty and has the specified initial capacity.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> vuota e con capacità iniziale specificata.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">È possibile diminuire la capacità chiamando <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Questo costruttore è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Rimuove tutti gli oggetti da <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> è impostato su zero e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The capacity remains unchanged.</source>
          <target state="translated">La capacità rimane invariata.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, call <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">Per reimpostare la capacità del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, chiamare <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to the default capacity.</source>
          <target state="translated">L'eliminazione di un oggetto vuoto <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> imposta la capacità del <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> per la capacità predefinita.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica, inclusi il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto da individuare nella raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Il valore può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Determina se un elemento è incluso in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="item" /&gt;</ph> è presente in <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the queue.</source>
          <target state="translated">Questo metodo determina l'uguaglianza utilizzando l'operatore di confronto di uguaglianza predefinito <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> per <ph id="ph2">`T`</ph>, il tipo di valori nella coda.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica, inclusi il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">L'indicizzazione di <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve essere in base zero.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Indice in base zero in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale ha inizio la copia.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> elements to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">Copia gli elementi di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> in un oggetto <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionale esistente, partendo dall'indice della matrice specificata.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Gli elementi vengono copiati il <ph id="ph1">&lt;xref:System.Array&gt;</ph> nello stesso ordine in cui l'enumeratore scorre la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> di origine è maggiore dello spazio disponibile tra <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> e la fine dell'oggetto <ph id="ph3">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Ottiene il numero di elementi contenuti in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi contenuti in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can store.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> può archiviare.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> è il numero di elementi effettivamente contenuti nella <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">La capacità è sempre maggiore di o uguale a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> durante l'aggiunta di elementi supera la capacità, la capacità viene aumentata automaticamente la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The following code example demonstrates several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente illustra molte proprietà e metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica, inclusi il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>Removes and returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Consente di rimuovere e restituire l'oggetto all'inizio della <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The object that is removed from the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto rimosso dall'inizio della <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Questo metodo è analogo al metodo <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph>, ma <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> non modifica la <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>If type <ph id="ph1">`T`</ph> is a reference type, <ph id="ph2">`null`</ph> can be added to the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> as a value.</source>
          <target state="translated">Se tipo <ph id="ph1">`T`</ph> è un tipo riferimento, <ph id="ph2">`null`</ph> possono essere aggiunti al <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> come valore.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica, inclusi il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> is empty.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> è vuota.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto da aggiungere all'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Il valore può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un oggetto alla fine di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> è già pari alla capacità, la capacità del <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> viene aumentata automaticamente la riallocazione della matrice interna e gli elementi esistenti vengono copiati nella nuova matrice prima che venga aggiunto il nuovo elemento.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> is less than the capacity of the internal array, this method is an O(1) operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> è minore della capacità della matrice interna, questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Se la matrice interna deve essere riallocata per consentire il nuovo elemento, questo metodo diventa un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica, inclusi il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce un enumeratore che esegue l'iterazione di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1.Enumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1.Enumerator" /&gt;</ph> per l'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">In questa posizione, la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> è indefinita.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il metodo <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Non è possibile impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The following code example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class is enumerable.</source>
          <target state="translated">Esempio di codice seguente viene dimostrato che la <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> la classe generica.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++) is used to enumerate the queue.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione (<ph id="ph2">`For Each`</ph> in Visual Basic <ph id="ph3">`for each`</ph> in C++) viene utilizzato per enumerare la coda.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>Returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> without removing it.</source>
          <target state="translated">Restituisce l'oggetto all'inizio della <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> senza rimuoverlo.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto all'inizio della <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Questo metodo è analogo al metodo <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph>, ma <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> non modifica la <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>If type <ph id="ph1">`T`</ph> is a reference type, <ph id="ph2">`null`</ph> can be added to the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> as a value.</source>
          <target state="translated">Se tipo <ph id="ph1">`T`</ph> è un tipo riferimento, <ph id="ph2">`null`</ph> possono essere aggiunti al <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> come valore.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica, inclusi il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> is empty.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> è vuota.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> che può essere usato per eseguire l'iterazione della raccolta.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">In questa posizione, la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> è indefinita.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Non è possibile impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">L'indicizzazione di <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve essere in base zero.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Indice in base zero in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale ha inizio la copia.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Copia gli elementi di <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> in <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> a partire da un particolare indice <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Se il tipo di origine <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> non può essere eseguire automaticamente il cast al tipo della destinazione <ph id="ph2">`array`</ph>, le implementazioni non generica di <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> generare <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, mentre le implementazioni generiche generano <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è multidimensionale.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> non dispone di indicizzazione in base zero.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> di origine è maggiore dello spazio disponibile tra <ph id="ph2">&lt;paramref name="index" /&gt;</ph> e la fine dell'oggetto <ph id="ph3">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Non è possibile eseguire il cast automatico del tipo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> di origine al tipo dell'oggetto <ph id="ph2">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ottiene un valore che indica se l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> è sincronizzato (thread-safe).</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'accesso a <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> è sincronizzato (thread-safe); in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso a <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">La sincronizzazione è efficace solo se tutti i thread bloccano questo oggetto prima di accedere alla raccolta.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, questa proprietà restituisce sempre l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso a <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">La sincronizzazione è efficace solo se tutti i thread bloccano questo oggetto prima di accedere alla raccolta.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">Il codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> proprietà per c#, C++ e Visual Basic.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> che può essere usato per eseguire l'iterazione della raccolta.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Anche il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">In questa posizione, la proprietà <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> è indefinita.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Per impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sul primo elemento della raccolta, è possibile chiamare il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguito da <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> elements to a new array.</source>
          <target state="translated">Copia gli elementi di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> in una nuova matrice.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>A new array containing elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Nuova matrice contenente gli elementi copiati dalla <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is not modified.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> non viene modificato.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The order of the elements in the new array is the same as the order of the elements from the beginning of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to its end.</source>
          <target state="translated">L'ordine degli elementi nella nuova matrice è identico all'ordine degli elementi dall'inizio del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> alla fine.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi metodi del <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> classe generica, inclusi il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">L'esempio di codice crea una coda di stringhe con la capacità predefinita e utilizza il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> metodo per inserire cinque stringhe nella coda.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Vengono enumerati gli elementi della coda, che non cambia lo stato della coda.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per la prima stringa di rimozione dalla coda.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> metodo viene utilizzato per esaminare l'elemento successivo della coda e quindi la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> metodo viene utilizzato per rimuoverlo dalla coda.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> metodo viene utilizzato per creare una matrice e copiare gli elementi della coda, quindi la matrice viene passata per il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore che accetta <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creazione di una copia della coda.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Vengono visualizzati gli elementi della copia.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Due volte la dimensione della coda viene creata una matrice e <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> metodo viene utilizzato per copiare gli elementi della matrice a partire dal centro della matrice.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> costruttore viene utilizzato per creare una seconda copia della coda contenente tre elementi null all'inizio.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> metodo viene utilizzato per indicare che la stringa "4" è nella prima copia della coda, dopo il quale il <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo cancella la copia e <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> vengono visualizzate le proprietà che la coda è vuota.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>Sets the capacity to the actual number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, if that number is less than 90 percent of current capacity.</source>
          <target state="translated">Imposta la capacità sul numero effettivo di elementi contenuti nell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, se questo numero è inferiore al 90 per cento della capacità corrente.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Questo metodo può essere utilizzato per ridurre il sovraccarico della memoria di una raccolta se nessun nuovo elemento verrà aggiunto alla raccolta.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>The cost of reallocating and copying a large <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can be considerable, however, so the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> method does nothing if the list is at more than 90 percent of capacity.</source>
          <target state="translated">Il costo di riallocazione e copia di un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> può essere considerevole, tuttavia, pertanto la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> metodo non esegue alcuna operazione se l'elenco è in più del 90% della capacità.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>This avoids incurring a large reallocation cost for a relatively small gain.</source>
          <target state="translated">Questo evita di dover sostenere un costo di riallocazione elevato per un aumento di dimensioni relativamente ridotte.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> method.</source>
          <target state="translated">Per reimpostare un <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> lo stato iniziale, chiamare il metodo di <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> metodo prima di chiamare <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to the default capacity.</source>
          <target state="translated">L'eliminazione di un oggetto vuoto <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> imposta la capacità del <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> per la capacità predefinita.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>