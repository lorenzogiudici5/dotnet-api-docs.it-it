<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HashSet`1+Enumerator.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">037e736f-f76f-422a-bcb7-5d2d599f851d70425e23c399561d6de2efa258887a39d48f59b9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70425e23c399561d6de2efa258887a39d48f59b9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fc53860cd2661bb7bde6e4b2858fcda4ec4c889</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Enumerates the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Enumera gli elementi di un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">In questa posizione, la <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà non è definita.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator object instead.</source>
          <target state="translated">Non è possibile impostare <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> al primo elemento della raccolta è necessario creare invece un nuovo oggetto enumeratore.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> genera un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se la raccolta viene modificata tra la chiamata <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> (metodo) e ottenere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> restituisce l'elemento su cui è stata impostata, anche se l'enumeratore risulta già invalidato.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte nello spazio dei nomi <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The element in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection at the current position of the enumerator.</source>
          <target state="translated">Elemento della raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> in corrispondenza della posizione corrente dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the default value of type <ph id="ph2">`T`</ph> under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Restituisce il valore predefinito di tipo <ph id="ph2">`T`</ph> in presenza delle condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The enumerator is positioned before the first element of the collection.</source>
          <target state="translated">L'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>That happens after an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">Ciò si verifica dopo la creazione di un enumeratore o dopo il <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> metodo deve essere chiamato per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore del <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</source>
          <target state="translated">L'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, che indica la fine della raccolta e che l'enumeratore è posizionato dopo l'ultimo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>That behaviour is different for the non-generic <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> property.</source>
          <target state="translated">Che il comportamento è diverso per non generica <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The non-generic <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> property throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">Non generico <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> proprietà genera un' <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> se l'enumeratore è posizionato davanti al primo elemento della raccolta o dopo l'ultimo elemento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> non modifica la posizione dell'enumeratore e le chiamate successive a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> restituiscono lo stesso oggetto finché non <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">Se la raccolta viene modificata tra la chiamata <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> (metodo) e ottenere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> restituisce l'elemento su cui è stata impostata, anche se l'enumeratore viene invalidato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose">
          <source>Releases all resources used by a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph> object.</source>
          <target state="translated">Rilascia tutte le risorse utilizzate da un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>Advances the enumerator to the next element of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection.</source>
          <target state="translated">Sposta l'enumeratore all'elemento successivo della raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <ph id="ph2">&lt;see langword="false" /&gt;</ph> se l'enumeratore ha superato la fine della raccolta.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method advances the enumerator to the first element of the collection.</source>
          <target state="translated">Dopo aver creato un enumeratore, l'enumeratore è posizionato davanti al primo elemento nella raccolta e la prima chiamata al <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> metodo sposta l'enumeratore al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> genera un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">Se la raccolta viene modificata tra la chiamata <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> (metodo) e ottenere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> restituisce l'elemento su cui è stata impostata, anche se l'enumeratore viene invalidato.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La raccolta è stata modificata dopo la creazione dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The element in the collection at the current position of the enumerator, as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Elemento della raccolta nella posizione corrente dell'enumeratore, restituito come un oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> Genera un <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> in presenza delle condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The enumerator is positioned before the first element of the collection.</source>
          <target state="translated">L'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>That happens after an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">Ciò si verifica dopo la creazione di un enumeratore o dopo il <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> metodo deve essere chiamato per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore del <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</source>
          <target state="translated">L'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, che indica la fine della raccolta e che l'enumeratore è posizionato dopo l'ultimo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>That behaviour is different for the generic <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Che il comportamento è diverso per il modello generico <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The generic <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property returns the default value of type <ph id="ph2">`T`</ph> if the enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">Il tipo generico <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà restituisce il valore predefinito di tipo <ph id="ph2">`T`</ph> se l'enumeratore è posizionato davanti al primo elemento della raccolta o dopo l'ultimo elemento.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> non modifica la posizione dell'enumeratore e le chiamate successive a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> restituiscono lo stesso oggetto finché non <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">Se la raccolta viene modificata tra la chiamata <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> (metodo) e ottenere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> proprietà <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> restituisce l'elemento su cui è stata impostata, anche se l'enumeratore viene invalidato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph>, you must call the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph>, è necessario chiamare il <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> genera un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La raccolta è stata modificata dopo la creazione dell'enumeratore.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>