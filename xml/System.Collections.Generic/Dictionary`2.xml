<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Dictionary`2.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac501d6c6007f8665d72bc06b2e847e42b64121d593.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01d6c6007f8665d72bc06b2e847e42b64121d593</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">Tipo di chiavi nel dizionario.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">Tipo di valori nel dizionario.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Represents a collection of keys and values.</source>
          <target state="translated">Rappresenta una raccolta di chiavi e valori.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class provides a mapping from a set of keys to a set of values.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe generica fornisce un mapping da un set di chiavi a un set di valori.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Each addition to the dictionary consists of a value and its associated key.</source>
          <target state="translated">Ogni aggiunta al dizionario è costituita da un valore e dalla chiave associata corrispondente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Retrieving a value by using its key is very fast, close to O(1), because the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class is implemented as a hash table.</source>
          <target state="translated">Recupero di un valore tramite la relativa chiave è molto veloce, chiudere o (1), perché la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe viene implementata come una tabella hash.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The speed of retrieval depends on the quality of the hashing algorithm of the type specified for <ph id="ph1">`TKey`</ph>.</source>
          <target state="translated">La velocità di recupero dipende dalla qualità dell'algoritmo di hash del tipo specificato per <ph id="ph1">`TKey`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>As long as an object is used as a key in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, it must not change in any way that affects its hash value.</source>
          <target state="translated">Fino a quando un oggetto viene utilizzato come una chiave di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, non deve venire modificato in alcun modo che influisce sul relativo valore hash.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the dictionary's equality comparer.</source>
          <target state="translated">Ogni chiave in un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deve essere univoco in base al confronto di uguaglianza del dizionario.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Non può essere una chiave <ph id="ph1">`null`</ph>, ma un valore può essere, se il valore di tipo <ph id="ph2">`TValue`</ph> è un tipo riferimento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter; if you do not specify an implementation, the default generic equality comparer <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> is used.</source>
          <target state="translated">È possibile specificare un'implementazione del <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaccia generica con un costruttore che accetta un <ph id="ph2">`comparer`</ph> parametro; se non si specifica un'implementazione, l'operatore di confronto di uguaglianza predefinito <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> viene utilizzato.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa il <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaccia generica, operatore di uguaglianza predefinito utilizza tale implementazione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For example, you can use the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Ad esempio, è possibile utilizzare gli operatori di confronto tra maiuscole e minuscole di stringa forniti dalla <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> classe per creare dizionari con chiavi di stringa tra maiuscole e minuscole.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è il numero di elementi di <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Per grandi <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> oggetti, è possibile aumentare la capacità massima a 2 miliardi di elementi in un sistema a 64 bit impostando il <ph id="ph2">`enabled`</ph> attributo dell'elemento di configurazione per <ph id="ph3">`true`</ph> nell'ambiente di runtime.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For purposes of enumeration, each item in the dictionary is treated as a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Ai fini dell'enumerazione, ogni elemento nel dizionario viene trattato un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> struttura che rappresenta un valore e la relativa chiave.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The order in which the items are returned is undefined.</source>
          <target state="translated">L'ordine in cui vengono restituiti gli elementi è definito.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) restituisce un oggetto di tipo degli elementi nella raccolta.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Since the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a collection of keys and values, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è una raccolta di chiavi e valori, il tipo di elemento non è il tipo della chiave o il tipo del valore.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Instead, the element type is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> of the key type and the value type.</source>
          <target state="translated">Al contrario, il tipo di elemento è un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> del tipo di chiave e il tipo di valore.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For example:</source>
          <target state="translated">Ad esempio:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione è un wrapper per l'enumeratore, che consente solo di leggere dalla raccolta, non scrivere.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Poiché le chiavi possono essere ereditate e modificato il comportamento, non può essere garantirne l'univocità assoluta mediante confronti eseguiti utilizzando il <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">Esempio di codice seguente crea un oggetto vuoto <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> di stringhe con chiavi di stringa e utilizza il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo per aggiungere alcuni elementi.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Nell'esempio viene illustrato che il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo genera un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> durante il tentativo di aggiungere una chiave duplicata.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">Nell'esempio viene utilizzato il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà (l'indicizzatore in c#) per recuperare i valori, che illustra un <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> viene generata quando una chiave richiesta non è presente e che il valore associato alla chiave è possibile sostituire.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists before calling the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> un modo più efficiente per recuperare i valori, se un programma deve provare valori di chiave che non sono presenti nel dizionario e viene illustrato come utilizzare il metodo di <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> metodo per verificare se esiste una chiave prima di chiamare il <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">Nell'esempio viene illustrato come enumerare le chiavi e valori nel dizionario e come enumerare le chiavi e valori da soli utilizzando il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> proprietà e <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Finally, the example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Infine, nell'esempio viene illustrato il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> può supportare più lettori contemporaneamente, fino a quando non è possibile modificare la raccolta.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Anche in questo caso, l'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</source>
          <target state="translated">In rari casi in cui un'enumerazione condivida accessi in scrittura, è necessario bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For thread-safe alternatives, see the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class or <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Per le alternative thread-safe, vedere la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Statici pubblici (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) di questo tipo sono thread-safe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.</source>
          <target state="translated">Inizializza una nuova istanza vuota della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, con capacità iniziale predefinita e che usa l'operatore di confronto di eguaglianza predefinito per il tipo di chiave.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer.</source>
          <target state="translated">Ogni chiave in un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deve essere univoco in base il confronto uguaglianze predefinito.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa il <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaccia generica, operatore di uguaglianza predefinito utilizza tale implementazione.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">In alternativa, è possibile specificare un'implementazione del <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaccia generica con un costruttore che accetta un <ph id="ph2">`comparer`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, usando un costruttore che specifichi la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">Esempio di codice seguente crea un oggetto vuoto <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> di stringhe con chiavi di stringa e utilizza il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo per aggiungere alcuni elementi.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Nell'esempio viene illustrato che il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo genera un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> durante il tentativo di aggiungere una chiave duplicata.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> i cui elementi sono copiati nel nuovo oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the default equality comparer for the key type.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> che contiene elementi copiati dall'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> specificata e che usa l'operatore di confronto uguaglianze predefinito per il tipo di chiave.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the default equality comparer.</source>
          <target state="translated">Ogni chiave in un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deve essere univoco in base il valore predefinito di confronto uguaglianze; allo stesso modo, ogni chiave nell'origine <ph id="ph2">`dictionary`</ph> deve essere univoca in base a operatore di uguaglianza predefinito.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The initial capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is large enough to contain all the elements in <ph id="ph2">`dictionary`</ph>.</source>
          <target state="translated">La capacità iniziale del nuovo <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è grande abbastanza da contenere tutti gli elementi <ph id="ph2">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa il <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaccia generica, operatore di uguaglianza predefinito utilizza tale implementazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">In alternativa, è possibile specificare un'implementazione del <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaccia generica con un costruttore che accetta un <ph id="ph2">`comparer`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`dictionary`</ph>.</source>
          <target state="translated">Questo costruttore è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è il numero di elementi in <ph id="ph3">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor to initialize a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with sorted content from another dictionary.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> costruttore per inizializzare un <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con contenuto di un altro dizionario ordinato.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> and populates it with data in random order, then passes the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, creating a <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> that is sorted.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> e popolarla con i dati in ordine casuale, quindi passa il <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> per il <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> costruttore, la creazione di un <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> che viene ordinato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> improves retrieval speed.</source>
          <target state="translated">Ciò è utile se è necessario creare un dizionario ordinato che a un certo punto diventa statico. copia di dati da un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> per un <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> migliora la velocità di recupero.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contiene una o più chiavi duplicate.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Implementazione di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> da usare per confrontare le chiavi oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> per usare l'oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> predefinito per il tipo di chiave.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza vuota della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, con la capacità iniziale predefinita e che usa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Utilizzare questo costruttore con gli operatori di confronto tra maiuscole e minuscole di stringa forniti dalla <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> classe per creare dizionari con chiavi di stringa tra maiuscole e minuscole.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">Ogni chiave in un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deve essere univoco in base all'operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`comparer`</ph> è <ph id="ph2">`null`</ph>, questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa il <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaccia generica, operatore di uguaglianza predefinito utilizza tale implementazione.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, usando un costruttore che specifichi la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with a case-insensitive equality comparer for the current culture.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con un operatore di confronto per le impostazioni cultura correnti.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">L'esempio aggiunge quattro elementi, alcune con chiavi minuscole e alcuni con chiavi di lettere maiuscole.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">Nell'esempio vengono quindi tenta di aggiungere un elemento con una chiave che differisce da una chiave esistente solo per i casi, intercetta l'eccezione risulta e visualizza un messaggio di errore.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Finally, the example displays the elements in the dictionary.</source>
          <target state="translated">Infine, l'esempio mostra gli elementi nel dizionario.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Numero iniziale degli elementi che <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.</source>
          <target state="translated">Inizializza una nuova istanza vuota della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, con capacità iniziale specificata e che usa l'operatore di confronto di eguaglianza predefinito per il tipo di chiave.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer.</source>
          <target state="translated">Ogni chiave in un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deve essere univoco in base il confronto uguaglianze predefinito.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that can be added to the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before resizing is necessary.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è il numero di elementi che possono essere aggiunti al <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> prima che sia necessario un ridimensionamento.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa il <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaccia generica, operatore di uguaglianza predefinito utilizza tale implementazione.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">In alternativa, è possibile specificare un'implementazione del <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaccia generica con un costruttore che accetta un <ph id="ph2">`comparer`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The following code example creates a dictionary with an initial capacity of 4 and populates it with 4 entries.</source>
          <target state="translated">Esempio di codice seguente crea un dizionario con una capacità iniziale pari a 4 e lo popola con 4 voci.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> i cui elementi sono copiati nel nuovo oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Implementazione di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> da usare per confrontare le chiavi oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> per usare l'oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> predefinito per il tipo di chiave.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the specified <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> che contiene gli elementi copiati dall'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> specificata e che usa l'interfaccia <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> indicata.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Utilizzare questo costruttore con gli operatori di confronto tra maiuscole e minuscole di stringa forniti dalla <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> classe per creare dizionari con chiavi di stringa tra maiuscole e minuscole.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the specified comparer.</source>
          <target state="translated">Ogni chiave in un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deve essere univoco in base alle specificato operatore di confronto; in modo analogo, ogni chiave nell'origine <ph id="ph2">`dictionary`</ph> deve essere univoca in base all'operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>For example, duplicate keys can occur if <ph id="ph1">`comparer`</ph> is one of the case-insensitive string comparers provided by the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class and <ph id="ph3">`dictionary`</ph> does not use a case-insensitive comparer key.</source>
          <target state="translated">Ad esempio, le chiavi duplicate possono verificarsi se <ph id="ph1">`comparer`</ph> è uno degli operatori di confronto tra maiuscole e minuscole di stringa forniti dal <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> classe e <ph id="ph3">`dictionary`</ph> non utilizza una chiave di confronto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is large enough to contain all the elements in <ph id="ph2">`dictionary`</ph>.</source>
          <target state="translated">La capacità iniziale del nuovo <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è grande abbastanza da contenere tutti gli elementi <ph id="ph2">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`comparer`</ph> è <ph id="ph2">`null`</ph>, questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa il <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaccia generica, operatore di uguaglianza predefinito utilizza tale implementazione.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`dictionary`</ph>.</source>
          <target state="translated">Questo costruttore è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è il numero di elementi in <ph id="ph3">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor to initialize a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with case-insensitive sorted content from another dictionary.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> costruttore per inizializzare un <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con contenuto ordinato senza distinzione di un altro dizionario.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> with a case-insensitive comparer and populates it with data in random order, then passes the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, along with a case-insensitive equality comparer, creating a <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> that is sorted.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> con un operatore di confronto tra maiuscole e minuscole e popolarla con i dati in ordine casuale, quindi passa il <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> per il <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> costruttore con un operatore di confronto, la creazione di un <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> che viene ordinato.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> improves retrieval speed.</source>
          <target state="translated">Ciò è utile se è necessario creare un dizionario ordinato che a un certo punto diventa statico. copia di dati da un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> per un <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> migliora la velocità di recupero.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>When you create a new dictionary with a case-insensitive comparer and populate it with entries from a dictionary that uses a case-sensitive comparer, as in this example, an exception occurs if the input dictionary has keys that differ only by case.</source>
          <target state="translated">Quando si crea un nuovo dizionario con un operatore di confronto tra maiuscole e minuscole e viene popolato con le voci da un dizionario che usa un operatore di confronto tra maiuscole e minuscole, come nel seguente esempio, si verifica un'eccezione se il dizionario di input contiene chiavi che differiscono solo per i casi.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contiene una o più chiavi duplicate.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Numero iniziale degli elementi che <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Implementazione di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> da usare per confrontare le chiavi oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> per usare l'oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> predefinito per il tipo di chiave.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza vuota della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, con la capacità iniziale specificata e che usa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Utilizzare questo costruttore con gli operatori di confronto tra maiuscole e minuscole di stringa forniti dalla <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> classe per creare dizionari con chiavi di stringa tra maiuscole e minuscole.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">Ogni chiave in un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deve essere univoco in base all'operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that can be added to the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before resizing is necessary.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è il numero di elementi che possono essere aggiunti al <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> prima che sia necessario un ridimensionamento.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`comparer`</ph> è <ph id="ph2">`null`</ph>, questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa il <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaccia generica, operatore di uguaglianza predefinito utilizza tale implementazione.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with an initial capacity of 5 and a case-insensitive equality comparer for the current culture.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con una capacità iniziale pari a 5 e un operatore di confronto per le impostazioni cultura correnti.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">L'esempio aggiunge quattro elementi, alcune con chiavi minuscole e alcuni con chiavi di lettere maiuscole.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">Nell'esempio vengono quindi tenta di aggiungere un elemento con una chiave che differisce da una chiave esistente solo per i casi, intercetta l'eccezione risulta e visualizza un messaggio di errore.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Finally, the example displays the elements in the dictionary.</source>
          <target state="translated">Infine, l'esempio mostra gli elementi nel dizionario.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> contenente le informazioni necessarie per serializzare l'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> contenente l'origine e la destinazione del flusso serializzato associato alla classe <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> con dati serializzati.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object transmitted over a stream.</source>
          <target state="translated">Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto trasmesso in un flusso.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>serializzazione XML e SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">Chiave dell'elemento da aggiungere.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">Valore dell'elemento da aggiungere.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Il valore può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">Aggiunge la chiave e il valore specificati al dizionario.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>; for example, <ph id="ph3">`myCollection[myKey] = myValue`</ph> (in Visual Basic, <ph id="ph4">`myCollection(myKey) = myValue`</ph>).</source>
          <target state="translated">È inoltre possibile utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, ad esempio <ph id="ph3">`myCollection[myKey] = myValue`</ph> (in Visual Basic <ph id="ph4">`myCollection(myKey) = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Tuttavia, se la chiave specificata esiste già nel <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, impostando il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà sovrascrive il vecchio valore.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an exception if a value with the specified key already exists.</source>
          <target state="translated">Al contrario, il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo genera un'eccezione se un valore con la chiave specificata esiste già.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property value already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> valore della proprietà è già pari alla capacità, la capacità del <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> viene aumentata automaticamente la riallocazione della matrice interna e gli elementi esistenti vengono copiati nella nuova matrice prima che venga aggiunto il nuovo elemento.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Non può essere una chiave <ph id="ph1">`null`</ph>, ma un valore può essere, se <ph id="ph2">`TValue`</ph> è un tipo riferimento.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> is less than the capacity, this method approaches an O(1) operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> è minore della capacità, questo metodo si avvicina a un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Se è necessario aumentare la capacità per contenere il nuovo elemento, questo metodo diventa un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">Esempio di codice seguente crea un oggetto vuoto <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> di stringhe con chiavi di stringa e utilizza il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo per aggiungere alcuni elementi.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Nell'esempio viene illustrato che il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo genera un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> durante il tentativo di aggiungere una chiave duplicata.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">In <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> è già presente un elemento con la stessa chiave.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>Removes all keys and values from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Rimuove tutte le chiavi e i valori della raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property is set to 0, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> è impostata su 0 e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>The capacity remains unchanged.</source>
          <target state="translated">La capacità rimane invariata.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the capacity of the dictionary.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è la capacità del dizionario.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> that is used to determine equality of keys for the dictionary.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, che viene usato per determinare l'uguaglianza delle chiavi per il dizionario.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface implementation that is used to determine equality of keys for the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> and to provide hash values for the keys.</source>
          <target state="translated">Implementazione dell'interfaccia generica <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> che viene usata per determinare l'uguaglianza fra chiavi del dizionario <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> corrente e per fornire i valori hash delle chiavi.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> richiede un'implementazione di uguaglianza per determinare se le chiavi sono uguali.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter; if you do not specify one, the default generic equality comparer <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> is used.</source>
          <target state="translated">È possibile specificare un'implementazione del <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaccia generica con un costruttore che accetta un <ph id="ph2">`comparer`</ph> parametro; se non si specifica uno, l'operatore di confronto di uguaglianza predefinito <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> viene utilizzato.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Chiave da individuare in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains the specified key.</source>
          <target state="translated">Determina se la raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene la chiave specificata.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un elemento con la chiave specificata; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Questo metodo presenta un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> metodo per verificare se esiste una chiave prima di chiamare il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</source>
          <target state="translated">Viene inoltre illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> metodo per recuperare valori che è un modo efficiente per recuperare i valori quando un programma prova spesso chiavi che non sono presenti nel dizionario.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>Finally, it shows the least efficient way to test whether keys exist, by using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Infine, viene illustrato il modo meno efficiente per verificare se esistono chiavi, tramite il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà (l'indicizzatore in c#).</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe (<ph id="ph2">`openWith`</ph> è il nome del dizionario utilizzato in questo esempio).</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Valore da individuare in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Il valore può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Stabilisce se <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un valore specifico.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un elemento con il valore specificato; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`TValue`</ph>, the type of values in the dictionary.</source>
          <target state="translated">Questo metodo determina l'uguaglianza utilizzando l'operatore di confronto di uguaglianza predefinito <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> per <ph id="ph2">`TValue`</ph>, il tipo di valori nel dizionario.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, il tempo medio di esecuzione è proporzionale al <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ottiene il numero di coppie chiave/valore contenute in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Numero di coppie chiave/valore contenute in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> can store.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> può archiviare.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> proprietà è il numero di elementi effettivamente contenuti nella <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">La capacità è sempre maggiore di o uguale a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> durante l'aggiunta di elementi supera la capacità, la capacità viene aumentata automaticamente la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Restituisce un enumeratore che esegue l'iterazione di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /&gt;</ph> structure for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /&gt;</ph> della raccolta <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Ai fini dell'enumerazione, ogni elemento è un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> struttura che rappresenta un valore e la relativa chiave.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">In questa posizione, la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> proprietà non è definita.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is accessed; the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Per prestazioni ottimali, l'enumeratore restituito da questa proprietà non genera un'eccezione se è posizionato davanti al primo elemento o dopo l'ultimo elemento e <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> si accede alla proprietà; il valore della <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> proprietà non è definita.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property returns the same element until the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> method is called.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> proprietà restituisce lo stesso elemento fino a quando il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Non è possibile impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte nello spazio dei nomi <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> che contiene le informazioni necessarie a serializzare l'istanza di <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza della raccolta <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Implementa l'interfaccia <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> e restituisce i dati necessari a serializzare l'istanza di <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">per fornire servizi di serializzazione.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> azione di sicurezza: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The key of the value to get or set.</source>
          <target state="translated">Chiave del valore da ottenere o impostare.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">Ottiene o imposta il valore associato alla chiave specificata.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The value associated with the specified key.</source>
          <target state="translated">Valore associato alla chiave specificata.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>If the specified key is not found, a get operation throws a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph>, and a set operation creates a new element with the specified key.</source>
          <target state="translated">Se la chiave specificata non viene trovata, un'operazione Get genera un'eccezione <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph>, mentre un'operazione Set crea una nuovo elemento con la chiave specificata.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi c# seguente: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">È inoltre possibile utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>When you set the property value, if the key is in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the value associated with that key is replaced by the assigned value.</source>
          <target state="translated">Quando si imposta il valore della proprietà se la chiave di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, il valore associato a tale chiave viene sostituito dal valore assegnato.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>If the key is not in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the key and value are added to the dictionary.</source>
          <target state="translated">Se la chiave non è nel <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, la chiave e il valore vengono aggiunti al dizionario.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Al contrario, il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> metodo non modifica gli elementi esistenti.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Non può essere una chiave <ph id="ph1">`null`</ph>, ma un valore può essere, se il valore di tipo <ph id="ph2">`TValue`</ph> è un tipo riferimento.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">In Visual Basic la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Getting or setting the value of this property approaches an O(1) operation.</source>
          <target state="translated">Ottenere o impostare il valore di questa proprietà si avvicina a un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà (l'indicizzatore in c#) per recuperare i valori, che illustra un <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> viene generata quando una chiave richiesta non è presente e che il valore associato alla chiave è possibile sostituire.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> metodo in modo più efficiente per recuperare i valori, se un programma deve provare valori di chiave che non sono presenti nel dizionario.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source><ph id="ph1">`openWith`</ph> is the name of the Dictionary used in this example.</source>
          <target state="translated"><ph id="ph1">`openWith`</ph> è il nome del dizionario utilizzato in questo esempio.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection.</source>
          <target state="translated">Durante il recupero della proprietà, la chiave indicata nel parametro <ph id="ph1">&lt;paramref name="key" /&gt;</ph> non è stata trovata nella raccolta.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Gets a collection containing the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ottiene una raccolta contenente le chiavi della classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph> contenente le chiavi della classe <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The order of the keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">L'ordine delle chiavi nel <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> non è specificato, ma è stesso ordine dei valori associati nel <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> restituito dal <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> non è una copia statica, bensì il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> fa riferimento alle chiavi nell'originale <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph>.</source>
          <target state="translated">Di conseguenza, le modifiche per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continueranno a essere apportate nel <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The following code example shows how to enumerate the keys in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come enumerare le chiavi del dizionario tramite il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> , proprietà e come enumerare le chiavi e valori nel dizionario.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>This code is part of a larger example that can be compiled and executed (<ph id="ph1">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Questo codice è parte di un esempio più grande che può essere compilato ed eseguito (<ph id="ph1">`openWith`</ph> è il nome del dizionario utilizzato in questo esempio).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Origine dell'evento di deserializzazione.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">Implementa l'interfaccia <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> e genera l'evento di deserializzazione quando la deserializzazione è completa.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance is invalid.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> associato all'istanza corrente di <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> non è valido.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">Chiave dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>Removes the value with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Rimuove il valore con la chiave specificata dalla raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elemento viene trovato e rimosso; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce anche <ph id="ph1">&lt;see langword="false" /&gt;</ph> se <ph id="ph2">&lt;paramref name="key" /&gt;</ph> non viene trovato in <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> remains unchanged.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> non contiene un elemento con la chiave specificata, il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> rimane invariato.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>No exception is thrown.</source>
          <target state="translated">Non viene generata alcuna eccezione.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Questo metodo presenta un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>The following code example shows how to remove a key/value pair from a dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come rimuovere una coppia chiave/valore da un dizionario tramite il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe (<ph id="ph2">`openWith`</ph> è il nome del dizionario utilizzato in questo esempio).</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matrice deve avere un'indicizzazione in base zero.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Indice in base zero in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale ha inizio la copia.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> to an array, starting at the specified array index.</source>
          <target state="translated">Copia gli elementi dell'interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> in una matrice, iniziando dall'indice di matrice specificato.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Each element copied from a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Ogni elemento copiato da un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> è un <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> struttura che rappresenta un valore e la relativa chiave.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the nongeneric implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw an <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Se il tipo di origine <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> non può essere eseguire automaticamente il cast al tipo della destinazione <ph id="ph2">`array`</ph>, le implementazioni non generiche di <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> generano un <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, mentre le implementazioni generiche generano un <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è multidimensionale.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> non dispone di indicizzazione in base zero.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> di origine è maggiore dello spazio disponibile tra <ph id="ph2">&lt;paramref name="index" /&gt;</ph> e la fine dell'oggetto <ph id="ph3">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Non è possibile eseguire il cast automatico del tipo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> di origine al tipo dell'oggetto <ph id="ph2">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ottiene un valore che indica se l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> è sincronizzato (thread-safe).</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'accesso a <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> è sincronizzato (thread-safe); in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte nello spazio dei nomi <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che può causare l'enumeratore generare un'eccezione.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> proprietà restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso al <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">La sincronizzazione è efficace solo se tutti i thread di bloccano l'oggetto prima di accedere alla raccolta.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte nello spazio dei nomi <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> proprietà restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso al <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">La sincronizzazione è efficace solo se tutti i thread di bloccano l'oggetto prima di accedere alla raccolta.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">Il codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> proprietà per c#, C++ e Visual Basic.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the key.</source>
          <target state="translated">Oggetto da usare come chiave.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the value.</source>
          <target state="translated">Oggetto da usare come valore.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">Aggiunge la chiave e il valore specificati al dizionario.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">È inoltre possibile utilizzare il <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario; ad esempio, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Tuttavia, se la chiave specificata esiste già nel dizionario, l'impostazione di <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> proprietà sovrascrive il valore precedente.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method throws an exception if the specified key already exists.</source>
          <target state="translated">Al contrario, il <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> metodo genera un'eccezione se la chiave specificata esiste già.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> is less than the capacity, this method approaches an O(1) operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> è minore della capacità, questo metodo si avvicina a un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Se la capacità deve essere incrementata per far posto al nuovo elemento, questo metodo diventa un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following code example shows how to access the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class through the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come accedere il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe tramite il <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">L'esempio di codice crea un oggetto vuoto <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> di stringhe con chiavi di stringa e utilizza il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo per aggiungere alcuni elementi.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</source>
          <target state="translated">Nell'esempio viene illustrato che il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo genera un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> durante il tentativo di aggiungere una chiave duplicata o quando viene fornita una chiave o il valore del tipo di dati non corretto.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example demonstrates the use of several other members of the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">L'esempio di codice illustra l'uso di diversi altri membri del <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Il tipo della chiave indicata nel parametro <ph id="ph1">&lt;paramref name="key" /&gt;</ph> non è assegnabile al tipo di chiave <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> dell'insieme <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph>, the type of values in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Il tipo del valore indicato nel parametro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> non è assegnabile al tipo di valore <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> dell'insieme <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>A value with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">nell'insieme <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> è già presente un valore con la stessa chiave.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Chiave da individuare in <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">Determina se <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contiene un elemento con la chiave specificata.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contiene un elemento con la chiave specificata; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method returns <ph id="ph1">`false`</ph> if <ph id="ph2">`key`</ph> is of a type that is not assignable to the key type <ph id="ph3">`TKey`</ph> of the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">`false`</ph> se <ph id="ph2">`key`</ph> è un tipo che non è assegnabile al tipo di chiave <ph id="ph3">`TKey`</ph> del <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Questo metodo presenta un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> metodo il <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfacciarsi con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The example demonstrates that the method returns <ph id="ph1">`false`</ph> if a key of the wrong data type is supplied.</source>
          <target state="translated">Nell'esempio viene illustrato che il metodo restituisce <ph id="ph1">`false`</ph> se viene fornita una chiave del tipo di dati non corretto.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> per <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> per l'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Ai fini dell'enumerazione, ogni elemento è un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> struttura che rappresenta un valore e la relativa chiave.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> metodo riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property is undefined.</source>
          <target state="translated">In questa posizione, la <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> proprietà non è definita.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property returns the same element until either the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> proprietà restituisce lo stesso elemento fino a quando non la <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Per impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> sul primo elemento della raccolta, è possibile chiamare il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguito da <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte nello spazio dei nomi <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The following code example shows how to enumerate the key/value pairs in the dictionary by using the <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++), which hides the use of the enumerator.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come enumerare le coppie chiave/valore nel dizionario mediante il <ph id="ph1">`foreach`</ph> istruzione (<ph id="ph2">`For Each`</ph> in Visual Basic <ph id="ph3">`for each`</ph> in C++), che nasconde l'utilizzo dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>In particular, note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">In particolare, si noti che l'enumeratore per il <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfaccia restituisce <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> oggetti anziché <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> ha dimensioni fisse.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> è di dimensioni fisse; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Una raccolta con dimensioni fisse non consente l'aggiunta o la rimozione di elementi dopo la sua creazione, ma consente la modifica degli elementi esistenti.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Una raccolta con una dimensione fissa è semplicemente una raccolta con un wrapper che impedisce l'aggiunta e rimozione di elementi. Pertanto, se vengono apportate modifiche alla raccolta sottostante, incluse l'aggiunta o la rimozione di elementi, la raccolta a dimensione fissa riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> è di sola lettura; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the value to get.</source>
          <target state="translated">Chiave del valore da ottenere.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the value with the specified key.</source>
          <target state="translated">Ottiene o imposta il valore con la chiave specificata.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The value associated with the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not in the dictionary or <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph5">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Valore associato alla chiave specificata o <ph id="ph1">&lt;see langword="null" /&gt;</ph> se <ph id="ph2">&lt;paramref name="key" /&gt;</ph> non è presente nel dizionario o se il tipo di <ph id="ph3">&lt;paramref name="key" /&gt;</ph> non può essere assegnato al tipo di chiave <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> di <ph id="ph5">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific value in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Questa proprietà consente di accedere a un valore specifico nella raccolta utilizzando la sintassi c# seguente: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">È inoltre possibile utilizzare il <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario; ad esempio, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Tuttavia, se la chiave specificata esiste già nel dizionario, l'impostazione di <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> proprietà sovrascrive il valore precedente.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Al contrario, il <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> metodo non modifica gli elementi esistenti.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property.</source>
          <target state="translated">Nel linguaggio c# viene utilizzata la <bpt id="p1">[</bpt>questo<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> (parola chiave) per definire gli indicizzatori anziché implementare la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">In Visual Basic la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Getting or setting the value of this property approaches an O(1) operation.</source>
          <target state="translated">Ottenere o impostare il valore di questa proprietà si avvicina a un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property (the indexer in C#) of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, and ways the property differs from the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> proprietà (l'indicizzatore in c#) del <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfacciarsi con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>e la proprietà le differenze tra la <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example shows that, like the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</source>
          <target state="translated">L'esempio mostra che, come il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> proprietà, il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> proprietà è possibile modificare il valore associato a una chiave esistente e può essere utilizzata per aggiungere una nuova coppia chiave/valore se la chiave specificata non è presente nel dizionario.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example also shows that unlike the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property does not throw an exception if <ph id="ph3">`key`</ph> is not in the dictionary, returning a null reference instead.</source>
          <target state="translated">L'esempio mostra anche che, a differenza di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> proprietà, il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> proprietà genera un'eccezione se <ph id="ph3">`key`</ph> non è presente nel dizionario, bensì restituisce un riferimento null.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Finally, the example demonstrates that getting the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property returns a null reference if <ph id="ph2">`key`</ph> is not the correct data type, and that setting the property throws an exception if <ph id="ph3">`key`</ph> is not the correct data type.</source>
          <target state="translated">Infine, nell'esempio viene illustrato il recupero di <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> proprietà restituisce un riferimento null se <ph id="ph2">`key`</ph> non corrisponde al tipo di dati corretto e che l'impostazione della proprietà genera un'eccezione se <ph id="ph3">`key`</ph> non corrisponde al tipo di dati corretto.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Viene assegnato un valore e il tipo di <ph id="ph1">&lt;paramref name="key" /&gt;</ph> non può essere assegnato al tipo di chiave <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> della classe<ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the value type <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Viene assegnato un valore e il tipo di <ph id="ph1">&lt;paramref name="value" /&gt;</ph> non può essere assegnato al tipo di valore <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> della classe<ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Ottiene <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> contenente le chiavi di <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> contenente le chiavi dell'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">L'ordine delle chiavi nell'oggetto restituito <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> non è specificato, ma è sicuramente identico all'ordine dei valori corrispondenti nel <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> restituito dal <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, to list the keys in the dictionary.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfacciarsi con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, per elencare le chiavi nel dizionario.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato come enumerare le coppie chiave/valore nel dizionario; Si noti che l'enumeratore per il <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfaccia restituisce <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> oggetti anziché <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Chiave dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Rimuove l'elemento con la chiave specificata da <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Questo metodo presenta un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> del <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfacciarsi con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Ottiene <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> contenente i valori in <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> contenente i valori dell'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The order of the values in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">L'ordine dei valori nell'oggetto restituito <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> non è specificato, ma è sicuramente identico all'ordine delle chiavi corrispondenti nel <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> restituito dal <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, to list the values in the dictionary.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfacciarsi con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>per ottenere l'elenco di valori nel dizionario.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato come enumerare le coppie chiave/valore nel dizionario; Si noti che l'enumeratore per il <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfaccia restituisce <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> oggetti anziché <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">L'esempio di codice fa parte di un esempio più esaustivo, incluso l'output, fornito per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Restituisce un enumeratore che consente di scorrere la raccolta.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> che può essere usato per eseguire l'iterazione della raccolta.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Ai fini dell'enumerazione, ogni elemento è un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> struttura che rappresenta un valore e la relativa chiave.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> metodo riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">In questa posizione, la <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> proprietà non è definita.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is accessed; the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Per prestazioni ottimali, l'enumeratore restituito da questa proprietà non genera un'eccezione se è posizionato davanti al primo elemento o dopo l'ultimo elemento e <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> si accede alla proprietà; il valore della <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> proprietà non è definita.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same element until either the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> proprietà restituisce lo stesso elemento fino a quando non la <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Per impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sul primo elemento della raccolta, è possibile chiamare il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguito da <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta, pertanto il processo di enumerazione di una raccolta non è di per sé thread-safe.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte nello spazio dei nomi <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>The key of the value to get.</source>
          <target state="translated">Chiave del valore da ottenere.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Quando termina, questo metodo restituisce il valore associato alla chiave specificata, se la chiave viene trovata; in caso contrario, restituisce il valore predefinito per il tipo del parametro <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">Ottiene il valore associato alla chiave specificata.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un elemento con la chiave specificata; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Questo metodo combina la funzionalità del <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> (metodo) e <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, then the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>; for example, 0 (zero) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Se la chiave non viene trovata, il parametro <ph id="ph1">`value`</ph> ottiene il valore predefinito per il tipo <ph id="ph2">`TValue`</ph>; ad esempio 0 (zero) per i tipi Integer, <ph id="ph3">`false`</ph> per i tipi Boolean e <ph id="ph4">`null`</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method if your code frequently attempts to access keys that are not in the dictionary.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> metodo se il codice è spesso tenta di accedere alle chiavi che non sono presenti nel dizionario.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Using this method is more efficient than catching the <ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> thrown by the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Questo metodo è più efficiente rilevamento il <ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> generata dal <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Questo metodo presenta un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</source>
          <target state="translated">Nell'esempio viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> metodo in modo più efficiente per recuperare i valori in un programma che prova spesso chiavi che non sono presenti nel dizionario.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>For contrast, the example also shows how the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</source>
          <target state="translated">Per contrasto, l'esempio mostra anche come <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> proprietà (l'indicizzatore in c#) genera eccezioni durante il tentativo di recupero chiavi inesistenti.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe (<ph id="ph2">`openWith`</ph> è il nome del dizionario utilizzato in questo esempio).</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Gets a collection containing the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ottiene una raccolta contenente i valori di <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /&gt;</ph> contenente i valori di <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> is unspecified, but it is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">L'ordine dei valori in <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> non è specificato, ma è lo stesso delle chiavi associate in <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> restituito dalla proprietà <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> non è una copia statica, bensì il <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> fa riferimento ai valori nell'originale <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph>.</source>
          <target state="translated">Di conseguenza, le modifiche per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continueranno a essere apportate nel <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Ottenere il valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>This code example shows how to enumerate the values in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">Questo esempio di codice viene illustrato come enumerare i valori nel dizionario usando il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> , proprietà e come enumerare le chiavi e valori nel dizionario.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> classe (<ph id="ph2">`openWith`</ph> è il nome del dizionario utilizzato in questo esempio).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>