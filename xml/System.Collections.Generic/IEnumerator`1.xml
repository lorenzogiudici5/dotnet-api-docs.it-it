<Type Name="IEnumerator&lt;T&gt;" FullName="System.Collections.Generic.IEnumerator&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b1382b0eba1aeb51c1b6bf143660c27af38a65c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713000" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerator&lt;out T&gt; : IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator`1&lt;+ T&gt; implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator(Of Out T)&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerator : IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type IEnumerator&lt;'T&gt; = interface&#xA;    interface IDisposable&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="6ce10-101">Tipo degli oggetti da enumerare.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ce10-101">The type of objects to enumerate.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="6ce10-102">Supporta una iterazione semplice in una raccolte generica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ce10-102">Supports a simple iteration over a generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce10-103"><xref:System.Collections.Generic.IEnumerator%601> è l'interfaccia di base per tutti gli enumeratori generici.</span><span class="sxs-lookup"><span data-stu-id="6ce10-103"><xref:System.Collections.Generic.IEnumerator%601> is the base interface for all generic enumerators.</span></span>  
  
 <span data-ttu-id="6ce10-104">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="6ce10-104">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="6ce10-105">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="6ce10-105">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="6ce10-106">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="6ce10-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="6ce10-107">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="6ce10-107">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="6ce10-108">In questa posizione, la proprietà <xref:System.Collections.Generic.IEnumerator%601.Current%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="6ce10-108">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="6ce10-109">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ce10-109">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="6ce10-110">La proprietà <xref:System.Collections.Generic.IEnumerator%601.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ce10-110"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="6ce10-111"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.Generic.IEnumerator%601.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="6ce10-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="6ce10-112">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="6ce10-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="6ce10-113">Quando l'enumeratore si trova in questa posizione, le chiamate successive alle <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="6ce10-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="6ce10-114">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituiti `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="6ce10-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="6ce10-115">Non è possibile impostare nuovamente la proprietà <xref:System.Collections.Generic.IEnumerator%601.Current%2A> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</span><span class="sxs-lookup"><span data-stu-id="6ce10-115">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="6ce10-116">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo è fornito per l'interoperabilità COM.</span><span class="sxs-lookup"><span data-stu-id="6ce10-116">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="6ce10-117">Non deve necessariamente essere implementata; al contrario, il responsabile dell'implementazione può semplicemente generare un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="6ce10-117">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="6ce10-118">Tuttavia, se si sceglie di eseguire questa operazione, assicurarsi che nessun chiamanti si basano sul <xref:System.Collections.IEnumerator.Reset%2A> funzionalità.</span><span class="sxs-lookup"><span data-stu-id="6ce10-118">However, if you choose to do this, you should make sure no callers are relying on the <xref:System.Collections.IEnumerator.Reset%2A> functionality.</span></span>  
  
 <span data-ttu-id="6ce10-119">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, non è definito il comportamento dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="6ce10-119">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="6ce10-120">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="6ce10-120">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="6ce10-121">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="6ce10-121">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="6ce10-122">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="6ce10-122">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="6ce10-123">Le implementazioni predefinite di raccolte nello spazio dei nomi <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="6ce10-123">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ce10-124">Nell'esempio seguente viene illustrata un'implementazione del <xref:System.Collections.Generic.IEnumerator%601> interfaccia per una classe di raccolte di oggetti personalizzati.</span><span class="sxs-lookup"><span data-stu-id="6ce10-124">The following example shows an implementation of the <xref:System.Collections.Generic.IEnumerator%601> interface for a collection class of custom objects.</span></span> <span data-ttu-id="6ce10-125">L'oggetto personalizzato è un'istanza del tipo `Box`, e la classe di raccolta è `BoxCollection`.</span><span class="sxs-lookup"><span data-stu-id="6ce10-125">The custom object is an instance of the type `Box`, and the collection class is `BoxCollection`.</span></span> <span data-ttu-id="6ce10-126">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Collections.Generic.ICollection%601> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="6ce10-126">This code example is part of a larger example provided for the <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxexamples/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxexamples/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="6ce10-127">
        <para>Implementazione di questa interfaccia richiede l'implementazione non generica <see cref="T:System.Collections.IEnumerator" /> interfaccia. Il <see cref="M:System.Collections.IEnumerator.MoveNext" /> e <see cref="M:System.Collections.IEnumerator.Reset" /> metodi non dipendono da <typeparamref name="T" />e vengono visualizzati solo sull'interfaccia non generica. Il <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> proprietà viene visualizzato in entrambe le interfacce e può restituire tipi diversi. Implementare il metodo non generico <see cref="P:System.Collections.IEnumerator.Current" /> proprietà come un'implementazione esplicita dell'interfaccia. In questo modo qualsiasi consumer dell'interfaccia non generica utilizzare l'interfaccia generica.  Inoltre, <see cref="T:System.Collections.Generic.IEnumerator`1" /> implementa <see cref="T:System.IDisposable" />, che è necessario implementare la <see cref="M:System.IDisposable.Dispose" /> metodo. In questo modo è possibile chiudere le connessioni di database o rilasciare gli handle di file o operazioni simili, quando si usa altre risorse. Se non sono disponibili risorse aggiuntive per eliminarlo, fornire un oggetto vuoto <see cref="M:System.IDisposable.Dispose" /> implementazione.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="6ce10-127">
          <para>Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface. The <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="M:System.Collections.IEnumerator.Reset" /> methods do not depend on <typeparamref name="T" />, and appear only on the nongeneric interface. The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types. Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation. This allows any consumer of the nongeneric interface to consume the generic interface.  In addition, <see cref="T:System.Collections.Generic.IEnumerator`1" /> implements <see cref="T:System.IDisposable" />, which requires you to implement the <see cref="M:System.IDisposable.Dispose" /> method. This enables you to close database connections or release file handles or similar operations when using other resources. If there are no additional resources to dispose of, provide an empty <see cref="M:System.IDisposable.Dispose" /> implementation.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IEnumerator`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="F#" Value="member this.Current : 'T" Usage="System.Collections.Generic.IEnumerator&lt;'T&gt;.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ce10-128">Ottiene l'elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ce10-128">Gets the element in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ce10-129">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ce10-129">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce10-130"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> non è definito in presenza delle condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="6ce10-130"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="6ce10-131">L'enumeratore è posizionato prima del primo elemento nella raccolta, subito dopo la creazione dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="6ce10-131">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="6ce10-132"><xref:System.Collections.IEnumerator.MoveNext%2A> deve essere chiamato per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ce10-132"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
-   <span data-ttu-id="6ce10-133">L'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, che indica la fine della raccolta.</span><span class="sxs-lookup"><span data-stu-id="6ce10-133">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="6ce10-134">L'enumeratore viene invalidato a causa di modifiche apportate nella raccolta, ad esempio aggiunta, modifica o eliminazione di elementi.</span><span class="sxs-lookup"><span data-stu-id="6ce10-134">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="6ce10-135">La proprietà <xref:System.Collections.Generic.IEnumerator%601.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ce10-135"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="6ce10-136"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.Generic.IEnumerator%601.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="6ce10-136"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6ce10-137">
            <para>Implementazione di questa interfaccia richiede l'implementazione non generica <see cref="T:System.Collections.IEnumerator" /> interfaccia. Il <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> proprietà viene visualizzato in entrambe le interfacce e può restituire tipi diversi. Implementare il metodo non generico <see cref="P:System.Collections.IEnumerator.Current" /> proprietà come un'implementazione esplicita dell'interfaccia. In questo modo qualsiasi consumer dell'interfaccia non generica utilizzare l'interfaccia generica.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6ce10-137">
              <para>Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface. The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types. Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation. This allows any consumer of the nongeneric interface to consume the generic interface.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
  </Members>
</Type>