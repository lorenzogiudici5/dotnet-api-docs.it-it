<Type Name="SynchronizedCollection&lt;T&gt;" FullName="System.Collections.Generic.SynchronizedCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class SynchronizedCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SynchronizedCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedCollection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SynchronizedCollection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="cf386-101">Tipo di oggetto contenuto come elementi nella raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-101">The type of object contained as items in the thread-safe collection.</span></span></typeparam>
    <summary><span data-ttu-id="cf386-102">Fornisce una raccolta thread-safe contenente oggetti di un tipo specificato dal parametro generico come elementi.</span><span class="sxs-lookup"><span data-stu-id="cf386-102">Provides a thread-safe collection that contains objects of a type specified by the generic parameter as elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-103">La raccolta <xref:System.Collections.Generic.SynchronizedCollection%601> archivia i dati in un contenitore <xref:System.Collections.Generic.List%601> e fornisce un oggetto che può essere impostato e utilizzato per sincronizzare l'accesso alla raccolta in modo da renderlo thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-103">The <xref:System.Collections.Generic.SynchronizedCollection%601> stores data in a <xref:System.Collections.Generic.List%601> container and provides an object that can be set and used to synchronize access to the collection so that it is thread-safe.</span></span> <span data-ttu-id="cf386-104">Il contenitore <xref:System.Collections.Generic.IList%601> può essere recuperato utilizzando il metodo <xref:System.Collections.Generic.SynchronizedCollection%601.Items%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf386-104">The <xref:System.Collections.Generic.IList%601> container can be recovered using the <xref:System.Collections.Generic.SynchronizedCollection%601.Items%2A> method.</span></span> <span data-ttu-id="cf386-105">L'oggetto sincronizzato può essere recuperato utilizzando la proprietà <xref:System.Collections.Generic.SynchronizedCollection%601.SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf386-105">The synchronized object can be recovered using the <xref:System.Collections.Generic.SynchronizedCollection%601.SyncRoot%2A> property.</span></span> <span data-ttu-id="cf386-106">Può essere impostato soltanto utilizzando uno dei costruttori che accettano il parametro `syncRoot`.</span><span class="sxs-lookup"><span data-stu-id="cf386-106">It can only be set using one of the constructors that take the `syncRoot` parameter.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf386-107">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SynchronizedCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-107">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf386-108">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SynchronizedCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-108">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="syncRoot"><span data-ttu-id="cf386-109">Oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-109">The object used to synchronize access the thread-safe collection.</span></span></param>
        <summary><span data-ttu-id="cf386-110">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> con l'oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-110">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class with the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-111">Se vengono create più istanze di <xref:System.Collections.Generic.SynchronizedCollection%601> utilizzando lo stesso parametro `syncRoot`, l'accesso sarà protetto in tutte le istanze.</span><span class="sxs-lookup"><span data-stu-id="cf386-111">If multiple instances of the <xref:System.Collections.Generic.SynchronizedCollection%601> are created using the same `syncRoot`, then access is protected across all instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf386-112"><paramref name="syncRoot" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-112"><paramref name="syncRoot" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, System.Collections.Generic.IEnumerable&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="syncRoot"><span data-ttu-id="cf386-113">Oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-113">The object used to synchronize access to the thread-safe collection.</span></span></param>
        <param name="list"><span data-ttu-id="cf386-114">Raccolta di elementi <see cref="T:System.Collections.Generic.IEnumerable`1" /> utilizzata per inizializzare la raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-114">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe collection.</span></span></param>
        <summary><span data-ttu-id="cf386-115">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> da un elenco di elementi enumerabile specificato e con l'oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-115">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf386-116"><paramref name="syncRoot" /> o <paramref name="list" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-116"><paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, params T[] list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, !T[] list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, ParamArray list As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, ... cli::array &lt;T&gt; ^ list);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="syncRoot"><span data-ttu-id="cf386-117">Oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-117">The object used to synchronize access the thread-safe collection.</span></span></param>
        <param name="list"><span data-ttu-id="cf386-118">Oggetto <see cref="T:System.Array" /> di elementi di tipo <c>T</c> usato per inizializzare la raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-118">The <see cref="T:System.Array" /> of type <c>T</c> elements used to initialize the thread-safe collection.</span></span></param>
        <summary><span data-ttu-id="cf386-119">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> da una matrice di elementi specificata e con l'oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-119">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf386-120"><paramref name="syncRoot" /> o <paramref name="list" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-120"><paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, System.Collections.Generic.List&lt;T&gt; list, bool makeCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.List`1&lt;!T&gt; list, bool makeCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.List{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As List(Of T), makeCopy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, System::Collections::Generic::List&lt;T&gt; ^ list, bool makeCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" />
        <Parameter Name="makeCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="list">To be added.</param>
        <param name="makeCopy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cf386-121">Elemento da aggiungere alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-121">The element to be added to the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-122">Aggiunge un elemento alla raccolta thread-safe di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="cf386-122">Adds an item to the thread-safe, read-only collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf386-123">Il valore impostato è <see langword="null" /> o presenta un tipo generico <paramref name="T" /> non adatto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-123">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf386-124">Rimuove tutti gli elementi dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-124">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected virtual void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf386-125">Rimuove tutti gli elementi dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-125">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cf386-126">Oggetto da individuare nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-126">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-127">Determina se la raccolta contiene un elemento con un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="cf386-127">Determines whether the collection contains an element with a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="cf386-128"><see langword="true" /> se il valore dell'elemento viene individuato nella raccolta, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-128"><see langword="true" /> if the element value is found in the collection; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf386-129">Il valore impostato è <see langword="null" /> o presenta un tipo generico <paramref name="T" /> non adatto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-129">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cf386-130">Oggetto <see cref="T:System.Array" /> di destinazione per gli elementi di tipo <c>T</c> copiati dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-130">The destination <see cref="T:System.Array" /> for the elements of type <c>T</c> copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="cf386-131">Indice in base zero nella matrice in corrispondenza del quale ha inizio la copia.</span><span class="sxs-lookup"><span data-stu-id="cf386-131">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="cf386-132">Copia gli elementi della raccolta in una matrice specificata, a partire da un indice particolare.</span><span class="sxs-lookup"><span data-stu-id="cf386-132">Copies the elements of the collection to a specified array, starting at a particular index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-133">Ottiene il numero di elementi contenuti nella raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-133">Gets the number of elements contained in the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="cf386-134">Numero di elementi contenuti nella raccolta thread-safe di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="cf386-134">The number of elements contained in the thread-safe, read-only collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf386-135">Restituisce un enumeratore che scorre la raccolta sincronizzata.</span><span class="sxs-lookup"><span data-stu-id="cf386-135">Returns an enumerator that iterates through the synchronized collection.</span></span></summary>
        <returns><span data-ttu-id="cf386-136">Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> per oggetti del tipo archiviato nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-136">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cf386-137">Rimuove tutti gli elementi dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-137">Removes all items from the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-138">Restituisce l'indice della prima occorrenza di un valore incluso nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-138">Returns the index of the first occurrence of a value in the collection.</span></span></summary>
        <returns><span data-ttu-id="cf386-139">Indice in base zero della prima occorrenza del valore nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-139">The zero-based index of the first occurrence of the value in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf386-140">Il valore impostato è <see langword="null" /> o presenta un tipo generico <paramref name="T" /> non adatto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-140">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-141">Indice in base zero dell'elemento da recuperare dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-141">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <param name="item"><span data-ttu-id="cf386-142">Oggetto da inserire come elemento nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-142">The object to be inserted into the collection as an element.</span></span></param>
        <summary><span data-ttu-id="cf386-143">Inserisce un elemento nella raccolta in corrispondenza di un indice specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-143">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-144">Se il parametro `index` è uguale al numero di elementi della raccolta, l'elemento viene aggiunto alla fine dell'elenco.</span><span class="sxs-lookup"><span data-stu-id="cf386-144">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="cf386-145">Se il parametro `index` è inferiore al numero di elementi della raccolta, gli elementi successivi al punto di inserimento dell'elemento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="cf386-145">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-146">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-146">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf386-147">Il valore impostato è <see langword="null" /> o presenta un tipo generico <paramref name="T" /> non adatto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-147">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected virtual void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-148">Indice in base zero della raccolta in cui deve essere inserito l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="cf386-148">The zero-based index of the collection where the object is to be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="cf386-149">Oggetto da inserire nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-149">The object to be inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-150">Inserisce un elemento nella raccolta in corrispondenza di un indice specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-150">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-151">Se il parametro `index` è uguale al numero di elementi della raccolta, l'elemento viene aggiunto alla fine dell'elenco.</span><span class="sxs-lookup"><span data-stu-id="cf386-151">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="cf386-152">Se il parametro `index` è inferiore al numero di elementi della raccolta, gli elementi successivi al punto di inserimento dell'elemento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="cf386-152">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-153">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-153">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf386-154">Il valore impostato è <see langword="null" /> o presenta un tipo generico <paramref name="T" /> non adatto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-154">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-155">Indice in base zero dell'elemento da recuperare dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-155">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-156">Ottiene un elemento dalla raccolta thread-safe con un indice specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-156">Gets an element from the thread-safe collection with a specified index.</span></span></summary>
        <value><span data-ttu-id="cf386-157">Oggetto della raccolta con <paramref name="index" /> corrispondente.</span><span class="sxs-lookup"><span data-stu-id="cf386-157">The object in the collection that has the specified <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-158">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-158">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::List&lt;T&gt; ^ Items { System::Collections::Generic::List&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-159">Ottiene l'elenco di elementi contenuti nella raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-159">Gets the list of elements contained in the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="cf386-160">Interfaccia <see cref="T:System.Collections.Generic.IList`1" /> di elementi contenuti nella raccolta thread-safe di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="cf386-160">The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cf386-161">Oggetto da rimuovere dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-161">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-162">Rimuove dalla raccolta la prima occorrenza dell'elemento specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-162">Removes the first occurrence of a specified item from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="cf386-163"><see langword="true" /> se l'elemento è stato rimosso correttamente dalla raccolta. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-163"><see langword="true" /> if item was successfully removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-164">Gli elementi della raccolta che seguono l'elemento rimosso vengono spostati verso l'alto per occupare la posizione vuota e i relativi indici vengono aggiornati di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="cf386-164">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-165">Indice in base zero dell'elemento da recuperare dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-165">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-166">Rimuove dalla raccolta un elemento in corrispondenza di un indice specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-166">Removes an item at a specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-167">Gli elementi della raccolta che seguono l'elemento rimosso vengono spostati verso l'alto per occupare la posizione vuota e i relativi indici vengono aggiornati di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="cf386-167">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-168">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-168">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-169">Indice in base zero dell'elemento da recuperare dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-169">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-170">Rimuove dalla raccolta l'elemento in corrispondenza di un indice <paramref name="index" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-170">Removes an item at a specified <paramref name="index" /> from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-171">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-171">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected virtual void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-172">Indice a base zero dell'oggetto da sostituire.</span><span class="sxs-lookup"><span data-stu-id="cf386-172">The zero-based index of the object to be replaced.</span></span></param>
        <param name="item"><span data-ttu-id="cf386-173">Oggetto da sostituire.</span><span class="sxs-lookup"><span data-stu-id="cf386-173">The object to replace</span></span></param>
        <summary><span data-ttu-id="cf386-174">Sostituisce l'elemento in corrispondenza di un indice specificato con un altro elemento.</span><span class="sxs-lookup"><span data-stu-id="cf386-174">Replaces the item at a specified index with another item.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-175">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-175">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-176">Ottiene l'oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-176">Gets the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="cf386-177">Oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-177">An object used to synchronize access to the thread-safe collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-178">Ottiene un valore che indica se la raccolta è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="cf386-178">Gets a value that indicates whether the collection is read only.</span></span></summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-179">Questa proprietà restituisce sempre `false` poiché la raccolta prevede l'aggiunta di elementi e non è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="cf386-179">This property always returns `false` because the collection can be added to and so is not read only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cf386-180">Oggetto <see cref="T:System.Array" /> di destinazione per gli elementi di tipo <c>T</c> copiati dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-180">The destination <see cref="T:System.Array" /> for the elements of type <c>T</c> copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="cf386-181">Indice in base zero nella matrice in corrispondenza del quale ha inizio la copia.</span><span class="sxs-lookup"><span data-stu-id="cf386-181">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="cf386-182">Copia gli elementi della raccolta in una matrice specificata, a partire da un indice particolare.</span><span class="sxs-lookup"><span data-stu-id="cf386-182">Copies the elements of the collection to a specified array, starting at a particular index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-183">Ottiene un valore che indica se la raccolta è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-183">Gets a value that indicates whether the collection is thread safe.</span></span></summary>
        <value>
          <see langword="true" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-184">Questa proprietà restituisce sempre `true` perché la raccolta è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-184">This property always returns `true` because the collection is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-185">Ottiene l'oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-185">Gets the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="cf386-186">Oggetto utilizzato per sincronizzare l'accesso alla raccolta thread-safe.</span><span class="sxs-lookup"><span data-stu-id="cf386-186">An object used to synchronize access to the thread-safe collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-187">Il valore dell'oggetto `syncRoot` può essere impostato quando si crea la raccolta thread-safe utilizzando il costruttore <xref:System.Collections.Generic.SynchronizedCollection%601.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="cf386-187">The value of this `syncRoot` object can be set when creating the thread-safe collection using the <xref:System.Collections.Generic.SynchronizedCollection%601.%23ctor%28System.Object%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf386-188">Restituisce un enumeratore che scorre la raccolta sincronizzata.</span><span class="sxs-lookup"><span data-stu-id="cf386-188">Returns an enumerator that iterates through the synchronized collection.</span></span></summary>
        <returns><span data-ttu-id="cf386-189">Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> per oggetti del tipo archiviato nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-189">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf386-190">Oggetto da aggiungere alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-190">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-191">Aggiunge un elemento alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-191">Adds an element to the collection.</span></span></summary>
        <returns><span data-ttu-id="cf386-192">Posizione in cui è stato inserito il nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="cf386-192">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-193">La posizione è fornita da un indice in base zero.</span><span class="sxs-lookup"><span data-stu-id="cf386-193">The position is given by a zero-based index.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf386-194">Oggetto da individuare nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-194">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-195">Determina se la raccolta contiene un elemento con un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="cf386-195">Determines whether the collection contains an element with a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="cf386-196">Restituisce <see langword="true" /> se nella raccolta viene individuato l'elemento <paramref name="value" />. In caso contrario, restituisce <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf386-196"><see langword="true" /> if the element <paramref name="value" /> is found in the collection; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf386-197"><paramref name="value" /> non è un oggetto del tipo contenuto nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-197"><paramref name="value" /> is not an object of the type contained in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf386-198">Elemento della raccolta di cui viene determinato l'indice.</span><span class="sxs-lookup"><span data-stu-id="cf386-198">The element in the collection whose index is being determined.</span></span></param>
        <summary><span data-ttu-id="cf386-199">Determina l'indice in base zero di un elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-199">Determines the zero-based index of an element in the collection.</span></span></summary>
        <returns><span data-ttu-id="cf386-200">L'indice di <paramref name="value" /> se individuato nella raccolta. In caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cf386-200">The index of the <paramref name="value" /> if found in the collection; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-201">Indice in base zero in corrispondenza del quale deve essere inserito <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="cf386-201">The zero-based index at which <c>value</c> is to be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="cf386-202">Oggetto da inserire nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-202">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-203">Inserisce un oggetto nella raccolta in corrispondenza di un indice specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-203">Inserts an object into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-204">Se il parametro `index` è uguale al numero di elementi della raccolta, l'elemento viene aggiunto alla fine dell'elenco.</span><span class="sxs-lookup"><span data-stu-id="cf386-204">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="cf386-205">Se il parametro `index` è inferiore al numero di elementi della raccolta, gli elementi successivi al punto di inserimento dell'elemento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="cf386-205">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-206">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-206">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf386-207">Il parametro <paramref name="value" /> impostato è <see langword="null" /> o presenta un tipo generico <paramref name="T" /> non adatto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-207">The <paramref name="value" /> set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-208">Ottiene un valore che indica se la raccolta presenta dimensioni fisse.</span><span class="sxs-lookup"><span data-stu-id="cf386-208">Gets a value that indicates whether the collection is fixed in size.</span></span></summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-209">Questa proprietà restituisce `false` poiché la raccolta prevede l'aggiunta di elementi e pertanto non presenta dimensioni fisse.</span><span class="sxs-lookup"><span data-stu-id="cf386-209">This property returns `false` because the collection can be added to and so is not fixed in size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf386-210">Ottiene un valore che indica se la raccolta è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="cf386-210">Gets a value that indicates whether the collection is read only.</span></span></summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-211">Questa proprietà restituisce sempre `false` poiché la raccolta prevede l'aggiunta di elementi e non è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="cf386-211">This property always returns `false` because the collection can be added to and so is not read only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf386-212">Indice in base zero dell'elemento da recuperare dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-212">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-213">Ottiene o imposta l'elemento in corrispondenza di un indice in base zero specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-213">Gets or sets the item at a specified zero-based index.</span></span></summary>
        <value><span data-ttu-id="cf386-214">Elemento avente il parametro <paramref name="index" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="cf386-214">The item with the specified <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf386-215">Il valore impostato è <see langword="null" /> o presenta un tipo generico <paramref name="T" /> non adatto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-215">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf386-216">Il parametro <paramref name="index" /> specificato è minore di zero oppure maggiore del numero di elementi contenuti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-216">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf386-217">Oggetto da rimuovere dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="cf386-217">The object to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="cf386-218">Rimuove dalla raccolta la prima occorrenza di un oggetto specificato come elemento.</span><span class="sxs-lookup"><span data-stu-id="cf386-218">Removes the first occurrence of a specified object as an element from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf386-219">Gli elementi della raccolta che seguono l'elemento rimosso vengono spostati verso l'alto per occupare la posizione vuota e i relativi indici vengono aggiornati di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="cf386-219">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>