<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61e63626b0ffa63451d93d574b0dc718df93ae7a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="77d85-101">Tipo di oggetti da confrontare.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77d85-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="77d85-102">Fornisce una classe base per le implementazioni dell'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77d85-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d85-103">Derivare da questa classe per fornire un'implementazione personalizzata del <xref:System.Collections.Generic.IComparer%601> interfaccia per l'utilizzo con le classi di raccolta, ad esempio il <xref:System.Collections.Generic.SortedList%602> e <xref:System.Collections.Generic.SortedDictionary%602> classi generiche.</span><span class="sxs-lookup"><span data-stu-id="77d85-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="77d85-104">La differenza tra la derivazione da di <xref:System.Collections.Generic.Comparer%601> classe e l'implementazione di <xref:System.IComparable?displayProperty=nameWithType> interfaccia è come segue:</span><span class="sxs-lookup"><span data-stu-id="77d85-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="77d85-105">Per specificare la modalità di due oggetti devono essere confrontati per impostazione predefinita, implementare il <xref:System.IComparable?displayProperty=nameWithType> nella classe di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="77d85-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="77d85-106">In questo modo si garantisce che le operazioni di ordinamento utilizzerà il codice di confronto predefinito fornito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="77d85-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="77d85-107">Per definire un operatore di confronto da usare invece l'operatore di confronto, derivare la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="77d85-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="77d85-108">È quindi possibile utilizzare questo operatore di confronto nelle operazioni di ordinamento che accettano un parametro di un operatore di confronto.</span><span class="sxs-lookup"><span data-stu-id="77d85-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="77d85-109">L'oggetto restituito dal <xref:System.Collections.Generic.Comparer%601.Default%2A> proprietà Usa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica (`IComparable<T>` in c#, `IComparable(Of T)` in Visual Basic) per confrontare due oggetti.</span><span class="sxs-lookup"><span data-stu-id="77d85-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="77d85-110">Se tipo `T` non implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, la <xref:System.Collections.Generic.Comparer%601.Default%2A> proprietà restituisce un <xref:System.Collections.Generic.Comparer%601> che utilizza il <xref:System.IComparable?displayProperty=nameWithType> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="77d85-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77d85-111">Nell'esempio seguente deriva una classe, `BoxLengthFirst`, dalla <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="77d85-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="77d85-112">Questo operatore di confronto Confronta due oggetti di tipo `Box`.</span><span class="sxs-lookup"><span data-stu-id="77d85-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="77d85-113">Essi vengono innanzitutto ordinati in base alla lunghezza, altezza e dalla larghezza.</span><span class="sxs-lookup"><span data-stu-id="77d85-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="77d85-114">Il `Box` classe implementa il <xref:System.IComparable%601> interfaccia per controllare il valore predefinito confronto tra due `Box` oggetti.</span><span class="sxs-lookup"><span data-stu-id="77d85-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="77d85-115">Questa implementazione predefinita vengono innanzitutto ordinati per l'altezza, lunghezza e dalla larghezza.</span><span class="sxs-lookup"><span data-stu-id="77d85-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="77d85-116">Nell'esempio vengono illustrate le differenze tra i due confronti per ordinare un elenco di `Box` oggetti innanzitutto usando il `BoxLengthFirst` operatore di confronto e quindi utilizzando l'operatore di confronto predefinito.</span><span class="sxs-lookup"><span data-stu-id="77d85-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="77d85-117">
        <para>
          <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> e <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> possono comportarsi in modo diverso in termini di sensibilità alla lingua e riconoscimento maiuscole/minuscole.  Per i confronti di stringa, il <see cref="T:System.StringComparer" /> classe è preferibile <c>operatore di confronto&lt;stringa&gt;</c>.  Proprietà del <see cref="T:System.StringComparer" /> classe restituire istanze predefinite che eseguono confronti tra stringhe con diverse combinazioni di impostazioni cultura sensibilità e riconoscimento maiuscole/minuscole.  Il riconoscimento maiuscole/minuscole e distinzione di impostazioni cultura sono coerenti tra i membri dello stesso <see cref="T:System.StringComparer" /> istanza.  Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <see cref="N:System.Globalization" /> dello spazio dei nomi e [globalizzazione e Localization](~/docs/standard/globalization-localization/index.md).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="77d85-117">
          <para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77d85-118">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Comparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-118">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="77d85-119">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-119">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="77d85-120">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-120">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77d85-121">Quando è sottoposto a override in una classe derivata, esegue un confronto tra due oggetti dello stesso tipo e restituisce un valore che indica se un oggetto è minore, uguale o maggiore dell'altro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-121">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77d85-122">Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-122">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="77d85-123">
            <list type="table">
              <listheader>
                <term> Valore </term>
                <description> Significato </description>
              </listheader>
              <item>
                <term> Minore di zero </term>
                <description>
                  <paramref name="x" /> è inferiore a <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description>
                  <paramref name="x" /> è uguale a <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Maggiore di zero  </term>
                <description>
                  <paramref name="x" /> è maggiore di <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-123">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d85-124">Implementare questo metodo per fornire un oggetto personalizzato per il tipo di confronto di ordinamento `T`.</span><span class="sxs-lookup"><span data-stu-id="77d85-124">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77d85-125">L'esempio seguente definisce un operatore di confronto di `Box` oggetti che possono essere utilizzati anziché l'operatore di confronto predefinito.</span><span class="sxs-lookup"><span data-stu-id="77d85-125">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="77d85-126">In questo esempio fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="77d85-126">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77d85-127">Il tipo <paramref name="T" /> non implementa l'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-127">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="77d85-128">
            <para>Confronto tra <see langword="null" /> con qualsiasi riferimento di tipo è consentito e non genera un'eccezione. Un riferimento null viene considerato minore rispetto a qualsiasi riferimento che non sia null.  Per informazioni su confronti di impostazioni cultura specifiche, vedere il <see cref="N:System.Globalization" /> dello spazio dei nomi e [globalizzazione e Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-128">
              <para>Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception. A null reference is considered to be less than any reference that is not null.  For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="77d85-129">Confronto da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-129">The comparison to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77d85-130">Crea un operatore di confronto utilizzando il confronto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-130">Creates a comparer by using the specified comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77d85-131">Nuovo operatore di confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-131">The new comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77d85-132">Restituisce un operatore di confronto di ordinamento predefinito per il tipo specificato dall'argomento generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-132">Returns a default sort order comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77d85-133">Oggetto che eredita l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> e viene utilizzato come un operatore di confronto di ordinamento per il tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-133">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d85-134">Il <xref:System.Collections.Generic.Comparer%601> restituita da questa proprietà viene utilizzata la <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica (`IComparable<T>` in c#, `IComparable(Of T)` in Visual Basic) per confrontare due oggetti.</span><span class="sxs-lookup"><span data-stu-id="77d85-134">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="77d85-135">Se tipo `T` non implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia generica, questa proprietà restituisce un <xref:System.Collections.Generic.Comparer%601> che utilizza il <xref:System.IComparable?displayProperty=nameWithType> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="77d85-135">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77d85-136">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.Comparer%601.Default%2A> proprietà da ottenere un oggetto che esegue il confronto predefinito.</span><span class="sxs-lookup"><span data-stu-id="77d85-136">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="77d85-137">In questo esempio fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="77d85-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="77d85-138">
            <para>Per i confronti di stringa, il <see cref="T:System.StringComparer" /> classe è preferibile <c>operatore di confronto&lt;stringa&gt; </c> (<c>operatore di confronto (Of String)</c> in Visual Basic).  Proprietà del <see cref="T:System.StringComparer" /> classe restituire istanze predefinite che eseguono confronti tra stringhe con diverse combinazioni di impostazioni cultura sensibilità e riconoscimento maiuscole/minuscole.  Il riconoscimento maiuscole/minuscole e distinzione di impostazioni cultura sono coerenti tra i membri dello stesso <see cref="T:System.StringComparer" /> istanza.  Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <see cref="N:System.Globalization" /> dello spazio dei nomi e [globalizzazione e Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-138">
              <para>For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="77d85-139">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-139">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="77d85-140">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-140">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77d85-141">Confronta due oggetti e restituisce un valore indicante se uno è minore, uguale o maggiore dell'altro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-141">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77d85-142">Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-142">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="77d85-143">
            <list type="table">
              <listheader>
                <term> Valore </term>
                <description> Significato </description>
              </listheader>
              <item>
                <term> Minore di zero </term>
                <description>
                  <paramref name="x" /> è inferiore a <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description>
                  <paramref name="x" /> è uguale a <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Maggiore di zero  </term>
                <description>
                  <paramref name="x" /> è maggiore di <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-143">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d85-144">Questo metodo è un wrapper per il <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> (metodo), quindi `obj` necessario eseguire il cast al tipo specificato dall'argomento generico `T` dell'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="77d85-144">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="77d85-145">Se non è possibile eseguire il cast a `T`, un <xref:System.ArgumentException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="77d85-145">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="77d85-146">Confronto tra `null` con qualsiasi riferimento di tipo è consentito e non genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="77d85-146">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="77d85-147">Durante l'ordinamento, `null` viene considerato minore rispetto a qualsiasi altro oggetto.</span><span class="sxs-lookup"><span data-stu-id="77d85-147">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77d85-148">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> metodo per confrontare due oggetti.</span><span class="sxs-lookup"><span data-stu-id="77d85-148">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="77d85-149">In questo esempio fa parte di un esempio più esaustivo disponibile per la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="77d85-149">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77d85-150">Il tipo del parametro <paramref name="x" /> o <paramref name="y" /> non consente di effettuare il cast al tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-150">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span>
          </span>
          <span data-ttu-id="77d85-151">-oppure-  I parametri <paramref name="x" /> e <paramref name="y" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-151">-or-  <paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="77d85-152">
            <para>
              <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> e <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> si comportano in modo diverso in termini di sensibilità alla lingua e riconoscimento maiuscole/minuscole.  Per i confronti di stringa, il <see cref="T:System.StringComparer" /> classe è preferibile <c>operatore di confronto&lt;stringa&gt;</c>.  Proprietà del <see cref="T:System.StringComparer" /> classe restituire istanze predefinite che eseguono confronti tra stringhe con diverse combinazioni di impostazioni cultura sensibilità e riconoscimento maiuscole/minuscole.  Il riconoscimento maiuscole/minuscole e distinzione di impostazioni cultura sono coerenti tra i membri dello stesso <see cref="T:System.StringComparer" /> istanza.  Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <see cref="N:System.Globalization" /> dello spazio dei nomi e [globalizzazione e Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77d85-152">
              <para>
                <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>