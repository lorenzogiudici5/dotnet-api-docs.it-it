<Type Name="LinkedList&lt;T&gt;" FullName="System.Collections.Generic.LinkedList&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e863e9ee2bdf25b14ff8fea6bf642f31b119ad3f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36645406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinkedList&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinkedList`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.LinkedList`1" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkedList(Of T)&#xA;Implements ICollection, ICollection(Of T), IDeserializationCallback, IEnumerable(Of T), IReadOnlyCollection(Of T), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class LinkedList : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type LinkedList&lt;'T&gt; = class&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="2bef3-101">Specifica il tipo di elemento dell'elenco collegato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-101">Specifies the element type of the linked list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="2bef3-102">Rappresenta un elenco a doppio collegamento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-102">Represents a doubly linked list.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-103"><xref:System.Collections.Generic.LinkedList%601> è un elenco collegato di uso generale.</span><span class="sxs-lookup"><span data-stu-id="2bef3-103"><xref:System.Collections.Generic.LinkedList%601> is a general-purpose linked list.</span></span> <span data-ttu-id="2bef3-104">Supporta gli enumeratori e implementa il <xref:System.Collections.ICollection> interfaccia, in modo coerente con altre classi di raccolte in .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="2bef3-104">It supports enumerators and implements the <xref:System.Collections.ICollection> interface, consistent with other collection classes in the .NET Framework.</span></span>  
  
 <span data-ttu-id="2bef3-105"><xref:System.Collections.Generic.LinkedList%601> fornisce nodi diversi di tipo <xref:System.Collections.Generic.LinkedListNode%601>, pertanto l'inserimento e rimozione sono operazioni o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-105"><xref:System.Collections.Generic.LinkedList%601> provides separate nodes of type <xref:System.Collections.Generic.LinkedListNode%601>, so insertion and removal are O(1) operations.</span></span>  
  
 <span data-ttu-id="2bef3-106">È possibile rimuovere i nodi e inserirli nell'elenco dello stesso o in un altro elenco, che si traduce in alcun altri oggetti allocati nell'heap.</span><span class="sxs-lookup"><span data-stu-id="2bef3-106">You can remove nodes and reinsert them, either in the same list or in another list, which results in no additional objects allocated on the heap.</span></span> <span data-ttu-id="2bef3-107">Poiché l'elenco anche mantiene un conteggio interno, ottenere il <xref:System.Collections.Generic.LinkedList%601.Count%2A> proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-107">Because the list also maintains an internal count, getting the <xref:System.Collections.Generic.LinkedList%601.Count%2A> property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="2bef3-108">Ogni nodo in un <xref:System.Collections.Generic.LinkedList%601> oggetto è di tipo <xref:System.Collections.Generic.LinkedListNode%601>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-108">Each node in a <xref:System.Collections.Generic.LinkedList%601> object is of the type <xref:System.Collections.Generic.LinkedListNode%601>.</span></span> <span data-ttu-id="2bef3-109">Poiché il <xref:System.Collections.Generic.LinkedList%601> doppiamente collegato, ogni nodo i punti di rollforward per il <xref:System.Collections.Generic.LinkedListNode%601.Next%2A> nodo e con le versioni precedenti al <xref:System.Collections.Generic.LinkedListNode%601.Previous%2A> nodo.</span><span class="sxs-lookup"><span data-stu-id="2bef3-109">Because the <xref:System.Collections.Generic.LinkedList%601> is doubly linked, each node points forward to the <xref:System.Collections.Generic.LinkedListNode%601.Next%2A> node and backward to the <xref:System.Collections.Generic.LinkedListNode%601.Previous%2A> node.</span></span>  
  
 <span data-ttu-id="2bef3-110">Gli elenchi che contengono i tipi di riferimento prestazioni migliori quando un nodo e il relativo valore vengono creati nello stesso momento.</span><span class="sxs-lookup"><span data-stu-id="2bef3-110">Lists that contain reference types perform better when a node and its value are created at the same time.</span></span> <span data-ttu-id="2bef3-111"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> tipi di proprietà per riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-111"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> property for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-112">Se il <xref:System.Collections.Generic.LinkedList%601> è vuota, il <xref:System.Collections.Generic.LinkedList%601.First%2A> e <xref:System.Collections.Generic.LinkedList%601.Last%2A> proprietà contengono `null`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-112">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="2bef3-113">Il <xref:System.Collections.Generic.LinkedList%601> classe non supporta il concatenamento, suddivisione, cicli o altre funzionalità che è possibile lasciare l'elenco in uno stato incoerente.</span><span class="sxs-lookup"><span data-stu-id="2bef3-113">The <xref:System.Collections.Generic.LinkedList%601> class does not support chaining, splitting, cycles, or other features that can leave the list in an inconsistent state.</span></span> <span data-ttu-id="2bef3-114">L'elenco rimane coerenza su un thread singolo.</span><span class="sxs-lookup"><span data-stu-id="2bef3-114">The list remains consistent on a single thread.</span></span> <span data-ttu-id="2bef3-115">L'unico scenario multithread supportato da <xref:System.Collections.Generic.LinkedList%601> è a thread multipli le operazioni di lettura.</span><span class="sxs-lookup"><span data-stu-id="2bef3-115">The only multithreaded scenario supported by <xref:System.Collections.Generic.LinkedList%601> is multithreaded read operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-116">Esempio di codice seguente illustra molte funzionalità della <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-116">The following code example demonstrates many features of the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 [!code-cpp[Generic.LinkedList#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.LinkedList/cpp/source.cpp#1)]
 [!code-csharp[Generic.LinkedList#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.LinkedList/cs/source.cs#1)]
 [!code-vb[Generic.LinkedList#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.LinkedList/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2bef3-117">Questo tipo non è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-117">This type is not thread safe.</span>
      </span>
      <span data-ttu-id="2bef3-118">Se il <see cref="T:System.Collections.Generic.LinkedList`1" /> deve essere eseguito da più thread, è necessario implementare il proprio meccanismo di sincronizzazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-118">If the <see cref="T:System.Collections.Generic.LinkedList`1" /> needs to be accessed by multiple threads, you will need to implement their own synchronization mechanism.</span>
      </span>
      <span data-ttu-id="2bef3-119">Oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> può supportare più lettori contemporaneamente, fino a quando la raccolta non viene modificata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-119">A <see cref="T:System.Collections.Generic.LinkedList`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="2bef3-120">Anche in questo caso, l'enumerazione di una raccolta non è quindi una procedura thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-120">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="2bef3-121">Nel raro caso in cui un'enumerazione condivida accessi in scrittura, è necessario bloccare la raccolta durante l'intera enumerazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-121">In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</span>
      </span>
      <span data-ttu-id="2bef3-122">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bef3-122">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.LinkedListNode`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-123">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-123">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-124">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-124">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-125"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-125"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-126">Se il <xref:System.Collections.Generic.LinkedList%601> è vuota, il <xref:System.Collections.Generic.LinkedList%601.First%2A> e <xref:System.Collections.Generic.LinkedList%601.Last%2A> proprietà contengono `null`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-126">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="2bef3-127">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-127">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-128">Esempio di codice seguente crea e Inizializza un <xref:System.Collections.Generic.LinkedList%601> di tipo <xref:System.String>, vengono aggiunti diversi nodi e quindi Visualizza il relativo contenuto.</span><span class="sxs-lookup"><span data-stu-id="2bef3-128">The following code example creates and initializes a <xref:System.Collections.Generic.LinkedList%601> of type <xref:System.String>, adds several nodes, and then displays its contents.</span></span>  
  
 [!code-cpp[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/CPP/llctor.cpp#1)]
 [!code-csharp[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/CS/llctor.cs#1)]
 [!code-vb[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/VB/llctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedList (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedList(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.LinkedList&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.LinkedList&lt;'T&gt;" Usage="new System.Collections.Generic.LinkedList&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="2bef3-129">Oggetto <see cref="T:System.Collections.IEnumerable" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-129">The <see cref="T:System.Collections.IEnumerable" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-130">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" /> contenente gli elementi copiati dalla classe <see cref="T:System.Collections.IEnumerable" /> specificata e la cui capacità è sufficiente a contenere il numero di elementi copiati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-130">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-131"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-131"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-132">Se `collection` non ha elementi, il nuovo <xref:System.Collections.Generic.LinkedList%601> è vuoto e il <xref:System.Collections.Generic.LinkedList%601.First%2A> e <xref:System.Collections.Generic.LinkedList%601.Last%2A> proprietà contengono `null`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-132">If `collection` has no elements then the new <xref:System.Collections.Generic.LinkedList%601> is empty, and the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="2bef3-133">Questo costruttore è un'operazione o (n), dove `n` è il numero di elementi in `collection`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-133">This constructor is an O(n) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-134">Per un esempio che include questo costruttore, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-134">For an example that includes this constructor, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-135">
            <paramref name="collection" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-135">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinkedList (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinkedList(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.LinkedList&lt;'T&gt; : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Generic.LinkedList&lt;'T&gt;" Usage="new System.Collections.Generic.LinkedList&lt;'T&gt; (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="2bef3-136">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-136">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="2bef3-137">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato a <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-137">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-138">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" /> serializzabile con gli oggetti <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is serializable with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-139"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-139"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-140">Se il <xref:System.Collections.Generic.LinkedList%601> è vuota, il <xref:System.Collections.Generic.LinkedList%601.First%2A> e <xref:System.Collections.Generic.LinkedList%601.Last%2A> proprietà contengono `null`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-140">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="2bef3-141">Questo costruttore è un'operazione o (n).</span><span class="sxs-lookup"><span data-stu-id="2bef3-141">This constructor is an O(n) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAfter">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-142">Aggiunge un nuovo nodo o valore dopo un nodo esistente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-142">Adds a new node or value after an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAfter">
      <MemberSignature Language="C#" Value="public void AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAfter(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAfter (node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAfter(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, System::Collections::Generic::LinkedListNode&lt;T&gt; ^ newNode);" />
      <MemberSignature Language="F#" Value="member this.AddAfter : System.Collections.Generic.LinkedListNode&lt;'T&gt; * System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddAfter (node, newNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2bef3-143">Elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale inserire <c>newNode</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-143">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert <c>newNode</c>.</span>
          </span>
        </param>
        <param name="newNode">
          <span data-ttu-id="2bef3-144">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-144">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-145">Aggiunge il nuovo nodo specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-145">Adds the specified new node after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-146"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-146"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-147">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-147">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-148">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-148">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-149">
            <paramref name="node" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-149">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2bef3-150">- oppure - <paramref name="newNode" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-150">-or-  <paramref name="newNode" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-151">
            <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-151">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="2bef3-152">-o-  <paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-152">-or-  <paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <Member MemberName="AddAfter">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddAfter(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAfter (node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddAfter(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, T value);" />
      <MemberSignature Language="F#" Value="member this.AddAfter : System.Collections.Generic.LinkedListNode&lt;'T&gt; * 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddAfter (node, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2bef3-153">Elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale inserire un nuovo elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-153">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2bef3-154">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-154">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-155">Aggiunge un nuovo nodo che contiene il valore specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-155">Adds a new node containing the specified value after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-156">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-156">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-157"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-157"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-158">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-158">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-159">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-159">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-160">
            <paramref name="node" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-160">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-161">
            <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-161">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBefore">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-162">Aggiunge un nuovo nodo o valore prima di un nodo esistente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-162">Adds a new node or value before an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBefore">
      <MemberSignature Language="C#" Value="public void AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBefore(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBefore (node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBefore(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, System::Collections::Generic::LinkedListNode&lt;T&gt; ^ newNode);" />
      <MemberSignature Language="F#" Value="member this.AddBefore : System.Collections.Generic.LinkedListNode&lt;'T&gt; * System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddBefore (node, newNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2bef3-163">Elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale inserire <c>newNode</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-163">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert <c>newNode</c>.</span>
          </span>
        </param>
        <param name="newNode">
          <span data-ttu-id="2bef3-164">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-164">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-165">Aggiunge il nuovo nodo specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-165">Adds the specified new node before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-166"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-166"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-167">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-167">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-168">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-168">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-169">
            <paramref name="node" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-169">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2bef3-170">- oppure - <paramref name="newNode" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-170">-or-  <paramref name="newNode" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-171">
            <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-171">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="2bef3-172">-o-  <paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-172">-or-  <paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <Member MemberName="AddBefore">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddBefore(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBefore (node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddBefore(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, T value);" />
      <MemberSignature Language="F#" Value="member this.AddBefore : System.Collections.Generic.LinkedListNode&lt;'T&gt; * 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddBefore (node, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2bef3-173">Elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale inserire un nuovo elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-173">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2bef3-174">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-174">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-175">Aggiunge un nuovo nodo che contiene il valore specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-175">Adds a new node containing the specified value before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-176">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-176">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-177"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-177"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-178">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-178">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-179">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-179">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-180">
            <paramref name="node" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-180">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-181">
            <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-181">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFirst">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-182">Aggiunge un nuovo nodo o valore all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-182">Adds a new node or value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFirst">
      <MemberSignature Language="C#" Value="public void AddFirst (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFirst(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFirst (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFirst(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberSignature Language="F#" Value="member this.AddFirst : System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddFirst node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2bef3-183">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-183">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-184">Aggiunge il nuovo nodo specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-184">Adds the specified new node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-185"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-185"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-186">Se il <xref:System.Collections.Generic.LinkedList%601> è vuoto, il nuovo nodo diventa il <xref:System.Collections.Generic.LinkedList%601.First%2A> e il <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-186">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-187">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-187">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-188">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-188">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-189">
            <paramref name="node" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-189">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-190">
            <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-190">
              <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="AddFirst">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddFirst (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddFirst(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFirst (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddFirst(T value);" />
      <MemberSignature Language="F#" Value="member this.AddFirst : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddFirst value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2bef3-191">Valore da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-191">The value to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-192">Aggiunge un nuovo nodo contenente il valore specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-192">Adds a new node containing the specified value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-193">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-193">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-194"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-194"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-195">Se il <xref:System.Collections.Generic.LinkedList%601> è vuoto, il nuovo nodo diventa il <xref:System.Collections.Generic.LinkedList%601.First%2A> e il <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-195">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-196">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-196">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-197">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-197">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLast">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-198">Aggiunge un nuovo nodo o valore alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-198">Adds a new node or value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLast">
      <MemberSignature Language="C#" Value="public void AddLast (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLast(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLast (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLast(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberSignature Language="F#" Value="member this.AddLast : System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddLast node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2bef3-199">Nuovo oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-199">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-200">Aggiunge il nodo specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-200">Adds the specified new node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-201"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-201"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-202">Se il <xref:System.Collections.Generic.LinkedList%601> è vuoto, il nuovo nodo diventa il <xref:System.Collections.Generic.LinkedList%601.First%2A> e il <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-202">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-203">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-203">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-204">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-204">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-205">
            <paramref name="node" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-205">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-206">
            <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-206">
              <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="AddLast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddLast (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddLast(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddLast(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLast (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddLast(T value);" />
      <MemberSignature Language="F#" Value="member this.AddLast : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddLast value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2bef3-207">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-207">The value to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-208">Aggiunge un nuovo nodo contenente il valore specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-208">Adds a new node containing the specified value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-209">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-209">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-210"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-210"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-211">Se il <xref:System.Collections.Generic.LinkedList%601> è vuoto, il nuovo nodo diventa il <xref:System.Collections.Generic.LinkedList%601.First%2A> e il <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-211">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-212">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-212">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-213">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-213">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="linkedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-214">Rimuove tutti i nodi dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-214">Removes all nodes from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-215"><xref:System.Collections.Generic.LinkedList%601.Count%2A> è impostato su zero e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.</span><span class="sxs-lookup"><span data-stu-id="2bef3-215"><xref:System.Collections.Generic.LinkedList%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  <span data-ttu-id="2bef3-216"><xref:System.Collections.Generic.LinkedList%601.First%2A> e <xref:System.Collections.Generic.LinkedList%601.Last%2A> sono impostati su `null`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-216"><xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> are set to `null`.</span></span>  
  
 <span data-ttu-id="2bef3-217">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-217">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-218">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-218">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="linkedList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2bef3-219">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-219">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="2bef3-220">Il valore può essere <see langword="null" /> per i tipi di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-220">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-221">Determina se un valore è incluso nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-221">Determines whether a value is in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-222">
            <see langword="true" /> se <paramref name="value" /> è presente in <see cref="T:System.Collections.Generic.LinkedList`1" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-222">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Generic.LinkedList`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-223">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-223">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-224">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-224">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="linkedList.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2bef3-225">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-225">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="2bef3-226">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-226">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2bef3-227">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-227">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-228">Copia l'intero oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-228">Copies the entire <see cref="T:System.Collections.Generic.LinkedList`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-229">Gli elementi vengono copiati per la <xref:System.Array> nello stesso ordine in cui l'enumeratore scorre la <xref:System.Collections.Generic.LinkedList%601>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-229">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.LinkedList%601>.</span></span>  
  
 <span data-ttu-id="2bef3-230">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-230">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-231">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-231">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-232">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-232">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bef3-233">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-233">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bef3-234">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-234">The number of elements in the source <see cref="T:System.Collections.Generic.LinkedList`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-235">Ottiene il numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-235">Gets the number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bef3-236">Numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-236">The number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-237">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-237">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-238">Per un esempio che include questa proprietà, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-238">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; Find (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; Find(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ Find(T value);" />
      <MemberSignature Language="F#" Value="member this.Find : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.Find value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2bef3-239">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-239">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-240">Trova il primo nodo che contiene il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-240">Finds the first node that contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-241">Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-241">The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-242">Il <xref:System.Collections.Generic.LinkedList%601> viene eseguita la ricerca in avanti partire <xref:System.Collections.Generic.LinkedList%601.First%2A> e fine <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-242">The <xref:System.Collections.Generic.LinkedList%601> is searched forward starting at <xref:System.Collections.Generic.LinkedList%601.First%2A> and ending at <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-243">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-243">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-244">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-244">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; FindLast (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; FindLast(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ FindLast(T value);" />
      <MemberSignature Language="F#" Value="member this.FindLast : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.FindLast value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2bef3-245">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-245">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-246">Trova l'ultimo nodo che contiene il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-246">Finds the last node that contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-247">Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-247">The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-248">Il <xref:System.Collections.Generic.LinkedList%601> viene eseguita con le versioni precedenti a partire dall'indice <xref:System.Collections.Generic.LinkedList%601.Last%2A> e fine <xref:System.Collections.Generic.LinkedList%601.First%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-248">The <xref:System.Collections.Generic.LinkedList%601> is searched backward starting at <xref:System.Collections.Generic.LinkedList%601.Last%2A> and ending at <xref:System.Collections.Generic.LinkedList%601.First%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-249">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-249">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-250">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-250">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; First { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; First" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.First" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property First As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::LinkedListNode&lt;T&gt; ^ First { System::Collections::Generic::LinkedListNode&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.First : System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-251">Ottiene il primo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-251">Gets the first node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bef3-252">Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-252">The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-253"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-253"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-254">Se il <xref:System.Collections.Generic.LinkedList%601> è vuota, il <xref:System.Collections.Generic.LinkedList%601.First%2A> e <xref:System.Collections.Generic.LinkedList%601.Last%2A> proprietà contengono `null`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-254">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="2bef3-255">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-255">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-256">Per un esempio che include questa proprietà, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-256">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedList&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.LinkedList`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As LinkedList(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedList&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.LinkedList&lt;'T&gt;.Enumerator" Usage="linkedList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedList&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-257">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-257">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-258">
            <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-258">An <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-259">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="2bef3-259">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="2bef3-260">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="2bef3-260">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2bef3-261">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="2bef3-261">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2bef3-262">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="2bef3-262">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2bef3-263">In questa posizione, la proprietà <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="2bef3-263">At this position, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2bef3-264">Pertanto, è necessario chiamare il metodo <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-264">Therefore, you must call <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-265">La proprietà <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-265"><xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="2bef3-266"><xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> imposta <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="2bef3-266"><xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2bef3-267">Se <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-267">If <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2bef3-268">Quando l'enumeratore si trova in questa posizione, le chiamate successive alle <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-268">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2bef3-269">Se l'ultima chiamata a <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> restituiti `false`, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="2bef3-269">If the last call to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2bef3-270">Non è possibile impostare nuovamente la proprietà <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</span><span class="sxs-lookup"><span data-stu-id="2bef3-270">You cannot set <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="2bef3-271">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="2bef3-271">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2bef3-272">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e alla successiva chiamata a <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> oppure <xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-272">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2bef3-273">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-273">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2bef3-274">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-274">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2bef3-275">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-275">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2bef3-276">Le implementazioni predefinite di raccolte in <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="2bef3-276">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="2bef3-277">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-277">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.LinkedList`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="linkedList.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="2bef3-278">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-278">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="2bef3-279">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-279">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-280">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-280">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-281">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-281">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-282">
            <paramref name="info" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-282">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2bef3-283">per fornire servizi di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-283">for providing serialization services.</span>
          </span>
          <span data-ttu-id="2bef3-284">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-284">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Last">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; Last { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; Last" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Last" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Last As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::LinkedListNode&lt;T&gt; ^ Last { System::Collections::Generic::LinkedListNode&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Last : System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.Last" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-285">Ottiene l'ultimo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-285">Gets the last node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bef3-286">Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-286">The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-287"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-287"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-288">Se il <xref:System.Collections.Generic.LinkedList%601> è vuota, il <xref:System.Collections.Generic.LinkedList%601.First%2A> e <xref:System.Collections.Generic.LinkedList%601.Last%2A> proprietà contengono `null`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-288">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="2bef3-289">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-289">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-290">Per un esempio che include questa proprietà, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-290">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="linkedList.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="2bef3-291">Origine dell'evento di deserializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-291">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-292">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-292">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-293">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-293">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2bef3-294">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.LinkedList`1" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-294">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.LinkedList`1" /> instance is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-295">Rimuove la prima occorrenza di un nodo o di un valore dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-295">Removes the first occurrence of a node or value from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2bef3-296">Oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da rimuovere da <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-296">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-297">Rimuove il nodo specificato da <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-297">Removes the specified node from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-298">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-298">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-299">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-299">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-300">
            <paramref name="node" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-300">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-301">
            <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-301">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="linkedList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2bef3-302">Valore da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-302">The value to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-303">Rimuove dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> la prima occorrenza del valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-303">Removes the first occurrence of the specified value from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-304">
            <see langword="true" /> se l'elemento contenente il valore indicato nel parametro <paramref name="value" /> viene rimosso correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-304">
              <see langword="true" /> if the element containing <paramref name="value" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2bef3-305">Questo metodo restituisce anche <see langword="false" /> se <paramref name="value" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.LinkedList`1" /> originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-305">This method also returns <see langword="false" /> if <paramref name="value" /> was not found in the original <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-306">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-306">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-307">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-307">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFirst">
      <MemberSignature Language="C#" Value="public void RemoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFirst();" />
      <MemberSignature Language="F#" Value="member this.RemoveFirst : unit -&gt; unit" Usage="linkedList.RemoveFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-308">Rimuove il nodo all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-308">Removes the node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-309">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-309">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-310">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-310">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-311">La classe <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-311">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLast">
      <MemberSignature Language="C#" Value="public void RemoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLast();" />
      <MemberSignature Language="F#" Value="member this.RemoveLast : unit -&gt; unit" Usage="linkedList.RemoveLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-312">Rimuove il nodo alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-312">Removes the node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-313">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-313">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-314">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-314">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bef3-315">La classe <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-315">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (value As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2bef3-316">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-316">The value to add at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-317">Aggiunge un elemento alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-317">Adds an item at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-318"><xref:System.Collections.Generic.LinkedList%601> accetta `null` come un valore valido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> per tipi di riferimento e consente valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="2bef3-318"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="2bef3-319">Se il <xref:System.Collections.Generic.LinkedList%601> è vuoto, il nuovo nodo diventa il <xref:System.Collections.Generic.LinkedList%601.First%2A> e il <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-319">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-320">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-320">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bef3-321">Per un esempio che include questo metodo, vedere il <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-321">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-322">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-322">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bef3-323">
            <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-323">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2bef3-324">Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-324">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-325">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-325">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="2bef3-326">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</span><span class="sxs-lookup"><span data-stu-id="2bef3-326">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2bef3-327">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-327">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-328">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-328">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-329">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-329">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-330">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="2bef3-330">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="2bef3-331">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="2bef3-331">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2bef3-332">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="2bef3-332">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2bef3-333">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="2bef3-333">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2bef3-334">In questa posizione, la proprietà <xref:System.Collections.Generic.IEnumerator%601.Current%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="2bef3-334">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="2bef3-335">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-335">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-336">La proprietà <xref:System.Collections.Generic.IEnumerator%601.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-336"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="2bef3-337"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.Generic.IEnumerator%601.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="2bef3-337"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2bef3-338">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-338">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2bef3-339">Quando l'enumeratore si trova in questa posizione, le chiamate successive alle <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-339">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2bef3-340">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituiti `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="2bef3-340">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="2bef3-341">Non è possibile impostare nuovamente la proprietà <xref:System.Collections.Generic.IEnumerator%601.Current%2A> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</span><span class="sxs-lookup"><span data-stu-id="2bef3-341">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="2bef3-342">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="2bef3-342">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2bef3-343">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e alla successiva chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> oppure <xref:System.Collections.IEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-343">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2bef3-344">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-344">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2bef3-345">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-345">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2bef3-346">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-346">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2bef3-347">Le implementazioni predefinite di raccolte in <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="2bef3-347">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="2bef3-348">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-348">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2bef3-349">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-349">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="2bef3-350">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-350">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2bef3-351">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-351">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bef3-352">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-352">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2bef3-353">Se il tipo di origine <xref:System.Collections.ICollection> non può essere eseguire automaticamente il cast al tipo di destinazione `array`, le implementazioni non generica di <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, mentre le implementazioni generiche generano <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-353">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2bef3-354">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-354">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bef3-355">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-355">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bef3-356">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-356">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bef3-357">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-357">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="2bef3-358">-oppure-  <paramref name="array" /> non ha indicizzazione a base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-358">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="2bef3-359">-oppure-  Il numero di elementi nell'insieme di origine <see cref="T:System.Collections.ICollection" /> è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-359">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="2bef3-360">-oppure-  Non è possibile eseguire automaticamente il cast del tipo dell'insieme <see cref="T:System.Collections.ICollection" /> di origine nel tipo dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-360">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-361">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-361">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bef3-362">
            <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-362">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2bef3-363">Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-363">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-364">Le implementazioni predefinite di raccolte in <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="2bef3-364">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="2bef3-365">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-365">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2bef3-366">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-366">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2bef3-367">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-367">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2bef3-368"><xref:System.Collections.ICollection.SyncRoot%2A> Restituisce un oggetto che può essere usato per sincronizzare l'accesso al <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-368"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="2bef3-369">La sincronizzazione è efficace solo se tutti i thread bloccano questo oggetto prima di accedere alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="2bef3-369">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="2bef3-370">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-370">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-371">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-371">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bef3-372">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-372">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="2bef3-373">Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-373">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-374">Le implementazioni predefinite di raccolte in <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="2bef3-374">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="2bef3-375">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-375">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2bef3-376">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-376">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2bef3-377">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-377">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2bef3-378"><xref:System.Collections.ICollection.SyncRoot%2A> Restituisce un oggetto che può essere usato per sincronizzare l'accesso al <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-378"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="2bef3-379">La sincronizzazione è efficace solo se tutti i thread bloccano questo oggetto prima di accedere alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="2bef3-379">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="2bef3-380">Il codice seguente viene illustrato come utilizzare il <xref:System.Collections.ICollection.SyncRoot%2A> proprietà per c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="2bef3-380">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="2bef3-381">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-381">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bef3-382">Restituisce un enumeratore che consente di scorrere l'elenco collegato come una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-382">Returns an enumerator that iterates through the linked list as a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bef3-383">Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'elenco collegato come una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bef3-383">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the linked list as a collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bef3-384">Il `foreach` istruzione del linguaggio c# (`for each` in C++, `For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="2bef3-384">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="2bef3-385">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="2bef3-385">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2bef3-386">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="2bef3-386">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2bef3-387">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="2bef3-387">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2bef3-388">Anche il metodo <xref:System.Collections.IEnumerator.Reset%2A> riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-388"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="2bef3-389">In questa posizione, la proprietà <xref:System.Collections.IEnumerator.Current%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="2bef3-389">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2bef3-390">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-390">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-391"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-391"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2bef3-392"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="2bef3-392"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2bef3-393">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-393">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2bef3-394">Quando l'enumeratore si trova in questa posizione, le chiamate successive alle <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="2bef3-394">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2bef3-395">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituiti `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="2bef3-395">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2bef3-396">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-396">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2bef3-397">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="2bef3-397">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2bef3-398">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e alla successiva chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> oppure <xref:System.Collections.IEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2bef3-398">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2bef3-399">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2bef3-399">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2bef3-400">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-400">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2bef3-401">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="2bef3-401">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2bef3-402">Le implementazioni predefinite di raccolte in <xref:System.Collections.Generic?displayProperty=nameWithType> non sono sincronizzate.</span><span class="sxs-lookup"><span data-stu-id="2bef3-402">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="2bef3-403">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2bef3-403">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>