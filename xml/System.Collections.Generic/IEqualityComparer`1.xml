<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea29512abcf8fb15aa435e75f569d1fd308650f9" />
    <Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/15/2018" />
    <Meta Name="ms.locfileid" Value="51691144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Tipo di oggetti da confrontare.</typeparam>
    <summary>Definisce i metodi per supportare il confronto di oggetti allo scopo di verificarne l'uguaglianza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa interfaccia consente l'implementazione di confronto di uguaglianza personalizzati per le raccolte. Vale a dire, è possibile creare la definizione dell'uguaglianza per il tipo `T`e specificare che questa definizione di essere usato con un tipo di raccolta che accetta il <xref:System.Collections.Generic.IEqualityComparer%601> interfaccia generica. In .NET Framework, i costruttori del <xref:System.Collections.Generic.Dictionary%602> il tipo di raccolta generica supporta questa interfaccia.  
  
 Un'implementazione predefinita di questa interfaccia avviene tramite il <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> proprietà del <xref:System.Collections.Generic.EqualityComparer%601> classe generica. Il <xref:System.StringComparer> classe implementa <xref:System.Collections.Generic.IEqualityComparer%601> di tipo <xref:System.String>.  
  
 Questa interfaccia supporta solo confronti di uguaglianza. Personalizzazione dei confronti per l'ordinamento avviene tramite il <xref:System.Collections.Generic.IComparer%601> interfaccia generica.  
  
 È consigliabile eseguire la derivazione dal <xref:System.Collections.Generic.EqualityComparer%601> classe anziché implementare il <xref:System.Collections.Generic.IEqualityComparer%601> dell'interfaccia, in quanto il <xref:System.Collections.Generic.EqualityComparer%601> verifica l'uguaglianza con il <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> invece del metodo il <xref:System.Object.Equals%2A?displayProperty=nameWithType> (metodo). Questo comportamento è coerente con il `Contains`, `IndexOf`, `LastIndexOf`, e `Remove` metodi del <xref:System.Collections.Generic.Dictionary%602> classe e altre raccolte generiche.  
  
   
  
## Examples  
 L'esempio seguente aggiunge custom `Box` oggetti da una raccolta di dizionari. Il `Box` gli oggetti sono considerati uguali se hanno le stesse dimensioni.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Primo oggetto di tipo <paramref name="T" /> da confrontare.</param>
        <param name="y">Secondo oggetto di tipo <paramref name="T" /> da confrontare.</param>
        <summary>Determina se gli oggetti specificati sono uguali.</summary>
        <returns>
          <see langword="true" /> se gli oggetti specificati sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare questo metodo per fornire un confronto di uguaglianza personalizzati per il tipo `T`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le implementazioni necessarie per assicurare che, se il <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> restituzione del metodo <see langword="true" /> per due oggetti <paramref name="x" /> e <paramref name="y" />, quindi il valore restituito dal <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> metodo per <paramref name="x" /> deve essere uguale al valore restituito per <paramref name="y" />.  
  
Il <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> metodo è simmetrico, riflessivo e transitivo. Ovvero, restituisce <see langword="true" /> se utilizzato per confrontare un oggetto con se stesso; <see langword="true" /> per due oggetti <paramref name="x" /> e <paramref name="y" /> se si tratta <see langword="true" /> per <paramref name="y" /> e <paramref name="x" />; e <see langword="true" /> per due oggetti <paramref name="x" /> e <paramref name="z" /> se è <see langword="true" /> per <paramref name="x" /> e <paramref name="y" /> nonché <see langword="true" /> per <paramref name="y" /> e <paramref name="z" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto <see cref="T:System.Object" /> per cui è necessario che sia restituito un codice hash.</param>
        <summary>Restituisce un codice hash per l'oggetto specificato.</summary>
        <returns>Codice hash per l'oggetto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare questo metodo per fornire un codice hash personalizzato per il tipo `T`, che corrisponde al confronto di uguaglianza personalizzato fornito dal <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Le implementazioni necessarie per assicurare che, se il <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> restituzione del metodo <see langword="true" /> per due oggetti <paramref name="x" /> e <paramref name="y" />, quindi il valore restituito dal <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> metodo per <paramref name="x" /> deve essere uguale al valore restituito per <paramref name="y" />.</para>
        </block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>