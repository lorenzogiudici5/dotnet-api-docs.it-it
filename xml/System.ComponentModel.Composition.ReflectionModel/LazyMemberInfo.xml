<Type Name="LazyMemberInfo" FullName="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
  <TypeSignature Language="C#" Value="public struct LazyMemberInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LazyMemberInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure LazyMemberInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class LazyMemberInfo" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4610b-101">Rappresenta un oggetto <see cref="T:System.Reflection.MemberInfo" /> che carica assembly e crea oggetti solo quando richiesto.</span><span class="sxs-lookup"><span data-stu-id="4610b-101">Represents a <see cref="T:System.Reflection.MemberInfo" /> object that does not load assemblies or create objects until requested.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4610b-102">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="4610b-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberInfo ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="4610b-103">Membro da rappresentare.</span><span class="sxs-lookup"><span data-stu-id="4610b-103">The member to represent.</span></span></param>
        <summary><span data-ttu-id="4610b-104">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> che rappresenta il membro specificato.</span><span class="sxs-lookup"><span data-stu-id="4610b-104">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class, representing the specified member.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberTypes memberType, Func&lt;System.Reflection.MemberInfo[]&gt; accessorsCreator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.MemberTypes memberType, class System.Func`1&lt;class System.Reflection.MemberInfo[]&gt; accessorsCreator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberType As MemberTypes, accessorsCreator As Func(Of MemberInfo()))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberTypes memberType, Func&lt;cli::array &lt;System::Reflection::MemberInfo ^&gt; ^&gt; ^ accessorsCreator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="accessorsCreator" Type="System.Func&lt;System.Reflection.MemberInfo[]&gt;" />
      </Parameters>
      <Docs>
        <param name="memberType"><span data-ttu-id="4610b-105">Tipo del membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-105">The type of the represented member.</span></span></param>
        <param name="accessorsCreator"><span data-ttu-id="4610b-106">Funzione il cui valore restituito è una raccolta delle funzioni di accesso per il membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-106">A function whose return value is a collection of the accessors for the represented member.</span></span></param>
        <summary><span data-ttu-id="4610b-107">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> per un membro del tipo specificato con le funzioni di accesso specificate.</span><span class="sxs-lookup"><span data-stu-id="4610b-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class for a member of the specified type with the specified accessors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberTypes memberType, params System.Reflection.MemberInfo[] accessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.MemberTypes memberType, class System.Reflection.MemberInfo[] accessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberType As MemberTypes, ParamArray accessors As MemberInfo())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberTypes memberType, ... cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ accessors);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="accessors" Type="System.Reflection.MemberInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="memberType"><span data-ttu-id="4610b-108">Tipo del membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-108">The type of the represented member.</span></span></param>
        <param name="accessors"><span data-ttu-id="4610b-109">Matrice delle funzioni di accesso per il membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-109">An array of the accessors for the represented member.</span></span></param>
        <summary><span data-ttu-id="4610b-110">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> per un membro del tipo specificato con le funzioni di accesso specificate.</span><span class="sxs-lookup"><span data-stu-id="4610b-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class for a member of the specified type with the specified accessors.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4610b-111">Uno o più oggetti in <paramref name="accessors" /> non sono funzioni di accesso valide per questo membro.</span><span class="sxs-lookup"><span data-stu-id="4610b-111">One or more of the objects in <paramref name="accessors" /> are not valid accessors for this member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4610b-112">Altro oggetto da confrontare.</span><span class="sxs-lookup"><span data-stu-id="4610b-112">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="4610b-113">Indica se questa istanza e un oggetto specificato sono uguali.</span><span class="sxs-lookup"><span data-stu-id="4610b-113">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="4610b-114"><see langword="true" /> se <paramref name="obj" /> e questa istanza presentano lo stesso tipo e rappresentano lo stesso valore. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4610b-114"><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MemberInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetAccessors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4610b-115">Ottiene una matrice delle funzioni di accesso per il membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-115">Gets an array of the accessors for the represented member.</span></span></summary>
        <returns><span data-ttu-id="4610b-116">Matrice delle funzioni di accesso per il membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-116">An array of the accessors for the represented member.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4610b-117">Una o più funzioni di accesso in questo oggetto non sono valide.</span><span class="sxs-lookup"><span data-stu-id="4610b-117">One or more of the accessors in this object are invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4610b-118">Restituisce il codice hash per l'istanza.</span><span class="sxs-lookup"><span data-stu-id="4610b-118">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4610b-119">Intero con segno a 32 bit che rappresenta il codice hash per questa istanza.</span><span class="sxs-lookup"><span data-stu-id="4610b-119">A 32-bit signed integer that is the hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4610b-120">Ottiene il tipo del membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-120">Gets the type of the represented member.</span></span></summary>
        <value><span data-ttu-id="4610b-121">Tipo del membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="4610b-121">The type of the represented member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As LazyMemberInfo, right As LazyMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo left, System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="right" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4610b-122">Primo oggetto da testare.</span><span class="sxs-lookup"><span data-stu-id="4610b-122">The first object to test.</span></span></param>
        <param name="right"><span data-ttu-id="4610b-123">Secondo oggetto da testare.</span><span class="sxs-lookup"><span data-stu-id="4610b-123">The second object to test.</span></span></param>
        <summary><span data-ttu-id="4610b-124">Determina se i due oggetti <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> specificati sono uguali.</span><span class="sxs-lookup"><span data-stu-id="4610b-124">Determines whether the two specified <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="4610b-125"><see langword="true" /> se gli oggetti sono uguali. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4610b-125"><see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As LazyMemberInfo, right As LazyMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo left, System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="right" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4610b-126">Primo oggetto da testare.</span><span class="sxs-lookup"><span data-stu-id="4610b-126">The first object to test.</span></span></param>
        <param name="right"><span data-ttu-id="4610b-127">Secondo oggetto da testare.</span><span class="sxs-lookup"><span data-stu-id="4610b-127">The second object to test.</span></span></param>
        <summary><span data-ttu-id="4610b-128">Determina se i due oggetti <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> specificati non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="4610b-128">Determines whether the two specified <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="4610b-129"><see langword="true" /> se gli oggetti sono uguali. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4610b-129"><see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>