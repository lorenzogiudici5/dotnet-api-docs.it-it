<Type Name="GroupStyle" FullName="System.Windows.Controls.GroupStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5632ce8acd9e2b3f133f542b27d5a1e11582fa18" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupStyle : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi GroupStyle extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.GroupStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupStyle&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupStyle : System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce l'aspetto del gruppo in ogni livello.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Negli esempi seguenti viene illustrato un <xref:System.Windows.Controls.ItemsControl> associato a un <xref:System.Windows.Data.XmlDataProvider> e il contenuto di code-behind che contiene la logica per aggiungere e rimuovere il raggruppamento. Quando la casella di controllo è selezionata, il contenuto del <xref:System.Windows.Controls.ItemsControl> viene raggruppato il `Type` attributo.  
  
 Ogni gruppo è di tipo <xref:System.Windows.Data.CollectionViewGroup>. Il <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> è specificato in modo che venga visualizzato come un <xref:System.Windows.Controls.TextBlock> che consente di visualizzare il <xref:System.Windows.Data.CollectionViewGroup.Name%2A> di ogni gruppo. In questo caso, il <xref:System.Windows.Data.CollectionViewGroup.Name%2A> è `Work` o `Home`.  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.GroupStyle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di oggetti <see cref="T:System.Windows.Controls.GroupItem" /> alternativi.</summary>
        <value>Numero di oggetti <see cref="T:System.Windows.Controls.GroupItem" /> alternativi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> proprietà e <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> proprietà associata consentono di specificare l'aspetto per due o più alternati <xref:System.Windows.Controls.GroupItem> oggetti. Ad esempio, è possibile specificare i colori di sfondo alternativi per ogni terzo <xref:System.Windows.Controls.GroupItem> in un <xref:System.Windows.Controls.ItemsControl>.  Il <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> viene assegnato a ogni <xref:System.Windows.Controls.GroupItem> nel <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> inizia da 0, con incrementi fino a quando non è <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> meno 1 e quindi nuovamente da 0. Ad esempio, se <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> è 3 e sono disponibili sette <xref:System.Windows.Controls.GroupItem> gli oggetti di <xref:System.Windows.Controls.ItemsControl>, la tabella seguente elenca il <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> per ogni elemento.  
  
|Posizione di <xref:System.Windows.Controls.GroupItem> nel <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Esistono diversi metodi che è possibile utilizzare per specificare diversi aspetti per alternativi <xref:System.Windows.Controls.GroupItem> oggetti. Un metodo consiste nell'associare le proprietà nel <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> o <xref:System.Windows.Controls.GroupStyle.ContainerStyle%2A> del <xref:System.Windows.Controls.GroupStyle> per il <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. È quindi possibile utilizzare un <xref:System.Windows.Controls.AlternationConverter> per specificare il valore deve essere applicato per la <xref:System.Windows.Controls.GroupItem> che dispone di un determinato <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> valore. È inoltre possibile utilizzare i trigger per modificare il valore di una proprietà in base al valore relativo <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Controls.ListBox> associato a un <xref:System.Windows.Data.CollectionViewSource> che raggruppa gli elementi nella raccolta. Nell'esempio per lo sfondo dell'intestazione di ogni <xref:System.Windows.Controls.GroupItem> tra due colori effettuando le operazioni seguenti:  
  
-   Set <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> a 2.  
  
-   Crea un <xref:System.Windows.Controls.AlternationConverter> che restituisce un <xref:System.Windows.Media.SolidColorBrush>, a seconda del valore di <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
-   Associa il <xref:System.Windows.Controls.TextBlock.Background%2A> del <xref:System.Windows.Controls.TextBlock> nel <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> per il <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> proprietà e fornisce il <xref:System.Windows.Controls.AlternationConverter>. Si noti che il <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A> proprietà associata è impostata sul <xref:System.Windows.Controls.GroupItem>e l'associazione utilizza <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> per ottenere il relativo valore.  
  
 Nell'esempio viene inoltre per lo sfondo degli elementi nel <xref:System.Windows.Controls.ListBox> tra tre colori impostando il <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> nel <xref:System.Windows.Controls.ListBox> e l'associazione di <xref:System.Windows.Controls.Control.Background%2A> di ogni <xref:System.Windows.Controls.ListBox> per il <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. In questo caso, lo sfondo viene visualizzato tra tre colori.  
  
 Il <xref:System.Windows.Data.CollectionViewSource> che gruppi di elementi non viene visualizzato.  Per informazioni su come elemento di gruppo, vedere [procedura: ordinare e gruppo di dati tramite una vista in XAML](~/docs/framework/wpf/data/how-to-sort-and-group-data-using-a-view-in-xaml.md).  
  
 [!code-xaml[AlternationIndexSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo stile applicato all'oggetto <see cref="T:System.Windows.Controls.GroupItem" /> generato per ogni elemento.</summary>
        <value>Stile applicato all'oggetto <see cref="T:System.Windows.Controls.GroupItem" /> generato per ogni elemento. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è un raro caso in cui la creazione un <xref:System.Windows.Style> inline nella sintassi degli elementi di proprietà, anziché creare lo stile come una risorsa, è una metodologia alternativa.  
  
<a name="xamlAttributeUsage_ContainerStyle"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object ContainerStyle="{ResourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlValues_ColumnHeaderContainerStyle"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *resourceExtension*  
 Uno dei seguenti: `StaticResource`, o `DynamicResource`. Vedere [risorse XAML](~/docs/framework/wpf/advanced/xaml-resources.md).  
  
 *StyleResourceKey*  
 La chiave che identifica lo stile richiesto. La chiave fa riferimento a una risorsa esistente in un <xref:System.Windows.ResourceDictionary>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente al writer dell'applicazione di fornire la logica di selezione personalizzata per uno stile da applicare a ogni oggetto <see cref="T:System.Windows.Controls.GroupItem" /> generato.</summary>
        <value>Oggetto derivato da <see cref="T:System.Windows.Controls.StyleSelector" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.GroupStyle Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.GroupStyle Default" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As GroupStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::GroupStyle ^ Default { System::Windows::Controls::GroupStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stile predefinito del gruppo.</summary>
        <value>Stile predefinito del gruppo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Default"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.property>  
    <x:Static Member="GroupStyle.Default" …/>  
  </object.property>  
</object>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGroupPanel">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultGroupPanel As ItemsPanelTemplate " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Controls::ItemsPanelTemplate ^ DefaultGroupPanel;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica l'oggetto <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> predefinito che crea il pannello utilizzato per il layout degli elementi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando è necessario un pannello predefinita si tratta del pannello che viene fornito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HeaderStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa composita che specifica come formattare l'intestazione se visualizzata come stringa.</summary>
        <value>Stringa composita che specifica come formattare l'intestazione se visualizzata come stringa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> può essere un formato di stringa predefinito, composito o personalizzato. Per ulteriori informazioni sui formati di stringa, vedere [formattazione dei tipi di](~/docs/standard/base-types/formatting-types.md). Se si imposta la <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> o <xref:System.Windows.Controls.GroupStyle.HeaderTemplateSelector%2A> proprietà di un <xref:System.Windows.Controls.GroupStyle>, <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> proprietà viene ignorata.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Controls.ListBox> che raggruppa in una raccolta di elementi base di prezzo.  Il convertitore, `GroupByPrice`, restituisce un valore intero che si trova sopra il prezzo di ogni elemento. Se, ad esempio, un prezzo è compreso tra 0 e 100, il convertitore restituisce 100. Nell'esempio viene utilizzato il <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> per creare una stringa che include il limite superiore per ogni intervallo di prezzi. Ad esempio, negli Stati Uniti, gli elementi che sono meno di 100 dollari vengono raggruppati sotto l'intestazione "Elementi meno di $100".  
  
 [!code-xaml[ContentStringSnippets#GroupStyleHeaderStringFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#groupstyleheaderstringformat)]  
  
 Nell'esempio seguente il `GroupByPrice` (classe), il `PurchaseItem` classe e la raccolta che la <xref:System.Windows.Controls.ListBox> è associato a.  
  
 [!code-csharp[ContentStringSnippets#GroupStyleData](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml.cs#groupstyledata)]
 [!code-vb[ContentStringSnippets#GroupStyleData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentStringSnippets/visualbasic/window1.xaml.vb#groupstyledata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ HeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modello utilizzato per visualizzare l'intestazione di gruppo.</summary>
        <value>Oggetto <see cref="T:System.Windows.DataTemplate" /> utilizzato per visualizzare l'intestazione di gruppo. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Negli esempi seguenti viene illustrato un <xref:System.Windows.Controls.ItemsControl> associato a un <xref:System.Windows.Data.XmlDataProvider> e il contenuto di code-behind che contiene la logica per aggiungere e rimuovere il raggruppamento. Quando la casella di controllo è selezionata, il contenuto del <xref:System.Windows.Controls.ItemsControl> viene raggruppato il `Type` attributo.  
  
 Ogni gruppo è di tipo <xref:System.Windows.Data.CollectionViewGroup>. Il <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> è specificato in modo che venga visualizzato come un <xref:System.Windows.Controls.TextBlock> che consente di visualizzare il <xref:System.Windows.Data.CollectionViewGroup.Name%2A> di ogni gruppo. In questo caso, il <xref:System.Windows.Data.CollectionViewGroup.Name%2A> è `Work` o `Home`.  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> proprietà:  
  
 [!code-xaml[DataBindingLab#GroupStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#groupstyle)]  
  
 Di seguito è la definizione di `groupingHeaderTemplate` <xref:System.Windows.DataTemplate>:  
  
 [!code-xaml[DataBindingLab#HeaderTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#headertemplate)]  
  
 Per l'esempio completo, vedere [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ HeaderTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente al writer dell'applicazione di fornire la logica di selezione personalizzata per un modello utilizzato per visualizzare l'intestazione di gruppo.</summary>
        <value>Oggetto derivato da <see cref="T:System.Windows.Controls.DataTemplateSelector" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HidesIfEmpty">
      <MemberSignature Language="C#" Value="public bool HidesIfEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesIfEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HidesIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property HidesIfEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HidesIfEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se visualizzare elementi corrispondenti a gruppi vuoti.</summary>
        <value>
          <see langword="true" /> per non visualizzare gruppi vuoti; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Argomenti dell'evento da generare.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> utilizzando gli argomenti specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Panel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate Panel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate Panel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Panel" />
      <MemberSignature Language="VB.NET" Value="Public Property Panel As ItemsPanelTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemsPanelTemplate ^ Panel { System::Windows::Controls::ItemsPanelTemplate ^ get(); void set(System::Windows::Controls::ItemsPanelTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un modello che crea il riquadro utilizzato per il layout degli elementi.</summary>
        <value>Oggetto <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> che crea il riquadro utilizzato per il layout degli elementi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.GroupStyle.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Generato quando il valore di una proprietà cambia.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
  </Members>
</Type>