<Type Name="TextChangedEventArgs" FullName="System.Windows.Controls.TextChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4be6696195de492f654e3b296ae698113815b144" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30621445" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextChangedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextChangedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TextChangedEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextChangedEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per l'evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente visualizza il numero di volte in cui il testo in un <xref:System.Windows.Controls.TextBox> le modifiche. Di seguito è riportato il codice XAML per l'esempio.  
  
 [!code-xaml[TextBoxMiscSnippets_snip#DetectChangedTextExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/detectchangedtextexample.xaml#detectchangedtextexamplewholepage)]  
  
 Di seguito è indicato il code-behind per l'esempio.  
  
 [!code-csharp[TextBoxMiscSnippets_snip#DetectChangedTextCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/detectchangedtextexample.xaml.cs#detectchangedtextcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_snip#DetectChangedTextCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/visualbasic/detectchangedtextexample.xaml.vb#detectchangedtextcodeexamplewholepage)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.TextChangedEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextChangedEventArgs (System.Windows.RoutedEvent id, System.Windows.Controls.UndoAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent id, valuetype System.Windows.Controls.UndoAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As RoutedEvent, action As UndoAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextChangedEventArgs(System::Windows::RoutedEvent ^ id, System::Windows::Controls::UndoAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Windows.RoutedEvent" />
        <Parameter Name="action" Type="System.Windows.Controls.UndoAction" />
      </Parameters>
      <Docs>
        <param name="id">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] dell'evento.</param>
        <param name="action">
          <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> causato dalla modifica di testo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> utilizzando l'ID di evento e l’operazione di annullamento specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextChangedEventArgs (System.Windows.RoutedEvent id, System.Windows.Controls.UndoAction action, System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; changes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent id, valuetype System.Windows.Controls.UndoAction action, class System.Collections.Generic.ICollection`1&lt;class System.Windows.Controls.TextChange&gt; changes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As RoutedEvent, action As UndoAction, changes As ICollection(Of TextChange))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextChangedEventArgs(System::Windows::RoutedEvent ^ id, System::Windows::Controls::UndoAction action, System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ changes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Windows.RoutedEvent" />
        <Parameter Name="action" Type="System.Windows.Controls.UndoAction" />
        <Parameter Name="changes" Type="System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;" />
      </Parameters>
      <Docs>
        <param name="id">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] dell'evento.</param>
        <param name="action">
          <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> causato dalla modifica di testo.</param>
        <param name="changes">Le modifiche che si sono verificate durante questo evento. Per ulteriori informazioni, vedere <see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> utilizzando l'ID di evento, l’operazione di annullamento e la modifica del testo, specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.TextChangedEventArgs.%23ctor%2A> è stato introdotto in .NET Framework versione 3.5.  Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Changes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; Changes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Controls.TextChange&gt; Changes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextChangedEventArgs.Changes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Changes As ICollection(Of TextChange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ Changes { System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di oggetti contenenti informazioni riguardo alle modifiche che si sono verificate.</summary>
        <value>Insieme di oggetti contenenti informazioni riguardo alle modifiche che si sono verificate.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È presente <xref:System.Windows.Controls.TextChange> oggetto per ogni modifica al controllo consecutivo. Più di una modifica consecutiva può verificarsi durante un'occorrenza del <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> evento quando la modifica comporta la modifica della struttura del documento sottostante.  
  
 Ad esempio, si supponga che un <xref:System.Windows.Controls.RichTextBox> contiene la stringa `"This is some text."` la struttura del <xref:System.Windows.Controls.RichTextBox.Document%2A?displayProperty=nameWithType> è `<Paragraph><Run>This is some text.</Run></Paragraph>`. Se l'utente formatta in grassetto le parole `"is some"`, la struttura dell'oggetto sottostante <xref:System.Windows.Documents.FlowDocument> diventa `<Paragraph><Run>This </Run><Run  FontWeight="Bold">is some</Run><Run> text.</Run></Paragraph>`. Esistono effettivamente quattro modifiche che hanno come risultato dell'azione dell'utente:  
  
1.  Il `<Run>` simbolo viene rimosso e riaggiunto prima della parola `This`.  
  
2.  I simboli `</Run><Run>` vengono aggiunti dopo la parola `This`.  
  
3.  I simboli `</Run><Run>` vengono aggiunti dopo la parola `some`.  
  
4.  Il `</Run>` simbolo viene rimosso e riaggiunto dopo la parola `Text`.  
  
 In generale, verrà sempre essere soddisfatti i seguenti:  
  
-   Le modifiche che si verificano risultati nel documento in uno stato valido.  
  
-   La raccolta è ordinata in modo consecutivo, alla riga in cui si è verificata la modifica nel controllo.  Ad esempio, un <xref:System.Windows.Controls.TextChange> oggetto che rappresenta una modifica nella posizione 2 è prima di un <xref:System.Windows.Controls.TextChange> oggetto che rappresenta una modifica alla posizione 10.  
  
-   Due <xref:System.Windows.Controls.TextChange> oggetti non rappresentano un'area sovrapposta.  Il valore di <xref:System.Windows.Controls.TextChange.Offset%2A> sommato al valore di <xref:System.Windows.Controls.TextChange.AddedLength%2A> di uno <xref:System.Windows.Controls.TextChange> oggetto è sempre minore o uguale al valore di <xref:System.Windows.Controls.TextChange.Offset%2A> del successivo <xref:System.Windows.Controls.TextChange> oggetto nella raccolta. Analogamente, il valore di <xref:System.Windows.Controls.TextChange.Offset%2A> sommato al valore di <xref:System.Windows.Controls.TextChange.RemovedLength%2A> di uno <xref:System.Windows.Controls.TextChange> oggetto è sempre minore o uguale al valore di <xref:System.Windows.Controls.TextChange.Offset%2A> del successivo <xref:System.Windows.Controls.TextChange> oggetto nella raccolta.  
  
-   La raccolta riflette tutte le modifiche si è verificato, anche se sembra presente delle modifiche delta. Nell'esempio precedente, né il primo o quarto modifica comporta cambiamenti, perché ognuno ha semplicemente rimosso e riaggiunto il `<Run>` e `</Run>` simboli, rispettivamente. Ma i simboli sono stati effettivamente rimossi e aggiunti, pertanto sono inclusi nella raccolta.  
  
 Se il <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> evento si verifica in seguito a una modifica di proprietà, <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> è una raccolta vuota.  Nell'esempio precedente, se utente formatta in grassetto l'intera stringa, il <xref:System.Windows.Documents.TextElement.FontWeight%2A> proprietà del <xref:System.Windows.Documents.Run> è impostato su <xref:System.Windows.FontWeights.Bold%2A>, ma non viene aggiunto o rimosso dal documento, pertanto <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> è vuoto.  
  
 <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> è stato introdotto in .NET Framework versione 3.5.  Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">Il gestore da richiamare.</param>
        <param name="genericTarget">Oggetto corrente lungo la route dell'evento.</param>
        <summary>Esegue l’appropriato cast dei tipi per chiamare il delegato <see cref="T:System.Windows.Controls.TextChangedEventHandler" />, che è indipendente dai tipi, per l’evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoAction">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UndoAction UndoAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.UndoAction UndoAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoAction As UndoAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UndoAction UndoAction { System::Windows::Controls::UndoAction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UndoAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'utilizzo dello stack di annullamento causato o interessato da questa modifica di testo.</summary>
        <value>
          <see cref="T:System.Windows.Controls.UndoAction" /> adatto per questa modifica di testo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>