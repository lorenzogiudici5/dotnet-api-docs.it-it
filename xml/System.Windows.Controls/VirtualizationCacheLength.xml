<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VirtualizationCacheLength.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f6f46b8725b7c42e3e705b4945fdda038a3dc6e5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6f46b8725b7c42e3e705b4945fdda038a3dc6e5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.VirtualizationCacheLength">
          <source>Represents the measurements for the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /&gt;</ph> attached property.</source>
          <target state="translated">Rappresenta le misurazioni per la proprietà associata <ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizationCacheLength">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType&gt;</ph> attached property specifies the amount of space in which a <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingPanel&gt;</ph> virtualizes the items before or after the view port (the area in which items are visible).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType&gt;</ph> proprietà associata specifica la quantità di spazio in cui un <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingPanel&gt;</ph> consente di virtualizzare gli elementi prima o dopo la visualizzazione di porta (l'area in cui gli elementi sono visibili).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizationCacheLength">
          <source>You can specify uniform cache length my creating a <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> by using the constructor that takes a single parameter.</source>
          <target state="translated">È possibile specificare la lunghezza della cache uniform la creazione di un <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> utilizzando il costruttore che accetta un singolo parametro.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizationCacheLength">
          <source>You can use the constructor that takes two parameters to specify different values for the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> properties.</source>
          <target state="translated">È possibile utilizzare il costruttore che accetta due parametri per specificare valori diversi per il <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.VirtualizationCacheLength">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> class.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)">
          <source>The size of the cache before and after the viewport.</source>
          <target state="translated">La dimensione della cache prima e dopo il riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> class with a uniform cache length for each side of the viewport.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> con una lunghezza uniforme della cache per ogni lato del riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)">
          <source>The size of the cache before the viewport.</source>
          <target state="translated">Dimensioni della cache prima del riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)">
          <source>The size of the cache after the viewport.</source>
          <target state="translated">Dimensioni della cache dopo il riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> class with the specified cache lengths for each side of the viewport.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> con le lunghezze della cache specificate per ogni lato del riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
          <source>Gets the size of the cache before the viewport when the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph> is virtualizing.</source>
          <target state="translated">Ottiene la dimensione della cache prima del riquadro di visualizzazione in fase di virtualizzazione di <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
          <source>The size of the cache after the viewport when the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph> is virtualizing.</source>
          <target state="translated">Dimensioni della cache dopo il riquadro di visualizzazione quando l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph> esegue la virtualizzazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
          <source>In this context, "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on the screen.</source>
          <target state="translated">In questo contesto, "virtualizzare" si riferisce a una tecnica mediante il quale un subset di <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> vengono generati gli elementi da un gran numero di elementi di dati in base alle quali elementi sono visibili sullo schermo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
          <source>Use a cache to avoid generating <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements as they’re scrolled into view.</source>
          <target state="translated">Usare una cache per evitare di generare <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elementi come si esegue lo scorrimento nella visualizzazione.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
          <source>Gets the size of the cache after the viewport when the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph> is virtualizing.</source>
          <target state="translated">Ottiene la dimensione della cache dopo il riquadro di visualizzazione in fase di virtualizzazione di <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
          <source>The size of the cache after the viewport when the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph> is virtualizing.</source>
          <target state="translated">Dimensioni della cache dopo il riquadro di visualizzazione quando l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph> esegue la virtualizzazione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
          <source>In this context, "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on the screen.</source>
          <target state="translated">In questo contesto, "virtualizzare" si riferisce a una tecnica mediante il quale un subset di <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> vengono generati gli elementi da un gran numero di elementi di dati in base alle quali elementi sono visibili sullo schermo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
          <source>Use a cache to avoid generating <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements as they’re scrolled into view.</source>
          <target state="translated">Usare una cache per evitare di generare <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elementi come si esegue lo scorrimento nella visualizzazione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.VirtualizationCacheLength">
          <source>Determines whether two objects are equal.</source>
          <target state="translated">Determina se due oggetti sono uguali.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Oggetto da confrontare con l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Determina se l'oggetto specificato è uguale all'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto specificato è uguale all'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> verifica l'uguaglianza di valore.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
          <target state="translated">Ovvero, i due oggetti sono uguali se i relativi <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> i valori delle proprietà sono uguali e i relativi <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> i valori delle proprietà sono uguali.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Oggetto da confrontare con l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Determina se l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> specificato è uguale all'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto specificato è uguale all'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> verifica l'uguaglianza di valore.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
          <target state="translated">Ovvero, i due oggetti sono uguali se i relativi <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> i valori delle proprietà sono uguali e i relativi <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> i valori delle proprietà sono uguali.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode">
          <source>Gets a hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Ottiene un codice hash per la <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>The first object to compare.</source>
          <target state="translated">Primo oggetto da confrontare.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>The second object to compare.</source>
          <target state="translated">Secondo oggetto da confrontare.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>Determines whether the two specified <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> objects are equal.</source>
          <target state="translated">Determina se i due oggetti <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> specificati sono uguali.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se gli oggetti <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> specificati sono uguali; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> verifica l'uguaglianza di valore.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
          <target state="translated">Ovvero, i due oggetti sono uguali se i relativi <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> i valori delle proprietà sono uguali e i relativi <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> i valori delle proprietà sono uguali.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>The first object to compare.</source>
          <target state="translated">Primo oggetto da confrontare.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>The second object to compare.</source>
          <target state="translated">Secondo oggetto da confrontare.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>Determines whether the two specified <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> objects are equal.</source>
          <target state="translated">Determina se i due oggetti <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> specificati sono uguali.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se gli oggetti <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> specificati sono uguali; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> verifica l'uguaglianza di valore.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
          <target state="translated">Ovvero, i due oggetti sono uguali se i relativi <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> i valori delle proprietà sono uguali e i relativi <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> i valori delle proprietà sono uguali.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.ToString">
          <source>Returns a string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Restituisce una stringa che rappresenta l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizationCacheLength.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph>.</source>
          <target state="translated">Stringa che rappresenta l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizationCacheLength" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizationCacheLength.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A&gt;</ph> method returns a string that displays the values of the <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> properties.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A&gt;</ph> metodo restituisce una stringa che visualizza i valori del <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> proprietà.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>