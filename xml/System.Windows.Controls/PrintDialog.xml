<Type Name="PrintDialog" FullName="System.Windows.Controls.PrintDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2ff668fcfe6ea6ad22ee4b07dce62cfe66d7575" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32693044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDialog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PrintDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDialog" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Richiama una finestra di dialogo per la stampa di Microsoft Windows standard che configura un <see cref="T:System.Printing.PrintTicket" /> e una <see cref="T:System.Printing.PrintQueue" /> in base all'input dell'utente e quindi stampa un documento.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un utente può utilizzare il **stampa** la finestra di dialogo per selezionare una stampante, configurare, eseguire un processo di stampa.  
  
 In teoria, è possibile utilizzare il <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A> metodo senza mai aprire la finestra di dialogo. In tal senso, il controllo può essere utilizzato come un componente di stampa non visibili. Ma per motivi di prestazioni, sarebbe preferibile utilizzare il di <xref:System.Printing.PrintQueue.AddJob%2A> metodo o una delle numerose <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> e <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> metodi il <xref:System.Windows.Xps.XpsDocumentWriter>. Per ulteriori informazioni, vedere [procedura: stampa a livello di programmazione i file di XPS](~/docs/framework/wpf/advanced/how-to-programmatically-print-xps-files.md).  
  
 Non confondere questa classe, <xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType>, con <xref:System.Windows.Forms.PrintDialog?displayProperty=nameWithType>. Quest'ultimo viene utilizzato con le applicazioni Windows Form. <xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType> viene utilizzato con le applicazioni Windows Presentation Foundation.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un'istanza di e visualizzare una semplice <xref:System.Windows.Controls.PrintDialog> utilizzando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup e codice.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.PrintDialog" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPageEnabled">
      <MemberSignature Language="C#" Value="public bool CurrentPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CurrentPageEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'opzione per stampare la pagina corrente è abilitata.</summary>
        <value>
          <see langword="true" /> se la l'opzione per stampare la pagina corrente è abilitata; in caso contrario <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPage">
      <MemberSignature Language="C#" Value="public uint MaxPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MaxPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MaxPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il più alto numero di pagina consentito negli intervalli delle pagine.</summary>
        <value>Oggetto <see cref="T:System.UInt32" /> che rappresenta il numero di pagina più alto che può essere utilizzato in un intervallo di pagine nel **stampa** la finestra di dialogo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utenti, fare clic su **stampa** quando il **stampa** la finestra di dialogo è impostata su pagine non compreso nell'intervallo impostato da stampare il <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> e <xref:System.Windows.Controls.PrintDialog.MinPage%2A> valori verranno visualizzato un messaggio di errore del numeri di pagina massimo e minimo. Nessun processo verrà stampato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà viene impostata a un valore minore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinPage">
      <MemberSignature Language="C#" Value="public uint MinPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MinPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MinPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MinPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il più basso numero di pagina consentito negli intervalli delle pagine.</summary>
        <value>Oggetto <see cref="T:System.UInt32" /> che rappresenta il numero di pagina più basso che può essere utilizzato in un intervallo di pagine nel **stampa** la finestra di dialogo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utenti, fare clic su **stampa** quando il **stampa** la finestra di dialogo è impostata su pagine non compreso nell'intervallo impostato da stampare il <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> e <xref:System.Windows.Controls.PrintDialog.MinPage%2A> valori verranno visualizzato un messaggio di errore del numeri di pagina massimo e minimo. Nessun processo verrà stampato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà viene impostata a un valore minore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRange PageRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRange PageRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRange" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRange As PageRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRange PageRange { System::Windows::Controls::PageRange get(); void set(System::Windows::Controls::PageRange value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'intervallo di pagine da stampare quando <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> è impostato su <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />.</summary>
        <value>Un <see cref="T:System.Windows.Controls.PageRange" /> che rappresenta l'intervallo di pagine che vengono stampate.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Windows.Controls.PageRange" /> che si sta utilizzando per impostare la proprietà contiene l'inizio dell'intervallo o la fine dell'intervallo impostati su un valore che è minore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRangeSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRangeSelection PageRangeSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRangeSelection PageRangeSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRangeSelection As PageRangeSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRangeSelection PageRangeSelection { System::Windows::Controls::PageRangeSelection get(); void set(System::Windows::Controls::PageRangeSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRangeSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta <see cref="T:System.Windows.Controls.PageRangeSelection" /> per questa istanza di <see cref="T:System.Windows.Controls.PrintDialog" />.</summary>
        <value>Il valore <see cref="T:System.Windows.Controls.PageRangeSelection" /> che rappresenta il tipo di intervallo di pagine da stampare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Controls.PrintDialog.PageRangeSelection%2A> proprietà utilizzando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup e codice.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaHeight">
      <MemberSignature Language="C#" Value="public double PrintableAreaHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'altezza dell'area stampabile della pagina.</summary>
        <value>Un <see cref="T:System.Double" /> che rappresenta l'altezza dell’area stampabile della pagina.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il valore di <xref:System.Windows.Controls.PrintDialog.PrintableAreaHeight%2A> proprietà utilizzando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup e codice.  
  
 [!code-xaml[PrintDialog#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#4)]  
  
 ...  
  
 [!code-csharp[PrintDialog#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PrintDialog#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaWidth">
      <MemberSignature Language="C#" Value="public double PrintableAreaWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la larghezza dell'area stampabile della pagina.</summary>
        <value>Un <see cref="T:System.Double" /> che rappresenta la larghezza dell’area stampabile della pagina.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il valore di <xref:System.Windows.Controls.PrintDialog.PrintableAreaWidth%2A> proprietà utilizzando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup e codice.  
  
 [!code-xaml[PrintDialog#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#3)]  
  
 ...  
  
 [!code-csharp[PrintDialog#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PrintDialog#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public void PrintDocument (System.Windows.Documents.DocumentPaginator documentPaginator, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintDocument(class System.Windows.Documents.DocumentPaginator documentPaginator, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintDocument(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">L’oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> da stampare.</param>
        <param name="description">Una descrizione del processo che deve essere stampato. Questo testo viene visualizzato nella [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] della stampante.</param>
        <summary>Stampa un oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> della <see cref="T:System.Printing.PrintQueue" /> attualmente selezionata.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="documentPaginator" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="PrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue PrintQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue PrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ PrintQueue { System::Printing::PrintQueue ^ get(); void set(System::Printing::PrintQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una <see cref="T:System.Printing.PrintQueue" /> che rappresenta la stampante selezionata.</summary>
        <value>La <see cref="T:System.Printing.PrintQueue" /> che l'utente ha selezionato.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">per l'autorizzazione alla stampa. Enumerazione associata: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintTicket ^ PrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il <see cref="T:System.Printing.PrintTicket" /> usato da <see cref="T:System.Windows.Controls.PrintDialog" /> quando l'utente fa clic su **Stampa** per il processo di stampa corrente.</summary>
        <value>Oggetto <see cref="T:System.Printing.PrintTicket" /> utilizzato la volta successiva che il **stampa** si fa clic sul pulsante nella finestra di dialogo.  
  
 L'impostazione della proprietà <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> non convalida o non modifica il <see cref="T:System.Printing.PrintTicket" /> specificato per un particolare <see cref="T:System.Printing.PrintQueue" />.  Se necessario, utilizzare il metodo <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> per creare un <see cref="T:System.Printing.PrintQueue" /> specifico della <see cref="T:System.Printing.PrintTicket" /> che sia valido per una stampante specificata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione né ottenere questa proprietà convalida il <xref:System.Printing.PrintTicket>. Per la convalida utilizzare <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintVisual">
      <MemberSignature Language="C#" Value="public void PrintVisual (System.Windows.Media.Visual visual, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintVisual(class System.Windows.Media.Visual visual, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintVisual(System::Windows::Media::Visual ^ visual, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="visual">L’oggetto <see cref="T:System.Windows.Media.Visual" /> da stampare.</param>
        <param name="description">Una descrizione del processo che deve essere stampato. Questo testo viene visualizzato nella [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] della stampante.</param>
        <summary>Stampa un oggetto visuale (non testo) derivato dalla classe <see cref="T:System.Windows.Media.Visual" />, alla <see cref="T:System.Printing.PrintQueue" /> che è selezionata attualmente.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visual" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedPagesEnabled">
      <MemberSignature Language="C#" Value="public bool SelectedPagesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectedPagesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedPagesEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectedPagesEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'opzione per stampare le pagine selezionate è abilitata.</summary>
        <value>
          <see langword="true" /> se l'opzione per stampare le pagine selezionate è abilitata; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richiama <see cref="T:System.Windows.Controls.PrintDialog" /> come finestra di dialogo modale.</summary>
        <returns>
          <see langword="true" /> se un utente fa clic su **Stampa**, <see langword="false" /> se un utente fa clic su **Annulla** oppure <see langword="null" /> se un utente chiude la finestra di dialogo senza fare clic su **Stampa** o su **Annulla**.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.PrintDialog.ShowDialog%2A> metodo nel codice.  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserPageRangeEnabled">
      <MemberSignature Language="C#" Value="public bool UserPageRangeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserPageRangeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property UserPageRangeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserPageRangeEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se utenti della finestra di dialogo **Stampa** hanno la possibilità di specificare intervalli di pagine da stampare.</summary>
        <value>
          <see langword="true" /> se l’opzione è disponibile; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Controls.PrintDialog.UserPageRangeEnabled%2A> proprietà utilizzando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup e codice.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>