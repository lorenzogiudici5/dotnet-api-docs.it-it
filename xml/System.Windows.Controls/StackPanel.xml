<Type Name="StackPanel" FullName="System.Windows.Controls.StackPanel">
  <TypeSignature Language="C#" Value="public class StackPanel : System.Windows.Controls.Panel, System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi StackPanel extends System.Windows.Controls.Panel implements class System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StackPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class StackPanel&#xA;Inherits Panel&#xA;Implements IScrollInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackPanel : System::Windows::Controls::Panel, System::Windows::Controls::Primitives::IScrollInfo" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IScrollInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d338d-101">Dispone gli elementi figlio su una sola riga che può essere orientata orizzontalmente o verticalmente.</span><span class="sxs-lookup"><span data-stu-id="d338d-101">Arranges child elements into a single line that can be oriented horizontally or vertically.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-102">Oggetto <xref:System.Windows.Controls.StackPanel> contiene una raccolta di <xref:System.Windows.UIElement> oggetti, che si trovano nel <xref:System.Windows.Controls.Panel.Children%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d338d-102">A <xref:System.Windows.Controls.StackPanel> contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.</span></span>  
  
 <span data-ttu-id="d338d-103">Il valore predefinito è esteso per <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> e <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> di contenuto che è contenuto in un <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="d338d-103">The default value is stretch for both <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> of content that is contained in a <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="d338d-104">Gli elementi del riquadro non viene visualizzato lo stato attivo per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="d338d-104">Panel elements do not receive focus by default.</span></span> <span data-ttu-id="d338d-105">Per forzare un elemento del pannello per ricevere lo stato attivo, impostare il <xref:System.Windows.UIElement.Focusable%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="d338d-105">To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="d338d-106"><xref:System.Windows.Controls.StackPanel> implementa il <xref:System.Windows.Controls.Primitives.IScrollInfo> interfaccia per supportare lo scorrimento logico.</span><span class="sxs-lookup"><span data-stu-id="d338d-106"><xref:System.Windows.Controls.StackPanel> implements the <xref:System.Windows.Controls.Primitives.IScrollInfo> interface to support logical scrolling.</span></span> <span data-ttu-id="d338d-107">Logico viene utilizzato per scorrere all'elemento successivo nell'albero logico.</span><span class="sxs-lookup"><span data-stu-id="d338d-107">Logical scrolling is used to scroll to the next element in the logical tree.</span></span> <span data-ttu-id="d338d-108">Ciò si differenzia durante lo scorrimento fisico scorre il contenuto di un incremento fisico definito in una direzione specificata.</span><span class="sxs-lookup"><span data-stu-id="d338d-108">This is in contrast to physical scrolling, which scrolls content by a defined physical increment in a given direction.</span></span> <span data-ttu-id="d338d-109">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping dell'host <xref:System.Windows.Controls.StackPanel> elemento in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-109">If you require physical scrolling instead of logical scrolling, wrap the host <xref:System.Windows.Controls.StackPanel> element in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-110">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-110">Initializes a new instance of the <see cref="T:System.Windows.Controls.StackPanel" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize"><span data-ttu-id="d338d-111"><see cref="T:System.Windows.Size" /> che questo elemento deve utilizzare per disporre gli elementi figlio.</span><span class="sxs-lookup"><span data-stu-id="d338d-111">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</span></span></param>
        <summary><span data-ttu-id="d338d-112">Dispone il contenuto di un elemento <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-112">Arranges the content of a <see cref="T:System.Windows.Controls.StackPanel" /> element.</span></span></summary>
        <returns><span data-ttu-id="d338d-113">Oggetto <see cref="T:System.Windows.Size" /> che rappresenta la dimensione disposta dell'elemento <see cref="T:System.Windows.Controls.StackPanel" /> specificato e dei relativi elementi figlio.</span><span class="sxs-lookup"><span data-stu-id="d338d-113">The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.StackPanel" /> element and its child elements.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="CanHorizontallyScroll">
      <MemberSignature Language="C#" Value="public bool CanHorizontallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHorizontallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHorizontallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHorizontallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-114">Ottiene o imposta un valore che indica se un oggetto <see cref="T:System.Windows.Controls.StackPanel" /> può scorrere nella dimensione orizzontale.</span><span class="sxs-lookup"><span data-stu-id="d338d-114">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.StackPanel" /> can scroll in the horizontal dimension.</span></span></summary>
        <value>
          <span data-ttu-id="d338d-115"><see langword="true" /> se il contenuto può scorrere nella dimensione orizzontale; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-115"><see langword="true" /> if content can scroll in the horizontal dimension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-116">Questa proprietà non deve essere utilizzato nel codice.</span><span class="sxs-lookup"><span data-stu-id="d338d-116">This property is not intended to be used in your code.</span></span> <span data-ttu-id="d338d-117">Viene esposta pubblicamente per soddisfare un contratto di interfaccia (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="d338d-117">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="d338d-118">Impostazione di questa proprietà non ha alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="d338d-118">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="d338d-119">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-119">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="CanVerticallyScroll">
      <MemberSignature Language="C#" Value="public bool CanVerticallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanVerticallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanVerticallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanVerticallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanVerticallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-120">Ottiene o imposta un valore che indica se il contenuto può scorrere nella dimensione verticale.</span><span class="sxs-lookup"><span data-stu-id="d338d-120">Gets or sets a value that indicates whether content can scroll in the vertical dimension.</span></span></summary>
        <value>
          <span data-ttu-id="d338d-121"><see langword="true" /> se il contenuto può scorrere nella dimensione verticale; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-121"><see langword="true" /> if content can scroll in the vertical dimension; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d338d-122">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-122">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-123">Questa proprietà non è destinata all'utilizzo nel codice.</span><span class="sxs-lookup"><span data-stu-id="d338d-123">This property is not intended for use in your code.</span></span> <span data-ttu-id="d338d-124">Viene esposta pubblicamente per soddisfare un contratto di interfaccia (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="d338d-124">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="d338d-125">Impostazione di questa proprietà non ha alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="d338d-125">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="d338d-126">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-126">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-127">Ottiene un valore contenente la dimensione verticale dell'extent.</span><span class="sxs-lookup"><span data-stu-id="d338d-127">Gets a value that contains the vertical size of the extent.</span></span></summary>
        <value><span data-ttu-id="d338d-128"><see cref="T:System.Double" /> che rappresenta la dimensione verticale dell'extent.</span><span class="sxs-lookup"><span data-stu-id="d338d-128">The <see cref="T:System.Double" /> that represents the vertical size of the extent.</span></span> <span data-ttu-id="d338d-129">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="d338d-129">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-130">Il valore restituito è descritto in DIP (Device Independent pixel).</span><span class="sxs-lookup"><span data-stu-id="d338d-130">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-131">Ottiene un valore contenente la dimensione orizzontale dell'extent.</span><span class="sxs-lookup"><span data-stu-id="d338d-131">Gets a value that contains the horizontal size of the extent.</span></span></summary>
        <value>
          <span data-ttu-id="d338d-132"><see cref="T:System.Double" /> che rappresenta la dimensione orizzontale dell'extent.</span><span class="sxs-lookup"><span data-stu-id="d338d-132"><see cref="T:System.Double" /> that represents the horizontal size of the extent.</span></span> <span data-ttu-id="d338d-133">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="d338d-133">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-134">Il valore restituito è descritto in DIP (Device Independent pixel).</span><span class="sxs-lookup"><span data-stu-id="d338d-134">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override bool HasLogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HasLogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasLogicalOrientation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasLogicalOrientation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-135">Ottiene un valore che indica se <see cref="T:System.Windows.Controls.StackPanel" /> ha orientamento verticale o orizzontale.</span><span class="sxs-lookup"><span data-stu-id="d338d-135">Gets a value that indicates if this <see cref="T:System.Windows.Controls.StackPanel" /> has vertical or horizontal orientation.</span></span></summary>
        <value><span data-ttu-id="d338d-136">Questa proprietà restituisce sempre <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-136">This property always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-137">Questa proprietà restituisce sempre `true` perché un <xref:System.Windows.Controls.StackPanel> deve avere orientamento verticale o orizzontale.</span><span class="sxs-lookup"><span data-stu-id="d338d-137">This property always returns `true` because a <xref:System.Windows.Controls.StackPanel> must have either vertical or horizontal orientation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-138">Ottiene un valore che contiene l'offset orizzontale del contenuto di cui è stato eseguito lo scorrimento.</span><span class="sxs-lookup"><span data-stu-id="d338d-138">Gets a value that contains the horizontal offset of the scrolled content.</span></span></summary>
        <value><span data-ttu-id="d338d-139">Il <see cref="T:System.Double" /> che rappresenta l'offset orizzontale del contenuto a scorrimento.</span><span class="sxs-lookup"><span data-stu-id="d338d-139">The <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content.</span></span> <span data-ttu-id="d338d-140">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="d338d-140">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-141">Il valore restituito è descritto in DIP (Device Independent pixel).</span><span class="sxs-lookup"><span data-stu-id="d338d-141">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-142">Scorre il contenuto verso il basso di una unità logica.</span><span class="sxs-lookup"><span data-stu-id="d338d-142">Scrolls content downward by one logical unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-143">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-143">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-144">Scorre il contenuto di un'unità logica verso sinistra.</span><span class="sxs-lookup"><span data-stu-id="d338d-144">Scrolls content by one logical unit to the left.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-145">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-145">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-146">Scorre il contenuto di un'unità logica verso destra.</span><span class="sxs-lookup"><span data-stu-id="d338d-146">Scrolls content by one logical unit to the right.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-147">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-147">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-148">Scorre il contenuto da un'unità logica verso l'alto.</span><span class="sxs-lookup"><span data-stu-id="d338d-148">Scrolls content by one logical unit upward.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-149">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-149">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Controls.Orientation LogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.LogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Controls::Orientation LogicalOrientation { System::Windows::Controls::Orientation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-150">Ottiene un valore che rappresenta l'oggetto <see cref="T:System.Windows.Controls.Orientation" /> dell'elemento <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-150">Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation" /> of the <see cref="T:System.Windows.Controls.StackPanel" />.</span></span></summary>
        <value><span data-ttu-id="d338d-151">Valore <see cref="T:System.Windows.Controls.Orientation" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-151">An <see cref="T:System.Windows.Controls.Orientation" /> value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="MakeVisible">
      <MemberSignature Language="C#" Value="public System.Windows.Rect MakeVisible (System.Windows.Media.Visual visual, System.Windows.Rect rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect MakeVisible(class System.Windows.Media.Visual visual, valuetype System.Windows.Rect rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect MakeVisible(System::Windows::Media::Visual ^ visual, System::Windows::Rect rectangle);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="rectangle" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="d338d-152">Oggetto <see cref="T:System.Windows.Media.Visual" /> che diventa visibile.</span><span class="sxs-lookup"><span data-stu-id="d338d-152">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</span></span></param>
        <param name="rectangle"><span data-ttu-id="d338d-153"><see cref="T:System.Windows.Rect" /> che rappresenta lo spazio delle coordinate all'interno di una visualizzazione.</span><span class="sxs-lookup"><span data-stu-id="d338d-153">The <see cref="T:System.Windows.Rect" /> that represents coordinate space within a visual.</span></span></param>
        <summary><span data-ttu-id="d338d-154">Scorre il contenuto fino alle coordinate specificate e rende visibile quella parte di un oggetto <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-154">Scrolls to the specified coordinates and makes that part of a <see cref="T:System.Windows.Media.Visual" /> visible.</span></span></summary>
        <returns><span data-ttu-id="d338d-155">Un oggetto <see cref="T:System.Windows.Rect" /> nello spazio delle coordinate che viene reso visibile.</span><span class="sxs-lookup"><span data-stu-id="d338d-155">A <see cref="T:System.Windows.Rect" /> in the coordinate space that is made visible.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="d338d-156">Limite superiore di <see cref="T:System.Windows.Size" /> che non deve essere superato.</span><span class="sxs-lookup"><span data-stu-id="d338d-156">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</span></span></param>
        <summary><span data-ttu-id="d338d-157">Misura gli elementi figlio di un oggetto <see cref="T:System.Windows.Controls.StackPanel" /> prima di disporli durante il passaggio di <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-157">Measures the child elements of a <see cref="T:System.Windows.Controls.StackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</span></span></summary>
        <returns><span data-ttu-id="d338d-158">Oggetto <see cref="T:System.Windows.Size" /> che rappresenta la dimensione desiderata dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="d338d-158">The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDown">
      <MemberSignature Language="C#" Value="public void MouseWheelDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-159">Scorre logicamente il contenuto verso il basso in risposta a un clic della rotella del mouse.</span><span class="sxs-lookup"><span data-stu-id="d338d-159">Scrolls content logically downward in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-160">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-160">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelLeft">
      <MemberSignature Language="C#" Value="public void MouseWheelLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-161">Scorre logicamente il contenuto verso sinistra in risposta a un clic della rotella del mouse.</span><span class="sxs-lookup"><span data-stu-id="d338d-161">Scrolls content logically to the left in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-162">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-162">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelRight">
      <MemberSignature Language="C#" Value="public void MouseWheelRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-163">Scorre logicamente il contenuto verso destra in risposta a un clic della rotella del mouse.</span><span class="sxs-lookup"><span data-stu-id="d338d-163">Scrolls content logically to the right in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-164">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-164">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelUp">
      <MemberSignature Language="C#" Value="public void MouseWheelUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-165">Scorre logicamente il contenuto verso l’alto in risposta a un clic della rotella del mouse.</span><span class="sxs-lookup"><span data-stu-id="d338d-165">Scrolls content logically upward in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-166">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-166">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation Orientation { System::Windows::Controls::Orientation get(); void set(System::Windows::Controls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-167">Ottiene o imposta un valore che indica la dimensione in base alla quale gli elementi figlio vengono impilati.</span><span class="sxs-lookup"><span data-stu-id="d338d-167">Gets or sets a value that indicates the dimension by which child elements are stacked.</span></span></summary>
        <value><span data-ttu-id="d338d-168"><see cref="T:System.Windows.Controls.Orientation" /> del contenuto figlio.</span><span class="sxs-lookup"><span data-stu-id="d338d-168">The <see cref="T:System.Windows.Controls.Orientation" /> of child content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d338d-169">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="d338d-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d338d-170">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="d338d-170">Identifier field</span></span>|<xref:System.Windows.Controls.StackPanel.OrientationProperty>|  
|<span data-ttu-id="d338d-171">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="d338d-171">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="d338d-172">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.StackPanel.Orientation%2A> proprietà per specificare come elementi all'interno di un <xref:System.Windows.Controls.StackPanel> verranno disposte in pila (uno sopra l'altra o side-by).</span><span class="sxs-lookup"><span data-stu-id="d338d-172">The following example shows how to use the <xref:System.Windows.Controls.StackPanel.Orientation%2A> property to specify how elements within a <xref:System.Windows.Controls.StackPanel> are stacked (one on top of the other or side by side).</span></span>  
  
 [!code-xaml[StackPanel_snip#StackPanelOrientationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanel_snip/CS/OrientationExample.xaml#stackpanelorientationexamplewholepage)]   
  
 <span data-ttu-id="d338d-173">La schermata seguente mostra come viene visualizzato in questo esempio.</span><span class="sxs-lookup"><span data-stu-id="d338d-173">The screenshot below shows how this example renders.</span></span>  
  
 <span data-ttu-id="d338d-174">![Orientamento di StackPanel](~/add/media/layout-stackpanelorientationexample.gif "orientamento di StackPanel")</span><span class="sxs-lookup"><span data-stu-id="d338d-174">![StackPanel orientation](~/add/media/layout-stackpanelorientationexample.gif "StackPanel orientation")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StackPanel.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-175">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.StackPanel.Orientation" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-175">Identifies the <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.StackPanel.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-176">Scorre logicamente il contenuto verso il basso di una pagina.</span><span class="sxs-lookup"><span data-stu-id="d338d-176">Scrolls content logically downward by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-177">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-177">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-178">Scorre logicamente il contenuto verso sinistra di una pagina.</span><span class="sxs-lookup"><span data-stu-id="d338d-178">Scrolls content logically to the left by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-179">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-179">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-180">Scorre logicamente il contenuto verso destra di una pagina.</span><span class="sxs-lookup"><span data-stu-id="d338d-180">Scrolls content logically to the right by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-181">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-181">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d338d-182">Scorre logicamente il contenuto verso l’alto di una pagina.</span><span class="sxs-lookup"><span data-stu-id="d338d-182">Scrolls content logically upward by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-183">Se è necessario uno scorrimento fisico anziché logico, eseguire il wrapping di <xref:System.Windows.Controls.StackPanel> in un <xref:System.Windows.Controls.ScrollViewer> e impostare il relativo <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d338d-183">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollOwner">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollViewer ScrollOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ScrollViewer ScrollOwner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ScrollOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollOwner As ScrollViewer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollViewer ^ ScrollOwner { System::Windows::Controls::ScrollViewer ^ get(); void set(System::Windows::Controls::ScrollViewer ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollViewer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-184">Ottiene o imposta un valore che identifica il contenitore che controlla il comportamento dio scorrimento in <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-184">Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.StackPanel" />.</span></span></summary>
        <value><span data-ttu-id="d338d-185"><see cref="T:System.Windows.Controls.ScrollViewer" /> che possiede lo scorrimento per <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-185">The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.StackPanel" />.</span></span> <span data-ttu-id="d338d-186">Nessun valore predefinito per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="d338d-186">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-187">Se un <xref:System.Windows.Controls.ScrollViewer> controllo è il <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, viene abilitato lo scorrimento fisico.</span><span class="sxs-lookup"><span data-stu-id="d338d-187">If a <xref:System.Windows.Controls.ScrollViewer> control is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, physical scrolling is enabled.</span></span> <span data-ttu-id="d338d-188">Se un <xref:System.Windows.Controls.StackPanel> è il <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, lo scorrimento è logico dall'elemento figlio.</span><span class="sxs-lookup"><span data-stu-id="d338d-188">If a <xref:System.Windows.Controls.StackPanel> is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, scrolling is logical by child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHorizontalOffset">
      <MemberSignature Language="C#" Value="public void SetHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="d338d-189">Il valore della proprietà <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-189">The value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span></span></param>
        <summary><span data-ttu-id="d338d-190">Imposta il valore della proprietà <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-190">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVerticalOffset">
      <MemberSignature Language="C#" Value="public void SetVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="d338d-191">Il valore della proprietà <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-191">The value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span></span></param>
        <summary><span data-ttu-id="d338d-192">Imposta il valore della proprietà <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="d338d-192">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-193">Ottiene un valore che contiene l'offset verticale del contenuto di cui è stato eseguito lo scorrimento.</span><span class="sxs-lookup"><span data-stu-id="d338d-193">Gets a value that contains the vertical offset of the scrolled content.</span></span></summary>
        <value><span data-ttu-id="d338d-194">Il <see cref="T:System.Double" /> che rappresenta l'offset verticale del contenuto a scorrimento.</span><span class="sxs-lookup"><span data-stu-id="d338d-194">The <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content.</span></span> <span data-ttu-id="d338d-195">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="d338d-195">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-196">Il valore restituito è descritto in DIP (Device Independent pixel).</span><span class="sxs-lookup"><span data-stu-id="d338d-196">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-197">Ottiene un valore che contiene la dimensione verticale del viewport del contenuto.</span><span class="sxs-lookup"><span data-stu-id="d338d-197">Gets a value that contains the vertical size of the content's viewport.</span></span></summary>
        <value><span data-ttu-id="d338d-198">Il <see cref="T:System.Double" /> che rappresenta la dimensione verticale del viewport del contenuto.</span><span class="sxs-lookup"><span data-stu-id="d338d-198">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span></span> <span data-ttu-id="d338d-199">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="d338d-199">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-200">Il valore restituito è descritto in DIP (Device Independent pixel).</span><span class="sxs-lookup"><span data-stu-id="d338d-200">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d338d-201">Ottiene un valore che contiene la dimensione orizzontale del viewport del contenuto.</span><span class="sxs-lookup"><span data-stu-id="d338d-201">Gets a value that contains the horizontal size of the content's viewport.</span></span></summary>
        <value><span data-ttu-id="d338d-202">Il <see cref="T:System.Double" /> che rappresenta la dimensione verticale del viewport del contenuto.</span><span class="sxs-lookup"><span data-stu-id="d338d-202">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span></span> <span data-ttu-id="d338d-203">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="d338d-203">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d338d-204">Il valore restituito è descritto in DIP (Device Independent pixel).</span><span class="sxs-lookup"><span data-stu-id="d338d-204">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>