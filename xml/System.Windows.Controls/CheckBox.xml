<Type Name="CheckBox" FullName="System.Windows.Controls.CheckBox">
  <TypeSignature Language="C#" Value="public class CheckBox : System.Windows.Controls.Primitives.ToggleButton" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CheckBox extends System.Windows.Controls.Primitives.ToggleButton" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.CheckBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckBox&#xA;Inherits ToggleButton" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckBox : System::Windows::Controls::Primitives::ToggleButton" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ToggleButton</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CheckStateChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.CheckBox)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f1bdf-101">Rappresenta un controllo che un utente può selezionare e cancellare.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-101">Represents a control that a user can select and clear.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1bdf-102"><xref:System.Windows.Controls.CheckBox> i controlli ereditano dalla <xref:System.Windows.Controls.Primitives.ToggleButton> e possono avere tre stati: controllato (selezionato), non è selezionata (deselezionato) e indeterminato.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-102"><xref:System.Windows.Controls.CheckBox> controls inherit from <xref:System.Windows.Controls.Primitives.ToggleButton> and can have three states: checked (selected), unchecked (cleared), and indeterminate.</span></span>  
  
 <span data-ttu-id="f1bdf-103">Oggetto <xref:System.Windows.Controls.CheckBox> è un <xref:System.Windows.Controls.ContentControl>, il che significa che può contenere un singolo oggetto di qualsiasi tipo (ad esempio una stringa, un'immagine o un pannello).</span><span class="sxs-lookup"><span data-stu-id="f1bdf-103">A <xref:System.Windows.Controls.CheckBox> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="f1bdf-104">Per altre informazioni, vedere la classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-104">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-checkbox-control"></a><span data-ttu-id="f1bdf-105">Personalizzazione del controllo casella di controllo</span><span class="sxs-lookup"><span data-stu-id="f1bdf-105">Customizing the CheckBox Control</span></span>  
 <span data-ttu-id="f1bdf-106">Per applicare le stesse impostazioni di proprietà a più <xref:System.Windows.Controls.CheckBox> controlli, utilizzare il <xref:System.Windows.FrameworkElement.Style%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-106">To apply the same property settings to multiple <xref:System.Windows.Controls.CheckBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="f1bdf-107">È possibile modificare il valore predefinito <xref:System.Windows.Controls.ControlTemplate> per fornire al controllo un aspetto univoco.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-107">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="f1bdf-108">Per ulteriori informazioni sulla creazione di un <xref:System.Windows.Controls.ControlTemplate>, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="f1bdf-108">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="f1bdf-109">Per visualizzare le parti e stati specifici di <xref:System.Windows.Controls.CheckBox>, vedere [stili e modelli CheckBox](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="f1bdf-109">To see the parts and states that are specific to the <xref:System.Windows.Controls.CheckBox>, see [CheckBox Styles and Templates](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="f1bdf-110">Proprietà di dipendenza per questo controllo potrebbe essere impostata dallo stile predefinito del controllo.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-110">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="f1bdf-111">Se una proprietà viene impostata da uno stile predefinito, la proprietà può variare rispetto al valore predefinito quando il controllo viene visualizzato nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-111">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="f1bdf-112">Lo stile predefinito è determinato dal tema del desktop viene utilizzato quando l'applicazione è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-112">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="f1bdf-113">Per ulteriori informazioni, vedere [temi WPF predefiniti](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="f1bdf-113">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1bdf-114">L'impostazione di una proprietà visiva può avere effetto solo se tale proprietà è sia presente nel <xref:System.Windows.Controls.CheckBox> controllo del modello predefinito e viene impostata tramite una.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-114">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.CheckBox> control's default template and is set by using a .</span></span> <span data-ttu-id="f1bdf-115">È possibile trovare un elenco di proprietà visive nella sezione "Modifica la struttura Visual di un controllo" [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="f1bdf-115">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1bdf-116">Nell'esempio seguente viene creato un <xref:System.Windows.Controls.CheckBox> e gestisce il <xref:System.Windows.Controls.Primitives.ToggleButton.Checked>, <xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked>, e <xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate> eventi.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-116">The following example creates a <xref:System.Windows.Controls.CheckBox> and handles the <xref:System.Windows.Controls.Primitives.ToggleButton.Checked>, <xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked>, and <xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate> events.</span></span>  
  
 [!code-xaml[CheckBox_Snippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml#4)]  
  
 [!code-csharp[CheckBox_Snippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml.cs#5)]
 [!code-vb[CheckBox_Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CheckBox_Snippets/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1bdf-117">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.CheckBox" />.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-117">Initializes a new instance of the <see cref="T:System.Windows.Controls.CheckBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f1bdf-118">Oggetto <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> che contiene i dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-118">The <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f1bdf-119">Chiamato quando viene richiamato il tasto di scelta per un controllo <see cref="T:System.Windows.Controls.CheckBox" />.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-119">Called when the access key for a <see cref="T:System.Windows.Controls.CheckBox" /> is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1bdf-120">Crea un <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> per <see cref="T:System.Windows.Controls.CheckBox" />.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-120">Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</span></span></summary>
        <returns><span data-ttu-id="f1bdf-121"><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> per l'oggetto <see cref="T:System.Windows.Controls.CheckBox" />.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-121">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f1bdf-122">Oggetto <see cref="T:System.Windows.Input.KeyEventArgs" /> che contiene i dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-122">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f1bdf-123">Risponde a un evento <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-123">Responds to a <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1bdf-124">In questa implementazione il <xref:System.Windows.UIElement.KeyDown> evento come gestito impostando il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà dei dati dell'evento per `true` quando l'utente preme il segno più o tasto meno.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-124">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user presses the plus or the minus key.</span></span>  
  
 <span data-ttu-id="f1bdf-125">Questo metodo imposta <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> a `true` quando l'utente preme il tasto più e per `false` quando l'utente preme il tasto di sottrazione.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-125">This method sets <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> to `true` when the user presses the plus key and to `false` when the user presses the minus key.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f1bdf-126">Se esegue l'override <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-126">If you override <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="f1bdf-127">Errore durante la chiamata l'implementazione di base impedisce che classi base gestisce l'evento con un gestore di classe, il che potrebbe modificare il comportamento in fase di esecuzione della classe finale.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-127">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="f1bdf-128">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span><span class="sxs-lookup"><span data-stu-id="f1bdf-128">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>