<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="059c36959d769279d4c087a19217e26ab58b5f57" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30628295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationRule abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Consente di creare una regola personalizzata per controllare la validità dell'input utente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si utilizza il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modello di data binding, è possibile associare <xref:System.Windows.Data.Binding.ValidationRules%2A> con l'oggetto di associazione. Per creare regole personalizzate, creare una sottoclasse di questa classe e implementare il <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo. Facoltativamente, utilizzare l'oggetto incorporato <xref:System.Windows.Controls.ExceptionValidationRule>, che rileva le eccezioni generate durante gli aggiornamenti dell'origine o <xref:System.Windows.Controls.DataErrorValidationRule>, che consente di controllare gli errori generati dal <xref:System.ComponentModel.IDataErrorInfo> implementazione dell'oggetto di origine.  
  
 Il motore di associazione controlla ogni <xref:System.Windows.Controls.ValidationRule> che è associata a un'associazione ogni volta che il trasferimento di un valore di input, ovvero il valore della proprietà destinazione di associazione, per la proprietà di origine di associazione.  
  
 Per informazioni dettagliate sulla convalida dei dati, vedere [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Per informazioni su come convalidare i dati forniti dall'utente in una finestra di dialogo, vedere [Panoramica di finestre di dialogo](~/docs/framework/wpf/app-development/dialog-boxes-overview.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come implementare una regola di convalida. Il valore di input è valido se contiene caratteri non numerici o se è compreso i limiti inferiore e superiore. Se il valore dell'oggetto restituito <xref:System.Windows.Controls.ValidationResult> non è valido, il <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> è impostata su messaggio di errore appropriato e <xref:System.Windows.Controls.ValidationResult.IsValid%2A> è impostata su `false`.  
  
 Per un esempio completo, vedere [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule(System::Windows::Controls::ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep">Uno dei valori dell'enumerazione che specifica quando viene eseguita la regola di convalida.</param>
        <param name="validatesOnTargetUpdated">
          <see langword="true" /> per eseguire la regola di convalida quando la destinazione di <see cref="T:System.Windows.Data.Binding" /> viene aggiornata. In caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ValidationRule" /> con il passaggio di convalida specificato e un valore che indica se la regola di convalida viene eseguita all'aggiornamento della destinazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue controlli di convalida su un valore.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Valore dalla destinazione del binding da controllare.</param>
        <param name="cultureInfo">Impostazioni cultura da usare nella regola.</param>
        <summary>In caso di override in una classe derivata, esegue i controlli di convalida su un valore.</summary>
        <returns>Un oggetto <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario implementare questo metodo quando si crea una sottoclasse di <xref:System.Windows.Controls.ValidationRule> classe per creare una regola di convalida personalizzata.  
  
 Ogni volta che il motore di associazione dati trasferisce un valore dalla proprietà di destinazione dell'associazione (dall'input dell'utente) per la proprietà di origine di associazione (i dati sottostanti), controlla se eventuali <xref:System.Windows.Data.Binding.ValidationRules%2A> definiti per tale associazione. Se <xref:System.Windows.Data.Binding.ValidationRules%2A> definiti per l'associazione, il motore chiama il <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo su ogni <xref:System.Windows.Controls.ValidationRule> fino a quando uno di essi viene rilevato un errore o di passare.  
  
 Per informazioni dettagliate sulla convalida dei dati, vedere [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come implementare una regola di convalida. Nell'esempio seguente, il valore di input è valido se contiene caratteri non numerici o se è compreso i limiti inferiore e superiore. Se il valore di input non è valido, il <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> è impostata su messaggio di errore appropriato e <xref:System.Windows.Controls.ValidationResult.IsValid%2A> è impostata su `false`.  
  
 Per un esempio completo, vedere [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
        <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingExpressionBase ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="value">Valore dalla destinazione del binding da controllare.</param>
        <param name="cultureInfo">Impostazioni cultura da usare nella regola.</param>
        <param name="owner">L'espressione di associazione che utilizza la regola di convalida.</param>
        <summary>Esegue controlli di convalida su un valore.</summary>
        <returns>Un oggetto <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingGroup ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="value">Valore dalla destinazione del binding da controllare.</param>
        <param name="cultureInfo">Impostazioni cultura da usare nella regola.</param>
        <param name="owner">Il gruppo di associazione che utilizza la regola di convalida.</param>
        <summary>Esegue controlli di convalida su un valore.</summary>
        <returns>Un oggetto <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la regola di convalida viene eseguita all'aggiornamento della destinazione di <see cref="T:System.Windows.Data.Binding" />.</summary>
        <value>
          <see langword="true" /> se la regola di convalida viene eseguita quando la destinazione di <see cref="T:System.Windows.Data.Binding" /> viene aggiornata. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene controllato se il <xref:System.Windows.Controls.TextBox> è vuoto. Il <xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`, ha <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> impostato su `true`, in modo che all'avvio dell'applicazione, il <xref:System.Windows.Controls.ValidationRule> viene eseguita e viene visualizzato un messaggio se la <xref:System.Windows.Controls.TextBox> è vuoto.  
  
 [!code-xaml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 Nell'esempio seguente il <xref:System.Windows.Controls.ValidationRule> utilizzato nell'esempio precedente e il gestore eventi per il <xref:System.Windows.Controls.Validation.Error> evento.  
  
 [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationStep As ValidationStep" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationStep ValidationStep { System::Windows::Controls::ValidationStep get(); void set(System::Windows::Controls::ValidationStep value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il momento in cui viene eseguita la regola di convalida.</summary>
        <value>Uno dei valori di enumerazione.  Il valore predefinito è <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente imposta il <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> a <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> sul <xref:System.Windows.Controls.ValidationRule> chiamato `ValidateDateAndPrice` in modo che al momento dell'esecuzione, il <xref:System.Windows.Controls.ValidationRule.Validate%2A> dispone di accesso ai valori di tipo della proprietà di origine. Quando le regole `PriceIsAPositiveNumber` e `FutureDateRule` eseguire, i valori in ogni <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo sono stringhe, poiché le regole vengono eseguite prima che i valori vengono convertiti nei rispettivi tipi.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 Nell'esempio seguente il <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`. Nel `Validate` override del metodo, il `Price` proprietà è di tipo <xref:System.Double> e `OfferExpires` proprietà è di tipo <xref:System.DateTime> perché sono state convertite nei rispettivi tipi le stringhe in base al tempo di <xref:System.Windows.Controls.ValidationRule> viene eseguito.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>