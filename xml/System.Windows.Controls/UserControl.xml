<Type Name="UserControl" FullName="System.Windows.Controls.UserControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da51772d2112997afa7b6617862ad6c6b75f4249" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52600906" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UserControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UserControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UserControl" />
  <TypeSignature Language="VB.NET" Value="Public Class UserControl&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserControl : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type UserControl = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Strumento semplice per la creazione di un controllo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlla [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] supportano contenuto avanzato, stili, i trigger e i modelli. In molti casi, queste funzionalità consentono di creare esperienze coerenti e personalizzate senza dover creare un nuovo controllo. Per altre informazioni, vedere [Applicazione di stili e modelli](~/docs/framework/wpf/controls/styling-and-templating.md).  
  
 Se è necessario creare un nuovo controllo, il modo più semplice consiste nel creare una classe che deriva da <xref:System.Windows.Controls.UserControl>. Prima di procedere, è consigliabile che il controllo non supporta i modelli e di conseguenza, non supporterà una personalizzazione complessa. Tuttavia, che deriva da <xref:System.Windows.Controls.UserControl> è un modello adeguato se si desidera compilare un controllo mediante l'aggiunta di elementi esistenti su di esso, simile a come si crea un'applicazione, e se non è necessario supportare la personalizzazione complessa. (Se si desidera usare i modelli con il controllo, derivare da <xref:System.Windows.Controls.Control> invece.) Per altre informazioni sui diversi modelli per la creazione di controlli, vedere [Cenni preliminari sulla modifica controllo](~/docs/framework/wpf/controls/control-authoring-overview.md).  
  
 Oggetto <xref:System.Windows.Controls.UserControl> è un <xref:System.Windows.Controls.ContentControl>, il che significa che può contenere un singolo oggetto di qualsiasi tipo (ad esempio, una stringa, un'immagine o un pannello). Per altre informazioni, vedere la classe <xref:System.Windows.Controls.ContentControl>.  
  
 Le proprietà di dipendenza di questo controllo potrebbero essere impostate dallo stile predefinito del controllo.  Se una proprietà viene impostata da uno stile predefinito, la proprietà può variare rispetto al valore predefinito quando il controllo viene visualizzato nell'applicazione. Lo stile predefinito è determinato dal tema del desktop viene usato quando viene eseguita l'applicazione.  Per altre informazioni, vedere [temi WPF predefiniti](https://go.microsoft.com/fwlink/?LinkID=158252).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una semplice `NumericUpDown` <xref:System.Windows.Controls.UserControl>.  
  
 [!code-xaml[UserControlNumericUpDown#Markup](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml#markup)]  
  
 Nell'esempio viene illustrata la logica di questo <xref:System.Windows.Controls.UserControl>:  
  
 [!code-csharp[UserControlNumericUpDown#CodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml.cs#codebehind)]
 [!code-vb[UserControlNumericUpDown#CodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UserControlNumericUpDown/visualbasic/numericupdown.xaml.vb#codebehind)]  
  
 Per altre informazioni, vedere [Cenni preliminari sulla modifica di controlli](~/docs/framework/wpf/controls/control-authoring-overview.md).  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160025">Controllo personalizzato NumericUpDown con esempio di supporto per automazione interfaccia utente e del tema</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.UserControl" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="userControl.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce un oggetto <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> per questo oggetto <see cref="T:System.Windows.Controls.UserControl" />.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> per <see cref="T:System.Windows.Controls.UserControl" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>