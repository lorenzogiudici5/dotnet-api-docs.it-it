<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10190f52dac807890af4f359bfa4b90943f21e77" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30627235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationError" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un errore di convalida creato dal motore di associazione quando un oggetto <see cref="T:System.Windows.Controls.ValidationRule" /> segnala un errore di convalida o mediante il metodo <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> in modo esplicito.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modello di associazione dati consente di associare le regole di convalida con il <xref:System.Windows.Data.Binding> oggetto. La convalida viene eseguita durante il trasferimento di un valore di origine di destinazione prima che venga chiamato il convertitore. Di seguito viene descritto il processo di convalida.  
  
1.  Quando un valore viene trasferito dalla proprietà di destinazione per la proprietà di origine, il motore di associazione di dati prima di tutto consente di rimuovere qualsiasi <xref:System.Windows.Controls.ValidationError> che potrebbero essere state aggiunte al <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> associata una proprietà dell'elemento associato. Verifica quindi se per cui sono definite regole di convalida personalizzate <xref:System.Windows.Data.Binding>, nel qual caso chiama il <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo su ogni <xref:System.Windows.Controls.ValidationRule> passare fino a quando uno di essi non riesce o fino a quando tutti gli elementi.  
  
2.  Quando è presente una regola personalizzata che non ha superato, il motore di associazione crea un <xref:System.Windows.Controls.ValidationError> e lo aggiunge al <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> raccolta dell'elemento associato. Quando <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> non è vuota, il <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> allegato dell'elemento è impostata su `true`. Inoltre, se il <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> proprietà del <xref:System.Windows.Data.Binding> è impostato su `true`, il motore di associazione genera il <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento sull'elemento associato.  
  
3.  Se passano tutte le regole, il motore di associazione chiama quindi il convertitore, se presente.  
  
4.  Se il convertitore viene superato, il motore di associazione chiama il metodo di impostazione della proprietà di origine.  
  
5.  Se l'associazione ha un <xref:System.Windows.Controls.ExceptionValidationRule> associato e viene generata un'eccezione durante il passaggio 3 o 4, il motore di associazione viene controllato per verificare se esiste un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. È possibile utilizzare il <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> callback per fornire un gestore personalizzato per la gestione delle eccezioni. Se un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> non è specificato nella <xref:System.Windows.Data.Binding>, il motore di associazione crea un <xref:System.Windows.Controls.ValidationError> con l'eccezione e lo aggiunge al <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> raccolta dell'elemento associato.  
  
 Un trasferimento di un valore valido in entrambe le direzioni (dalla destinazione all'origine o destinazione) cancellerà il <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> proprietà associata.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un trigger di stile che crea un <xref:System.Windows.Controls.ToolTip> che segnala un messaggio di errore di convalida. Il <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> proprietà associata restituisce una raccolta di <xref:System.Windows.Controls.ValidationError> oggetti per l'elemento associato.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ValidationError" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Regola che ha rilevato un errore di convalida.</param>
        <param name="bindingInError">Oggetto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> con l'errore di convalida.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ValidationError" /> con i parametri specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError, System::Object ^ errorContent, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Regola che ha rilevato un errore di convalida.</param>
        <param name="bindingInError">Oggetto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> con l'errore di convalida.</param>
        <param name="errorContent">Informazioni sull'errore.</param>
        <param name="exception">Eccezione che ha causato l'errore di convalida. Questo parametro è facoltativo e può essere impostato su <see langword="null" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ValidationError" /> con i parametri specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingInError As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BindingInError { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> dell'oggetto <see cref="T:System.Windows.Controls.ValidationError" /> corrente. L'oggetto viene contrassegnato come non valido in modo esplicito o presenta una regola di convalida con errore.</summary>
        <value>Oggetto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> dell'oggetto <see cref="T:System.Windows.Controls.ValidationError" /> corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto che fornisce contesto aggiuntivo per questo <see cref="T:System.Windows.Controls.ValidationError" />, ad esempio una stringa che descrive l'errore.</summary>
        <value>Oggetto che fornisce contesto aggiuntivo per questo <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Vedere la sezione di esempio per un esempio.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un trigger di stile che crea un <xref:System.Windows.Controls.ToolTip> che segnala un messaggio di errore di convalida. Il <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> proprietà associata restituisce una raccolta di <xref:System.Windows.Controls.ValidationError> oggetti per l'elemento associato.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Exception" /> che ha generato l'oggetto <see cref="T:System.Windows.Controls.ValidationError" />, se l'errore è il risultato di un'eccezione.</summary>
        <value>Oggetto <see cref="T:System.Exception" />, se l'errore è il risultato di un'eccezione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberSignature Language="VB.NET" Value="Public Property RuleInError As ValidationRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationRule ^ RuleInError { System::Windows::Controls::ValidationRule ^ get(); void set(System::Windows::Controls::ValidationRule ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Controls.ValidationRule" /> che ha generato l'oggetto <see cref="T:System.Windows.Controls.ValidationError" /> corrente, se l'errore è il risultato di una regola di convalida.</summary>
        <value>Oggetto <see cref="T:System.Windows.Controls.ValidationRule" />, se l'errore è il risultato di una regola di convalida.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>