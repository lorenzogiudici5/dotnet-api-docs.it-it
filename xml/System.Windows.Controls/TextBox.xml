<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c60b0347a2b4f31aa3ae6f486c45d0c6dd88df00" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37522679" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7e8b0-101">Rappresenta un controllo utilizzabile per visualizzare o modificare testo non formattato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e8b0-101">Represents a control that can be used to display or edit unformatted text.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-102">Oggetto <xref:System.Windows.Controls.TextBox> controllo può contenere solo testo non formattato nel relativo <xref:System.Windows.Controls.TextBox.Text%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="7e8b0-103">La figura seguente illustra un esempio di un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="7e8b0-104">![Nella casella di testo screenshot](~/add/media/ss-ctl-textbox.gif "schermata TextBox")</span><span class="sxs-lookup"><span data-stu-id="7e8b0-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="7e8b0-105">Esempio di una casella di testo</span><span class="sxs-lookup"><span data-stu-id="7e8b0-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="7e8b0-106"><xref:System.Windows.Controls.TextBox> è un controllo composito costituito da diversi componenti incapsulati.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="7e8b0-107">Di conseguenza, alcuni eventi non vengono propagati al controllo contenitore poiché vengono gestiti dagli elementi figlio incapsulato.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="7e8b0-108">Per questo motivo, gli sviluppatori di applicazioni devono restare in attesa per la versione tunneling di un evento (indicato dal prefisso "Anteprima").</span><span class="sxs-lookup"><span data-stu-id="7e8b0-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="7e8b0-109"><xref:System.Windows.Controls.TextBox> supporta solo testo non formattato.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="7e8b0-110">Per le applicazioni che richiedono il supporto per il contenuto completo, vedere <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="7e8b0-111">Per le applicazioni che è necessario accettare le password o altri tipi di input riservati, vedere <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="7e8b0-112">L'allineamento orizzontale e verticale del testo all'interno di un <xref:System.Windows.Controls.TextBox> viene eseguita con il <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> e <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="7e8b0-113">Allineare le <xref:System.Windows.Controls.TextBox> all'interno del layout della pagina viene eseguita con il <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> e <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="7e8b0-114">Il modo migliore per nascondere il bordo intorno a un <xref:System.Windows.Controls.TextBox> consiste nell'impostare il <xref:System.Windows.Controls.Control.BorderThickness%2A> proprietà delle <xref:System.Windows.Controls.TextBox> a `0`.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e8b0-115"><xref:System.Windows.Controls.TextBox> supporta la gestione incorporata di bubbling <xref:System.Windows.UIElement.MouseUp> e <xref:System.Windows.UIElement.MouseDown> eventi.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="7e8b0-116">Di conseguenza, i gestori eventi personalizzati che sono in attesa per <xref:System.Windows.UIElement.MouseUp> oppure <xref:System.Windows.UIElement.MouseDown> gli eventi da un <xref:System.Windows.Controls.TextBox> non verranno chiamati.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="7e8b0-117">Se è necessario rispondere a tali eventi, in attesa per il tunneling <xref:System.Windows.UIElement.PreviewMouseUp> e <xref:System.Windows.UIElement.PreviewMouseDown> eventi invece o registrare i gestori con la <xref:System.Windows.EventSetter.HandledEventsToo%2A> argomento (questa seconda opzione è disponibile solo tramite il codice).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="7e8b0-118">Non contrassegnare l'evento come gestito, a meno che si desidera disabilitare intenzionalmente <xref:System.Windows.Controls.TextBox> nativa è possibile gestire questi eventi e tenere presente che ciò abbia effetti significativi sull'oggetto del controllo [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7e8b0-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="7e8b0-119">Le barre di scorrimento non sono visibili in un <xref:System.Windows.Controls.TextBox> per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="7e8b0-120">Per rendere visibili le barre di scorrimento, impostare il <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> e <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> delle proprietà per <xref:System.Windows.Controls.ScrollBarVisibility.Visible> o <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="7e8b0-121">In genere il <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> evento deve essere usato per rilevare ogni volta che il testo in un <xref:System.Windows.Controls.TextBox> o <xref:System.Windows.Controls.RichTextBox> viene modificato anziché <xref:System.Windows.UIElement.KeyDown> come è prevedibile.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="7e8b0-122">Visualizzare [procedura: rilevare quando il testo in una casella di testo è stato modificato](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) per un esempio.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="7e8b0-123">Personalizzazione del controllo casella di testo</span><span class="sxs-lookup"><span data-stu-id="7e8b0-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="7e8b0-124">Per applicare le stesse impostazioni di proprietà al multiplo <xref:System.Windows.Controls.TextBox> controlli, usare il <xref:System.Windows.FrameworkElement.Style%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="7e8b0-125">È possibile modificare il valore predefinito <xref:System.Windows.Controls.ControlTemplate> per fornire al controllo un aspetto univoco.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="7e8b0-126">Per altre informazioni sulla creazione di un <xref:System.Windows.Controls.ControlTemplate>, vedere [personalizzazione dell'aspetto di un controllo esistente mediante la creazione di un oggetto ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="7e8b0-127">Per visualizzare le parti e stati specifici di <xref:System.Windows.Controls.TextBox>, vedere [nella casella di testo stili e modelli](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="7e8b0-128">Le proprietà di dipendenza di questo controllo potrebbero essere impostate dallo stile predefinito del controllo.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-128">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="7e8b0-129">Se una proprietà viene impostata da uno stile predefinito, la proprietà può variare rispetto al valore predefinito quando il controllo viene visualizzato nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="7e8b0-130">Lo stile predefinito è determinato dal tema del desktop viene usato quando viene eseguita l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="7e8b0-131">Per altre informazioni, vedere [temi WPF predefiniti](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-131">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e8b0-132">L'impostazione di una proprietà di visualizzazione verrà hanno effetto solo se tale proprietà è presente in entrambi <xref:System.Windows.Controls.TextBox> controllo del modello predefinito e viene impostata tramite una.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-132">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.TextBox> control's default template and is set by using a .</span></span> <span data-ttu-id="7e8b0-133">È possibile trovare un elenco di proprietà visive nella sezione "Modifica la struttura Visual di un controllo" in [personalizzazione dell'aspetto di un controllo esistente mediante la creazione di un oggetto ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-133">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-134">In questo esempio viene illustrato come usare la proprietà di testo per impostare il contenuto di testo iniziale di un controllo casella di testo.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-134">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e8b0-135">Anche se è stato possibile usare la versione di Extensible Application Markup Language (XAML) dell'esempio di \<TextBox. Text > tag intorno al testo del contenuto di ogni pulsante casella di testo, non è necessario poiché la casella di testo viene applicato il ContentPropertyAttribute attributo alla proprietà Text.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-135">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="7e8b0-136">Per altri esempi, vedere la versione 4.0 di questo documento: [classe TextBox](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-136">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-137">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.TextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CaretIndex : int with get, set" Usage="System.Windows.Controls.TextBox.CaretIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-138">Ottiene o imposta l'indice della posizione di inserimento del cursore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-138">Gets or sets the insertion position index of the caret.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-139">L'indice della posizione di inserimento in base zero del cursore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-139">The zero-based insertion position index of the caret.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-140">Recupero di questa proprietà restituisce l'indice di posizione di inserimento corrente del punto di inserimento (vedere <xref:System.Windows.Documents.TextPointer> per informazioni sulla terminologia, ad esempio "posizione di inserimento").</span><span class="sxs-lookup"><span data-stu-id="7e8b0-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="7e8b0-141">Impostazione di questa proprietà sposta il cursore nella posizione di inserimento specificato.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="7e8b0-142">Posizione di inserimento è tra i caratteri o tag dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Controls.CharacterCasing with get, set" Usage="System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-143">Ottiene o imposta la scrittura dei caratteri con le maiuscole/minuscole quando vengono immessi manualmente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-143">Gets or sets how characters are cased when they are manually entered into the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-144">Uno dei valori <see cref="T:System.Windows.Controls.CharacterCasing" /> che specifica la presenza di maiuscole/minuscole dei caratteri immessi manualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span>
          </span>
          <span data-ttu-id="7e8b0-145">Il valore predefinito è <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-146">Questa proprietà influisce sui caratteri che vengono aggiunti a livello di codice.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-147">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-148">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="7e8b0-149">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="7e8b0-150">nessuno</span><span class="sxs-lookup"><span data-stu-id="7e8b0-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-151">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> proprietà da convertire in caratteri maiuscoli in una casella di testo tutti i caratteri immessi manualmente.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CharacterCasingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-152">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBox.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-153">Cancella tutto il contenuto dalla casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-153">Clears all the content from the text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromLineIndex : int -&gt; int" Usage="textBox.GetCharacterIndexFromLineIndex lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="7e8b0-154">L'indice in base zero della riga per il quale recuperare l'indice dei caratteri iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-154">The zero-based index of the line to retrieve the initial character index for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-155">Restituisce l'indice dei caratteri in base zero per il primo carattere nella riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-155">Returns the zero-based character index for the first character in the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-156">L'indice dei caratteri in base zero per il primo carattere nella riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-156">The zero-based index for the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromPoint : System.Windows.Point * bool -&gt; int" Usage="textBox.GetCharacterIndexFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="7e8b0-157">Punto nello spazio delle coordinate dell'oggetto <see cref="T:System.Windows.Controls.TextBox" /> per il quale restituire un indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span>
          </span>
        </param>
        <param name="snapToText">
          <span data-ttu-id="7e8b0-158">
            <see langword="true" /> per restituire l'indice più vicino se non è presente alcun carattere nel punto specificato; <see langword="false" /> per restituire -1 se non è presente alcun carattere nel punto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-158">
              <see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return –1 if there is no character at the specified point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-159">Restituisce l'indice in base zero del carattere più vicino al punto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-159">Returns the zero-based index of the character that is closest to the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-160">L'indice del carattere più vicino al punto specificato oppure -1 se non è possibile trovare un indice valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-160">The index of the character that is closest to the specified point, or –1 if no valid index can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetFirstVisibleLineIndex : unit -&gt; int" Usage="textBox.GetFirstVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-161">Restituisce l'indice della riga per la prima riga attualmente visibile nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-161">Returns the line index for the first line that is currently visible in the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-162">L'indice in base zero per la prima riga visibile nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-162">The zero-based index for the first visible line in the text box.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetLastVisibleLineIndex : unit -&gt; int" Usage="textBox.GetLastVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-163">Restituisce l'indice della riga per l'ultima riga attualmente visibile nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-163">Returns the line index for the last line that is currently visible in the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-164">L'indice in base zero per l'ultima riga visibile nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-164">The zero-based index for the last visible line in the text box.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineIndexFromCharacterIndex : int -&gt; int" Usage="textBox.GetLineIndexFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="7e8b0-165">L'indice dei caratteri in base zero per il quale recuperare l'indice della riga associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-165">The zero-based character index for which to retrieve the associated line index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-166">Restituisce l'indice della riga in base zero per la riga che contiene l'indice del carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-166">Returns the zero-based line index for the line that contains the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-167">L'indice della riga in base zero per la riga che contiene l'indice del carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-167">The zero-based index for the line that contains the specified character index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineLength : int -&gt; int" Usage="textBox.GetLineLength lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="7e8b0-168">L'indice della riga in base zero per il quale restituire il conteggio dei caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-168">The zero-based line index for which to return a character count.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-169">Restituisce il numero di caratteri disponibili nella riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-169">Returns the number of characters in the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-170">Il numero di caratteri disponibili nella riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-170">The number of characters in the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineText : int -&gt; string" Usage="textBox.GetLineText lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="7e8b0-171">Indice in base zero della riga per cui recuperare il testo attualmente visualizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-171">The zero-based line index for which to retrieve the currently displayed text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-172">Restituisce il testo attualmente visualizzato nella riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-172">Returns the text that is currently displayed on the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-173">Stringa che contiene una copia del testo attualmente visibile nella riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-173">A string containing a copy of the text currently visible on the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorCharacterIndex : int * System.Windows.Documents.LogicalDirection -&gt; int" Usage="textBox.GetNextSpellingErrorCharacterIndex (charIndex, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="7e8b0-174">L'indice dei caratteri in base zero che indica una posizione dalla quale cercare il successivo errore di ortografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-174">The zero-based character index indicating a position from which to search for the next spelling error.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="7e8b0-175">Uno dei valori <see cref="T:System.Windows.Documents.LogicalDirection" /> che specifica la direzione nella quale cercare il successivo errore di ortografia a partire dall'indice <c>charIndex</c> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <c>charIndex</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-176">Restituisce l'indice dei caratteri iniziali per il successivo errore di ortografia nel contenuto della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-177">L'indice dei caratteri per l'inizio del successivo errore di ortografia nel contenuto della casella di testo o -1 se non esiste alcun errore di ortografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-177">The character index for the beginning of the next spelling error in the contents of the text box, or –1 if no next spelling error exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-178">Restituisce il rettangolo per un bordo del carattere in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-178">Returns the rectangle for an edge of the character at the specified index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="7e8b0-179">L'indice dei caratteri in base zero del carattere per il quale si desidera recuperare il rettangolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-179">The zero-based character index of the character for which to retrieve the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-180">Restituisce il rettangolo per il bordo iniziale del carattere in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-180">Returns the rectangle for the leading edge of the character at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-181">Un rettangolo per il bordo iniziale del carattere nell'indice dei caratteri specificato oppure <see cref="P:System.Windows.Rect.Empty" /> se non è possibile determinare un rettangolo di delimitazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-182">Poiché questo metodo restituisce un rettangolo che rappresenta un bordo del carattere, la larghezza del rettangolo è 0.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int * bool -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex (charIndex, trailingEdge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="7e8b0-183">L'indice dei caratteri in base zero del carattere per il quale si desidera recuperare il rettangolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-183">The zero-based character index of the character for which to retrieve the rectangle.</span>
          </span>
        </param>
        <param name="trailingEdge">
          <span data-ttu-id="7e8b0-184">
            <see langword="true" /> per ottenere il bordo finale del carattere. <see langword="false" /> per ottenere il bordo iniziale del carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-184">
              <see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-185">Restituisce il rettangolo per il bordo iniziale o finale del carattere in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-186">Rettangolo per un bordo del carattere nell'indice dei caratteri specificato oppure <see cref="P:System.Windows.Rect.Empty" /> se non è possibile determinare un rettangolo di delimitazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-187">Poiché questo metodo restituisce un rettangolo che rappresenta un bordo del carattere, la larghezza del rettangolo è 0.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7e8b0-188">Il parametro <paramref name="charIndex" /> è negativo o maggiore della lunghezza del contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-188">
              <paramref name="charIndex" /> is negative or is greater than the length of the content.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : int -&gt; System.Windows.Controls.SpellingError" Usage="textBox.GetSpellingError charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="7e8b0-189">Indice dei caratteri in base zero di una posizione nel contenuto in cui verificare la presenza di un errore di ortografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-189">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-190">Restituisce un oggetto <see cref="T:System.Windows.Controls.SpellingError" /> associato a eventuali errori di ortografia nell'indice dei caratteri specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-191">Un oggetto <see cref="T:System.Windows.Controls.SpellingError" /> che contiene i dettagli dell'errore di ortografia trovato nel carattere indicato dal parametro <paramref name="charIndex" /> o <see langword="null" /> se non esiste alcun errore di ortografia nel carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorLength : int -&gt; int" Usage="textBox.GetSpellingErrorLength charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="7e8b0-192">Indice dei caratteri in base zero di una posizione nel contenuto in cui verificare la presenza di un errore di ortografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-192">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-193">Restituisce la lunghezza di eventuali errori di ortografia che includono il carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-193">Returns the length of any spelling error that includes the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-194">La lunghezza di eventuali errori di ortografia che includono il carattere specificato dal parametro CHARINDEX oppure 0 se il carattere specificato non rientra negli errori di ortografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorStart : int -&gt; int" Usage="textBox.GetSpellingErrorStart charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="7e8b0-195">Indice dei caratteri in base zero di una posizione nel contenuto in cui verificare la presenza di un errore di ortografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-195">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-196">Restituisce l'indice iniziale dei caratteri per eventuali errori di ortografia che includono il carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-196">Returns the beginning character index for any spelling error that includes the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-197">L'indice iniziale dei caratteri per eventuali errori di ortografia che includono il carattere specificato dal parametro <paramref name="charIndex" /> oppure -1 se il carattere specificato non rientra negli errori di ortografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or –1 if the specified character is not part of a spelling error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="System.Windows.Controls.TextBox.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-198">Ottiene il numero totale di righe nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-198">Gets the total number of lines in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-199">Numero totale di righe nella casella di testo oppure -1 se non sono disponibili informazioni di layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-199">The total number of lines in the text box, or –1 if layout information is not available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-200">Se è abilitato la disposizione testo, è possibile modificare questo valore modificando la larghezza della casella di testo.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="7e8b0-201">Il valore restituito è il numero totale di righe nella casella di testo, indipendentemente dal numero attualmente visibili.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-202">Ottiene un enumeratore per gli elementi figlio logici dell'oggetto <see cref="T:System.Windows.Controls.TextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-203">Enumeratore per gli elementi figlio logici dell'oggetto <see cref="T:System.Windows.Controls.TextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-204">Il <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> proprietà restituisce un enumeratore per una raccolta che contiene un <xref:System.String> uguale al <xref:System.Windows.Controls.TextBox.Text%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-205">Ottiene o imposta il numero massimo di caratteri che possono essere immessi manualmente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-206">Il numero massimo di caratteri che possono essere immessi manualmente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-206">The maximum number of characters that can be manually entered into the text box.</span>
          </span>
          <span data-ttu-id="7e8b0-207">Il valore predefinito è 0, che non imposta alcun limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-207">The default is 0, which indicates no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-208">È possibile usare questa proprietà per limitare la lunghezza del testo immesso nel controllo per i valori come numeri di telefono e codici di avviamento postale.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="7e8b0-209">È anche possibile usare questa proprietà per limitare la lunghezza del testo immesso quando i dati vengono archiviate in un database in modo che il testo immesso nel controllo non superi la lunghezza massima del campo corrispondente nel database.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="7e8b0-210">Questa proprietà influisce sui caratteri che vengono aggiunti a livello di codice.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="7e8b0-211">Quando questa proprietà è impostata su 0, la lunghezza massima del testo che può essere immesso nel controllo è limitata solo dalla memoria disponibile.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-212">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-213">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="7e8b0-214">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="7e8b0-215">nessuno</span><span class="sxs-lookup"><span data-stu-id="7e8b0-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-216">Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Controls.TextBox> con un <xref:System.Windows.Controls.TextBox.MaxLength%2A> di 500 caratteri.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLengthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-217">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.MaxLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-218">Ottiene o imposta il numero massimo di righe visibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-218">Gets or sets the maximum number of visible lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-219">Il numero massimo di righe visibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-219">The maximum number of visible lines.</span>
          </span>
          <span data-ttu-id="7e8b0-220">Il valore predefinito è <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-220">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-221">Recupero di questa proprietà restituisce il valore corrente di <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="7e8b0-222">Impostazione di questa proprietà fa sì che la casella di testo se il numero di righe visibili supera il limite specificato da ridimensionare <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="7e8b0-223">Questa proprietà si applica solo alle righe visibili e non vincola il numero effettivo di righe.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="7e8b0-224">A seconda della configurazione, una casella di testo può contenere altre righe non visibili che sono accessibili mediante lo scorrimento.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="7e8b0-225">Se il <xref:System.Windows.FrameworkElement.Height%2A> viene impostata in modo esplicito su un <xref:System.Windows.Controls.TextBox>, il <xref:System.Windows.Controls.TextBox.MaxLines%2A> e <xref:System.Windows.Controls.TextBox.MinLines%2A> vengono ignorati i valori delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-226">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-227">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="7e8b0-228">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-229">Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Controls.TextBox> con un <xref:System.Windows.Controls.TextBox.MaxLines%2A> valore pari a 5.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="7e8b0-230">
            <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> è minore di <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-230">
              <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-231">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="textBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="7e8b0-232">Una struttura <see cref="T:System.Windows.Size" /> che specifica i vincoli sulla dimensione della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-233">Ridimensiona la casella di testo in base al contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-233">Sizes the text box to its content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-234">Una struttura <see cref="T:System.Windows.Size" /> che indica la dimensione nuova della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-235">Eseguire l'override di questo metodo per implementare il comportamento di ridimensionamento personalizzati.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Windows.Controls.TextBox.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-236">Ottiene o imposta il numero minimo di righe visibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-236">Gets or sets the minimum number of visible lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-237">Il numero minimo di righe visibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-237">The minimum number of visible lines.</span>
          </span>
          <span data-ttu-id="7e8b0-238">Il valore predefinito è 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-238">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-239">Recupero di questa proprietà restituisce il valore corrente di <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="7e8b0-240">Impostazione di questa proprietà fa sì che la casella di testo se il numero di righe visibili è inferiore al limite specificato da ridimensionare <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="7e8b0-241">Se il <xref:System.Windows.FrameworkElement.Height%2A> viene impostata in modo esplicito su un <xref:System.Windows.Controls.TextBox>, il <xref:System.Windows.Controls.TextBox.MaxLines%2A> e <xref:System.Windows.Controls.TextBox.MinLines%2A> vengono ignorati i valori delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-242">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-243">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="7e8b0-244">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-245">Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Controls.TextBox> con un <xref:System.Windows.Controls.TextBox.MinLines%2A> valore pari a 1.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="7e8b0-246">
            <see cref="P:System.Windows.Controls.TextBox.MinLines" /> è maggiore di <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-246">
              <see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-247">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="textBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-248">Crea e restituisce un oggetto <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> per la casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-249">Un oggetto <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> accessibile per la casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-250">Questo metodo esegue l'override del metodo <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="textBox.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7e8b0-251">Argomenti per l'evento associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-251">Arguments for the associated event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-252">Chiamato quando vengono modificati i valori effettivi di una o più proprietà di dipendenza esistenti all'interno dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-253">Questo metodo esegue l'override del metodo <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.ScrollToLine : int -&gt; unit" Usage="textBox.ScrollToLine lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="7e8b0-254">Indice a base zero della riga da fare scorrere all'interno della visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-254">The zero-based line index of the line to scroll into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-255">Consente di scorrere la riga fino all'indice della riga specificato all'interno della visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-255">Scrolls the line at the specified line index into view.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-256">Questo metodo fa in modo che la casella di testo per uno scorrimento in base alla quantità minima necessaria portare la riga specificata in visualizzazione completa.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Select : int * int -&gt; unit" Usage="textBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="7e8b0-257">L'indice dei caratteri in base zero del primo carattere nella selezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-257">The zero-based character index of the first character in the selection.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7e8b0-258">Lunghezza della selezione in caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-258">The length of the selection, in characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-259">Seleziona un intervallo di testo nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-259">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7e8b0-260">
            <paramref name="start" /> o <paramref name="length" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-260">
              <paramref name="start" /> or <paramref name="length" /> is negative.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Controls.TextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-261">Ottiene o imposta il contenuto della selezione corrente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-261">Gets or sets the content of the current selection in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-262">Testo attualmente selezionato nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-262">The currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-263">Recupero di questa proprietà restituisce una copia della stringa di testo attualmente selezionato.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="7e8b0-264">Impostazione di questa proprietà sostituisce la selezione corrente con la stringa specificata.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-265">Ottiene o imposta un valore che indica il numero di caratteri nella selezione corrente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-266">Il numero di caratteri nella selezione corrente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-266">The number of characters in the current selection in the text box.</span>
          </span>
          <span data-ttu-id="7e8b0-267">Il valore predefinito è 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-267">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-268">Recupero di questa proprietà restituisce il numero di caratteri nella selezione corrente.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="7e8b0-269">Impostazione di questa proprietà viene modificata la lunghezza della selezione corrente sul valore specificato, mantenendo l'inizio della selezione fissata.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="7e8b0-270">In generale, quando la lunghezza della selezione specificata causa la selezione alla fine in una posizione non valida (ad esempio tra un ritorno a capo e un carattere di nuova riga o all'interno di un tag), la lunghezza della selezione automaticamente regolata in modo che inizia la selezione risulta e termina in posizioni valide.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7e8b0-271">Il controllo <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> è impostato su un valore negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-271">
              <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-272">Ottiene o imposta un indice dei caratteri per l'inizio della selezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-272">Gets or sets a character index for the beginning of the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-273">L'indice dei caratteri per l'inizio della selezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-273">The character index for the beginning of the current selection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-274">Nei casi in cui la lunghezza della selezione specificata causerebbe la selezione alla fine tra un ritorno a capo e un carattere di nuova riga, la lunghezza della selezione viene automaticamente aumentata di 1 in modo che la selezione risulta si estende il marcatore di fine riga intero.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7e8b0-275">Il controllo <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> è impostato su un valore negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-275">
              <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeText : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="textBox.ShouldSerializeText manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="7e8b0-276">Oggetto del gestore dei servizi di serializzazione per questo oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-276">A serialization service manager object for this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-277">Restituisce un valore che indica se il valore effettivo della proprietà <see cref="P:System.Windows.Controls.TextBox.Text" /> deve essere serializzato o meno durante la serializzazione dell'oggetto <see cref="T:System.Windows.Controls.TextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e8b0-278">
            <see langword="true" /> se la proprietà <see cref="P:System.Windows.Controls.TextBox.Text" /> deve essere serializzata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-278">
              <see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="7e8b0-279">
            <paramref name="manager" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-279">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7e8b0-280">Oggetto da aggiungere come elemento figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-280">An object to add as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-281">Genera un'eccezione in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-281">Throws an exception in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-282"><xref:System.Windows.Controls.TextBox> accetta solo il testo tramite il <xref:System.Windows.Markup.IAddChild> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7e8b0-283">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-283">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7e8b0-284">In tutti gli altri casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-284">In all other cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="7e8b0-285">Stringa da aggiungere all'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-285">A string to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e8b0-286">Aggiunge il contenuto di testo di un nodo all'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-286">Adds the text content of a node to the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-287">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7e8b0-288">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Controls.TextBox> a un'interfaccia <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-289">Ottiene o imposta il contenuto di testo della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-289">Gets or sets the text contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-290">Stringa che include il contenuto di testo della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-290">A string containing the text contents of the text box.</span>
          </span>
          <span data-ttu-id="7e8b0-291">Il valore predefinito è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-291">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-292">Recupero di questa proprietà restituisce una copia della stringa del contenuto della casella di testo.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="7e8b0-293">Impostazione di questa proprietà sostituisce il contenuto della casella di testo con la stringa specificata.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="7e8b0-294">Questa proprietà non supporta l'animazione.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="7e8b0-295">Se usato in scenari di data binding, questa proprietà Usa il comportamento di aggiornamento predefinito della <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="7e8b0-296">Utilizzo della sintassi XAML per elementi proprietà</span><span class="sxs-lookup"><span data-stu-id="7e8b0-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-297">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-298">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="7e8b0-299">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="7e8b0-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="7e8b0-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Controls.TextBox.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-301">Ottiene o imposta l'allineamento orizzontale del contenuto della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-301">Gets or sets the horizontal alignment of the contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-302">Uno dei valori della proprietà <see cref="T:System.Windows.TextAlignment" /> che specifica l'allineamento orizzontale del contenuto della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span>
          </span>
          <span data-ttu-id="7e8b0-303">Il valore predefinito è <see cref="F:System.Windows.TextAlignment.Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-304">Recupero di questa proprietà restituisce l'allineamento corrente.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="7e8b0-305">Impostazione di questa proprietà consente di regolare il contenuto della casella di testo in modo da riflettere l'allineamento specificato.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="7e8b0-306">Questa proprietà ha una precedenza più elevata di <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-307">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-308">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="7e8b0-309">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="7e8b0-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="7e8b0-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-311">Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Controls.TextBox> con un <xref:System.Windows.Controls.TextBox.TextAlignment%2A> di <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-312">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.TextAlignment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextDecorations : System.Windows.TextDecorationCollection with get, set" Usage="System.Windows.Controls.TextBox.TextDecorations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-313">Ottiene le decorazioni di testo da applicare alla casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-313">Gets the text decorations to apply to the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-314">Un insieme <see cref="T:System.Windows.TextDecorationCollection" /> contenente le decorazioni di testo da applicare alla casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span>
          </span>
          <span data-ttu-id="7e8b0-315">L'impostazione predefinita è <see langword="null" /> (nessuna decorazione di testo applicata).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-315">The default is <see langword="null" /> (no text decorations applied).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-316">Oggetto <xref:System.Windows.TextDecoration> oggetto è un ornamento visivo è possibile aggiungere al testo.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="7e8b0-317">Esistono quattro tipi di effetti del testo: sottolineato, linea di base, quali il barrato e linea sopra.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="7e8b0-318">Per altre informazioni sulle decorazioni di testo, vedere [procedura: creare un effetto di testo](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-319">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-320">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="7e8b0-321">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-322">Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.Inline.TextDecorations%2A> dell'attributo, usando <xref:System.Windows.Documents.Run> come elemento di esempio.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="7e8b0-323">La figura seguente illustra il rendering di questo esempio.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="7e8b0-324">![Screenshot: Testo con effetto barrato predefinito](~/add/media/inline-textdec-strike.png "Screenshot: testo con effetto strikethrough predefinito")</span><span class="sxs-lookup"><span data-stu-id="7e8b0-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="7e8b0-325">Le figure seguenti mostrano come la <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, e <xref:System.Windows.TextDecorations.Underline%2A> il rendering delle decorazioni, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="7e8b0-326">![Screenshot: TextDecorator Overline](~/add/media/inline-textdec-over.png "Screenshot: TextDecorator Overline")</span><span class="sxs-lookup"><span data-stu-id="7e8b0-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="7e8b0-327">![Schermata: Effetto baseline predefinito sul testo](~/add/media/inline-textdec-base.png "Screenshot: effetto baseline predefinito sul testo")</span><span class="sxs-lookup"><span data-stu-id="7e8b0-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="7e8b0-328">![Screenshot: Testo con effetto underline predefinito](~/add/media/inline-textdec-under.png "Screenshot: testo con effetto underline predefinito")</span><span class="sxs-lookup"><span data-stu-id="7e8b0-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="7e8b0-329">Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.Inline.TextDecorations%2A> proprietà a livello di codice.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextDecorationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-330">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.TextDecorations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-331">Identificatore della proprietà di dipendenza <xref:System.Windows.Controls.TextBox.TextDecorations%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-332">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapping : System.Windows.TextWrapping with get, set" Usage="System.Windows.Controls.TextBox.TextWrapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-333">Ottiene o imposta la modalità di wrapping del testo in una casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-333">Gets or sets how the text box should wrap text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-334">Uno dei valori di <see cref="T:System.Windows.TextWrapping" /> che indica come la casella di testo deve eseguire il wrapping del testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span>
          </span>
          <span data-ttu-id="7e8b0-335">Il valore predefinito è <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-336">Impostando il <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dell'attributo <xref:System.Windows.TextWrapping.Wrap> cause immesso testo per eseguire il wrapping in una nuova riga quando il bordo del <xref:System.Windows.Controls.TextBox> controllo viene raggiunto, si espande automaticamente l'altezza del <xref:System.Windows.Controls.TextBox> controllo per includere una nuova riga, se necessario.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e8b0-337">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="7e8b0-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e8b0-338">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="7e8b0-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="7e8b0-339">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="7e8b0-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="7e8b0-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="7e8b0-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-341">Nell'esempio seguente viene illustrato come impostare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextWrappingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-342">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.TextBox.TextWrapping" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-343">Identificatore della proprietà di dipendenza <xref:System.Windows.Controls.TextBox.TextWrapping%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Typography : System.Windows.Documents.Typography" Usage="System.Windows.Controls.TextBox.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e8b0-344">Ottiene le variazioni tipografiche effettive attuali per il contenuto della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-344">Gets the currently effective typography variations for the text contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e8b0-345">Oggetto <see cref="T:System.Windows.Documents.Typography" /> che specifica le variazioni tipografiche effettive attuali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span>
          </span>
          <span data-ttu-id="7e8b0-346">Per un elenco dei valori tipografici predefiniti, vedere <see cref="T:System.Windows.Documents.Typography" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e8b0-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e8b0-347">Il <xref:System.Windows.Documents.FlowDocument.Typography%2A> la proprietà è applicabile solo a [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] i tipi di carattere.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="7e8b0-348">Una variante di tipografia ha alcun effetto sui tipi di carattere che non supportano la variante.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="7e8b0-349">Per altre informazioni su questo argomento, vedere [funzionalità tipografiche di WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="7e8b0-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e8b0-350">Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.TextElement.Typography%2A> dell'attributo, usando <xref:System.Windows.Documents.Paragraph> come elemento di esempio.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="7e8b0-351">La figura seguente illustra il rendering di questo esempio.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="7e8b0-352">![Screenshot: Testo con tipografia modificata](~/add/media/textelement-typog.png "Screenshot: testo con tipografia modificata")</span><span class="sxs-lookup"><span data-stu-id="7e8b0-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="7e8b0-353">La figura seguente mostra invece il rendering dello stesso esempio con le proprietà tipografiche predefinite.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="7e8b0-354">![Screenshot: Testo con tipografia modificata](~/add/media/textelement-typog-default.png "Screenshot: testo con tipografia modificata")</span><span class="sxs-lookup"><span data-stu-id="7e8b0-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="7e8b0-355">Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Controls.TextBox.Typography%2A> proprietà a livello di codice.</span><span class="sxs-lookup"><span data-stu-id="7e8b0-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>