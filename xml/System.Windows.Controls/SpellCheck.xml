<Type Name="SpellCheck" FullName="System.Windows.Controls.SpellCheck">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9d7ce836a18b8827e0c2dd61702db1c62de516a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619425" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpellCheck" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpellCheck extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.SpellCheck" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpellCheck" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpellCheck sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la funzionalità di controllo ortografico in tempo reale ai controlli di modifica del testo, ad esempio <see cref="T:System.Windows.Controls.TextBox" /> e <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per abilitare il correttore ortografico, impostare il <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=nameWithType> proprietà `true` su un controllo di modifica del testo. Se il correttore ortografico è abilitato, le parole vengono sottolineate con una riga rossa ondulata, come illustrato nella figura seguente. Correttore ortografico è supportato solo quando WPF fornisce un dizionario predefinito. In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], WPF fornisce dizionari per inglese, francese, tedesco e spagnolo.  
  
 ![TextBox con ortografia&#45;verifica](~/add/media/editing-textbox-with-spellchecking.png "Textbox con controllo ortografico")  
  
 Per aggiungere un dizionario personalizzato, aggiungere il percorso del file di lessico per il <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A> insieme.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomDictionaries">
      <MemberSignature Language="C#" Value="public System.Collections.IList CustomDictionaries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList CustomDictionaries" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDictionaries As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ CustomDictionaries { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di percorsi dei file di lessico utilizzati per il controllo ortografico personalizzato.</summary>
        <value>Insieme di percorsi dei file di lessico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I dizionari personalizzati utilizzano file di lessico sono file di testo con estensione lex. Ogni riga di un file di lessico contiene una parola che viene accettata come ortografica legittima. La prima riga del file è possibile specificare un identificatore delle impostazioni locali (LCID) che il dizionario si applica a. Se le impostazioni locali non è specificata, il dizionario si applica a tutti i linguaggi. Per ulteriori informazioni, vedere [ID delle impostazioni locali](http://go.microsoft.com/fwlink/?LinkId=165561). L'esempio seguente mostra le prime righe di un file di lessico per la lingua inglese.  
  
```  
#LID 1033  
TextBlock  
TextBox  
ListBox  
```  
  
 Per specificare uno o più dizionari personalizzati per un <xref:System.Windows.Controls.TextBox> o per qualsiasi classe che deriva da <xref:System.Windows.Controls.Primitives.TextBoxBase>, specificare il percorso del file di lessico aggiungendo l'URI per il file di <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A> insieme.  
  
> [!NOTE]
>  Utilizzando <xref:System.Collections.IList.Insert%2A> per aggiungere un file per il <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A> raccolta genererà un'eccezione. Utilizzare invece <xref:System.Collections.IList.Add%2A> e <xref:System.Collections.IList.Remove%2A> aggiornare la raccolta.  
  
 I file di lessico possono essere inclusi nell'applicazione come file di contenuto installati nel computer locale o come file di risorse compilati in una classe locale a cui fa riferimento assembly. È possibile fare riferimento al file tramite l'URI di tipo pack. Per altre informazioni, vedere [URI di tipo pack in WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md).  
  
 Per abilitare il correttore ortografico, impostare il <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=nameWithType> proprietà `true` su un <xref:System.Windows.Controls.TextBox> o su qualsiasi classe che deriva da <xref:System.Windows.Controls.Primitives.TextBoxBase>. Tutti i dizionari personalizzati per tale <xref:System.Windows.Controls.TextBox> vengono utilizzati oltre il correttore ortografico predefinito. Per ulteriori informazioni sul controllo ortografico, vedere <xref:System.Windows.Controls.SpellCheck>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere due dizionari personalizzati a un <xref:System.Windows.Controls.RichTextBox>. Il primo dizionario personalizzato (customwords. lex) viene aggiunto in XAML. Il file è incluso nell'applicazione come un file di contenuto e copiato nella directory di output. Utilizzare il <xref:System.Uri> elemento, è necessario includere lo spazio dei nomi System.  
  
 `xmlns:sys="clr-namespace:System;assembly=System"`  
  
 Il secondo dizionario personalizzato (customwords2. lex) viene aggiunto nel <xref:System.Windows.Controls.Primitives.ButtonBase.Click> gestore dell'evento. Il file è incluso come un file di risorse e compilato nell'assembly dell'applicazione denominata WPFCustomDictionary.  
  
 [!code-xaml[WpfCustomDictionary#1](~/samples/snippets/csharp/VS_Snippets_Wpf/wpfcustomdictionary/cs/window1.xaml#1)]  
  
 [!code-csharp[WpfCustomDictionary#2](~/samples/snippets/csharp/VS_Snippets_Wpf/wpfcustomdictionary/cs/window1.xaml.cs#2)]
 [!code-vb[WpfCustomDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/wpfcustomdictionary/vb/mainwindow.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
        <altmember cref="T:System.Windows.Controls.TextBox" />
        <altmember cref="T:System.Windows.Controls.RichTextBox" />
        <altmember cref="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)" />
      </Docs>
    </Member>
    <Member MemberName="CustomDictionariesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomDictionariesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomDictionariesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.CustomDictionariesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomDictionariesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomDictionariesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomDictionaries">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetCustomDictionaries (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetCustomDictionaries(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetCustomDictionaries(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Controllo di modifica del testo il cui insieme di file di lessico viene recuperato.</param>
        <summary>Ottiene l'insieme di percorsi dei file di lessico utilizzati per i correttori ortografici personalizzati su un controllo di modifica del testo specificato.</summary>
        <returns>Insieme di percorsi dei file di lessico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dizionari personalizzati utilizzano file di lessico che sono semplici file di testo con estensione lex. Ogni riga di un file di lessico contiene una parola che viene accettata come ortografica legittima. La prima riga del file è possibile specificare un identificatore delle impostazioni locali (LCID) che il dizionario si applica a. Se le impostazioni locali non è specificata, il dizionario si applica a tutti i linguaggi. Per ulteriori informazioni, vedere [ID delle impostazioni locali](http://go.microsoft.com/fwlink/?LinkId=165561). L'esempio seguente mostra le prime righe di un file di lessico per la lingua inglese.  
  
```  
#LID 1033  
TextBlock  
TextBox  
ListBox  
```  
  
 Per specificare uno o più dizionari personalizzati per un <xref:System.Windows.Controls.TextBox> o qualsiasi classe che deriva da <xref:System.Windows.Controls.Primitives.TextBoxBase>, specificare il percorso del file di lessico aggiungendo l'URI per il file di <xref:System.Collections.IList> restituito dal <xref:System.Windows.Controls.SpellCheck.GetCustomDictionaries%2A> metodo.  
  
 Per abilitare il correttore ortografico, impostare il <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=nameWithType> proprietà `true` su un <xref:System.Windows.Controls.TextBox> o su qualsiasi classe che deriva da <xref:System.Windows.Controls.Primitives.TextBoxBase>. Tutti i dizionari personalizzati per tale <xref:System.Windows.Controls.TextBox> vengono utilizzati oltre il correttore ortografico predefinito. Per ulteriori informazioni sul controllo ortografico, vedere <xref:System.Windows.Controls.SpellCheck>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="textBoxBase" /> è <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
        <altmember cref="T:System.Windows.Controls.TextBox" />
        <altmember cref="T:System.Windows.Controls.RichTextBox" />
      </Docs>
    </Member>
    <Member MemberName="GetIsEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsEnabled(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsEnabled(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Controllo di modifica del testo da verificare. I controlli di esempio includono <see cref="T:System.Windows.Controls.TextBox" /> e <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
        <summary>Restituisce un valore che indica se il correttore ortografico è abilitato per il controllo di modifica del testo specificato.</summary>
        <returns>
          <see langword="true" /> se il correttore ortografico è abilitato per il controllo di modifica del testo; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="textBoxBase" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il correttore ortografico è abilitato per questo controllo di modifica del testo, ad esempio <see cref="T:System.Windows.Controls.TextBox" /> o <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
        <value>
          <see langword="true" /> se il correttore ortografico è abilitato per il controllo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà di dipendenza ha anche un utilizzo di proprietà associata in sola lettura specializzato. Il [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintassi per l'impostazione della proprietà è `<` *textBoxBaseClass* **SpellCheck. IsEnabled**`="`*boolValue* `" .../>`, dove *textBoxBaseClass* è un elemento oggetto per una classe che deriva da <xref:System.Windows.Controls.Primitives.TextBoxBase>, e *boolValue* è `true` o `false` (case senza distinzione). Per impostare la proprietà come proprietà associata nel codice, vedere il <xref:System.Windows.Controls.SpellCheck.SetIsEnabled%2A> metodo. Non vi è alcuna corrispondenza `GetIsEnabled` della funzione di accesso. Per ottenere il valore, ottenere l'oggetto corrente <xref:System.Windows.Controls.SpellCheck> dall'oggetto di <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=nameWithType> proprietà e quindi ottenere il valore della <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A> proprietà che <xref:System.Windows.Controls.SpellCheck>.  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Controls.SpellCheck.IsEnabledProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsEnabled(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsEnabled(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Controllo di modifica del testo in cui abilitare o disabilitare il correttore ortografico. I controlli di esempio includono <see cref="T:System.Windows.Controls.TextBox" /> e <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
        <param name="value">Valore booleano che specifica se il correttore ortografico è abilitato nel controllo di modifica del testo.</param>
        <summary>Abilita o disabilita il correttore ortografico per il controllo di modifica del testo specificato, ad esempio <see cref="T:System.Windows.Controls.TextBox" /> o <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente un utilizzo della proprietà associata per il <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A> proprietà [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. Nell'esempio seguente il [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] utilizzo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpellingReform">
      <MemberSignature Language="C#" Value="public static void SetSpellingReform (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, System.Windows.Controls.SpellingReform value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSpellingReform(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase, valuetype System.Windows.Controls.SpellingReform value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSpellingReform(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase, System::Windows::Controls::SpellingReform value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
        <Parameter Name="value" Type="System.Windows.Controls.SpellingReform" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Controllo di modifica del testo al quale viene applicato il correttore ortografico. I controlli di esempio includono <see cref="T:System.Windows.Controls.TextBox" /> e <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
        <param name="value">Il valore <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> che determina le regole della riforma ortografica.</param>
        <summary>Determina le regole della riforma ortografica utilizzate dal correttore ortografico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le regole della riforma ortografica che sono possibile accedere da questo metodo può fare riferimento alle riforme ortografiche francese e tedesco degli anni ' 90. Questo metodo non ha alcun effetto quando viene utilizzato con qualsiasi altro linguaggio.  
  
 Questo metodo consente un utilizzo della proprietà associata per il <xref:System.Windows.Controls.SpellCheck.SpellingReform%2A> proprietà [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingReform">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingReform SpellingReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.SpellingReform SpellingReform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.SpellingReform" />
      <MemberSignature Language="VB.NET" Value="Public Property SpellingReform As SpellingReform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellingReform SpellingReform { System::Windows::Controls::SpellingReform get(); void set(System::Windows::Controls::SpellingReform value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingReform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le regole della riforma ortografica usate dal correttore ortografico.</summary>
        <value>Regole della riforma ortografica usate dal correttore ortografico. Il valore predefinito è <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform" /> per il francese e <see cref="F:System.Windows.Controls.SpellingReform.Postreform" /> per il tedesco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le regole della riforma ortografica che dipendono da questa proprietà può fare riferimento alle riforme ortografiche francese e tedesco. Questa proprietà non ha alcun effetto quando viene utilizzato con qualsiasi altro linguaggio.  
  
 Questa proprietà di dipendenza ha anche un utilizzo di proprietà associata in sola lettura specializzato. Il [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintassi per l'impostazione della proprietà è `<` *textBoxBaseClass* **SpellCheck. SpellingReform**`="`*enumValue* `" .../>`, dove *textBoxBaseClass* è un elemento oggetto per una classe che deriva da <xref:System.Windows.Controls.Primitives.TextBoxBase>, e *enumValue* è un nome di stringa per il valore di <xref:System.Windows.Controls.SpellingReform> enumerazione. Per impostare la proprietà come proprietà associata nel codice, vedere il <xref:System.Windows.Controls.SpellCheck.SetSpellingReform%2A> metodo. Non vi è alcuna corrispondenza `GetSpellingReform` della funzione di accesso. Per ottenere il valore, ottenere l'oggetto corrente <xref:System.Windows.Controls.SpellCheck> dall'oggetto di <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=nameWithType> proprietà e quindi ottenere il valore della <xref:System.Windows.Controls.SpellCheck.SpellingReform%2A> proprietà che <xref:System.Windows.Controls.SpellCheck>.  
  
<a name="dependencyPropertyInfo_SpellingReform"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Controls.SpellCheck.SpellingReformProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingReformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpellingReformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpellingReformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.SpellingReformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpellingReformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpellingReformProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>