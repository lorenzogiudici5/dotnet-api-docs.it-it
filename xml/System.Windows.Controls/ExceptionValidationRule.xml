<Type Name="ExceptionValidationRule" FullName="System.Windows.Controls.ExceptionValidationRule">
  <TypeSignature Language="C#" Value="public sealed class ExceptionValidationRule : System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionValidationRule extends System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ExceptionValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExceptionValidationRule&#xA;Inherits ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionValidationRule sealed : System::Windows::Controls::ValidationRule" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ValidationRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ee60b-101">Rappresenta una regola che controlla le eccezioni generate durante l'aggiornamento della proprietà di origine dell'associazione.</span><span class="sxs-lookup"><span data-stu-id="ee60b-101">Represents a rule that checks for exceptions that are thrown during the update of the binding source property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee60b-102">Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modello di associazione dati consente di associare <xref:System.Windows.Data.Binding.ValidationRules%2A> con un <xref:System.Windows.Data.Binding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ee60b-102">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with a <xref:System.Windows.Data.Binding> object.</span></span> <span data-ttu-id="ee60b-103">La <xref:System.Windows.Controls.ExceptionValidationRule> classe è una regola predefinita che controlla le eccezioni generate durante gli aggiornamenti della proprietà di origine di associazione.</span><span class="sxs-lookup"><span data-stu-id="ee60b-103">The <xref:System.Windows.Controls.ExceptionValidationRule> class is a built-in rule that checks for exceptions that are thrown during the updates of the binding source property.</span></span> <span data-ttu-id="ee60b-104">È possibile fornire logica personalizzata per specificare come il motore di associazione gestisce queste eccezioni utilizzando un <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span><span class="sxs-lookup"><span data-stu-id="ee60b-104">You can provide custom logic to specify how the binding engine handles these exceptions by using a <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span> <span data-ttu-id="ee60b-105">Per ulteriori informazioni, vedere <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee60b-105">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</span></span>  
  
 <span data-ttu-id="ee60b-106">Una sintassi alternativa all'impostazione di <xref:System.Windows.Controls.ExceptionValidationRule> in modo esplicito consiste nell'impostare il <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> proprietà `true` sul <xref:System.Windows.Data.Binding> o <xref:System.Windows.Data.MultiBinding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ee60b-106">An alternative syntax to setting the <xref:System.Windows.Controls.ExceptionValidationRule> explicitly is to set the <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> property to `true` on your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span>  
  
 <span data-ttu-id="ee60b-107">È possibile creare una regola personalizzata mediante la creazione di una classe che deriva da <xref:System.Windows.Controls.ValidationRule>.</span><span class="sxs-lookup"><span data-stu-id="ee60b-107">You can create a custom rule by creating a class that derives from <xref:System.Windows.Controls.ValidationRule>.</span></span> <span data-ttu-id="ee60b-108">Per ulteriori informazioni e una descrizione dettagliata dei dati di convalida, vedere [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ee60b-108">For more information and a detailed discussion of data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee60b-109">Il <xref:System.Windows.Data.Binding.ValidationRules%2A> proprietà accetta una raccolta di <xref:System.Windows.Controls.ValidationRule> oggetti.</span><span class="sxs-lookup"><span data-stu-id="ee60b-109">The <xref:System.Windows.Data.Binding.ValidationRules%2A> property takes a collection of <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="ee60b-110">L'esempio seguente usa <xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=nameWithType> come proprietà di destinazione di associazione e `StartPrice` (integer) come proprietà di origine di associazione.</span><span class="sxs-lookup"><span data-stu-id="ee60b-110">The following example uses <xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=nameWithType> as the binding target property and `StartPrice` (an integer) as the binding source property.</span></span> <span data-ttu-id="ee60b-111">Quando l'utente immette un valore che non può essere convertito in un numero intero, viene generata un'eccezione, causando il <xref:System.Windows.Controls.ExceptionValidationRule> invalida il valore di destinazione.</span><span class="sxs-lookup"><span data-stu-id="ee60b-111">When the user enters a value that cannot be converted to an integer, an exception is thrown, which causes the <xref:System.Windows.Controls.ExceptionValidationRule> to invalidate the target value.</span></span>  
  
 [!code-xaml[DataBindingLab#DefaultValidation](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#defaultvalidation)]  
  
 <span data-ttu-id="ee60b-112">Per impostazione predefinita, quando si verifica un errore di convalida, il <xref:System.Windows.Controls.TextBox> viene visualizzata con un bordo rosso.</span><span class="sxs-lookup"><span data-stu-id="ee60b-112">By default, when there is a validation error, the <xref:System.Windows.Controls.TextBox> appears with a red border.</span></span> <span data-ttu-id="ee60b-113">Facoltativamente, è possibile scrivere un oggetto personalizzato <xref:System.Windows.Controls.Validation.ErrorTemplate%2A> per specificare la modalità di notifica all'utente quando si verifica un errore di convalida.</span><span class="sxs-lookup"><span data-stu-id="ee60b-113">Optionally, you can write a custom <xref:System.Windows.Controls.Validation.ErrorTemplate%2A> to specify how you want to notify the user when there is a validation error.</span></span>  
  
 <span data-ttu-id="ee60b-114">Per ulteriori informazioni sulla convalida dei dati, vedere [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ee60b-114">For more information about data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="ee60b-115">Per l'esempio completo, vedere [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span><span class="sxs-lookup"><span data-stu-id="ee60b-115">For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExceptionValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ExceptionValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExceptionValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee60b-116">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="ee60b-116">Initializes a new instance of the <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ee60b-117">Valore della destinazione dell'associazione da controllare.</span><span class="sxs-lookup"><span data-stu-id="ee60b-117">The value (from the binding target) to check.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="ee60b-118">Impostazioni cultura da usare nella regola.</span><span class="sxs-lookup"><span data-stu-id="ee60b-118">The culture to use in this rule.</span></span></param>
        <summary><span data-ttu-id="ee60b-119">Esegue controlli di convalida su un valore.</span><span class="sxs-lookup"><span data-stu-id="ee60b-119">Performs validation checks on a value.</span></span></summary>
        <returns><span data-ttu-id="ee60b-120">Un oggetto <see cref="T:System.Windows.Controls.ValidationResult" />.</span><span class="sxs-lookup"><span data-stu-id="ee60b-120">A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
  </Members>
</Type>