<Type Name="ComboBoxItem" FullName="System.Windows.Controls.ComboBoxItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5f1a4816672ec7ec90534bdca00251b37e87bb7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37581101" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBoxItem : System.Windows.Controls.ListBoxItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBoxItem extends System.Windows.Controls.ListBoxItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBoxItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBoxItem&#xA;Inherits ListBoxItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBoxItem : System::Windows::Controls::ListBoxItem" />
  <TypeSignature Language="F#" Value="type ComboBoxItem = class&#xA;    inherit ListBoxItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBoxItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c160c-101">Implementa un elemento selezionabile all'interno di un oggetto <see cref="T:System.Windows.Controls.ComboBox" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c160c-101">Implements a selectable item inside a <see cref="T:System.Windows.Controls.ComboBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c160c-102">Per impostazione predefinita, il <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> di un <xref:System.Windows.Controls.ComboBoxItem> è impostata su <xref:System.Windows.HorizontalAlignment.Stretch>.</span><span class="sxs-lookup"><span data-stu-id="c160c-102">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.ComboBoxItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch>.</span></span> <span data-ttu-id="c160c-103">La posizione orizzontale di un <xref:System.Windows.Controls.StackPanel> è <xref:System.Windows.HorizontalAlignment.Center>.</span><span class="sxs-lookup"><span data-stu-id="c160c-103">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center>.</span></span> <span data-ttu-id="c160c-104">Se si imposta la <xref:System.Windows.FrameworkElement.Width%2A> proprietà di un <xref:System.Windows.Controls.ComboBoxItem> tramite un <xref:System.Windows.Controls.StackPanel>, viene applicata l'impostazione predefinita del pannello e l'elemento verrà centrata.</span><span class="sxs-lookup"><span data-stu-id="c160c-104">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.ComboBoxItem> through a <xref:System.Windows.Controls.StackPanel>, the panel's default is applied and the item will be centered.</span></span>  
  
 <span data-ttu-id="c160c-105">Oggetto <xref:System.Windows.Controls.ComboBoxItem> è un <xref:System.Windows.Controls.ContentControl>, il che significa che può contenere un singolo oggetto di qualsiasi tipo (ad esempio, una stringa, un'immagine o un pannello).</span><span class="sxs-lookup"><span data-stu-id="c160c-105">A <xref:System.Windows.Controls.ComboBoxItem> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="c160c-106">Per altre informazioni, vedere la classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="c160c-106">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-comboboxitem-control"></a><span data-ttu-id="c160c-107">Personalizzazione del controllo ComboBoxItem</span><span class="sxs-lookup"><span data-stu-id="c160c-107">Customizing the ComboBoxItem Control</span></span>  
 <span data-ttu-id="c160c-108">Per applicare le stesse impostazioni di proprietà al multiplo <xref:System.Windows.Controls.ComboBoxItem> controlli, usare il <xref:System.Windows.FrameworkElement.Style%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c160c-108">To apply the same property settings to multiple <xref:System.Windows.Controls.ComboBoxItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="c160c-109">È possibile modificare il valore predefinito <xref:System.Windows.Controls.ControlTemplate> per fornire al controllo un aspetto univoco.</span><span class="sxs-lookup"><span data-stu-id="c160c-109">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="c160c-110">Per altre informazioni sulla creazione di un <xref:System.Windows.Controls.ControlTemplate>, vedere [personalizzazione dell'aspetto di un controllo esistente mediante la creazione di un oggetto ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="c160c-110">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="c160c-111">Per visualizzare le parti e stati specifici di <xref:System.Windows.Controls.ComboBoxItem>, vedere [ComboBox stili e modelli](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="c160c-111">To see the parts and states that are specific to the <xref:System.Windows.Controls.ComboBoxItem>, see [ComboBox Styles and Templates](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="c160c-112">Le proprietà di dipendenza di questo controllo potrebbero essere impostate dallo stile predefinito del controllo.</span><span class="sxs-lookup"><span data-stu-id="c160c-112">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="c160c-113">Se una proprietà viene impostata da uno stile predefinito, la proprietà può variare rispetto al valore predefinito quando il controllo viene visualizzato nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c160c-113">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="c160c-114">Lo stile predefinito è determinato dal tema del desktop viene usato quando viene eseguita l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c160c-114">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="c160c-115">Per altre informazioni, vedere [temi WPF predefiniti](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="c160c-115">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c160c-116">L'impostazione di una proprietà di visualizzazione verrà hanno effetto solo se tale proprietà è presente in entrambi <xref:System.Windows.Controls.ComboBoxItem> controllo del modello predefinito e viene impostata tramite una.</span><span class="sxs-lookup"><span data-stu-id="c160c-116">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ComboBoxItem> control's default template and is set by using a .</span></span> <span data-ttu-id="c160c-117">È possibile trovare un elenco di proprietà visive nella sezione "Modifica la struttura Visual di un controllo" in [personalizzazione dell'aspetto di un controllo esistente mediante la creazione di un oggetto ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="c160c-117">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBoxItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBoxItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c160c-118">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.ComboBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-118">Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBoxItem" /> class</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHighlighted : bool with get, set" Usage="System.Windows.Controls.ComboBoxItem.IsHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c160c-119">Ottiene un valore che indica se l'elemento è evidenziato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-119">Gets a value that indicates whether the item is highlighted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c160c-120">
            <see langword="true" /> se un oggetto <see cref="T:System.Windows.Controls.ComboBoxItem" /> è evidenziato. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-120">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.ComboBoxItem" /> is highlighted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c160c-121">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-121">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c160c-122">Questa proprietà può essere utilizzata dagli stili che richiedono un'evidenziazione per indicare la selezione.</span><span class="sxs-lookup"><span data-stu-id="c160c-122">This property can be used by styles that need a highlight to indicate selection.</span></span>  
  
 <span data-ttu-id="c160c-123">A partire da .NET Framework versione 3.0 Service Pack 1, <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> dispone di un setter protetto.</span><span class="sxs-lookup"><span data-stu-id="c160c-123">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> has a protected setter.</span></span> <span data-ttu-id="c160c-124">Per usare questa funzionalità, l'applicazione deve essere destinata a .NET Framework versione 3.5.</span><span class="sxs-lookup"><span data-stu-id="c160c-124">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="c160c-125">Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="c160c-125">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c160c-126">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="c160c-126">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c160c-127">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="c160c-127">Identifier Field</span></span>|<xref:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty>|  
|<span data-ttu-id="c160c-128">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="c160c-128">Metadata properties set to `true`</span></span>|<span data-ttu-id="c160c-129">nessuno</span><span class="sxs-lookup"><span data-stu-id="c160c-129">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c160c-130">Nell'esempio seguente modifica l'aspetto di un <xref:System.Windows.Controls.ComboBoxItem> quando si <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="c160c-130">The following example changes the appearance of a <xref:System.Windows.Controls.ComboBoxItem> when <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> is `true`.</span></span>  
  
 [!code-xaml[ComboBoxSimple#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBoxItem.IsHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c160c-131">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-131">Identifies the <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="comboBoxItem.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent">
          <span data-ttu-id="c160c-132">Contenuto precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-132">Old content.</span>
          </span>
        </param>
        <param name="newContent">
          <span data-ttu-id="c160c-133">Contenuto nuovo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-133">New content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c160c-134">Viene chiamato quando viene modificata la proprietà <see cref="P:System.Windows.Controls.ContentControl.Content" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-134">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="comboBoxItem.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c160c-135">Argomenti degli eventi di input da tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-135">Keyboard input event arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c160c-136">Notifica che la tastiera è incentrata su questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-136">Announces that the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c160c-137">Fornisce i dati per <see cref="T:System.Windows.Input.MouseEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-137">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c160c-138">Risponde a un evento <see cref="E:System.Windows.UIElement.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-138">Responds to a <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c160c-139">Fornisce i dati per <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-139">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c160c-140">Risponde all'evento <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-140">Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c160c-141">Fornisce i dati per <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-141">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c160c-142">Risponde all'evento <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c160c-142">Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>