<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XElement.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac515213489ac8be26d6703a879772581c4b4082467.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15213489ac8be26d6703a879772581c4b4082467</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Represents an XML element.</source>
          <target state="translated">Rappresenta un elemento XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>See <bpt id="p1">[</bpt>XElement Class Overview<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> and the Remarks section on this page for usage information and examples.</source>
          <target state="translated">Per informazioni sull'uso e per esempi, vedere <bpt id="p1">[</bpt>Panoramica della classe XElement<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> e la sezione Osservazioni in questa pagina.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This class represents an XML element, the fundamental XML construct.</source>
          <target state="translated">Questa classe rappresenta un elemento XML, il costrutto XML fondamentale.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>See <bpt id="p1">[</bpt>XElement Class Overview<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> for other usage information.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>Cenni preliminari sulla classe XElement<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> per altre informazioni sull'utilizzo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>An element has an <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, optionally one or more attributes, and can optionally contain content (for more information, see <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</ph>).</source>
          <target state="translated">L'elemento dispone di un <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>facoltativamente uno o più attributi e può contenere facoltativamente contenuto (per ulteriori informazioni, vedere <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> can contain the following types of content:</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> può contenere i seguenti tipi di contenuto:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido di un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> derives from <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>, which derives from <ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> deriva da <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>, che deriva da <ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>Some <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> methods can be used from XAML.</source>
          <target state="translated">Alcuni <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> metodi possono essere utilizzati da XAML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to XML Dynamic Properties<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Proprietà dinamiche di LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Il contenuto del nuovo elemento proviene da una query LINQ.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Di seguito è riportato lo stesso esempio, ma in questo caso il XML si trova in uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content that can be passed to this constructor, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato al costruttore, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È una conversione implicita da stringa a <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È tipico di utilizzo di questo costruttore per specificare una stringa come parametro anziché creare un nuovo <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Quando si crea un elemento in uno spazio dei nomi, utilizzo tipico consiste nell'utilizzare l'overload dell'operatore di addizione con un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> e una stringa per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Il contenuto del nuovo elemento proviene da una query LINQ.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object to copy from.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da cui copiare.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da un altro oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>This constructor makes a deep copy of an element.</source>
          <target state="translated">Questo costruttore crea una copia completa di un elemento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>The following example creates an XML tree, creates a clone of the tree, and then calls <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.DeepEquals%2A&gt;</ph>, which tests whether the two XML trees are equal.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML, crea un clone della struttura ad albero e quindi chiama <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.DeepEquals%2A&gt;</ph>, che consente di testare se i due alberi XML sono uguali.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of the element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> che contiene il nome dell'elemento.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class with the specified name.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> con il nome specificato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>This constructor creates an element with no content and no attributes.</source>
          <target state="translated">Questo costruttore crea un elemento con nessun contenuto e senza attributi.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È una conversione implicita da stringa a <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È tipico di utilizzo di questo costruttore per specificare una stringa come parametro anziché creare un nuovo <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Quando si crea un elemento in uno spazio dei nomi, utilizzo tipico consiste nell'utilizzare l'overload dell'operatore di addizione con un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> e una stringa per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>The following example creates an element with no content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento senza contenuto.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>The following example creates an element in a namespace with no content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento in uno spazio dei nomi senza contenuto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph> that contains unevaluated queries that will be iterated for the contents of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph> che contiene query non valutate di cui verrà eseguita l'iterazione per il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class from an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph> object.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>This constructor iterates through the contents of the specified <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph>, and creates an element with its contents.</source>
          <target state="translated">Questo costruttore scorre il contenuto dell'oggetto specificato <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph>e crea un elemento con il relativo contenuto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>The following example creates a source XML tree, and then creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> from a query on the source XML tree.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML di origine e quindi crea un <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> da una query sull'albero XML di origine.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>It then serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> to the console, adds a new element to the source XML tree, and then serializes the <ph id="ph2">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> again.</source>
          <target state="translated">Serializza quindi la <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> nella console, viene aggiunto un nuovo elemento alla struttura XML di origine e quindi serializza il <ph id="ph2">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> nuovamente.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>You can see that element newly added to the source XML tree is not included in the first serialization, but is included in the second.</source>
          <target state="translated">È possibile visualizzare non è incluso nella serializzazione prima di tale elemento appena aggiunto alla struttura XML di origine, ma è incluso nel secondo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the element name.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> contenente il nome dell'elemento.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The contents of the element.</source>
          <target state="translated">Contenuto dell'elemento.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class with the specified name and content.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> con il nome e il contenuto specificati.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This constructor creates an element with the specified content and attributes.</source>
          <target state="translated">Questo costruttore crea un elemento con gli attributi e contenuto specificato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È una conversione implicita da stringa a <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È tipico di utilizzo di questo costruttore per specificare una stringa come parametro anziché creare un nuovo <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Quando si crea un elemento in uno spazio dei nomi, utilizzo tipico consiste nell'utilizzare l'overload dell'operatore di addizione con un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> e una stringa per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>For details about the valid content that can be passed to this constructor, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato al costruttore, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Il contenuto del nuovo elemento proviene da una query LINQ.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree with a variety of types of content.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML con un'ampia gamma di tipi di contenuto.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree in a namespace.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML in uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree with nested namespaces.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML con spazi dei nomi annidati.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the element name.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> contenente il nome dell'elemento.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The initial content of the element.</source>
          <target state="translated">Contenuto iniziale dell'elemento.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class with the specified name and content.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> con il nome e il contenuto specificati.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This constructor creates an element with the specified content and attributes.</source>
          <target state="translated">Questo costruttore crea un elemento con gli attributi e contenuto specificato.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È una conversione implicita da stringa a <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">È tipico di utilizzo di questo costruttore per specificare una stringa come parametro anziché creare un nuovo <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Quando si crea un elemento in uno spazio dei nomi, utilizzo tipico consiste nell'utilizzare l'overload dell'operatore di addizione con un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> e una stringa per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>For details about the valid content that can be passed to this constructor, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato al costruttore, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Il contenuto del nuovo elemento proviene da una query LINQ.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree with a variety of types of content.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML con un'ampia gamma di tipi di contenuto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree in a namespace.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML in uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree with nested namespaces.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML con spazi dei nomi annidati.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Returns a collection of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Restituisce una raccolta di elementi che contengono questo elemento e i relativi predecessori.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The elements in the returned collection are in reverse document order.</source>
          <target state="translated">Gli elementi nella raccolta restituita sono in ordine inverso del documento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>Returns a collection of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Restituisce una raccolta di elementi che contengono questo elemento e i relativi predecessori.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di elementi che contengono questo elemento e i relativi predecessori.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>The elements in the returned collection are in reverse document order.</source>
          <target state="translated">Gli elementi nella raccolta restituita sono in ordine inverso del documento.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>It then finds the <ph id="ph1">`GrandChild`</ph> element, and then prints the ancestors of it.</source>
          <target state="translated">Quindi, viene individuato il <ph id="ph1">`GrandChild`</ph> elemento e quindi vengono visualizzati i relativi predecessori.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> di cui trovare la corrispondenza.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Restituisce una raccolta filtrata di elementi che contengono questo elemento e i relativi predecessori.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Solo gli elementi che hanno un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> corrispondente vengono inclusi nella raccolta.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contain this element, and the ancestors of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> che contiene questo elemento e i relativi predecessori.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Solo gli elementi che hanno un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> corrispondente vengono inclusi nella raccolta.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>The elements in the returned collection are in reverse document order.</source>
          <target state="translated">Gli elementi nella raccolta restituita sono in ordine inverso del documento.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>The following example uses this .</source>
          <target state="translated">L'esempio seguente usa questo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to get.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> da ottenere.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that has the specified <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> di questo oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> con l'oggetto <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that has the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no attribute with the specified name.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> con l'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> specificato; <ph id="ph3">&lt;see langword="null" /&gt;</ph> se non ci sono attributi con il nome specificato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Some  return collections of elements or attributes.</source>
          <target state="translated">Alcune restituiscono raccolte di elementi o attributi.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>This method returns only a single attribute.</source>
          <target state="translated">Questo metodo restituisce un solo attributo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Sometimes this is referred to as a <bpt id="p1">*</bpt>singleton<ept id="p1">*</ept> (in contrast to a <bpt id="p2">*</bpt>collection<ept id="p2">*</ept>).</source>
          <target state="translated">Ciò è talvolta detta un <bpt id="p1">*</bpt>singleton<ept id="p1">*</ept> (in contrasto con una <bpt id="p2">*</bpt>raccolta<ept id="p2">*</ept>).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Visual Basic users can use the integrated attribute axis to retrieve the value of an attribute with a specified name.</source>
          <target state="translated">Gli utenti di Visual Basic è possono utilizzare l'asse attribute integrato per recuperare il valore di un attributo con un nome specificato.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>The following example creates an element with an attribute.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con un attributo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>It then retrieves the attribute using this method.</source>
          <target state="translated">Recupera quindi l'attributo con questo metodo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Di seguito è riportato lo stesso esempio, ma in questo caso il XML si trova in uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Returns a collection of attributes of this element.</source>
          <target state="translated">Restituisce una raccolta di attributi di questo elemento.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>Returns a collection of attributes of this element.</source>
          <target state="translated">Restituisce una raccolta di attributi di questo elemento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> of attributes of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> di attributi di questo elemento.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>The attributes in the returned collection are in the order that they were added to the element.</source>
          <target state="translated">Gli attributi nella raccolta restituita sono nell'ordine in cui sono stati aggiunti all'elemento.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>If the XML tree was parsed from XML, the attributes are returned in document order.</source>
          <target state="translated">Se la struttura ad albero XML è stato analizzato da XML, gli attributi vengono restituiti nell'ordine del documento.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>The following example creates an element with two attributes.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con due attributi.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>It then uses this  to retrieve all attributes of the element.</source>
          <target state="translated">Questo viene quindi utilizzato per recuperare tutti gli attributi dell'elemento.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Di seguito è riportato lo stesso esempio, ma in questo caso il XML si trova in uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> di cui trovare la corrispondenza.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of attributes of this element.</source>
          <target state="translated">Restituisce una raccolta filtrata di attributi di questo elemento.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Solo gli elementi che hanno un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> corrispondente vengono inclusi nella raccolta.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the attributes of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> che contiene gli attributi di questo elemento.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Solo gli elementi che hanno un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> corrispondente vengono inclusi nella raccolta.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Attribute names must be unique within an element.</source>
          <target state="translated">I nomi di attributo devono essere univoci all'interno di un elemento.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Therefore, this  can return either a collection that contains only one attribute, or it can return an empty collection.</source>
          <target state="translated">Pertanto, può restituire in una raccolta che contiene un solo attributo, o può restituire una raccolta vuota.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>The following example uses this .</source>
          <target state="translated">L'esempio seguente usa questo.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Di seguito è riportato lo stesso esempio, ma in questo caso il XML si trova in uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.</source>
          <target state="translated">Restituisce una raccolta di nodi che contengono questo elemento e tutti i relativi nodi discendenti, nell'ordine del documento.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contain this element, and all descendant nodes of this element, in document order.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> che contengono questo elemento e tutti i relativi nodi discendenti, nell'ordine del documento.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>The following example creates an XML tree, and then uses this .</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML che quindi utilizza.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Restituisce una raccolta di elementi che contengono questo elemento e tutti i relativi elementi discendenti, nell'ordine del documento.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Restituisce una raccolta di elementi che contengono questo elemento e tutti i relativi elementi discendenti, nell'ordine del documento.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di elementi che contengono questo elemento e tutti i relativi elementi discendenti, nell'ordine del documento.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>The following example creates an XML tree, and then uses this .</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML che quindi utilizza.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> di cui trovare la corrispondenza.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Restituisce una raccolta filtrata di elementi che contengono questo elemento e tutti i relativi elementi discendenti, nell'ordine del documento.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Solo gli elementi che hanno un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> corrispondente vengono inclusi nella raccolta.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> che contiene questo elemento e tutti gli elementi discendenti di questo elemento nell'ordine in cui sono riportati nel documento.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Solo gli elementi che hanno un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> corrispondente vengono inclusi nella raccolta.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Questo metodo usa l'esecuzione posticipata.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>The following example creates an XML tree, and then uses this .</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML che quindi utilizza.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>Gets an empty collection of elements.</source>
          <target state="translated">Ottiene una raccolta vuota di elementi.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains an empty collection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> che contiene una raccolta vuota.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>This property is typically used by class implementers when writing a method that returns a collection of elements.</source>
          <target state="translated">Questa proprietà viene in genere utilizzata per gli implementatori di classe quando si scrive un metodo che restituisce una raccolta di elementi.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>If the method must return no elements, it can use this property to get an empty collection of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.</source>
          <target state="translated">Se il metodo non deve restituire alcun elemento, è possibile utilizzare questa proprietà per ottenere una raccolta vuota di <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>Gets the first attribute of this element.</source>
          <target state="translated">Ottiene il primo attributo di questo elemento.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the first attribute of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> che contiene il primo attributo di questo elemento.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>Attributes are stored in the element in the order that they were added to the element.</source>
          <target state="translated">Gli attributi vengono archiviati nell'elemento nell'ordine in cui sono stati aggiunti all'elemento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>The following example uses this property.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata questa proprietà.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>Gets the default <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> predefinito di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that contains the default namespace of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> che contiene lo spazio dei nomi predefinito di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>Namespace declarations may be persisted as attributes in the XML tree.</source>
          <target state="translated">Namespace dichiarazioni possono essere mantenute come attributi nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>These special attributes declare namespaces, including default namespaces.</source>
          <target state="translated">Questi attributi speciali dichiarano spazi dei nomi, inclusi gli spazi dei nomi predefinito.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>This method finds the namespace declaration that declares the default namespace, if there is one, and returns the <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> for the default namespace.</source>
          <target state="translated">Questo metodo consente di trovare la dichiarazione dello spazio dei nomi che dichiara lo spazio dei nomi predefinito, se è presente, e restituisce il <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> per lo spazio dei nomi predefinito.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>If there is no attribute that declares the default namespace, then this method returns <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se nessun attributo che dichiara lo spazio dei nomi predefinito, questo metodo restituisce <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>When creating XML trees using C#, even if an XML tree would be serialized with a default namespace, if the namespace is not persisted in the XML tree as an attribute, this method will not report the namespace as the default namespace.</source>
          <target state="translated">Durante la creazione di strutture ad albero XML in c#, anche se un albero XML verrà serializzato con uno spazio dei nomi predefinito, se lo spazio dei nomi non è persistente nell'albero XML come un attributo, questo metodo non segnalerà lo spazio dei nomi come spazio dei nomi predefinito.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>When creating XML trees using Visual Basic and XML literals, if you create the XML in a default namespace using the Imports statement, then a namespace attribute will be created in the tree by the Visual Basic compiler, and this method will report that namespace.</source>
          <target state="translated">Durante la creazione di alberi XML usando Visual Basic e valori letterali XML, se si crea il codice XML in uno spazio dei nomi predefinito utilizzando l'istruzione Imports, quindi un attributo dello spazio dei nomi verrà creato nella struttura dal compilatore Visual Basic, e questo metodo riporterà tale spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>The following example creates an XML tree that has a default namespace.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML con uno spazio dei nomi predefinito.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>It then uses this method to retrieve the default namespace.</source>
          <target state="translated">Viene quindi utilizzato questo metodo per recuperare lo spazio dei nomi predefinito.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>A string that contains the namespace prefix to look up.</source>
          <target state="translated">Stringa che contiene il prefisso degli spazi dei nomi da ricercare.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>Gets the namespace associated with a particular prefix for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ottiene lo spazio dei nomi associato a uno specifico prefisso per <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> for the namespace associated with the prefix for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> per lo spazio dei nomi associato al prefisso per questo <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>This method looks through the XML tree for namespace attributes that are in scope for this element.</source>
          <target state="translated">Questo metodo esegue la ricerca nell'albero XML gli attributi dello spazio dei nomi che rientrano nell'ambito per questo elemento.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>Namespace prefixes are specified in namespace attributes that are in the XML tree.</source>
          <target state="translated">I prefissi Namespace sono specificati negli attributi dello spazio dei nomi presenti nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>The following example creates an XML tree that has a namespace with an associated prefix.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML con uno spazio dei nomi con un prefisso associato.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>It then uses this method to retrieve the <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> for the prefix.</source>
          <target state="translated">Questo metodo quindi utilizzato per recuperare il <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> per il prefisso.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>When using Visual Basic, you would typically use the <bpt id="p1">[</bpt>GetXmlNamespace Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/getxmlnamespace-operator.md)</ept> operator, as follows</source>
          <target state="translated">Quando si utilizza Visual Basic, in genere viene utilizzata la <bpt id="p1">[</bpt>operatore GetXmlNamespace<ept id="p1">](~/docs/visual-basic/language-reference/operators/getxmlnamespace-operator.md)</ept> (operatore), come indicato di seguito</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to look up.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> da ricercare.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>Gets the prefix associated with a namespace for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ottiene il prefisso associato allo spazio dei nomi per <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the namespace prefix.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contiene il prefisso dello spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>This method looks through the XML tree for namespace attributes that are in scope for this element.</source>
          <target state="translated">Questo metodo esegue la ricerca nell'albero XML gli attributi dello spazio dei nomi che rientrano nell'ambito per questo elemento.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>Namespace prefixes are specified in namespace attributes that are in the XML tree.</source>
          <target state="translated">I prefissi Namespace sono specificati negli attributi dello spazio dei nomi presenti nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>If the namespace is the default namespace, and there is no prefix for the namespace, then this method returns null.</source>
          <target state="translated">Se lo spazio dei nomi è lo spazio dei nomi predefinito e non è presente un prefisso dello spazio dei nomi, questo metodo restituisce null.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>The following example creates an XML tree that contains a namespace with a prefix.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML che contiene uno spazio dei nomi con un prefisso.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>It then uses this method to retrieve the prefix for the namespace.</source>
          <target state="translated">Viene quindi utilizzato questo metodo per recuperare il prefisso dello spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>Notice that this example uses the implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> when calling this method.</source>
          <target state="translated">Si noti che in questo esempio utilizza la conversione implicita da stringa a <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> quando si chiama questo metodo.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source>Gets a value indicating whether this element has at least one attribute.</source>
          <target state="translated">Ottiene un valore che indica se questo elemento ha almeno un attributo.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element has at least one attribute; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elemento ha almeno un attributo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source>The following example uses this property.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata questa proprietà.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.HasElements">
          <source>Gets a value indicating whether this element has at least one child element.</source>
          <target state="translated">Ottiene un valore che indica se l'elemento ha almeno un elemento figlio.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasElements">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element has at least one child element; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elemento ha almeno un elemento figlio; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasElements">
          <source>The following example uses this property.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata questa proprietà.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasElements">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>Gets a value indicating whether this element contains no content.</source>
          <target state="translated">Ottiene un valore che indica se questo elemento non include contenuto.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element contains no content; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elemento non include contenuto; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>Note that an element that contains a start and end tag with no content between the tags is not considered to be an empty element.</source>
          <target state="translated">Si noti che un elemento che contiene un tag di inizio e fine senza contenuto tra i tag non viene considerato come un elemento vuoto.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>It has content with no length.</source>
          <target state="translated">Ha contenuto senza lunghezza.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>Only an element that contains only a start tag, and is expressed as a terminated empty element, is considered to be empty.</source>
          <target state="translated">Solo un elemento che contiene un tag di inizio e viene espresso come un elemento vuoto terminato, viene considerato come vuoto.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>The following example creates a variety of XML trees, and shows the value of this property with each tree.</source>
          <target state="translated">Nell'esempio seguente crea una serie di strutture ad albero XML e Mostra il valore di questa proprietà con ogni albero.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>Gets the last attribute of this element.</source>
          <target state="translated">Ottiene l'ultimo attributo di questo elemento.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the last attribute of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> che contiene l'ultimo attributo dell'elemento.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>Attributes are stored in the element in the order that they were added to the element.</source>
          <target state="translated">Gli attributi vengono archiviati nell'elemento nell'ordine in cui sono stati aggiunti all'elemento.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>The following example creates an XML tree with three attributes.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML con tre attributi.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>It then writes the last attribute as output.</source>
          <target state="translated">L'ultimo attributo viene quindi scritto come output.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a file specified by a URI, from an <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, or from an <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Crea un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da un file specificato da un URI, da un oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> o da un oggetto <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>You can use one of the overloads of this method to load an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a file, a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, or an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">È possibile utilizzare uno degli overload di questo metodo per caricare un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da un file, un <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, o un <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML, use <ph id="ph2">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph>.</source>
          <target state="translated">Per creare un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da una stringa che contiene il codice XML, utilizzare <ph id="ph2">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">Flusso che contiene i dati XML.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> instance by using the specified stream.</source>
          <target state="translated">Crea una nuova istanza di <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> usando il flusso specificato.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object used to read the data that is contained in the stream.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> usato per leggere i dati contenuti nel flusso.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>If you want to control load options, use the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overload that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare le opzioni di caricamento, utilizzare il <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overload che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, following these steps:</source>
          <target state="translated">Se è necessario modificare <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, attenendosi alla procedura seguente:</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that take <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Creare un <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> chiamando uno del <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overload che accettano <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>'s <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overloads that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Passare il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> a uno del <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>del <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overload che accetta <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that will be read for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> content.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> che verrà letto per il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Carica un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> contenente il codice XML letto dall'oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>This method reads the raw XML into the XML tree.</source>
          <target state="translated">Questo metodo legge il XML non elaborato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>It discards all insignificant white space in the file.</source>
          <target state="translated">Ignora tutti gli spazi vuoti non significativi nel file.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>The following example loads an element from a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene caricato un elemento da un <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>A URI string referencing the file to load into a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Stringa URI che fa riferimento al file da caricare in un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a file.</source>
          <target state="translated">Carica un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da un file.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> che include il contenuto del file specificato.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>This method reads the raw XML into the XML tree.</source>
          <target state="translated">Questo metodo legge il XML non elaborato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>It discards all insignificant white space in the file.</source>
          <target state="translated">Ignora tutti gli spazi vuoti non significativi nel file.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>The following example creates an XML tree, saves it to a file, and then uses this method to load the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from the file.</source>
          <target state="translated">Nell'esempio seguente viene creato un albero XML viene salvato in un file e quindi utilizza questo metodo per caricare il <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> dal file.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be read for the content of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> che verrà letto per il contenuto dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Carica un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> contenente il codice XML letto dall'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then using the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, this method can be used to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Creando un <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> da un documento DOM e viene quindi utilizzato il <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> per creare un <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, questo metodo può essere utilizzato per creare una copia di un documento DOM in un albero LINQ to XML.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>The following example creates a DOM document, creates an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from the DOM document, instantiates a tree from the reader.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento DOM, un <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> dal documento DOM, crea un'istanza di una struttura ad albero dal lettore.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>This code effectively copies a DOM document into a LINQ to XML tree.</source>
          <target state="translated">Questo codice copia un documento DOM effettivamente un LINQ struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>The stream containing the XML data.</source>
          <target state="translated">Flusso contenente i dati XML.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> object that specifies whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Crea una nuova istanza di <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> usando il flusso specificato, conservando facoltativamente lo spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object used to read the data that the stream contains.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> usato per leggere i dati contenuti nel flusso.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, following these steps:</source>
          <target state="translated">Se è necessario modificare <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, attenendosi alla procedura seguente:</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that take <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Creare un <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> chiamando uno del <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overload che accettano <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>'s <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overloads that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Passare il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> a uno del <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>del <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overload che accetta <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that will be read for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> content.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> che verrà letto per il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, optionally preserving white space and retaining line information.</source>
          <target state="translated">Carica <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, facoltativamente preservando lo spazio e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> contenente il codice XML letto dall'oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore leggere tutti gli spazi vuoti nel documento XML di origine.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Nodi di tipo <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> vengono creati per spazi vuoti significativi e significativo.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, se non viene impostata la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore ignorare tutti gli spazi vuoti non significativi nel codice XML di origine.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Struttura ad albero XML viene creato senza nodi di testo per gli spazi vuoti non significativi.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Se l'origine XML non è rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Gli spazi vuoti significativi viene comunque mantenuto e non sono presenti intervalli di spazi vuoti non significativi che potrebbero comportare la creazione di più nodi di testo di spazi vuoti.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> will have no effect when loading from a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> avrà alcun effetto durante il caricamento da un <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Le informazioni sulla riga è accurati immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni sulla riga potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> in two different ways: preserving white space, and not preserving white space.</source>
          <target state="translated">Nell'esempio seguente viene caricato un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da un <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> in due modi diversi: conservando lo spazio vuoto e non il mantenimento degli spazi.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>It then uses a query to determine the number of white space nodes in the resulting XML tree.</source>
          <target state="translated">Viene quindi utilizzata una query per determinare il numero di nodi con spazi vuoti nell'albero XML risulta.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the line information as it loads from the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente carica le informazioni sulla riga durante il caricamento dal <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>It then prints the line information.</source>
          <target state="translated">Stampa quindi le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A URI string referencing the file to load into an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Stringa URI che fa riferimento al file da caricare in <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a file, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Carica <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da un file, facoltativamente preservando lo spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> che include il contenuto del file specificato.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore leggere tutti gli spazi vuoti nel documento XML di origine.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Nodi di tipo <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> vengono creati per spazi vuoti significativi e significativo.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, se non viene impostata la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore ignorare tutti gli spazi vuoti non significativi nel codice XML di origine.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Struttura ad albero XML viene creato senza nodi di testo per gli spazi vuoti non significativi.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Se l'origine XML non è rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Gli spazi vuoti significativi viene comunque mantenuto e non sono presenti intervalli di spazi vuoti non significativi che potrebbero comportare la creazione di più nodi di testo di spazi vuoti.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flags.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The base URI and the line information are accurate immediately after loading the XML document.</source>
          <target state="translated">L'URI di base e le informazioni sulla riga sono accurate immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the base URI and line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni di riga e l'URI di base potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example loads an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a file in two different ways: preserving white space, and not preserving white space.</source>
          <target state="translated">Nell'esempio seguente viene caricato un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da un file in due modi diversi: conservando lo spazio vuoto e non il mantenimento degli spazi.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>It then uses a query to determine the number of white space nodes in the resulting XML tree.</source>
          <target state="translated">Viene quindi utilizzata una query per determinare il numero di nodi con spazi vuoti nell'albero XML risulta.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the base URI and line information as it loads the file.</source>
          <target state="translated">Nell'esempio seguente carica le informazioni di riga e l'URI di base durante il caricamento del file.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>It then prints the base URI and the line information.</source>
          <target state="translated">Stampa quindi l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example uses the following resource file: <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</source>
          <target state="translated">In questo esempio viene utilizzato il seguente file di risorse: <bpt id="p1">[</bpt>File XML di esempio: tipico ordine di acquisto (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be read for the content of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> che verrà letto per il contenuto dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Carica <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, facoltativamente preservando lo spazio, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> contenente il codice XML letto dall'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then using the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, this method can be used to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Creando un <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> da un documento DOM e viene quindi utilizzato il <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> per creare un <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, questo metodo può essere utilizzato per creare una copia di un documento DOM in un albero LINQ to XML.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is not valid when loading from a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> non valido durante il caricamento da un <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> will be configured to either read whitespace or not.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> verrà configurato per uno spazio vuoto di lettura o non.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The LINQ to XML tree will be populated with the whitespace nodes that the reader surfaces.</source>
          <target state="translated">L'albero LINQ to XML verrà popolato con i nodi spazi vuoti che dal lettore.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This will be the behavior regardless of whether <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is set or not.</source>
          <target state="translated">Questo sarà il comportamento indipendentemente dal fatto che <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> o non è impostato.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid base URI or not.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> può avere un URI di base valido o non.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, the base URI will be set in the XML tree from the base URI that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Se si imposta <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, la base URI verrà impostato nella struttura ad albero XML dall'URI di base che viene segnalato dal <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid line information or not.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> può avere un informazioni sulla riga valide o non.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, the line information will be set in the XML tree from the line information that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Se si imposta <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, le informazioni sulla riga verrà impostati nella struttura ad albero XML dalle informazioni sulla riga che viene segnalati dal <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Le informazioni sulla riga è accurati immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni sulla riga potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the line information that it loads from the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente carica le informazioni sulla riga che viene caricato dal <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>It then prints the line information.</source>
          <target state="translated">Stampa quindi le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.Name">
          <source>Gets or sets the name of this element.</source>
          <target state="translated">Ottiene o imposta il nome di questo elemento.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> che contiene il nome dell'elemento.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Impostazione di questa proprietà genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>The following example uses this property to determine the name of an element.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata questa proprietà per determinare il nome di un elemento.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Ottiene il tipo di nodo per questo nodo.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>The node type.</source>
          <target state="translated">Tipo di nodo.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Element" /&gt;</ph>.</source>
          <target state="translated">Per gli oggetti <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, questo valore è <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Element" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Poiché tutte le classi che derivano da <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contengono un <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> proprietà, è possibile scrivere il codice che opera su insiemi di una sottoclasse concreta di <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">Quindi è possibile testare il codice per il tipo di nodo di ogni nodo nella raccolta.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>The following example uses this property to print the node type of an element.</source>
          <target state="translated">Nell'esempio seguente utilizza questa proprietà per visualizzare il tipo di nodo di un elemento.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>When converting to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">Durante la conversione in <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> da un attributo o elemento, i valori consentiti sono "0", "1" e qualsiasi stringa che produce "true" o "false" dopo la rimozione e la conversione in lettere minuscole.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The following example creates some elements with boolean values.</source>
          <target state="translated">Nell'esempio seguente crea alcuni elementi con valori booleani.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>It then casts them to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">Viene quindi eseguito il cast a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">Lo spazio dei valori di un attributo o elemento che contiene il contenuto di data e ora è strettamente correlato a date e ore descritte nello standard ISO 8601.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Quando si crea un attributo o elemento che contiene il contenuto di data e ora, i valori di attributo o elemento vengono formattati in base alla specifica W3C.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>See the W3C specification for more details.</source>
          <target state="translated">Vedere la specifica W3C per altri dettagli.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">Comportamento è lax quando si esegue il cast a un <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> da un attributo o elemento.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Anche se il valore di attributo o elemento non è formattato esattamente secondo la specifica W3C, il valore viene convertito in modo appropriato per un <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Questo operatore di conversione utilizza <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> per la conversione da un <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The following example creates an element with date and time content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto di data e ora.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>It then casts it to <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> to retrieve the value.</source>
          <target state="translated">Viene quindi eseguito il cast a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> per recuperare il valore.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">Questo operatore di conversione viene utilizzata la <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> classe per eseguire la conversione.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The following example creates an element with date and time content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto di data e ora.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>It then casts to <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> to retrieve the value.</source>
          <target state="translated">Viene quindi eseguito il cast a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> per recuperare il valore.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The following example creates an element with a decimal value.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con un valore decimale.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>It then retrieves the value of the attribute by casting to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Il valore dell'attributo viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The following example creates an attribute with <ph id="ph1">`double`</ph> content.</source>
          <target state="translated">Nell'esempio seguente viene creato un attributo con <ph id="ph1">`double`</ph> contenuto.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The following example creates an element with a guid as content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con un guid come contenuto.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The following example creates an element with an integer as content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con un numero intero come contenuto.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The following example creates an element with a long integer as content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con un valore long integer come contenuto.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>It then retrieves the value of the element by casting to <ph id="ph1">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">Viene quindi recuperato il valore dell'elemento eseguendo il cast su <ph id="ph1">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>When converting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">Durante la conversione in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> da un attributo o elemento, i valori consentiti sono "0", "1" e qualsiasi stringa che produce "true" o "false" dopo la rimozione e la conversione in lettere minuscole.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>The following example creates an element with boolean content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto booleano.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">Lo spazio dei valori di un attributo o elemento che contiene il contenuto di data e ora è strettamente correlato a date e ore descritte nello standard ISO 8601.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Quando si crea un attributo o elemento che contiene il contenuto di data e ora, i valori di attributo o elemento vengono formattati in base alla specifica W3C.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>See the W3C specification for more details.</source>
          <target state="translated">Vedere la specifica W3C per altri dettagli.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">Il comportamento è lax quando esegue il cast a un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> da un attributo o elemento.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Anche se il valore di attributo o elemento non è formattato esattamente secondo la specifica W3C, il valore viene convertito in modo appropriato per un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Questo operatore di conversione utilizza <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> per la conversione da un <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The following example creates an element with a date and time as content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con una data e ora come contenuto.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to an <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">Questo operatore di conversione viene utilizzata la <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> classe per eseguire la conversione.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>The following example creates an element with date and time content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto di data e ora.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>It then casts to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> to retrieve the value.</source>
          <target state="translated">Viene quindi eseguito il cast a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> per recuperare il valore.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>The following example creates an element with decimal content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto decimale.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>The following example creates an element with double precision floating point content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto a virgola mobile a precisione doppia.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>The following example creates an element with guid content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto guid.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>The following example creates an element with unsigned integer content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto di un intero senza segno.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>The following example creates an element with long integer content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto di tipo long integer.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>The following example creates an element with single precision floating point content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto a virgola mobile e precisione singola.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">Lo spazio dei valori di un attributo o elemento che contiene un intervallo di tempo è strettamente correlato al contenuto di durata, come descritto nello standard ISO 8601.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Quando si crea un attributo o elemento che contiene un intervallo di tempo, i valori di attributo o elemento vengono formattati in base alla specifica W3C.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">Vedere la specifica W3C per altri dettagli.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">Comportamento è lax quando si esegue il cast a un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> da un attributo o elemento.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Anche se il valore di attributo o elemento non è formattato esattamente secondo la specifica W3C, il valore viene convertito in modo appropriato per un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The following example creates an element with time span content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con intervallo di tempo contenuto.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>The following example creates an element with unsigned integer content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto di un intero senza segno.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui per eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> che include il contenuto di <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>The following example creates an element with unsigned long integer content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto intero lungo senza segno.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>A <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The following example creates an element with single precision floating point content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto a virgola mobile e precisione singola.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> has children, the concatenated string value of all of the element's text and descendant's text is returned.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> dispone di elementi figlio, viene restituito il valore di stringa concatenata di tutto il testo dell'elemento e il testo del discendente.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>The following example creates an element with string content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto della stringa.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">Lo spazio dei valori di un attributo o elemento che contiene un intervallo di tempo è strettamente correlato al contenuto di durata, come descritto nello standard ISO 8601.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Quando si crea un attributo o elemento che contiene un intervallo di tempo, i valori di attributo o elemento vengono formattati in base alla specifica W3C.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">Vedere la specifica W3C per altri dettagli.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">Comportamento è lax quando si esegue il cast a un <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> da un attributo o elemento.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Anche se il valore di attributo o elemento non è formattato esattamente secondo la specifica W3C, il valore viene convertito in modo appropriato per un <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The following example creates an element with time span content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con intervallo di tempo contenuto.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The following example creates an element with unsigned integer content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto di un intero senza segno.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> di cui eseguire il cast a un oggetto <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Esegue il cast del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a un oggetto <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> che include il contenuto di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The following example creates an element with unsigned long integer content.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con contenuto intero lungo senza segno.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">Il valore viene quindi recuperato eseguendo il cast su <ph id="ph1">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">L'elemento non contiene un valore <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Load an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a string that contains XML, optionally preserving white space and retaining line information.</source>
          <target state="translated">Carica un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da una stringa contenente XML, facoltativamente preservando lo spazio vuoto e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains XML.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contiene il codice XML.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>Load an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Carica un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> popolato dalla stringa che contiene il codice XML.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>This method does not preserve white space.</source>
          <target state="translated">Questo metodo non mantiene gli spazi vuoti.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>If you want to preserve white space in the XML tree, use the overload of the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> method that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera mantenere gli spazi vuoti nella struttura ad albero XML, utilizzare l'overload del metodo di <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> metodo che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>The following example creates a string that contains XML.</source>
          <target state="translated">Nell'esempio seguente crea una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>It then parses the string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">Viene quindi analizzata la stringa in un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains XML.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contiene il codice XML.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Load an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a string that contains XML, optionally preserving white space and retaining line information.</source>
          <target state="translated">Carica un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> da una stringa contenente XML, facoltativamente preservando lo spazio vuoto e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> popolato dalla stringa che contiene il codice XML.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore leggere tutti gli spazi vuoti nel documento XML di origine.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Nodi di tipo <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> vengono creati per spazi vuoti significativi e significativo.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, se non viene impostata la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore ignorare tutti gli spazi vuoti non significativi nel codice XML di origine.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Struttura ad albero XML viene creato senza nodi di testo per gli spazi vuoti non significativi.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Se l'origine XML non è rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Gli spazi vuoti significativi viene comunque mantenuto e non sono presenti intervalli di spazi vuoti non significativi che potrebbero comportare la creazione di più nodi di testo di spazi vuoti.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> will have no effect when parsing from a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> avrà alcun effetto durante l'analisi da un <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid line information or not.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> può avere un informazioni sulla riga valide o non.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, the line information will be set in the XML tree from the line information that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Se si imposta <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, le informazioni sulla riga verrà impostati nella struttura ad albero XML dalle informazioni sulla riga che viene segnalati dal <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Le informazioni sulla riga è accurati immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni sulla riga potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example parses a string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in two different ways: preserving white space, and not preserving white space.</source>
          <target state="translated">Nell'esempio seguente viene analizzata una stringa in un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in due modi diversi: conservando lo spazio vuoto e non il mantenimento degli spazi.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>It then uses a query to determine the number of white space nodes in the resulting XML tree.</source>
          <target state="translated">Viene quindi utilizzata una query per determinare il numero di nodi con spazi vuoti nell'albero XML risulta.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example retains line information as it parses the string.</source>
          <target state="translated">Nell'esempio seguente viene mantiene le informazioni sulla riga mentre analizza la stringa.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>Removes nodes and attributes from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Rimuove i nodi e gli attributi da <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>The following example creates an element with attributes and child elements.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con attributi e gli elementi figlio.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>It then calls this method to remove both the attributes and the child elements.</source>
          <target state="translated">Quindi chiama questo metodo per rimuovere gli attributi e gli elementi figlio.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>Removes the attributes of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Rimuove gli attributi di <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>The following example creates an element with attributes and child elements.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con attributi e gli elementi figlio.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>It then calls this method to remove the attributes.</source>
          <target state="translated">Viene quindi chiamato questo metodo per rimuovere gli attributi.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>The child elements remain.</source>
          <target state="translated">Gli elementi figlio rimangono.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Replaces the child nodes and the attributes of this element with the specified content.</source>
          <target state="translated">Sostituisce i nodi figlio e gli attributi di questo elemento con il contenuto specificato.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses snapshot semantics—that is, it creates a separate copy of the new content before replacing the contents of the current element with the new content.</source>
          <target state="translated">Questo metodo utilizza la semantica di snapshot, vale a dire, viene creata una copia separata del contenuto nuovo prima di sostituire il contenuto dell'elemento corrente con il nuovo contenuto.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This means that you can query the contents of the current element and use the results of the query as the specified new content.</source>
          <target state="translated">Ciò significa che è possibile eseguire query sul contenuto dell'elemento corrente e utilizzare i risultati della query come il nuovo contenuto specificato.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato a questa funzione, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example passes the results of a LINQ query to this method, replacing the contents of an element with the query results.</source>
          <target state="translated">Nell'esempio seguente passa i risultati di una query LINQ per questo metodo, sostituendo il contenuto di un elemento con i risultati della query.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>It queries the element that is having its contents replaced.</source>
          <target state="translated">Viene eseguita una query elemento di cui viene sostituito il contenuto.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>The content that will replace the child nodes and attributes of this element.</source>
          <target state="translated">Contenuto che sostituisce i nodi figlio e gli attributi di questo elemento.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>Replaces the child nodes and the attributes of this element with the specified content.</source>
          <target state="translated">Sostituisce i nodi figlio e gli attributi di questo elemento con il contenuto specificato.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This method first removes existing content and attributes.</source>
          <target state="translated">Questo metodo rimuove prima gli attributi e contenuto esistente.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Viene quindi aggiunto l'oggetto specificato <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This method uses snapshot semantics—that is, it creates a separate copy of the new content before replacing the contents of the current element with the new content.</source>
          <target state="translated">Questo metodo utilizza la semantica di snapshot, vale a dire, viene creata una copia separata del contenuto nuovo prima di sostituire il contenuto dell'elemento corrente con il nuovo contenuto.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This means that you can query the contents of the current element and use the results of the query as the specified new content.</source>
          <target state="translated">Ciò significa che è possibile eseguire query sul contenuto dell'elemento corrente e utilizzare i risultati della query come il nuovo contenuto specificato.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato a questa funzione, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>The following example uses this method.</source>
          <target state="translated">Nell'esempio seguente viene utilizzato questo metodo.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">Elenco di parametri di oggetti contenuto.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>Replaces the child nodes and the attributes of this element with the specified content.</source>
          <target state="translated">Sostituisce i nodi figlio e gli attributi di questo elemento con il contenuto specificato.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This method first removes existing content and attributes.</source>
          <target state="translated">Questo metodo rimuove prima gli attributi e contenuto esistente.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Viene quindi aggiunto l'oggetto specificato <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This method uses snapshot semantics—that is, it creates a separate copy of the new content before replacing the contents of the current element with the new content.</source>
          <target state="translated">Questo metodo utilizza la semantica di snapshot, vale a dire, viene creata una copia separata del contenuto nuovo prima di sostituire il contenuto dell'elemento corrente con il nuovo contenuto.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This means that you can query the contents of the current element and use the results of the query as the specified new content.</source>
          <target state="translated">Ciò significa che è possibile eseguire query sul contenuto dell'elemento corrente e utilizzare i risultati della query come il nuovo contenuto specificato.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato a questa funzione, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>The following example passes the results of a LINQ query to this method, replacing the contents of an element with the query results.</source>
          <target state="translated">Nell'esempio seguente passa i risultati di una query LINQ per questo metodo, sostituendo il contenuto di un elemento con i risultati della query.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Replaces the attributes of this element with the specified content.</source>
          <target state="translated">Sostituisce gli attributi di questo elemento con il contenuto specificato.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato a questa funzione, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con tre attributi.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>It then uses this method to replace all of the attributes of the element with a single attribute.</source>
          <target state="translated">Viene quindi utilizzato questo metodo per sostituire tutti gli attributi dell'elemento con un singolo attributo.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>The content that will replace the attributes of this element.</source>
          <target state="translated">Contenuto che sostituisce gli attributi di questo elemento.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>Replaces the attributes of this element with the specified content.</source>
          <target state="translated">Sostituisce gli attributi di questo elemento con il contenuto specificato.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>This method first removes existing attributes.</source>
          <target state="translated">Innanzitutto, questo metodo rimuove gli attributi esistenti.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Viene quindi aggiunto l'oggetto specificato <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato a questa funzione, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con tre attributi.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>It then uses this method to replace all of the attributes of the element with a single attribute.</source>
          <target state="translated">Viene quindi utilizzato questo metodo per sostituire tutti gli attributi dell'elemento con un singolo attributo.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">Elenco di parametri di oggetti contenuto.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>Replaces the attributes of this element with the specified content.</source>
          <target state="translated">Sostituisce gli attributi di questo elemento con il contenuto specificato.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>This method first removes existing attributes.</source>
          <target state="translated">Innanzitutto, questo metodo rimuove gli attributi esistenti.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Viene quindi aggiunto l'oggetto specificato <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido che può essere passato a questa funzione, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con tre attributi.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>It then replaces the attributes with other attributes.</source>
          <target state="translated">Gli attributi vengono quindi sostituiti con altri attributi.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Serialize this element's underlying XML tree.</source>
          <target state="translated">Serializza l'albero XML sottostante dell'elemento.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>The output can be saved to a file, an <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextWriter" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, or an <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">L'output può essere salvato in un file oppure in un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextWriter" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> o <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Optionally, formatting (indenting) can be disabled.</source>
          <target state="translated">Facoltativamente, è possibile disabilitare la formattazione (rientro).</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to.</source>
          <target state="translated">Flusso in cui restituire l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> nell'oggetto <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Il codice XML serializzato verrà aumentato il rientro.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Verranno rimossi tutti gli spazi vuoti non significativi e verrà aggiunto uno spazio vuoto aggiuntivo in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Il comportamento di questo metodo è che gli spazi vuoti non significativi non verranno mantenuti.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare lo spazio vuoto, utilizzare l'overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> option to save unindented XML.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> opzione per salvare il codice XML.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> opzione se si desidera rimuovere le dichiarazioni dello spazio dei nomi duplicati.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> will be written to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> in cui verrà scritto l'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>Serialize this element to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Serializza questo elemento in <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Il codice XML serializzato verrà aumentato il rientro.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Verranno rimossi tutti gli spazi vuoti non significativi e verrà aggiunto uno spazio vuoto aggiuntivo in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>The behavior of this method is that white space will not be preserved.</source>
          <target state="translated">Il comportamento di questo metodo è che lo spazio vuoto non verranno mantenuto.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> that allows you to specify <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare lo spazio vuoto, utilizzare l'overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> che consente di specificare <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, saves the document to a <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>, and then prints the string to the console.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, Salva il documento a un <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>e quindi Visualizza la stringa nella console.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name of the file.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contiene il nome del file.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>Serialize this element to a file.</source>
          <target state="translated">Serializza questo elemento in un file.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Il codice XML serializzato verrà aumentato il rientro.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Verranno rimossi tutti gli spazi vuoti non significativi e verrà aggiunto uno spazio vuoto aggiuntivo in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>The behavior of this method is that insignificant white space nodes in the XML tree will not be preserved.</source>
          <target state="translated">Il comportamento di questo metodo è che lo spazio vuoto non significativo nodi dell'albero XML non verranno mantenuti.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> that allows you to specify <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare lo spazio vuoto, utilizzare l'overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> che consente di specificare <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, saves the document to a file, and then prints the file to the console.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, Salva il documento in un file e quindi stampato il file nella console.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> will be written to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in cui verrà scritto l'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>Serialize this element to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Serializza questo elemento in <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>The following example shows how to save an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come salvare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to.</source>
          <target state="translated">Flusso in cui restituire l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> object that specifies formatting behavior.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> che specifica il comportamento della formattazione.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, optionally specifying formatting behavior.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> nell'oggetto <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> specificato, indicando facoltativamente il comportamento di formattazione.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>By default the <ph id="ph1">`options`</ph> are set to <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita il <ph id="ph1">`options`</ph> sono impostate su <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This option will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Questa opzione verrà rimuovere tutti gli spazi vuoti non significativi estranei e aggiungere gli spazi vuoti non significativi appropriato in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML, specificare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> opzione se si desidera rimuovere le dichiarazioni dello spazio dei nomi duplicati.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to output the XML to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> nel quale deve essere restituito il codice XML.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> che specifica il comportamento di formattazione.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Serialize this element to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, optionally disabling formatting.</source>
          <target state="translated">Serializza questo elemento in <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, facoltativamente disabilitando la formattazione.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML, specificare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML rientrato, non si specifica il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Questa operazione rimuoverà tutti gli spazi vuoti non significativi estranei e aggiungere gli spazi vuoti non significativi appropriato in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Questo è il comportamento predefinito e il comportamento degli overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> metodi che non accettano <ph id="ph2">`options`</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">Nell'esempio seguente mostra due usi di questo metodo.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The first use preserves white space.</source>
          <target state="translated">Il primo utilizzo mantiene gli spazi vuoti.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The second serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> with formatting.</source>
          <target state="translated">Il secondo serializza il <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> con la formattazione.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Because the document has no white space in it as constructed, preserving white space outputs the XML without any indenting.</source>
          <target state="translated">Poiché il documento non ha spazio vuoto come costruito, mantenimento dello spazio vuoto restituisce il codice XML senza alcun rientro.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name of the file.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contiene il nome del file.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> che specifica il comportamento di formattazione.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>Serialize this element to a file, optionally disabling formatting.</source>
          <target state="translated">Serializza questo elemento in un file, facoltativamente disabilitando la formattazione.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML, specificare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML rientrato, non si specifica il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Questa operazione rimuoverà tutti gli spazi vuoti non significativi estranei e aggiungere gli spazi vuoti non significativi appropriato in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Questo è il comportamento predefinito e il comportamento degli overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> metodi che non accettano <ph id="ph2">`options`</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">Nell'esempio seguente mostra due usi di questo metodo.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The first use preserves white space.</source>
          <target state="translated">Il primo utilizzo mantiene gli spazi vuoti.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The second one serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> with formatting.</source>
          <target state="translated">Il secondo serializza il <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> con la formattazione.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of the attribute to change.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> che contiene il nome dell'attributo da cambiare.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The value to assign to the attribute.</source>
          <target state="translated">Valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The attribute is removed if the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'attributo viene rimosso se il valore è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>Otherwise, the value is converted to its string representation and assigned to the <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XAttribute.Value" /&gt;</ph> property of the attribute.</source>
          <target state="translated">In caso contrario, il valore viene convertito in una rappresentazione di stringa e assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XAttribute.Value" /&gt;</ph> dell'attributo.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>Sets the value of an attribute, adds an attribute, or removes an attribute.</source>
          <target state="translated">Imposta il valore di un attributo oppure lo aggiunge o lo rimuove.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>This method is designed to make it easy to maintain a list of name/value pairs as a set of attributes.</source>
          <target state="translated">Questo metodo è progettato per facilitare la conservazione di un elenco di coppie nome/valore come un set di attributi.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>When maintaining the list, you need to add pairs, modify pairs, or delete pairs.</source>
          <target state="translated">Quando si gestisce l'elenco, è necessario aggiungere coppie, coppie di modificare o eliminare coppie.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing a name that does not exist as an attribute, this method creates an attribute for you.</source>
          <target state="translated">Se si chiama questo metodo passando un nome che non esiste come un attributo, questo metodo crea un attributo per l'utente.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing the name of an existing attribute, this method modifies the value of the attribute to the value that you specify.</source>
          <target state="translated">Se si chiama questo metodo passando il nome di un attributo esistente, questo metodo consente di modificare il valore dell'attributo sul valore specificato.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`value`</ph>, this method removes the attribute.</source>
          <target state="translated">Se si passa <ph id="ph1">`null`</ph> per <ph id="ph2">`value`</ph>, questo metodo rimuove l'attributo.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The value is assigned to the attribute with the specified name.</source>
          <target state="translated">Il valore viene assegnato all'attributo con il nome specificato.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If no attribute with the specified name exists, a new attribute is added.</source>
          <target state="translated">Se non esiste alcun attributo con il nome specificato, viene aggiunto un nuovo attributo.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If the value is <ph id="ph1">`null`</ph>, the attribute with the specified name, if any, is deleted.</source>
          <target state="translated">Se il valore è <ph id="ph1">`null`</ph>, l'attributo con il nome specificato, se presente, viene eliminato.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Maintaining Name/Value Pairs<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione di coppie nome/valore<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an element with an attribute.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con un attributo.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>It then uses this method to replace the content of the attribute.</source>
          <target state="translated">Viene quindi utilizzato questo metodo per sostituire il contenuto dell'attributo.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an instance of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> è un'istanza di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of the child element to change.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> che contiene il nome dell'elemento figlio da cambiare.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The value to assign to the child element.</source>
          <target state="translated">Valore da assegnare all'elemento figlio.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The child element is removed if the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento figlio viene rimosso se il valore è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>Otherwise, the value is converted to its string representation and assigned to the <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph> property of the child element.</source>
          <target state="translated">In caso contrario, il valore viene convertito in una rappresentazione di stringa e assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph> dell'elemento figlio.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>Sets the value of a child element, adds a child element, or removes a child element.</source>
          <target state="translated">Imposta il valore di un elemento figlio oppure lo aggiunge o lo rimuove.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method is designed to make it easy to maintain a list of name/value pairs as a set of children elements.</source>
          <target state="translated">Questo metodo è progettato per facilitare la conservazione di un elenco di coppie nome/valore come un set di elementi figlio.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>When maintaining the list, you need to add pairs, modify pairs, or delete pairs.</source>
          <target state="translated">Quando si gestisce l'elenco, è necessario aggiungere coppie, coppie di modificare o eliminare coppie.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing a name that does not exist as a child element, this method creates a child element for you.</source>
          <target state="translated">Se si chiama questo metodo passando un nome che non esiste come elemento figlio, questo metodo crea un elemento figlio per l'utente.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing the name of an existing child element, this method modifies the value of the child element to the value that you specify.</source>
          <target state="translated">Se si chiama questo metodo passando il nome di un elemento figlio esistente, questo metodo consente di modificare il valore dell'elemento figlio per il valore specificato.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`value`</ph>, this method removes the child element.</source>
          <target state="translated">Se si passa <ph id="ph1">`null`</ph> per <ph id="ph2">`value`</ph>, questo metodo rimuove l'elemento figlio.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method will raise events.</source>
          <target state="translated">Questo metodo genererà gli eventi.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The value is assigned to the first child element with the specified name.</source>
          <target state="translated">Il valore viene assegnato al primo elemento figlio con il nome specificato.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If no child element with the specified name exists, a new child element is added.</source>
          <target state="translated">Se l'elemento figlio con il nome specificato non esiste, viene aggiunto un nuovo elemento figlio.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If the value is null, the first child element with the specified name, if any, is deleted.</source>
          <target state="translated">Se il valore è null, il primo elemento figlio con il nome specificato, se presente, viene eliminato.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method does not add child nodes or attributes to the specified child element.</source>
          <target state="translated">Questo metodo non aggiunge attributi o nodi figlio per l'elemento figlio specificato.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method throws an exception if any object that derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> is passed as <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Questo metodo genera un'eccezione se qualsiasi oggetto che deriva da <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> viene passato come <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Maintaining Name/Value Pairs<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione di coppie nome/valore<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an element with a child element.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento con un elemento figlio.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>It then uses this method to set the value of the child element.</source>
          <target state="translated">Viene quindi utilizzato questo metodo per impostare il valore dell'elemento figlio.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an instance of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> è un'istanza di <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The value to assign to this element.</source>
          <target state="translated">Valore da assegnare all'elemento.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The value is converted to its string representation and assigned to the <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph> property.</source>
          <target state="translated">Il valore viene convertito in una rappresentazione di stringa e assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>Sets the value of this element.</source>
          <target state="translated">Imposta il valore dell'elemento.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Questo metodo genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>It is invalid to pass an instance of a class that derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, such as <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">Non è possibile passare un'istanza di una classe che deriva da <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, ad esempio <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The following example creates an element that contains a child element.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento che contiene un elemento figlio.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>It then sets the value of the element using this method.</source>
          <target state="translated">Viene quindi impostato il valore dell'elemento utilizzando questo metodo.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="value" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;paramref name="value" /&gt;</ph> è un <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>Gets an XML schema definition that describes the XML representation of this object.</source>
          <target state="translated">Ottiene una definizione XML Schema che descrive la rappresentazione XML di questo oggetto.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> che descrive la rappresentazione XML dell'oggetto prodotto dal metodo <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> e usato dal metodo <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This method is part of implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Questo metodo fa parte dell'implementazione del <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This method is used internally for serializing object graphs that contain LINQ to XML objects.</source>
          <target state="translated">Questo metodo viene utilizzato internamente per la serializzazione di oggetti grafici contenenti LINQ agli oggetti XML.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For an example of serializing an object graph that contains LINQ to XML objects, see <bpt id="p1">[</bpt>Serializing Object Graphs that Contain XElement Objects<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</source>
          <target state="translated">Per un esempio di serializzazione di un oggetto grafico che contiene XML oggetti LINQ to, vedere <bpt id="p1">[</bpt>Serializing oggetti grafici che contengono oggetti XElement<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which the object is deserialized.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> da cui viene deserializzato l'oggetto.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>Generates an object from its XML representation.</source>
          <target state="translated">Genera un oggetto dalla relativa rappresentazione XML.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This method is part of implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Questo metodo fa parte dell'implementazione del <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This method is used internally for serializing object graphs that contain LINQ to XML objects.</source>
          <target state="translated">Questo metodo viene utilizzato internamente per la serializzazione di oggetti grafici contenenti LINQ agli oggetti XML.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>For an example of serializing an object graph that contains LINQ to XML objects, see <bpt id="p1">[</bpt>Serializing Object Graphs that Contain XElement Objects<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</source>
          <target state="translated">Per un esempio di serializzazione di un oggetto grafico che contiene XML oggetti LINQ to, vedere <bpt id="p1">[</bpt>Serializing oggetti grafici che contengono oggetti XElement<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to which this object is serialized.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in cui viene serializzato l'oggetto.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>Converts an object into its XML representation.</source>
          <target state="translated">Converte un oggetto nella relativa rappresentazione XML.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This method is used internally for marshaling object graphs that contain LINQ to XML objects.</source>
          <target state="translated">Questo metodo viene utilizzato internamente per il marshalling di oggetti grafici contenenti LINQ agli oggetti XML.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>For an example of serializing an object graph that contains LINQ to XML objects, see <bpt id="p1">[</bpt>Serializing Object Graphs that Contain XElement Objects<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</source>
          <target state="translated">Per un esempio di serializzazione di un oggetto grafico che contiene XML oggetti LINQ to, vedere <bpt id="p1">[</bpt>Serializing oggetti grafici che contengono oggetti XElement<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.Value">
          <source>Gets or sets the concatenated text contents of this element.</source>
          <target state="translated">Ottiene o imposta i contenuti di testo concatenati di questo elemento.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains all of the text content of this element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contiene tutti i contenuti di testo dell'elemento.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>If there are multiple text nodes, they will be concatenated.</source>
          <target state="translated">Se sono presenti più nodi testo, saranno concatenati.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>Using this property, you can get or set the value of an element.</source>
          <target state="translated">Utilizzare questa proprietà, è possibile ottenere o impostare il valore di un elemento.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Impostazione di questa proprietà genererà il <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>If you want to get the value of an element but you are not sure that it exists, it is more convenient to use the explicit conversion operators, and assign the element to a nullable type such as <ph id="ph1">`string`</ph> or <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Se si desidera ottenere il valore di un elemento ma non si è certi che sia presente, è preferibile usare gli operatori di conversione esplicita e assegnare l'elemento a un tipo nullable, ad esempio <ph id="ph1">`string`</ph> o <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> di <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>If the element does not exist, the nullable type is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se l'elemento non esiste, il tipo che ammette valori null è impostato su <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>By contrast, if you want to use this property, you must make sure that the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> method does not return <ph id="ph2">`null`</ph> before you access this property.</source>
          <target state="translated">Al contrario, se si desidera utilizzare questa proprietà, è necessario assicurarsi che il <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> metodo non restituisce <ph id="ph2">`null`</ph> prima di accedere a questa proprietà.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>The following example uses this property to retrieve the text of an element with mixed content.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata questa proprietà per recuperare il testo di un elemento con contenuto misto.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in cui scriverà questo metodo.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>Write this element to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Scrive l'elemento in <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>The following example shows how to write an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come scrivere un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> per un <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>Note that the example did not write an XML declaration.</source>
          <target state="translated">Si noti che nell'esempio non ha scritto una dichiarazione XML.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>