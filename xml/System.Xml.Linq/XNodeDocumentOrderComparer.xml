<Type Name="XNodeDocumentOrderComparer" FullName="System.Xml.Linq.XNodeDocumentOrderComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="087fbe682572c7ac3348c17367381fb7011ed778" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XNodeDocumentOrderComparer : System.Collections.Generic.IComparer&lt;System.Xml.Linq.XNode&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XNodeDocumentOrderComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class System.Xml.Linq.XNode&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XNodeDocumentOrderComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XNodeDocumentOrderComparer&#xA;Implements IComparer, IComparer(Of XNode)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XNodeDocumentOrderComparer sealed : System::Collections::Generic::IComparer&lt;System::Xml::Linq::XNode ^&gt;, System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.Xml.Linq.XNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3ffe7-101">Contiene funzionalità per confrontare nodi e rilevare l'ordine del documento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3ffe7-101">Contains functionality to compare nodes for their document order.</span>
      </span>
      <span data-ttu-id="3ffe7-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3ffe7-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffe7-103">Questa classe implementa `IComparer` e `IComparer<XNode>`.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-103">This class implements `IComparer` and `IComparer<XNode>`.</span></span>  
  
 <span data-ttu-id="3ffe7-104">È consigliabile che anziché utilizzare direttamente la classe, usare il <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-104">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="3ffe7-105">Questa classe viene utilizzata internamente dal metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-105">This class is used internally by that method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XNodeDocumentOrderComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XNodeDocumentOrderComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3ffe7-106">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-106">Initializes a new instance of the <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffe7-107">È consigliabile che anziché utilizzare direttamente la classe, usare il <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-107">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="3ffe7-108">Questa classe viene utilizzata internamente dal metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-108">This class is used internally by that method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ffe7-109">L'esempio seguente usa di questa classe per confrontare l'ordine del documento per due nodi.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-109">The following example uses of this class to compare the document order for two nodes.</span></span>  
  
```csharp  
XElement xmlTree = new XElement("Root",  
    new XText("Text content."),  
    new XElement("Child1", "child1 content"),  
    new XElement("Child2", "child2 content"),  
    new XElement("Child3", "child3 content"),  
    new XText("More text content."),  
    new XElement("Child4", "child4 content"),  
    new XElement("Child5", "child5 content")  
);  
XElement child3 = xmlTree.Element("Child3");  
XElement child5 = xmlTree.Element("Child5");  
XNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  
int val = documentOrderComparer.Compare(child3, child5);  
if (val == 0)  
    Console.WriteLine("Child3 is same as Child5");  
else if (val < 0)  
    Console.WriteLine("Child3 is before Child5");  
else  
    Console.WriteLine("Child3 is after Child5");  
```  
  
 <span data-ttu-id="3ffe7-110">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="3ffe7-110">This example produces the following output:</span></span>  
  
```  
Child3 is before Child5  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class System.Xml.Linq.XNode x, class System.Xml.Linq.XNode y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As XNode, y As XNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Xml::Linq::XNode ^ x, System::Xml::Linq::XNode ^ y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Xml.Linq.XNode" />
        <Parameter Name="y" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3ffe7-111">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-111">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3ffe7-112">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-112">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ffe7-113">Confronta due nodi per determinare l'ordine del documento relativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-113">Compares two nodes to determine their relative document order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ffe7-114">Un <see cref="T:System.Int32" /> che contiene 0 se i nodi sono uguali; -1 se <paramref name="x" /> viene prima di <paramref name="y" />; 1 se <paramref name="x" /> viene dopo <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-114">An <see cref="T:System.Int32" /> that contains 0 if the nodes are equal; -1 if <paramref name="x" /> is before <paramref name="y" />; 1 if <paramref name="x" /> is after <paramref name="y" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffe7-115">È consigliabile che anziché utilizzare direttamente la classe, usare il <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-115">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="3ffe7-116">Questa classe viene utilizzata internamente dal metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-116">This class is used internally by that method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ffe7-117">Nell'esempio seguente utilizza questa classe per confrontare l'ordine del documento per due nodi.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-117">The following example uses this class to compare document order for two nodes.</span></span>  
  
```csharp  
XElement xmlTree = new XElement("Root",  
    new XText("Text content."),  
    new XElement("Child1", "child1 content"),  
    new XElement("Child2", "child2 content"),  
    new XElement("Child3", "child3 content"),  
    new XText("More text content."),  
    new XElement("Child4", "child4 content"),  
    new XElement("Child5", "child5 content")  
);  
XElement child3 = xmlTree.Element("Child3");  
XElement child5 = xmlTree.Element("Child5");  
XNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  
int val = documentOrderComparer.Compare(child3, child5);  
if (val == 0)  
    Console.WriteLine("Child3 is same as Child5");  
else if (val < 0)  
    Console.WriteLine("Child3 is before Child5");  
else  
    Console.WriteLine("Child3 is after Child5");  
```  
  
 <span data-ttu-id="3ffe7-118">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="3ffe7-118">This example produces the following output:</span></span>  
  
```  
Child3 is before Child5  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3ffe7-119">I due nodi non condividono un predecessore comune.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-119">The two nodes do not share a common ancestor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3ffe7-120">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-120">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3ffe7-121">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-121">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ffe7-122">Confronta due nodi per determinare l'ordine del documento relativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-122">Compares two nodes to determine their relative document order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ffe7-123">Un <see cref="T:System.Int32" /> che contiene 0 se i nodi sono uguali; -1 se <paramref name="x" /> viene prima di <paramref name="y" />; 1 se <paramref name="x" /> viene dopo <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-123">An <see cref="T:System.Int32" /> that contains 0 if the nodes are equal; -1 if <paramref name="x" /> is before <paramref name="y" />; 1 if <paramref name="x" /> is after <paramref name="y" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffe7-124">È consigliabile che anziché utilizzare direttamente la classe, usare il <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-124">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="3ffe7-125">Questa classe viene utilizzata internamente dal metodo.</span><span class="sxs-lookup"><span data-stu-id="3ffe7-125">This class is used internally by that method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3ffe7-126">I due nodi non condividono un predecessore comune.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-126">The two nodes do not share a common ancestor.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3ffe7-127">I due nodi non sono derivati da <see cref="T:System.Xml.Linq.XNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ffe7-127">The two nodes are not derived from <see cref="T:System.Xml.Linq.XNode" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>