<Type Name="XDocumentType" FullName="System.Xml.Linq.XDocumentType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3751d5f60007a88f620bbafda1f5dd577a083fbf" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51905647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XDocumentType : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XDocumentType extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XDocumentType" />
  <TypeSignature Language="VB.NET" Value="Public Class XDocumentType&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XDocumentType : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XDocumentType = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="38c5f-101">Rappresenta una definizione DTD (Document Type Definition) XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="38c5f-101">Represents an XML Document Type Definition (DTD).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c5f-102">Dati definizioni DTD (Type) in formato XML sono un modo per eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="38c5f-102">Data Type Definitions (DTD) in XML are a way to do the following:</span></span>  
  
-   <span data-ttu-id="38c5f-103">Convalidare alberi XML in modo limitato.</span><span class="sxs-lookup"><span data-stu-id="38c5f-103">Validate XML trees to a limited extent.</span></span>  
  
-   <span data-ttu-id="38c5f-104">Espansione delle entità, ovvero un modulo di sostituzione del testo.</span><span class="sxs-lookup"><span data-stu-id="38c5f-104">Expand entities, which is a form of text replacement.</span></span>  
  
-   <span data-ttu-id="38c5f-105">Specificare gli attributi predefiniti.</span><span class="sxs-lookup"><span data-stu-id="38c5f-105">Supply default attributes.</span></span>  
  
 <span data-ttu-id="38c5f-106">Questa classe rappresenta il concetto XML di una definizione DTD.</span><span class="sxs-lookup"><span data-stu-id="38c5f-106">This class represents the XML concept of a DTD.</span></span>  
  
 <span data-ttu-id="38c5f-107">Il supporto DTD in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] è limitato.</span><span class="sxs-lookup"><span data-stu-id="38c5f-107">DTD support in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] is limited.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] <span data-ttu-id="38c5f-108">espande le entità interne per impostazione predefinita, ma non verrà risolto a meno che non fa riferimento a entità esterne un' <xref:System.Xml.XmlReader> con un oggetto associato <xref:System.Xml.XmlResolver> viene usato per caricare l'albero XML.</span><span class="sxs-lookup"><span data-stu-id="38c5f-108">will expand internal entities by default, but it will not resolve external entity references unless an <xref:System.Xml.XmlReader> with an associated <xref:System.Xml.XmlResolver> is used to load the XML tree.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] <span data-ttu-id="38c5f-109">non verrà convalidato un documento in base a una DTD, ma è possibile usare un oggetto di convalida <xref:System.Xml.XmlReader> per eseguire la convalida DTD se necessario.</span><span class="sxs-lookup"><span data-stu-id="38c5f-109">will not validate a document against a DTD, but you can use a validating <xref:System.Xml.XmlReader> to perform DTD validation if necessary.</span></span>  
  
 <span data-ttu-id="38c5f-110">Per convalidare un' [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] albero rispetto a un XML schema, usare il <xref:System.Xml.Schema.Extensions.Validate%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="38c5f-110">To validate an [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tree against an XML schema, use the <xref:System.Xml.Schema.Extensions.Validate%2A> method.</span></span>  
  
 <span data-ttu-id="38c5f-111">Quando un documento contiene i riferimenti alle entità definite in una DTD, i riferimenti vengono espansi al momento della creazione dell'albero XML.</span><span class="sxs-lookup"><span data-stu-id="38c5f-111">When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree.</span></span> <span data-ttu-id="38c5f-112">Tuttavia, quando si serializza o Salva l'albero XML, viene mantenuto il contenuto dell'entità espansa; non sono i riferimenti alle entità.</span><span class="sxs-lookup"><span data-stu-id="38c5f-112">However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.</span></span>  
  
 <span data-ttu-id="38c5f-113">Gli attributi predefiniti dalla DTD saranno essere materializzati come attributi regolari nell'albero XML.</span><span class="sxs-lookup"><span data-stu-id="38c5f-113">Default attributes from the DTD will be materialized as regular attributes in the XML tree.</span></span> <span data-ttu-id="38c5f-114">Dopo che viene materializzato un attributo predefinito dalla DTD, non è possibile determinare che l'attributo è un attributo predefinito dalla DTD.</span><span class="sxs-lookup"><span data-stu-id="38c5f-114">After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.</span></span>  
  
 <span data-ttu-id="38c5f-115">È possibile popolare un albero XML con un documento XML che contiene una definizione DTD interna.</span><span class="sxs-lookup"><span data-stu-id="38c5f-115">You can populate an XML tree with an XML document that contains an internal DTD.</span></span> <span data-ttu-id="38c5f-116">L'albero XML conterrà quindi una <xref:System.Xml.Linq.XDocument.DocumentType%2A> nodo.</span><span class="sxs-lookup"><span data-stu-id="38c5f-116">The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node.</span></span> <span data-ttu-id="38c5f-117">Quando si serializza o Salva la struttura ad albero, la definizione DTD interna verrà salvata anche come parte del documento.</span><span class="sxs-lookup"><span data-stu-id="38c5f-117">When you serialize or save the tree, the internal DTD will also be saved as part of the document.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
      <span data-ttu-id="38c5f-118">LINQ to XML</span>
      <span class="sxs-lookup">
        <span data-stu-id="38c5f-118">LINQ to XML</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="38c5f-119">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XDocumentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-119">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-120">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-120">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDocumentType (System.Xml.Linq.XDocumentType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XDocumentType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XDocumentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDocumentType(System::Xml::Linq::XDocumentType ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDocumentType : System.Xml.Linq.XDocumentType -&gt; System.Xml.Linq.XDocumentType" Usage="new System.Xml.Linq.XDocumentType other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XDocumentType" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="38c5f-121">Oggetto <see cref="T:System.Xml.Linq.XDocumentType" /> da cui copiare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-121">An <see cref="T:System.Xml.Linq.XDocumentType" /> object to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38c5f-122">Consente di inizializzare un'istanza della classe <see cref="T:System.Xml.Linq.XDocumentType" /> da un altro oggetto <see cref="T:System.Xml.Linq.XDocumentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-122">Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class from another <see cref="T:System.Xml.Linq.XDocumentType" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c5f-123">Questo costruttore viene principalmente utilizzato internamente quando si effettua una copia completa di un albero XML.</span><span class="sxs-lookup"><span data-stu-id="38c5f-123">This constructor is primarily used internally when making a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-124">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-124">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDocumentType (string name, string publicId, string systemId, string internalSubset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, publicId As String, systemId As String, internalSubset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDocumentType : string * string * string * string -&gt; System.Xml.Linq.XDocumentType" Usage="new System.Xml.Linq.XDocumentType (name, publicId, systemId, internalSubset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="internalSubset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="38c5f-125">
            <see cref="T:System.String" /> che contiene il nome completo delle definizioni DTD che corrisponde al nome completo dell'elemento radice del documento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-125">A <see cref="T:System.String" /> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.</span>
          </span>
        </param>
        <param name="publicId">
          <span data-ttu-id="38c5f-126">
            <see cref="T:System.String" /> che contiene l'identificatore pubblico di una definizione DTD esterna pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-126">A <see cref="T:System.String" /> that contains the public identifier of an external public DTD.</span>
          </span>
        </param>
        <param name="systemId">
          <span data-ttu-id="38c5f-127">
            <see cref="T:System.String" /> che contiene l'identificatore di sistema di una definizione DTD privata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-127">A <see cref="T:System.String" /> that contains the system identifier of an external private DTD.</span>
          </span>
        </param>
        <param name="internalSubset">
          <span data-ttu-id="38c5f-128">
            <see cref="T:System.String" /> che contiene il sottoinsieme interno per una definizione DTD interna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-128">A <see cref="T:System.String" /> that contains the internal subset for an internal DTD.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38c5f-129">Inizializza un'istanza della classe <see cref="T:System.Xml.Linq.XDocumentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-129">Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="38c5f-130">L'esempio seguente crea un documento con una definizione DTD interna.</span><span class="sxs-lookup"><span data-stu-id="38c5f-130">The following example creates a document with an internal DTD.</span></span> <span data-ttu-id="38c5f-131">Quando crea il <xref:System.Xml.Linq.XDocumentType> oggetto, specifica il nome completo di definizioni DTD (pubbliche) e una stringa che contiene il sottoinsieme interno.</span><span class="sxs-lookup"><span data-stu-id="38c5f-131">When it creates the <xref:System.Xml.Linq.XDocumentType> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset.</span></span> <span data-ttu-id="38c5f-132">Poiché il documento non utilizza una DTD esterna pubblica o privata, il `publicId` e `systemId` sono impostati su `null`.</span><span class="sxs-lookup"><span data-stu-id="38c5f-132">Because the document does not use a public or private external DTD, the `publicId` and `systemId` are set to `null`.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href="mystyle.css" title="Compact" type="text/css"?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.NextNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc)  
```  
  
 <span data-ttu-id="38c5f-133">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="38c5f-133">This example produces the following output:</span></span>  
  
```xml  
<!--This is a comment.-->  
<?xml-stylesheet href="mystyle.css" title="Compact" type="text/css"?>  
<!DOCTYPE Pubs [<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>]>  
<Pubs>  
  <Book>  
    <Title>Artifacts of Roman Civilization</Title>  
    <Author>Moreno, Jordao</Author>  
  </Book>  
  <Book>  
    <Title>Midieval Tools and Implements</Title>  
    <Author>Gazit, Inbar</Author>  
  </Book>  
</Pubs>  
<!--This is another comment.-->  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-134">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-134">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InternalSubset">
      <MemberSignature Language="C#" Value="public string InternalSubset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalSubset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.InternalSubset" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalSubset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalSubset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalSubset : string with get, set" Usage="System.Xml.Linq.XDocumentType.InternalSubset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c5f-135">Ottiene o imposta il sottoinsieme interno per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-135">Gets or sets the internal subset for this Document Type Definition (DTD).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c5f-136">
            <see cref="T:System.String" /> che contiene il sottoinsieme interno per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-136">A <see cref="T:System.String" /> that contains the internal subset for this Document Type Definition (DTD).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="38c5f-137">L'esempio seguente crea un documento con una definizione DTD che contiene un sottoinsieme interno.</span><span class="sxs-lookup"><span data-stu-id="38c5f-137">The following example creates a document with a DTD that contains an internal subset.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.InternalSubset);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.InternalSubset)  
```  
  
 <span data-ttu-id="38c5f-138">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="38c5f-138">This example produces the following output:</span></span>  
  
```  
<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-139">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-139">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Linq.XDocumentType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c5f-140">Ottiene o imposta il nome per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-140">Gets or sets the name for this Document Type Definition (DTD).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c5f-141">
            <see cref="T:System.String" /> che contiene il nome per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-141">A <see cref="T:System.String" /> that contains the name for this Document Type Definition (DTD).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="38c5f-142">L'esempio seguente crea un documento XML contenente una definizione DTD.</span><span class="sxs-lookup"><span data-stu-id="38c5f-142">The following example creates an XML document that contains a DTD.</span></span> <span data-ttu-id="38c5f-143">Dopo aver creato il documento, recupera il nome completo della DTD utilizzando questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="38c5f-143">After creating the document, it retrieves the qualified name of the DTD using this property.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.Name);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
            </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.Name)  
```  
  
 <span data-ttu-id="38c5f-144">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="38c5f-144">This example produces the following output:</span></span>  
  
```  
Pubs  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-145">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-145">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XDocumentType.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c5f-146">Ottiene il tipo di nodo per questo nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-146">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c5f-147">Tipo di nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-147">The node type.</span>
          </span>
          <span data-ttu-id="38c5f-148">Per gli oggetti <see cref="T:System.Xml.Linq.XDocumentType" />, questo valore è <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-148">For <see cref="T:System.Xml.Linq.XDocumentType" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c5f-149">Poiché tutte le classi che derivano da <xref:System.Xml.Linq.XObject> contengono un <xref:System.Xml.Linq.XObject.NodeType%2A> proprietà, è possibile scrivere codice che opera sulle raccolte di sottoclasse concreto di <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="38c5f-149">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="38c5f-150">Il codice quindi possibile testare il tipo di nodo di ogni nodo nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="38c5f-150">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38c5f-151">L'esempio seguente illustra l'uso di questa proprietà per recuperare il tipo di nodo per un <xref:System.Xml.Linq.XDocumentType> oggetto.</span><span class="sxs-lookup"><span data-stu-id="38c5f-151">The following example shows the use of this property to retrieve the node type for an <xref:System.Xml.Linq.XDocumentType> object.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.NodeType);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _   
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.NodeType.ToString())  
```  
  
 <span data-ttu-id="38c5f-152">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="38c5f-152">This example produces the following output:</span></span>  
  
```  
DocumentType  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-153">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-153">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.PublicId" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublicId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublicId : string with get, set" Usage="System.Xml.Linq.XDocumentType.PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c5f-154">Ottiene o imposta l'identificatore pubblico per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-154">Gets or sets the public identifier for this Document Type Definition (DTD).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c5f-155">
            <see cref="T:System.String" /> che contiene l'identificatore pubblico per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-155">A <see cref="T:System.String" /> that contains the public identifier for this Document Type Definition (DTD).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c5f-156">Se un documento XML viene utilizzata una DTD esterna pubblica, questa proprietà conterrà l'identificatore pubblico nella DTD esterna.</span><span class="sxs-lookup"><span data-stu-id="38c5f-156">If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-157">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-157">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.SystemId" />
      <MemberSignature Language="VB.NET" Value="Public Property SystemId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SystemId : string with get, set" Usage="System.Xml.Linq.XDocumentType.SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c5f-158">Ottiene o imposta l'identificatore di sistema per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-158">Gets or sets the system identifier for this Document Type Definition (DTD).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c5f-159">
            <see cref="T:System.String" /> che contiene l'identificatore di sistema per questa definizione DTD (Document Type Definition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-159">A <see cref="T:System.String" /> that contains the system identifier for this Document Type Definition (DTD).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c5f-160">Se un documento XML viene utilizzata una definizione DTD privata, questa proprietà conterrà l'ID privato nella DTD esterna.</span><span class="sxs-lookup"><span data-stu-id="38c5f-160">If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38c5f-161">L'esempio seguente crea un documento XML che fa riferimento a una definizione DTD privata.</span><span class="sxs-lookup"><span data-stu-id="38c5f-161">The following example creates an XML document that refers to an external private DTD.</span></span> <span data-ttu-id="38c5f-162">La DTD non è un sottoinsieme interno.</span><span class="sxs-lookup"><span data-stu-id="38c5f-162">The DTD does not have an internal subset.</span></span> <span data-ttu-id="38c5f-163">La chiamata al <xref:System.Xml.Linq.XDocumentType> costruttore riflette l'uso della definizione DTD privata.</span><span class="sxs-lookup"><span data-stu-id="38c5f-163">The call to the <xref:System.Xml.Linq.XDocumentType> constructor reflects the use of the external private DTD.</span></span> <span data-ttu-id="38c5f-164">Passa `null` per il subset interno.</span><span class="sxs-lookup"><span data-stu-id="38c5f-164">It passes `null` for the internal subset.</span></span>  
  
```csharp  
string pubsDtd =  
@"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
File.WriteAllText("Pubs.dtd", pubsDtd);  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XDocumentType("Pubs", null, "Pubs.dtd", null),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
doc.Save("Pubs.xml");  
  
// Validate Pubs.xml against Pubs.dtd.  
XmlReaderSettings xrs = new XmlReaderSettings();  
xrs.ProhibitDtd = false;  
xrs.ValidationType = ValidationType.DTD;  
xrs.ConformanceLevel = ConformanceLevel.Auto;  
XmlReader xr = XmlReader.Create("Pubs.xml", xrs);  
XDocument doc2 = XDocument.Load(xr);  
  
XDocumentType dt = doc2.Document.DocumentType;  
Console.WriteLine("SystemId:{0}", dt.SystemId);  
```  
  
```vb  
Dim pubsDtd As String = _   
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
File.WriteAllText("Pubs.dtd", pubsDtd)  
  
Dim target As String = "xml-stylesheet"  
Dim data As String = "href='mystyle.css' title='Compact' type='text/css'"  
  
Dim doc As XDocument = _  
    <?xml version='1.0'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc _  
.FirstNode _  
.AddBeforeSelf(New XDocumentType("Pubs", Nothing, "Pubs.dtd", Nothing))  
  
doc.Declaration = New XDeclaration("1.0", "utf-8", "true")  
doc.Save("Pubs.xml")  
  
' Validate Pubs.xml against Pubs.dtd.  
Dim xrs As XmlReaderSettings = New XmlReaderSettings()  
xrs.ProhibitDtd = False  
xrs.ValidationType = ValidationType.DTD  
xrs.ConformanceLevel = ConformanceLevel.Auto  
Dim xr As XmlReader = XmlReader.Create("Pubs.xml", xrs)  
Dim doc2 As XDocument = XDocument.Load(xr)  
  
Dim dt As XDocumentType = doc2.Document.DocumentType  
Console.WriteLine("SystemId:{0}", dt.SystemId)  
```  
  
 <span data-ttu-id="38c5f-165">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="38c5f-165">This example produces the following output:</span></span>  
  
```  
SystemId:Pubs.dtd  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-166">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-166">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xDocumentType.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="38c5f-167">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scriverà questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-167">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38c5f-168">Scrivere questo <see cref="T:System.Xml.Linq.XDocumentType" />in un <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-168">Write this <see cref="T:System.Xml.Linq.XDocumentType" /> to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c5f-169">Questo metodo viene principalmente utilizzato internamente per i metodi di scrivono un albero XML in un <xref:System.Xml.XmlWriter>.</span><span class="sxs-lookup"><span data-stu-id="38c5f-169">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13">
          <span data-ttu-id="38c5f-170">LINQ to XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c5f-170">LINQ to XML</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xDocumentType.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>