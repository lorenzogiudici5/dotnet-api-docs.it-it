<Type Name="XComment" FullName="System.Xml.Linq.XComment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d56d50e8c22157d8cf2244a69a2ff34707031c3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39827154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XComment : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XComment extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XComment" />
  <TypeSignature Language="VB.NET" Value="Public Class XComment&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XComment : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XComment = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="89f8a-101">Rappresenta un commento XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="89f8a-101">Represents an XML comment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89f8a-102">È possibile aggiungere un commento XML come nodo figlio di un elemento.</span><span class="sxs-lookup"><span data-stu-id="89f8a-102">You can add an XML comment as a child node of an element.</span></span> <span data-ttu-id="89f8a-103">È anche possibile aggiungere un commento XML per un <xref:System.Xml.Linq.XDocument> come elemento di pari livello del nodo elemento radice.</span><span class="sxs-lookup"><span data-stu-id="89f8a-103">You can also add an XML comment to an <xref:System.Xml.Linq.XDocument> as a sibling of the root element node.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Linq.XElement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89f8a-104">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XComment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-104">Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XComment (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XComment(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XComment : string -&gt; System.Xml.Linq.XComment" Usage="new System.Xml.Linq.XComment value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="89f8a-105">Stringa che include il contenuto del nuovo oggetto <see cref="T:System.Xml.Linq.XComment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-105">A string that contains the contents of the new <see cref="T:System.Xml.Linq.XComment" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89f8a-106">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XComment" /> con il contenuto della stringa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-106">Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class with the specified string content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="89f8a-107">L'esempio seguente crea un elemento che contiene un commento come nodo figlio.</span><span class="sxs-lookup"><span data-stu-id="89f8a-107">The following example creates an element that contains a comment as a child node.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XComment("This is a comment")  
);  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root>  
                           <!--This is a comment-->  
                       </Root>  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="89f8a-108">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="89f8a-108">This example produces the following output:</span></span>  
  
```xml  
<Root>  
  <!--This is a comment-->  
</Root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89f8a-109">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-109">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XComment (System.Xml.Linq.XComment other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XComment other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XComment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XComment(System::Xml::Linq::XComment ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XComment : System.Xml.Linq.XComment -&gt; System.Xml.Linq.XComment" Usage="new System.Xml.Linq.XComment other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XComment" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="89f8a-110">Nodo <see cref="T:System.Xml.Linq.XComment" /> dal quale copiare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-110">The <see cref="T:System.Xml.Linq.XComment" /> node to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89f8a-111">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XComment" /> da un nodo commento esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-111">Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class from an existing comment node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89f8a-112">Questo costruttore viene principalmente utilizzato internamente per effettuare una copia completa di un albero XML.</span><span class="sxs-lookup"><span data-stu-id="89f8a-112">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89f8a-113">Il valore del parametro <paramref name="other" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-113">The <paramref name="other" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XComment.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XComment.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89f8a-114">Ottiene il tipo di nodo per questo nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-114">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89f8a-115">Tipo di nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-115">The node type.</span>
          </span>
          <span data-ttu-id="89f8a-116">Per gli oggetti <see cref="T:System.Xml.Linq.XComment" />, questo valore è <see cref="F:System.Xml.XmlNodeType.Comment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-116">For <see cref="T:System.Xml.Linq.XComment" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Comment" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89f8a-117">Poiché tutte le classi che derivano da <xref:System.Xml.Linq.XObject> contengono un <xref:System.Xml.Linq.XObject.NodeType%2A> proprietà, è possibile scrivere codice che opera sulle raccolte di sottoclasse concreto di <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="89f8a-117">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="89f8a-118">Il codice quindi possibile testare il tipo di nodo di ogni nodo nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="89f8a-118">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89f8a-119">Nell'esempio seguente crea un nodo di commento e stampa il relativo tipo di nodo.</span><span class="sxs-lookup"><span data-stu-id="89f8a-119">The following example creates a comment node and prints its node type.</span></span>  
  
```csharp  
XComment com = new XComment("This is a comment");  
XNode node = com;  
Console.WriteLine(node.NodeType);  
```  
  
```vb  
Dim com As XComment = New XComment("This is a comment")  
Dim node As XNode = com  
Console.WriteLine(node.NodeType.ToString())  
```  
  
 <span data-ttu-id="89f8a-120">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="89f8a-120">This example produces the following output:</span></span>  
  
```  
Comment  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XComment.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.Linq.XComment.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89f8a-121">Ottiene o imposta il valore stringa di questo commento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-121">Gets or sets the string value of this comment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89f8a-122">
            <see cref="T:System.String" /> che contiene il valore stringa di questo commento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-122">A <see cref="T:System.String" /> that contains the string value of this comment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89f8a-123">A differenza <xref:System.Xml.Linq.XElement> e <xref:System.Xml.Linq.XAttribute>, eseguendo il cast a una stringa non è possibile recuperare il contenuto di un commento.</span><span class="sxs-lookup"><span data-stu-id="89f8a-123">Unlike <xref:System.Xml.Linq.XElement> and <xref:System.Xml.Linq.XAttribute>, you cannot retrieve the contents of a comment by casting it to a string.</span></span> <span data-ttu-id="89f8a-124">In alternativa, è necessario utilizzare questa proprietà per recuperare il contenuto.</span><span class="sxs-lookup"><span data-stu-id="89f8a-124">Instead, you must use this property to retrieve the contents.</span></span>  
  
 <span data-ttu-id="89f8a-125">Impostazione di questa proprietà genererà il <xref:System.Xml.Linq.XObject.Changed> e il <xref:System.Xml.Linq.XObject.Changing> gli eventi.</span><span class="sxs-lookup"><span data-stu-id="89f8a-125">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89f8a-126">L'esempio seguente crea un nodo di commento.</span><span class="sxs-lookup"><span data-stu-id="89f8a-126">The following example creates a comment node.</span></span> <span data-ttu-id="89f8a-127">Recupera quindi il contenuto del nodo di commento.</span><span class="sxs-lookup"><span data-stu-id="89f8a-127">It then retrieves the contents of the comment node.</span></span>  
  
```csharp  
XComment com = new XComment("This is a comment");  
Console.WriteLine(com.Value);  
```  
  
```vb  
Dim com As XComment = New XComment("This is a comment")  
Console.WriteLine(com.Value)  
```  
  
 <span data-ttu-id="89f8a-128">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="89f8a-128">This example produces the following output:</span></span>  
  
```  
This is a comment  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89f8a-129">L'elemento <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-129">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xComment.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89f8a-130">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scriverà questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-130">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89f8a-131">Scrivere questo commento in un <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89f8a-131">Write this comment to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89f8a-132">Questo metodo viene principalmente utilizzato internamente per i metodi di scrivono un albero XML in un <xref:System.Xml.XmlWriter>.</span><span class="sxs-lookup"><span data-stu-id="89f8a-132">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XComment.Value" />
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xComment.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>