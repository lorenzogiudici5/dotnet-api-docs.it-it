<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XDocument.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d79ed174f5e5f1d678e11f3ea4857185ee811f59.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d79ed174f5e5f1d678e11f3ea4857185ee811f59</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Represents an XML document.</source>
          <target state="translated">Rappresenta un documento XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>For the components and usage of an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object, see <bpt id="p1">&lt;see href="http://msdn.microsoft.com/library/90f78331-1be8-42fb-93e7-bd1325826467"&gt;</bpt>XDocument Class Overview<ept id="p1">&lt;/see&gt;</ept>.</source>
          <target state="translated">Per informazioni sui componenti e l'uso di un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, vedere <bpt id="p1">&lt;see href="http://msdn.microsoft.com/library/90f78331-1be8-42fb-93e7-bd1325826467"&gt;</bpt>Panoramica della classe XDocument<ept id="p1">&lt;/see&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido di un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>The following example creates a document, and then adds a comment and an element to it.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento e quindi viene aggiunto un commento e un elemento.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>It then composes another document using the results of a query.</source>
          <target state="translated">Crea quindi un altro documento utilizzando i risultati di una query.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Overloaded constructors enable you to create a new empty <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>; to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> with some specified initial content; and to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> as a copy of another <ph id="ph4">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object.</source>
          <target state="translated">I costruttori di overload consentono di creare un nuovo vuoto <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>; per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> contenuto; iniziale specificato e per creare un <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> come copia di un altro <ph id="ph4">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Non sono molti gli scenari in cui è richiesta la creazione di un oggetto <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">In genere, è invece possibile creare alberi XML con un nodo radice <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">A meno di particolari esigenze che richiedono la creazione di un documento, ad esempio perché è necessario creare istruzioni di elaborazione e commenti al primo livello o supportare tipi di documento, è consigliabile usare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> come nodo radice.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido di un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>The following example creates a document, and then adds a comment and an element to it.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento e quindi viene aggiunto un commento e un elemento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>It then composes another document using the results of a query.</source>
          <target state="translated">Crea quindi un altro documento utilizzando i risultati di una query.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Non sono molti gli scenari in cui è richiesta la creazione di un oggetto <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">In genere, è invece possibile creare alberi XML con un nodo radice <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">A meno di particolari esigenze che richiedono la creazione di un documento, ad esempio perché è necessario creare istruzioni di elaborazione e commenti al primo livello o supportare tipi di documento, è consigliabile usare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> come nodo radice.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido di un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>The following example creates a new document, and then adds a comment and an element to it.</source>
          <target state="translated">Nell'esempio seguente viene creato un nuovo documento e quindi viene aggiunto un commento e un elemento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>A parameter list of content objects to add to this document.</source>
          <target state="translated">Elenco di parametri di oggetti contenuto da aggiungere a questo documento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class with the specified content.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> con il contenuto specificato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Non sono molti gli scenari in cui è richiesta la creazione di un oggetto <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">In genere, è invece possibile creare alberi XML con un nodo radice <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">A meno di particolari esigenze che richiedono la creazione di un documento, ad esempio perché è necessario creare istruzioni di elaborazione e commenti al primo livello o supportare tipi di documento, è consigliabile usare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> come nodo radice.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido di un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>The following example creates a document, and then adds a comment and an element to it.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento e quindi viene aggiunto un commento e un elemento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>It then composes another document using the results of a query.</source>
          <target state="translated">Crea quindi un altro documento utilizzando i risultati di una query.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object that will be copied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> che verrà copiato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class from an existing <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> esistente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>You use this constructor to make a deep copy of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Utilizzare questo costruttore per creare una copia completa di un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>This constructor traverses all nodes and attributes in the document specified in the <ph id="ph1">`other`</ph> parameter, and creates copies of all nodes as it assembles the newly initialized <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Questo costruttore consente di scorrere tutti i nodi e attributi nel documento specificato nel <ph id="ph1">`other`</ph> parametro e crea copie di tutti i nodi come Assembla appena inizializzato <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> for the document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> per il documento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>The content of the document.</source>
          <target state="translated">Contenuto del documento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> and content.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> con l'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> e il contenuto specificati.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Non sono molti gli scenari in cui è richiesta la creazione di un oggetto <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">In genere, è invece possibile creare alberi XML con un nodo radice <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">A meno di particolari esigenze che richiedono la creazione di un documento, ad esempio perché è necessario creare istruzioni di elaborazione e commenti al primo livello o supportare tipi di documento, è consigliabile usare <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> come nodo radice.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sul contenuto valido di un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, vedere <bpt id="p1">[</bpt>valida contenuto di oggetti XElement e XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>The following example uses this constructor to create a document.</source>
          <target state="translated">Nell'esempio seguente viene utilizzato questo costruttore per creare un documento.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>Gets or sets the XML declaration for this document.</source>
          <target state="translated">Ottiene o imposta la dichiarazione XML del documento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> that contains the XML declaration for this document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> contenente la dichiarazione XML del documento.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>Sometimes you have to create an XML declaration for a document.</source>
          <target state="translated">In alcuni casi è necessario creare una dichiarazione XML per un documento.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>If you want to indicate that a document is standalone, you must use this property.</source>
          <target state="translated">Se si desidera indicare che un documento è autonomo, è necessario utilizzare questa proprietà.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>If you want to encode your document with an encoding other than utf-8, you can specify an encoding through the <ph id="ph1">&lt;xref:System.Xml.Linq.XDeclaration&gt;</ph>.</source>
          <target state="translated">Se si desidera codificare il documento con una codifica diversa da utf-8, è possibile specificare una codifica tramite il <ph id="ph1">&lt;xref:System.Xml.Linq.XDeclaration&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>Another approach for encoding a document is to specify the encoding on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> that you pass to LINQ to XML for writing.</source>
          <target state="translated">Un altro approccio per la codifica di un documento è specificare la codifica su un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> passato a LINQ to XML per la scrittura.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>The following example uses this property to retrieve the XML declaration of a document.</source>
          <target state="translated">L'esempio seguente usa questa proprietà per recuperare la dichiarazione XML di un documento.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>Gets the Document Type Definition (DTD) for this document.</source>
          <target state="translated">Ottiene la definizione DTD (Document Type Definition) per il documento.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> that contains the DTD for this document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> che contiene la definizione DTD del documento.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> provides limited support for DTDs.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> fornisce supporto limitato per DTD.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>You can populate an XML tree with an XML document that contains a DTD.</source>
          <target state="translated">È possibile popolare un albero XML con un documento XML che contiene una definizione DTD.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>The XML tree will then contain a <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> node.</source>
          <target state="translated">Struttura ad albero XML conterrà quindi una <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> nodo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>When you serialize or save the tree, the DTD will also be serialized.</source>
          <target state="translated">Quando si serializza o Salva la struttura ad albero, anche la definizione DTD sarà serializzata.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will expand any entities in the DTD.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> espande qualsiasi entità nella DTD.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>When you serialize or save the XML tree, the entity references are not saved; instead, the nodes are saved with the entity references replaced by the text of the entity.</source>
          <target state="translated">Quando si serializza o Salva la struttura ad albero XML, i riferimenti alle entità non vengono salvate; al contrario, i nodi vengono salvati con i riferimenti a entità sostituiti dal testo dell'entità.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>If the DTD contains default attributes, the attributes are created in the XML tree as ordinary attributes.</source>
          <target state="translated">Se la DTD contiene gli attributi predefiniti, gli attributi vengono creati nell'albero XML come attributi comuni.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>By default, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> does not validate a document based on its DTD.</source>
          <target state="translated">Per impostazione predefinita, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> non convalidare un documento basato sulla propria definizione DTD.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>To validate a document based on a DTD, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> that will validate based on a DTD, and then create an XML tree from the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Per convalidare un documento basato su una definizione DTD, creare un <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> che verrà convalidato in base a una DTD e quindi creare un albero XML dal <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>The following example creates a document that contains an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento che contiene un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>Visual Basic does not support document types within XML literals.</source>
          <target state="translated">Visual Basic non supporta i tipi di documenti all'interno di valori letterali XML.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>However, it is possible to create a document that contains a document type by first creating the document using XML literals, and then creating and adding an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> node in the appropriate place in the XML tree.</source>
          <target state="translated">Tuttavia, è possibile creare un documento che contiene un tipo di documento creando innanzitutto il documento utilizzando i valori letterali XML e quindi creando e aggiungendo un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> nodo nella posizione appropriata all'interno dell'albero XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a file specified by a URI, from an <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, or from an <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Crea un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> da un file specificato da un URI, da un oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> o da un oggetto <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Using one of the overloads of this method, you can load an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a file, a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, or an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Utilizzando uno degli overload di questo metodo, è possibile caricare un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> da un file, un <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, o un <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML, use <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph>.</source>
          <target state="translated">Per creare un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> da una stringa che contiene il codice XML, utilizzare <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">Flusso che contiene i dati XML.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> instance by using the specified stream.</source>
          <target state="translated">Crea una nuova istanza di <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> usando il flusso specificato.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object that reads the data that is contained in the stream.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> che legge i dati contenuti nel flusso.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>If you want to control load options, use the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> overload that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare le opzioni di caricamento, utilizzare il <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> overload che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>The loading functionality of LINQ to XML is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">La funzionalità di caricamento di LINQ to XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, follow these steps:</source>
          <target state="translated">Se è necessario modificare <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, seguire questi passaggi:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that take <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Creare un <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> chiamando uno del <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overload che accettano <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> overloads of <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Passare il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> a uno del <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> esegue l'overload di <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> che accetta <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that contains the content for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> che comprende il contenuto dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Crea un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> che comprende i contenuti dell'oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>The following example creates a document from a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento da un <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>A URI string that references the file to load into a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Una stringa URI che fa riferimento al file da caricare in un nuovo <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a file.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> nuovo da un file.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> che include il contenuto del file specificato.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>This method uses an underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to read the XML into an XML tree.</source>
          <target state="translated">Questo metodo utilizza un oggetto sottostante <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> per leggere il codice XML in un albero XML.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>The following example shows how to load an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a file.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come caricare un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> da un file.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>This example uses the following XML document:</source>
          <target state="translated">Nell'esempio viene utilizzato il seguente documento XML: </target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source><bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>File XML di esempio: tipico ordine di acquisto (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the content for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> che comprende il contenuto dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Crea un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> che comprende i contenuti dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>One possible use for this method is to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Un possibile utilizzo di questo metodo consiste nel creare una copia di un documento DOM in un albero LINQ to XML.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>To do this, you create an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then use the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">A tale scopo, si crea un <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> da un documento DOM e quindi utilizzare il <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> per creare un <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>The following example creates a DOM document, creates an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from the DOM document, creates an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> using the <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento DOM, un <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> dal documento DOM, crea un <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> utilizzando il <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>The stream containing the XML data.</source>
          <target state="translated">Flusso contenente i dati XML.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies whether to load base URI and line information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il caricamento dell'URI di base e delle informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Crea una nuova istanza di <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> usando il flusso specificato, conservando facoltativamente lo spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object that reads the data that is contained in the stream.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> che legge i dati contenuti nel flusso.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>The loading functionality of LINQ to XML is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">La funzionalità di caricamento di LINQ to XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, follow these steps:</source>
          <target state="translated">Se è necessario modificare <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, seguire questi passaggi:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that takes <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Creare un <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> chiamando uno del <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overload che accetta <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> overloads of <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Passare il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> a uno del <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> esegue l'overload di <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> che accetta <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that contains the content for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> che comprende il contenuto dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> nuovo da un oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> contenente il codice XML letto dall'oggetto <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore leggere tutti gli spazi vuoti nel documento XML di origine.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Nodi di tipo <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> vengono creati per spazi vuoti significativi e significativo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, se non viene impostata la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore ignorare tutti gli spazi vuoti non significativi nel codice XML di origine.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Struttura ad albero XML viene creato senza nodi di testo per gli spazi vuoti non significativi.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Se l'origine XML non è rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Gli spazi vuoti significativi viene comunque mantenuto e non sono presenti intervalli di spazi vuoti non significativi che potrebbero comportare la creazione di più nodi di testo di spazi vuoti.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> is not valid when loading from a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> non valido durante il caricamento da un <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Le informazioni sulla riga è accurati immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni sulla riga potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The following example creates a document from a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un documento da un <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A URI string that references the file to load into a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Una stringa URI che fa riferimento al file da caricare in un nuovo <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a file, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> nuovo da un file, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> che include il contenuto del file specificato.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore leggere tutti gli spazi vuoti nel documento XML di origine.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Nodi di tipo <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> vengono creati per spazi vuoti significativi e significativo.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, se non viene impostata la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore ignorare tutti gli spazi vuoti non significativi nel codice XML di origine.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Struttura ad albero XML viene creato senza nodi di testo per gli spazi vuoti non significativi.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Se l'origine XML non è rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Gli spazi vuoti significativi viene comunque mantenuto e non sono presenti intervalli di spazi vuoti non significativi che potrebbero comportare la creazione di più nodi di testo di spazi vuoti.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flags.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The base URI and the line information are accurate immediately after loading the XML document.</source>
          <target state="translated">L'URI di base e le informazioni sulla riga sono accurate immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the base URI and line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni di riga e l'URI di base potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example shows how to load an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a file.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come caricare un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> da un file.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example uses the following XML document:</source>
          <target state="translated">Nell'esempio viene utilizzato il seguente documento XML: </target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source><bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>File XML di esempio: tipico ordine di acquisto (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be read for the content of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> che verrà letto per il contenuto dell'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies whether to load base URI and line information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il caricamento dell'URI di base e delle informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, optionally setting the base URI, and retaining line information.</source>
          <target state="translated">Carica un <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> da un <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, impostando facoltativamente l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> contenente il codice XML letto dall'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then using the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, this method can be used to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Creando un <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> da un documento DOM e viene quindi utilizzato il <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> per creare un <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, questo metodo può essere utilizzato per creare una copia di un documento DOM in un albero LINQ to XML.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> per creare un <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> da una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is not valid when loading from a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> non valido durante il caricamento da un <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> will be configured to either read whitespace or not.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> verrà configurato per uno spazio vuoto di lettura o non.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The LINQ to XML tree will be populated with the whitespace nodes that the reader surfaces.</source>
          <target state="translated">L'albero LINQ to XML verrà popolato con i nodi spazi vuoti che dal lettore.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This will be the behavior regardless of whether <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is set or not.</source>
          <target state="translated">Questo sarà il comportamento indipendentemente dal fatto che <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> o non è impostato.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid base URI or not.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> può avere un URI di base valido o non.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, the base URI will be set in the XML tree from the base URI that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Se si imposta <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, la base URI verrà impostato nella struttura ad albero XML dall'URI di base che viene segnalato dal <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid line information or not.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> può avere un informazioni sulla riga valide o non.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, the line information will be set in the XML tree from the line information that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Se si imposta <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, le informazioni sulla riga verrà impostati nella struttura ad albero XML dalle informazioni sulla riga che viene segnalati dal <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Le informazioni sulla riga è accurati immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni sulla riga potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the line information that it loads from the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente carica le informazioni sulla riga che viene caricato dal <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>It then prints the line information.</source>
          <target state="translated">Stampa quindi le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Ottiene il tipo di nodo per questo nodo.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>The node type.</source>
          <target state="translated">Tipo di nodo.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Document" /&gt;</ph>.</source>
          <target state="translated">Per gli oggetti <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, questo valore è <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Document" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of objects where the type of each is a subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Poiché tutte le classi che derivano da <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contengono un <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> proprietà, è possibile scrivere il codice che opera su insiemi di oggetti in cui il tipo di ogni è una sottoclasse di <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>Your code can then test for the node type of each object in the collection.</source>
          <target state="translated">Quindi è possibile testare il codice per il tipo di nodo di ogni oggetto nella raccolta.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>The following example shows the use of this property.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo di questa proprietà.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a string, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> nuovo da un stringa, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This method parses a string and creates an XML tree.</source>
          <target state="translated">Questo metodo analizza una stringa e crea un albero XML.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>The following example creates a string that contains XML.</source>
          <target state="translated">Nell'esempio seguente crea una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>It then parses the string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Viene quindi analizzata la stringa in un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>A string that contains XML.</source>
          <target state="translated">Stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a string.</source>
          <target state="translated">Crea un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> da una stringa.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> popolato dalla stringa che contiene il codice XML.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>This method does not preserve white space.</source>
          <target state="translated">Questo metodo non mantiene gli spazi vuoti.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>If you want to preserve white space in the XML tree, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera mantenere gli spazi vuoti nella struttura ad albero XML, utilizzare l'overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>The following example creates a string that contains XML.</source>
          <target state="translated">Nell'esempio seguente crea una stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>It then parses the string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Viene quindi analizzata la stringa in un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A string that contains XML.</source>
          <target state="translated">Stringa che contiene XML.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a string, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> nuovo da un stringa, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> popolato dalla stringa che contiene il codice XML.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore leggere tutti gli spazi vuoti nel documento XML di origine.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Nodi di tipo <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> vengono creati per spazi vuoti significativi e significativo.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Se l'origine XML rientrato, se non viene impostata la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> fa sì che il lettore ignorare tutti gli spazi vuoti non significativi nel codice XML di origine.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Struttura ad albero XML viene creato senza nodi di testo per gli spazi vuoti non significativi.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Se l'origine XML non è rientrato, l'impostazione di <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Gli spazi vuoti significativi viene comunque mantenuto e non sono presenti intervalli di spazi vuoti non significativi che potrebbero comportare la creazione di più nodi di testo di spazi vuoti.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> is not valid when parsing from a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> non valido durante l'analisi da un <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Si verifica una riduzione delle prestazioni se imposta la <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Le informazioni sulla riga è accurati immediatamente dopo il caricamento del documento XML.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Se si modifica la struttura ad albero XML dopo il caricamento del documento, le informazioni sulla riga potrebbero risultare inutili.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ alla funzionalità di caricamento del XML si basa su <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Pertanto, è possibile rilevare eventuali eccezioni generate dal <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload di metodi e <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> metodi che leggono e analizzano il documento.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example parses a string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene analizzata una stringa in un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.Root">
          <source>Gets the root element of the XML Tree for this document.</source>
          <target state="translated">Ottiene l'elemento radice dell'albero XML del documento.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of the XML tree.</source>
          <target state="translated">Radice <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> della struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>This property is useful when you want to compose <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> queries in the same context as when composing them for a tree rooted in <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">Questa proprietà è utile quando si desidera comporre <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> query nello stesso contesto quando componendoli per una struttura ad albero con radice in <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>See <bpt id="p1">[</bpt>Querying an XDocument vs. Querying an XElement<ept id="p1">](http://msdn.microsoft.com/library/d266f58d-f2f3-4668-b661-e716e658d13a)</ept> for more details.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>XDocument e l'esecuzione di query. Query di XElement<ept id="p1">](http://msdn.microsoft.com/library/d266f58d-f2f3-4668-b661-e716e658d13a)</ept> per altri dettagli.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>The following example uses this property to get the root element of a document.</source>
          <target state="translated">Nell'esempio seguente usa questa proprietà per ottenere l'elemento radice di un documento.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Serializes this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a file, a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, or an <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Serializza <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> in un file, un <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> o un <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to.</source>
          <target state="translated">Flusso in cui restituire l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> nell'oggetto <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Il codice XML serializzato verrà aumentato il rientro.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Verranno rimossi tutti gli spazi vuoti non significativi e verrà aggiunto uno spazio vuoto aggiuntivo in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Il comportamento di questo metodo è che gli spazi vuoti non significativi non verranno mantenuti.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare lo spazio vuoto, utilizzare l'overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> option to save unindented XML.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> opzione per salvare il codice XML.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> opzione se si desidera rimuovere le dichiarazioni dello spazio dei nomi duplicati.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> will be written to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> in cui verrà scritto l'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Serializzare <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> in un <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Il codice XML serializzato verrà aumentato il rientro.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Verranno rimossi tutti gli spazi vuoti non significativi e verrà aggiunto uno spazio vuoto aggiuntivo in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Il comportamento di questo metodo è che gli spazi vuoti non significativi non verranno mantenuti.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare lo spazio vuoto, utilizzare l'overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, saves the document to a <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>, and then prints the string to the console.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, Salva il documento a un <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>e quindi Visualizza la stringa nella console.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>A string that contains the name of the file.</source>
          <target state="translated">Stringa che contiene il nome del file.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a file, overwriting an existing file, if it exists.</source>
          <target state="translated">Serializza questo oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> in un file sovrascrivendo un file esistente, se esiste.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Il codice XML serializzato verrà aumentato il rientro.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Verranno rimossi tutti gli spazi vuoti non significativi e verrà aggiunto uno spazio vuoto aggiuntivo in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Il comportamento di questo metodo è che gli spazi vuoti non significativi non verranno mantenuti.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Se si desidera controllare lo spazio vuoto, utilizzare l'overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> che accetta <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, saves the document to a file, and then prints the file to the console.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, Salva il documento in un file e quindi stampato il file nella console.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> will be written to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in cui verrà scritto l'oggetto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Serializzare <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> in un <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>The following example shows how to save an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come salvare <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> in <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to.</source>
          <target state="translated">Flusso in cui restituire l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> che specifica il comportamento di formattazione.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, optionally specifying formatting behavior.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> nell'oggetto <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> specificato, indicando facoltativamente il comportamento di formattazione.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>By default the <ph id="ph1">`options`</ph> are set to <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita il <ph id="ph1">`options`</ph> sono impostate su <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This option will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Questa opzione verrà rimuovere tutti gli spazi vuoti non significativi estranei e aggiungere gli spazi vuoti non significativi appropriato in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML, specificare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> opzione se si desidera rimuovere le dichiarazioni dello spazio dei nomi duplicati.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to output the XML to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> nel quale deve essere restituito il codice XML.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> che specifica il comportamento di formattazione.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, optionally disabling formatting.</source>
          <target state="translated">Serializzare <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> in un <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, disabilitando facoltativamente la formattazione.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML, specificare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML rientrato, non si specifica il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Questa operazione rimuoverà tutti gli spazi vuoti non significativi estranei e aggiungere gli spazi vuoti non significativi appropriato in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Questo è il comportamento predefinito e il comportamento degli overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> metodi che non accettano <ph id="ph2">`options`</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">Nell'esempio seguente mostra due usi di questo metodo.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The first use serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> with formatting.</source>
          <target state="translated">Il primo serializza il <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> con la formattazione.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The second preserves white space.</source>
          <target state="translated">Il secondo mantiene gli spazi vuoti.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Because the document has no white space in it as constructed, preserving white space outputs the XML without any indenting.</source>
          <target state="translated">Poiché il documento non ha spazio vuoto come costruito, mantenimento dello spazio vuoto restituisce il codice XML senza alcun rientro.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A string that contains the name of the file.</source>
          <target state="translated">Stringa che contiene il nome del file.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> che specifica il comportamento di formattazione.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a file, optionally disabling formatting.</source>
          <target state="translated">Serializzare <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> in un file, disabilitando facoltativamente la formattazione.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML, specificare il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">In questo modo il writer scriverà tutti gli spazi vuoti, esattamente come rappresentato nella struttura ad albero XML.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Se si desidera salvare il codice XML rientrato, non si specifica il <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag per <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Questa operazione rimuoverà tutti gli spazi vuoti non significativi estranei e aggiungere gli spazi vuoti non significativi appropriato in modo che il codice XML rientrato correttamente.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Questo è il comportamento predefinito e il comportamento degli overload di <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> metodi che non accettano <ph id="ph2">`options`</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservare lo spazio vuoto durante il caricamento o l'analisi XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> e <bpt id="p2">[</bpt>conservare gli spazi vuoti durante la serializzazione<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">Nell'esempio seguente mostra due usi di questo metodo.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The first use preserves white space.</source>
          <target state="translated">Il primo utilizzo mantiene gli spazi vuoti.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The second one serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> with indenting.</source>
          <target state="translated">Il secondo serializza il <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> con rientri.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in cui scriverà questo metodo.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>Write this document to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Scrivere il documento in un <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>The following example shows how to write an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come scrivere un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> per un <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>Note that the example did not write an XML declaration.</source>
          <target state="translated">Si noti che nell'esempio non ha scritto una dichiarazione XML.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>