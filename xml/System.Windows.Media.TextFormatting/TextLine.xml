<Type Name="TextLine" FullName="System.Windows.Media.TextFormatting.TextLine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43833e05ad7a003e9e96e7e8d3d4643dcdb7ec5d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36490697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextLine : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextLine extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextLine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextLine&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextLine abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type TextLine = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce una classe astratta per supportare i servizi di formattazione per una riga del testo.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextLine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextLine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.TextFormatting.TextLine" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextLine (double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (pixelsPerDip As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextLine(double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextFormatting.TextLine : double -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="new System.Windows.Media.TextFormatting.TextLine pixelsPerDip" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="pixelsPerDip">
          <c>pixelsPerDip</c> deve essere impostato sul valore PixelsPerDip di TextSource.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.TextFormatting.TextLine" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore deve essere chiamato per ogni classe che viene ereditato dal <xref:System.Windows.Media.TextFormatting.TextLine>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public abstract double Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double Baseline { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double" Usage="System.Windows.Media.TextFormatting.TextLine.Baseline" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.Baseline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza dal margine superiore alla linea di base dell’oggetto <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> corrente.</summary>
        <value>Un valore <see cref="T:System.Double" /> che rappresenta la distanza della linea di base.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine Collapse (params System.Windows.Media.TextFormatting.TextCollapsingProperties[] collapsingPropertiesList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine Collapse(class System.Windows.Media.TextFormatting.TextCollapsingProperties[] collapsingPropertiesList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.Collapse(System.Windows.Media.TextFormatting.TextCollapsingProperties[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Collapse (ParamArray collapsingPropertiesList As TextCollapsingProperties()) As TextLine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ Collapse(... cli::array &lt;System::Windows::Media::TextFormatting::TextCollapsingProperties ^&gt; ^ collapsingPropertiesList);" />
      <MemberSignature Language="F#" Value="abstract member Collapse : System.Windows.Media.TextFormatting.TextCollapsingProperties[] -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textLine.Collapse collapsingPropertiesList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collapsingPropertiesList" Type="System.Windows.Media.TextFormatting.TextCollapsingProperties[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="collapsingPropertiesList">Elenco di oggetti <see cref="T:System.Windows.Media.TextFormatting.TextCollapsingProperties" /> che rappresentano le proprietà del testo compresso.</param>
        <summary>Creare una riga compressa in base alle proprietà del testo compresso.</summary>
        <returns>Valore <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> che rappresenta una riga compressa che può essere visualizzata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLength">
      <MemberSignature Language="C#" Value="public abstract int DependentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DependentLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.DependentLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DependentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DependentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DependentLength : int" Usage="System.Windows.Media.TextFormatting.TextLine.DependentLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.DependentLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di caratteri successivi all'ultimo carattere della riga che può attivare la riformattazione della riga corrente.</summary>
        <value>Valore <see cref="T:System.Int32" /> che rappresenta il numero di caratteri.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="textLine.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera tutte le risorse gestite e non gestite utilizzate dall’oggetto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public abstract void Draw (System.Windows.Media.DrawingContext drawingContext, System.Windows.Point origin, System.Windows.Media.TextFormatting.InvertAxes inversion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class System.Windows.Media.DrawingContext drawingContext, valuetype System.Windows.Point origin, valuetype System.Windows.Media.TextFormatting.InvertAxes inversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Windows.Media.TextFormatting.InvertAxes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Draw(System::Windows::Media::DrawingContext ^ drawingContext, System::Windows::Point origin, System::Windows::Media::TextFormatting::InvertAxes inversion);" />
      <MemberSignature Language="F#" Value="abstract member Draw : System.Windows.Media.DrawingContext * System.Windows.Point * System.Windows.Media.TextFormatting.InvertAxes -&gt; unit" Usage="textLine.Draw (drawingContext, origin, inversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
        <Parameter Name="origin" Type="System.Windows.Point" />
        <Parameter Name="inversion" Type="System.Windows.Media.TextFormatting.InvertAxes" />
      </Parameters>
      <Docs>
        <param name="drawingContext">Oggetto <see cref="T:System.Windows.Media.DrawingContext" /> sul quale verrà eseguito il rendering di <see cref="T:System.Windows.Media.TextFormatting.TextLine" />.</param>
        <param name="origin">Valore <see cref="T:System.Windows.Point" /> che rappresenta l’origine del disegno.</param>
        <param name="inversion">Valore enumerato <see cref="T:System.Windows.Media.TextFormatting.InvertAxes" /> che indica l'inversione degli assi orizzontale e verticale della superficie di disegno.</param>
        <summary>Esegue il rendering dell'oggetto <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> in base all'oggetto <see cref="T:System.Windows.Media.DrawingContext" /> specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public abstract double Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Extent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.Extent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Extent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double Extent { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Extent : double" Usage="System.Windows.Media.TextFormatting.TextLine.Extent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza dal pixel nero più alto al pixel più basso in una riga.</summary>
        <value>Un valore <see cref="T:System.Double" /> che rappresenta la distanza dell’estensione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackspaceCaretCharacterHit">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.CharacterHit GetBackspaceCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetBackspaceCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::CharacterHit GetBackspaceCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="abstract member GetBackspaceCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="textLine.GetBackspaceCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">Oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> corrente.</param>
        <summary>Ottiene il precedente hit del carattere dopo un backspace.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> dopo un backspace.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharacterHitFromDistance">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.CharacterHit GetCharacterHitFromDistance (double distance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetCharacterHitFromDistance(float64 distance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharacterHitFromDistance (distance As Double) As CharacterHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::CharacterHit GetCharacterHitFromDistance(double distance);" />
      <MemberSignature Language="F#" Value="abstract member GetCharacterHitFromDistance : double -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="textLine.GetCharacterHitFromDistance distance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="distance">Valore <see cref="T:System.Double" /> che rappresenta la distanza dall'inizio della riga.</param>
        <summary>Ottiene l’hit del carattere corrispondente alla distanza specificata dall'inizio della riga.</summary>
        <returns>L’oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> alla <paramref name="distance" /> specificata dall’inizio della riga.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'orientamento del testo determina come viene misurata la distanza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistanceFromCharacterHit">
      <MemberSignature Language="C#" Value="public abstract double GetDistanceFromCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDistanceFromCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract double GetDistanceFromCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="abstract member GetDistanceFromCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; double" Usage="textLine.GetDistanceFromCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">Oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> per il quale si desidera eseguire una query sulla distanza.</param>
        <summary>Ottiene la distanza dall'inizio della riga dell’hit del carattere specificato.</summary>
        <returns>Valore <see cref="T:System.Double" /> che rappresenta la distanza dall'inizio della riga.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'orientamento del testo determina come viene misurata la distanza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexedGlyphRuns">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextFormatting.IndexedGlyphRun&gt; GetIndexedGlyphRuns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.TextFormatting.IndexedGlyphRun&gt; GetIndexedGlyphRuns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIndexedGlyphRuns () As IEnumerable(Of IndexedGlyphRun)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Windows::Media::TextFormatting::IndexedGlyphRun ^&gt; ^ GetIndexedGlyphRuns();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexedGlyphRuns : unit -&gt; seq&lt;System.Windows.Media.TextFormatting.IndexedGlyphRun&gt;" Usage="textLine.GetIndexedGlyphRuns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextFormatting.IndexedGlyphRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un enumeratore per gli oggetti di enumerazione <see cref="T:System.Windows.Media.TextFormatting.IndexedGlyphRun" /> nel <see cref="T:System.Windows.Media.TextFormatting.TextLine" />.</summary>
        <returns>Un enumeratore che permette di enumerare ogni oggetto <see cref="T:System.Windows.Media.TextFormatting.IndexedGlyphRun" /> nel <see cref="T:System.Windows.Media.TextFormatting.TextLine" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enumerando l'elenco di <xref:System.Windows.Media.TextFormatting.IndexedGlyphRun> oggetti, il client di layout di testo può ottenere informazioni del glifo per ogni carattere di origine del testo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextCaretCharacterHit">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::CharacterHit GetNextCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="abstract member GetNextCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="textLine.GetNextCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">Oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> corrente.</param>
        <summary>Ottiene il successivo hit del carattere per la navigazione dell'accento circonflesso.</summary>
        <returns>Il successivo oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> in base alla navigazione dell'accento circonflesso.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousCaretCharacterHit">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::CharacterHit GetPreviousCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="textLine.GetPreviousCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">Oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> corrente.</param>
        <summary>Ottiene il precedente hit del carattere per la navigazione dell'accento circonflesso.</summary>
        <returns>Il precedebte oggetto <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> in base alla navigazione dell'accento circonflesso.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextBounds">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextBounds&gt; GetTextBounds (int firstTextSourceCharacterIndex, int textLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Media.TextFormatting.TextBounds&gt; GetTextBounds(int32 firstTextSourceCharacterIndex, int32 textLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetTextBounds(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextBounds (firstTextSourceCharacterIndex As Integer, textLength As Integer) As IList(Of TextBounds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Windows::Media::TextFormatting::TextBounds ^&gt; ^ GetTextBounds(int firstTextSourceCharacterIndex, int textLength);" />
      <MemberSignature Language="F#" Value="abstract member GetTextBounds : int * int -&gt; System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextBounds&gt;" Usage="textLine.GetTextBounds (firstTextSourceCharacterIndex, textLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextBounds&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstTextSourceCharacterIndex" Type="System.Int32" />
        <Parameter Name="textLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="firstTextSourceCharacterIndex">Valore <see cref="T:System.Int32" /> che rappresenta l’indice del primo carattere dell’intervallo specificato.</param>
        <param name="textLength">Valore <see cref="T:System.Int32" /> che rappresenta il numero di caratteri dell’intervallo specificato.</param>
        <summary>Ottiene una matrice di rettangoli di delimitazione che rappresentano l'intervallo dei caratteri in una riga di testo.</summary>
        <returns>Elenco di oggetti <see cref="T:System.Windows.Media.TextFormatting.TextBounds" /> che rappresentano il rettangolo di delimitazione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextCollapsedRanges">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextCollapsedRange&gt; GetTextCollapsedRanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Media.TextFormatting.TextCollapsedRange&gt; GetTextCollapsedRanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextCollapsedRanges () As IList(Of TextCollapsedRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Windows::Media::TextFormatting::TextCollapsedRange ^&gt; ^ GetTextCollapsedRanges();" />
      <MemberSignature Language="F#" Value="abstract member GetTextCollapsedRanges : unit -&gt; System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextCollapsedRange&gt;" Usage="textLine.GetTextCollapsedRanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextCollapsedRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un insieme di intervalli di testo compressi dopo la compressione di una riga.</summary>
        <returns>Elenco di oggetti <see cref="T:System.Windows.Media.TextFormatting.TextCollapsedRange" /> che rappresentano il testo compresso.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextLineBreak">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLineBreak GetTextLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLineBreak GetTextLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextLineBreak () As TextLineBreak" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLineBreak ^ GetTextLineBreak();" />
      <MemberSignature Language="F#" Value="abstract member GetTextLineBreak : unit -&gt; System.Windows.Media.TextFormatting.TextLineBreak" Usage="textLine.GetTextLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLineBreak</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene lo stato della riga quando interrotta dal processo di interruzione di riga.</summary>
        <returns>Valore <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> che rappresenta l’interruzione di riga.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito è `null` quando la riga termina alla fine del paragrafo.  
  
 Il client del formattatore di testo può passare il valore restituito nuovamente come un parametro per il <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> metodo, che consente un valore da utilizzare quando si formatta la successiva riga nello stesso paragraph.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRunSpans">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.TextRun&gt;&gt; GetTextRunSpans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.TextRun&gt;&gt; GetTextRunSpans() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRunSpans () As IList(Of TextSpan(Of TextRun))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::TextRun ^&gt; ^&gt; ^ GetTextRunSpans();" />
      <MemberSignature Language="F#" Value="abstract member GetTextRunSpans : unit -&gt; System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.TextRun&gt;&gt;" Usage="textLine.GetTextRunSpans " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.TextRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un insieme di oggetti <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> in un intervallo di testo contenuti in una riga.</summary>
        <returns>Ottiene un elenco di oggetti <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> contenuti in un intervallo di testo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCollapsed">
      <MemberSignature Language="C#" Value="public abstract bool HasCollapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasCollapsed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.HasCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasCollapsed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasCollapsed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasCollapsed : bool" Usage="System.Windows.Media.TextFormatting.TextLine.HasCollapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la riga è compressa.</summary>
        <value>
          <see langword="true" /> se la riga è compressa; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOverflowed">
      <MemberSignature Language="C#" Value="public abstract bool HasOverflowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOverflowed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.HasOverflowed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasOverflowed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasOverflowed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasOverflowed : bool" Usage="System.Windows.Media.TextFormatting.TextLine.HasOverflowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il contenuto della riga supera la larghezza del paragrafo specificata.</summary>
        <value>
          <see langword="true" />, se la riga supera la larghezza del paragrafo specificata; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public abstract double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.Height" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Media.TextFormatting.TextLine.Height" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.Height</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'altezza di una riga di testo.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta l'altezza della riga di testo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTruncated">
      <MemberSignature Language="C#" Value="public virtual bool IsTruncated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTruncated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.IsTruncated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsTruncated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTruncated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTruncated : bool" Usage="System.Windows.Media.TextFormatting.TextLine.IsTruncated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina se la riga di testo è troncata al centro di una parola.</summary>
        <value>
          <see langword="true" /> se la riga di testo è troncata al centro di una parola; altrimenti <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.TextFormatting.TextLine.IsTruncated%2A> valore della proprietà viene impostato solo quando il <xref:System.Windows.TextWrapping> proprietà di <xref:System.Windows.Media.TextFormatting.TextParagraphProperties> è impostata su <xref:System.Windows.TextWrapping.Wrap>, e una parola singola è maggiore della larghezza di paragrafo formattazione. In tale situazione <xref:System.Windows.Media.TextFormatting.TextFormatter> tronca la riga all'interno della parola per rispettare il comportamento desiderato specificato da <xref:System.Windows.TextWrapping.Wrap> impostazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Windows.Media.TextFormatting.TextLine.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero totale di posizioni <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> della riga corrente.</summary>
        <value>Valore <see cref="T:System.Int32" /> che rappresenta il numero totale di posizioni di <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> della riga corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBaseline">
      <MemberSignature Language="C#" Value="public abstract double MarkerBaseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MarkerBaseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.MarkerBaseline" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MarkerBaseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double MarkerBaseline { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkerBaseline : double" Usage="System.Windows.Media.TextFormatting.TextLine.MarkerBaseline" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.MarkerBaseline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza dal bordo del punto più alto della riga rispetto al marcatore della linea di base della riga.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la distanza della linea di base del marcatore.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerHeight">
      <MemberSignature Language="C#" Value="public abstract double MarkerHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MarkerHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.MarkerHeight" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MarkerHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double MarkerHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkerHeight : double" Usage="System.Windows.Media.TextFormatting.TextLine.MarkerHeight" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.MarkerHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'altezza di un marcatore per un elemento dell'elenco.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta l'altezza del marcatore.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewlineLength">
      <MemberSignature Language="C#" Value="public abstract int NewlineLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NewlineLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.NewlineLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NewlineLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int NewlineLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NewlineLength : int" Usage="System.Windows.Media.TextFormatting.TextLine.NewlineLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.NewlineLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di caratteri di nuova riga alla fine di una riga.</summary>
        <value>Valore <see cref="T:System.Int32" /> che rappresenta il numero di caratteri di nuova riga.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangAfter">
      <MemberSignature Language="C#" Value="public abstract double OverhangAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangAfter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.OverhangAfter" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OverhangAfter As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double OverhangAfter { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangAfter : double" Usage="System.Windows.Media.TextFormatting.TextLine.OverhangAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza alla quale i pixel neri si estendono oltre l'allineamento inferiore di una riga.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la distanza di fuoriuscita posteriore.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangLeading">
      <MemberSignature Language="C#" Value="public abstract double OverhangLeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangLeading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.OverhangLeading" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OverhangLeading As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double OverhangLeading { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangLeading : double" Usage="System.Windows.Media.TextFormatting.TextLine.OverhangLeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza alla quale i pixel neri si estendono prima del bordo dell'allineamento iniziale di sinistra della riga.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la distanza iniziale di fuoriuscita.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangTrailing">
      <MemberSignature Language="C#" Value="public abstract double OverhangTrailing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangTrailing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.OverhangTrailing" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OverhangTrailing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double OverhangTrailing { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangTrailing : double" Usage="System.Windows.Media.TextFormatting.TextLine.OverhangTrailing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza alla quale i pixel neri si estendono dopo il bordo dell'allineamento finale di destra della riga.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la distanza finale di fuoriuscita.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextLine.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della proprietà PixelsPerDip in base al quale deve essere eseguito il rendering del testo.</summary>
        <value>Valore corrente della proprietà <see cref="P:System.Windows.Media.TextFormatting.TextLine.PixelsPerDip" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public abstract double Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.Start" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Start As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double Start { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Start : double" Usage="System.Windows.Media.TextFormatting.TextLine.Start" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.Start</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza dall’inizio di un paragrafo al punto iniziale di una riga.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la distanza dall’inizio di un paragrafo al punto iniziale di una riga.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBaseline">
      <MemberSignature Language="C#" Value="public abstract double TextBaseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TextBaseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.TextBaseline" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TextBaseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double TextBaseline { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TextBaseline : double" Usage="System.Windows.Media.TextFormatting.TextLine.TextBaseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza dal margine superiore alla linea di base della riga di testo.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la distanza della linea di base del testo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextHeight">
      <MemberSignature Language="C#" Value="public abstract double TextHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TextHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.TextHeight" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TextHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double TextHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TextHeight : double" Usage="System.Windows.Media.TextFormatting.TextLine.TextHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'altezza del testo e di qualsiasi altro contenuto nella riga.</summary>
        <value>Valore <see cref="T:System.Double" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.TextFormatting.TextLine.TextHeight%2A> differiscano dal <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A> proprietà se il client specifica l'altezza della riga.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingWhitespaceLength">
      <MemberSignature Language="C#" Value="public abstract int TrailingWhitespaceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrailingWhitespaceLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TrailingWhitespaceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int TrailingWhitespaceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TrailingWhitespaceLength : int" Usage="System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il punti di codice degli spazi oltre l'ultimo carattere non vuoto in una riga.</summary>
        <value>Valore <see cref="T:System.Int32" /> che rappresenta il numero di punti di codice degli spazi oltre l'ultimo carattere non vuoto in una riga.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public abstract double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.Width" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Media.TextFormatting.TextLine.Width" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.Width</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la larghezza di una riga di testo, esclusi gli spazi finali.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la larghezza di una riga di testo, esclusi gli spazi finali.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthIncludingTrailingWhitespace">
      <MemberSignature Language="C#" Value="public abstract double WidthIncludingTrailingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WidthIncludingTrailingWhitespace As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double WidthIncludingTrailingWhitespace { double get(); };" />
      <MemberSignature Language="F#" Value="member this.WidthIncludingTrailingWhitespace : double" Usage="System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.TextFormatting.ITextMetrics.WidthIncludingTrailingWhitespace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la larghezza di una riga di testo, inclusi gli spazi finali.</summary>
        <value>Valore <see cref="T:System.Double" /> che rappresenta la larghezza di una riga di testo, inclusi gli spazi finali.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>