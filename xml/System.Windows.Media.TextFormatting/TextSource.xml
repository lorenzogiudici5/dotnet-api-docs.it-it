<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f35a5e418825521c1c131c35adad767257c544ff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36490583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce una classe astratta per le proprietà relative alla specifica dei dati dei caratteri e di formattazione da utilizzare dall'oggetto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti gli accessi al testo nel <xref:System.Windows.Media.TextFormatting.TextSource> oggetto avviene tramite il <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, cui contenuto è progettato per consentire al client di layout di testo virtualizzare il testo in qualsiasi modo desiderato.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> è il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] motore di testo che fornisce servizi per la formattazione del testo e righe di testo. <xref:System.Windows.Media.TextFormatting.TextFormatter> in grado di gestire diversi caratteri formati di testo e gli stili dei paragrafi e include il supporto per il layout del testo internazionale. A differenza di una tradizionale [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], il <xref:System.Windows.Media.TextFormatting.TextFormatter> interagisce con un client di layout di testo tramite un set di metodi di callback. È necessario che il client fornire ai metodi in un'implementazione del <xref:System.Windows.Media.TextFormatting.TextSource> classe. Nell'elenco seguente vengono descritti i tre membri che è necessario eseguire l'override:  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Recupera un' <xref:System.Windows.Media.TextFormatting.TextRun> iniziando in corrispondenza di un determinato <xref:System.Windows.Media.TextFormatting.TextSource> posizione.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Recupera l'intervallo di testo immediatamente prima specificato <xref:System.Windows.Media.TextFormatting.TextSource> posizione.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Recupera un valore che esegue il mapping di un <xref:System.Windows.Media.TextFormatting.TextSource> indice del carattere per un <xref:System.Windows.Media.TextEffect> indice del carattere.  
  
> [!NOTE]
>  Per un esempio di codice completo che illustra come implementare un oggetto derivato <xref:System.Windows.Media.TextFormatting.TextSource> classe, vedere [esempio di formattazione di testo avanzato](http://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.TextFormatting.TextSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">Valore <see cref="T:System.Int32" /> che specifica la posizione dell'indice dei caratteri in corrispondenza del quale si interrompe il recupero del testo.</param>
        <summary>Recupera l'intervallo di testo immediatamente prima della posizione <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> specificata.</summary>
        <returns>Valore <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> che rappresenta l'intervallo di testo immediatamente prima di <paramref name="textSourceCharacterIndexLimit" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> metodo restituisce un oggetto vuoto <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> se il testo estendersi immediatamente prima `textSourceCharacterIndexLimit` non contiene alcun testo, ad esempio oggetto inline o una sequenza nascosta.  
  
 Questo metodo restituisce un intervallo di testo di lunghezza zero se non sono presenti valori precedente `textSourceCharacterIndexLimit`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Valore <see cref="T:System.Int32" /> che specifica l'indice dei caratteri <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> del quale eseguire il mapping.</param>
        <summary>Recupera un valore che esegue il mapping di un indice dei caratteri <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> a un indice dei caratteri <see cref="T:System.Windows.Media.TextEffect" />.</summary>
        <returns>Valore <see cref="T:System.Int32" /> che rappresenta l’indice dei caratteri di <see cref="T:System.Windows.Media.TextEffect" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Specifica la posizione dell’indice di caratteri in <see cref="T:System.Windows.Media.TextFormatting.TextSource" />, in cui viene recuperato un oggetto <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</param>
        <summary>Recupera un <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> che inizia alla posizione di <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> specificata.</summary>
        <returns>Valore che rappresenta un <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> o un oggetto derivato da <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una sequenza di testo è una sequenza di caratteri che condividono un singolo set di proprietà. Qualsiasi modifica al formato, ad esempio di famiglia di caratteri, lo stile del carattere, colore di primo piano, barrato o qualsiasi altro effetto di formattazione, interrompe la sequenza di testo. Il <xref:System.Windows.Media.TextFormatting.TextRun> classe è la radice di una gerarchia dei tipi che rappresentano diversi tipi di contenuto di testo elaborati da <xref:System.Windows.Media.TextFormatting.TextFormatter>. Ogni classe derivata da <xref:System.Windows.Media.TextFormatting.TextRun> rappresenta un tipo di contenuto di testo distinto.  
  
|Classe|Descrizione|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Radice della gerarchia. Definisce un gruppo di caratteri che condividono lo stesso set di proprietà dei caratteri.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Definisce una raccolta di glifi da un carattere tipografico fisico distinto.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Definisce un tipo di contenuto di testo in cui misurazione, hit test e la creazione di tutto il contenuto viene eseguita come un'entità distinta. Un esempio di questo tipo di contenuto è un pulsante al centro della linea di testo.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Definisce un codice di carattere di interruzione di riga.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Definisce un codice di carattere di interruzione di paragrafo. Classe derivata da <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Definisce un marcatore di interruzione di segmento.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Definisce un intervallo di caratteri non visibili.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Definisce l'inizio di un ambito di modifica.|  
  
   
  
## Examples  
 Nell'esempio seguente, una sostituzione per il <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> metodo è implementato.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della proprietà PixelsPerDip in base al quale deve essere eseguito il rendering del testo.</summary>
        <value>Valore corrente della proprietà <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi classe che estende <xref:System.Windows.Media.TextFormatting.TextSource> deve aggiornare <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> ogni volta che viene modificato per un'applicazione per ogni monitoraggio DPI compatibile con DPI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>