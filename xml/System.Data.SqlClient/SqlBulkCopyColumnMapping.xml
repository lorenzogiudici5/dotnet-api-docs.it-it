<Type Name="SqlBulkCopyColumnMapping" FullName="System.Data.SqlClient.SqlBulkCopyColumnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9db19ab218360d8104e0ddbaed3b9c80a72f202a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680734" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlBulkCopyColumnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopyColumnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopyColumnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopyColumnMapping sealed" />
  <TypeSignature Language="F#" Value="type SqlBulkCopyColumnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce il mapping tra una colonna dell'origine dati dell'istanza <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> e una colonna della tabella di destinazione dell'istanza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mapping delle colonne definiscono il mapping tra origine dati e la tabella di destinazione.  
  
 Se non sono definiti i mapping, vale a dire, il <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> raccolta è vuota, ovvero le colonne vengono mappate in modo implicito in base alla posizione ordinale. Per questa soluzione funzioni, gli schemi di origine e di destinazione devono corrispondere. In caso contrario, un <xref:System.InvalidOperationException> verrà generata.  
  
 Se il <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> raccolta non è vuota, non tutte le colonne presenti nell'origine dati deve essere specificato. Le colonne non mappate nella raccolta vengono ignorate.  
  
 È possibile fare riferimento alle colonne di origine e di destinazione dal nome o numero ordinale. È inoltre possibile combinare base al nome e i riferimenti da-numero ordinale di colonna nella stessa raccolta di mapping.  
  
   
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine e ogni colonna di destinazione è nella stessa posizione ordinale di colonna di origine corrispondente, i nomi delle colonne non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Costruttore predefinito che inizializza un nuovo oggetto <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si utilizza questo costruttore, è necessario quindi definire l'origine per il mapping tramite il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn%2A> proprietà o il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal%2A> proprietà e definire la destinazione per il mapping tramite il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn%2A> proprietà o il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal%2A> proprietà.  
  
   
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (int sourceColumnOrdinal, int destinationOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 sourceColumnOrdinal, int32 destinationOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumnOrdinal As Integer, destinationOrdinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(int sourceColumnOrdinal, int destinationOrdinal);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : int * int -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumnOrdinal, destinationOrdinal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumnOrdinal" Type="System.Int32" />
        <Parameter Name="destinationOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumnOrdinal">Posizione ordinale della colonna di origine all'interno dell'origine dati.</param>
        <param name="destinationOrdinal">Posizione ordinale della colonna di destinazione all'interno della tabella di destinazione.</param>
        <summary>Crea un nuovo mapping di colonna, utilizzando gli ordinali di colonna per fare riferimento alle colonne di origine e destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk in base alle posizioni ordinali delle colonne.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (int sourceColumnOrdinal, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 sourceColumnOrdinal, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumnOrdinal As Integer, destinationColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(int sourceColumnOrdinal, System::String ^ destinationColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : int * string -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumnOrdinal, destinationColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumnOrdinal" Type="System.Int32" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumnOrdinal">Posizione ordinale della colonna di origine all'interno dell'origine dati.</param>
        <param name="destinationColumn">Nome della colonna di destinazione all'interno della tabella di destinazione.</param>
        <summary>Crea un nuovo mapping di colonna, utilizzando un ordinale di colonna per fare riferimento alla colonna di origine e un nome di colonna per la colonna di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingOrdinalName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinalName/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdinalName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinalName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (string sourceColumn, int destinationOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceColumn, int32 destinationOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumn As String, destinationOrdinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(System::String ^ sourceColumn, int destinationOrdinal);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : string * int -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumn, destinationOrdinal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">Nome della colonna di origine all'interno dell'origine dati.</param>
        <param name="destinationOrdinal">Posizione ordinale della colonna di destinazione all'interno della tabella di destinazione.</param>
        <summary>Crea un nuovo mapping di colonna, utilizzando un nome di colonna per fare riferimento alla colonna di origine e un ordinale di colonna per la colonna di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingNameOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingNameOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingNameOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingNameOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (string sourceColumn, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceColumn, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumn As String, destinationColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(System::String ^ sourceColumn, System::String ^ destinationColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : string * string -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumn, destinationColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">Nome della colonna di origine all'interno dell'origine dati.</param>
        <param name="destinationColumn">Nome della colonna di destinazione all'interno della tabella di destinazione.</param>
        <summary>Crea un nuovo mapping di colonna, utilizzando i nomi di colonna per fare riferimento alle colonne di origine e destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationColumn">
      <MemberSignature Language="C#" Value="public string DestinationColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DestinationColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationColumn : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nome della colonna da mappare nella tabella del database di destinazione.</summary>
        <value>Valore stringa della proprietà <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn%2A> e <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal%2A> proprietà si escludono a vicenda. L'ultimo valore impostato ha la precedenza.  
  
   
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationOrdinal">
      <MemberSignature Language="C#" Value="public int DestinationOrdinal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DestinationOrdinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationOrdinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DestinationOrdinal { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationOrdinal : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Valore ordinale della colonna di destinazione all'interno della tabella di destinazione.</summary>
        <value>Intero della proprietà <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" /> o -1 se la proprietà non è stata impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn%2A> e <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal%2A> proprietà si escludono a vicenda. L'ultimo valore impostato ha la precedenza.  
  
   
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nome della colonna da mappare nell'origine dati.</summary>
        <value>Valore stringa della proprietà <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn%2A> e <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal%2A> proprietà si escludono a vicenda. L'ultimo valore impostato ha la precedenza.  
  
   
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceOrdinal">
      <MemberSignature Language="C#" Value="public int SourceOrdinal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SourceOrdinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceOrdinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SourceOrdinal { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SourceOrdinal : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Posizione ordinale della colonna di origine all'interno dell'origine dati.</summary>
        <value>Intero della proprietà <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn%2A> e <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal%2A> proprietà si escludono a vicenda. L'ultimo valore impostato ha la precedenza.  
  
   
  
## Examples  
 Il seguente esempio la copia bulk dei dati da una tabella di origine nel **AdventureWorks** database di esempio per una tabella di destinazione nello stesso database. Anche se il numero di colonne nella destinazione corrisponda al numero di colonne nell'origine, i nomi delle colonne e le posizioni ordinali non corrispondono. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> gli oggetti vengono utilizzati per creare una mappa delle colonne per la copia bulk.  
  
> [!IMPORTANT]
>  Questo esempio non verrà eseguito a meno che non state create le tabelle di lavoro come descritto in [installazione di esempio della copia Bulk](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Questo codice viene fornito per illustrare la sintassi per usare **SqlBulkCopy** solo. Se le tabelle di origine e destinazione sono nella stessa istanza di SQL Server, è più semplice e rapido usare Transact-SQL `INSERT … SELECT` istruzione per copiare i dati.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>