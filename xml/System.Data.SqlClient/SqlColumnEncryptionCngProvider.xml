<Type Name="SqlColumnEncryptionCngProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionCngProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f063d9e5a4b8843155d5a9b942604c782a28e94e" />
    <Meta Name="ms.sourcegitcommit" Value="840fd2a3bbdce4224fcbae5a3cea9a7a89e685f5" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/24/2018" />
    <Meta Name="ms.locfileid" Value="49961454" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlColumnEncryptionCngProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlColumnEncryptionCngProvider extends System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlColumnEncryptionCngProvider&#xA;Inherits SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionCngProvider : System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionCngProvider = class&#xA;    inherit SqlColumnEncryptionKeyStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="46ca4-101">Implementazione del provider CMK Store per l'uso dell'API Criptography Next Generation (CNG) Microsoft con <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46ca4-101">The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46ca4-102">Abilita l'archiviazione delle chiavi di chiave master della colonna Always Encrypted in un archivio, ad esempio un modulo di protezione hardware (HSM), che supporta Microsoft Cryptography API: Next Generation (CNG).</span><span class="sxs-lookup"><span data-stu-id="46ca4-102">Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft Cryptography API: Next Generation (CNG).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="http://blogs.msdn.com/b/sqlsecurity/archive/tags/always+encrypted/">
      <span data-ttu-id="46ca4-103">Introduzione a Always Encrypted</span>
      <span class="sxs-lookup">
        <span data-stu-id="46ca4-103">Getting Started with Always Encrypted</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/mt147923.aspx">
      <span data-ttu-id="46ca4-104">Always Encrypted (sviluppo client)</span>
      <span class="sxs-lookup">
        <span data-stu-id="46ca4-104">Always Encrypted (client development)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlColumnEncryptionCngProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlColumnEncryptionCngProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46ca4-105">Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-105">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="46ca4-106">Percorso di chiave master.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-106">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="46ca4-107">Algoritmo di crittografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-107">The encryption algorithm.</span>
          </span>
        </param>
        <param name="encryptedColumnEncryptionKey">
          <span data-ttu-id="46ca4-108">Chiave di crittografia di colonna crittografata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-108">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46ca4-109">Decrittografa il valore crittografato usando una chiave asimmetrica specificata dal percorso della chiave e dall'algoritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-109">Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm.</span>
          </span>
          <span data-ttu-id="46ca4-110">Il percorso della chiave avrà il formato [NomeProvider]/IdentificatoreChiave e la chiave deve essere una chiave asimmetrica archiviata nel provider dell'archivio chiavi CNG specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-110">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span>
          </span>
          <span data-ttu-id="46ca4-111">L'algoritmo valido usato per crittografare/decrittografare la chiave di crittografia di colonna è 'RSA_OAEP'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-111">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46ca4-112">Chiave di crittografia di colonna decrittografata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-112">The decrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="46ca4-113">Percorso di chiave master.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-113">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="46ca4-114">Algoritmo di crittografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-114">The encryption algorithm.</span>
          </span>
        </param>
        <param name="columnEncryptionKey">
          <span data-ttu-id="46ca4-115">Chiave di crittografia di colonna crittografata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-115">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46ca4-116">Crittografa la chiave di crittografia della colonna in testo normale indicata usando una chiave asimmetrica definita dal percorso della chiave e dall'algoritmo specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-116">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span>
          </span>
          <span data-ttu-id="46ca4-117">Il percorso della chiave avrà il formato [NomeProvider]/IdentificatoreChiave e la chiave deve essere una chiave asimmetrica archiviata nel provider dell'archivio chiavi CNG specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-117">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span>
          </span>
          <span data-ttu-id="46ca4-118">L'algoritmo valido usato per crittografare/decrittografare la chiave di crittografia di colonna è 'RSA_OAEP'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-118">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46ca4-119">Chiave di crittografia di colonna crittografata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-119">The encrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public const string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Const ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46ca4-120">Stringa costante per il nome del provider 'MSSQL_CNG_STORE'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-120">A constant string for the provider name 'MSSQL_CNG_STORE'.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="46ca4-121">Percorso della chiave master di colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-121">The column master key path.</span>
          </span>
          <span data-ttu-id="46ca4-122">Il formato del percorso è specifico per un provider dell'archivio chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-122">The path format is specific to a key store provider.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="46ca4-123">
            <see langword="true" /> per indicare che la chiave master di colonna supporta i calcoli enclave; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-123">
              <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46ca4-124">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-124">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46ca4-125">Firma dei metadati della chiave master di colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-125">The signature of the column master key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46ca4-126">Il <xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> metodo deve essere implementato dai provider dell'archivio chiavi corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="46ca4-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> method must be implemented by the corresponding key store providers.</span></span> <span data-ttu-id="46ca4-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> deve usare una chiave asimmetrica identificata da un percorso chiave e firmare i metadati costituito `masterKeyPath`, `allowEnclaveComputations`e providerName.</span><span class="sxs-lookup"><span data-stu-id="46ca4-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of `masterKeyPath`, `allowEnclaveComputations`, and providerName.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="46ca4-128">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-128">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="46ca4-129">Percorso completo di una chiave asimmetrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-129">The complete path of an asymmetric key.</span>
          </span>
          <span data-ttu-id="46ca4-130">Il formato del percorso è specifico per un provider dell'archivio chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-130">The path format is specific to a key store provider.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="46ca4-131">Un valore booleano che indica se questa chiave può essere inviata all'enclave attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-131">A Boolean that indicates if this key can be sent to the trusted enclave.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="46ca4-132">Firma dei metadati della chiave master.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-132">The master key metadata signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46ca4-133">Questa funzione deve essere implementata dai provider dell'archivio chiavi corrispondenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-133">This function must be implemented by the corresponding Key Store providers.</span>
          </span>
          <span data-ttu-id="46ca4-134">Questa funzione deve usare una chiave asimmetrica identificata da un percorso chiave e verificare che i metadati della chiave master siano costituiti da (masterKeyPath, allowEnclaveComputations, providerName).</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-134">This function should use an asymmetric key identified by a key path and verify the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46ca4-135">Un booleano che indica se i metadati della chiave master possono essere verificati in base alla firma specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ca4-135">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>