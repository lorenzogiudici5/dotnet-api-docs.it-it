<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed56cc88bc32094f4264b8e07b94abd5de84e4d0" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="it-IT" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227023" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una connessione aperta a un database di SQL Server. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Data.SqlClient.SqlConnection> oggetto rappresenta una sessione univoca a un'origine dati di SQL Server. Con un sistema di database client/server, è equivalente a una connessione di rete al server. <xref:System.Data.SqlClient.SqlConnection> viene usata in combinazione con <xref:System.Data.SqlClient.SqlDataAdapter> e <xref:System.Data.SqlClient.SqlCommand> per migliorare le prestazioni durante la connessione a un database Microsoft SQL Server. Per tutti i prodotti di SQL Server di terze parti e altre origini dati OLE DB supportati, utilizzare <xref:System.Data.OleDb.OleDbConnection>.  
  
 Quando si crea un'istanza di <xref:System.Data.SqlClient.SqlConnection>, tutte le proprietà vengono impostate sui valori iniziali. Per un elenco di questi valori, vedere il <xref:System.Data.SqlClient.SqlConnection> costruttore.  
  
 Vedere <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> per un elenco delle parole chiave in una stringa di connessione.  
  
 Se il <xref:System.Data.SqlClient.SqlConnection> esula dall'ambito preposto, non verrà chiusa. Pertanto, è necessario chiudere in modo esplicito la connessione, chiamando `Close` o `Dispose`. `Close` e `Dispose` sono funzionalmente equivalenti. Se il pool di connessioni valore `Pooling` è impostata su `true` o `yes`, la connessione sottostante viene restituito al pool di connessioni. D'altra parte, se `Pooling` è impostata su `false` o `no`, la connessione al server sottostante è chiuso effettivamente.  
  
> [!NOTE]
>  Nel server non vengono generati eventi di accesso e di disconnessione quando una connessione viene recuperata dal o restituita al pool di connessioni, in quanto la connessione non viene effettivamente chiusa quando viene restituita al pool di connessioni. Per altre informazioni, vedere [Pool di connessioni SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Per garantire che le connessioni sono sempre chiusi, aprire la connessione all'interno di un `using` blocca, come illustrato nel frammento di codice seguente. In modo da garantire che la connessione viene chiusa automaticamente quando il codice esce dal blocco.  
  
```vb  
Using connection As New SqlConnection(connectionString)  
    connection.Open()  
    ' Do work here; connection closed on following line.  
End Using  
  
```  
  
```csharp  
using (SqlConnection connection = new SqlConnection(connectionString))  
    {  
        connection.Open();  
        // Do work here; connection closed on following line.  
    }  
```  
  
> [!NOTE]
>  Per distribuire applicazioni a prestazioni elevate, è necessario usare pool di connessioni. Quando si usa il Provider di dati .NET Framework per SQL Server, non è necessario abilitare il pool di connessioni perché il provider gestisce questo automaticamente, anche se è possibile modificare alcune impostazioni. Per altre informazioni, vedere [Pool di connessioni SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Se un <xref:System.Data.SqlClient.SqlException> viene generata dal metodo che esegue un <xref:System.Data.SqlClient.SqlCommand>, il <xref:System.Data.SqlClient.SqlConnection> rimane aperto quando il livello di gravità è minore o uguale a 19. Quando il livello di gravità è 20 o versione successiva, il server chiude normalmente il <xref:System.Data.SqlClient.SqlConnection>. L'utente può tuttavia riaprire la connessione e continuare.  
  
 Un'applicazione che crea un'istanza di <xref:System.Data.SqlClient.SqlConnection> oggetto può richiedere tutti i chiamanti diretti e indiretti disponga delle autorizzazioni sufficienti per il codice impostando le richieste di sicurezza dichiarativo o imperativo. <xref:System.Data.SqlClient.SqlConnection> effettua richieste di sicurezza utilizzando il <xref:System.Data.SqlClient.SqlClientPermission> oggetto. Gli utenti possono verificare che il codice disponga di autorizzazioni sufficienti tramite la <xref:System.Data.SqlClient.SqlClientPermissionAttribute> oggetto. Gli utenti e gli amministratori possono anche usare il [Caspol.exe (strumento di criteri di sicurezza dall'accesso di codice)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) per modificare i criteri di sicurezza a livello di computer, utente e azienda. Per altre informazioni, vedere [Sicurezza in .NET](~/docs/standard/security/index.md). Per un esempio che illustra come usare le richieste di sicurezza, vedere [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Per altre informazioni sulla gestione dei messaggi di avviso e informativi dal server, vedere [eventi di connessione](~/docs/framework/data/adonet/connection-events.md). Per altre informazioni sugli errori di motore di SQL Server e i messaggi di errore, vedere [eventi del motore di Database ed errori](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
> [!CAUTION]
>  È possibile forzare TCP anziché in memoria condivisa. È possibile farlo aggiungendo il prefisso tcp: il nome del server nella connessione stringa oppure è possibile utilizzare localhost.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlCommand> e un <xref:System.Data.SqlClient.SqlConnection>. Il <xref:System.Data.SqlClient.SqlConnection> viene aperto e impostare come i <xref:System.Data.SqlClient.SqlCommand.Connection%2A> per il <xref:System.Data.SqlClient.SqlCommand>. Nell'esempio viene quindi chiamato <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. A tale scopo, il <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> viene passata una stringa di connessione e una stringa di query che è un [!INCLUDE[tsql](~/includes/tsql-md.md)] istruzione INSERT. La connessione viene chiusa automaticamente quando il codice viene chiuso il tramite blocco.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando una nuova istanza della <xref:System.Data.SqlClient.SqlConnection> viene creata, la lettura/scrittura proprietà vengono impostate sui valori iniziali seguenti, a meno che siano impostate in modo specifico mediante le parole chiave associate nel <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|una stringa vuota ("")|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|una stringa vuota ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|una stringa vuota ("")|  
  
 È possibile modificare il valore per queste proprietà solo se si utilizza il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà. Il <xref:System.Data.SqlClient.SqlConnectionStringBuilder> classe fornisce funzionalità per la creazione e la gestione del contenuto delle stringhe di connessione.  
  
   
  
## Examples  
 Nell'esempio seguente crea e apre un <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connessione usata per aprire il database di SQL Server.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlConnection" /> mediante una stringa che contiene la stringa di connessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando una nuova istanza della <xref:System.Data.SqlClient.SqlConnection> viene creata, la lettura/scrittura proprietà vengono impostate sui valori iniziali seguenti, a meno che siano impostate in modo specifico mediante le parole chiave associate nel <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|una stringa vuota ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|una stringa vuota ("")|  
  
 È possibile modificare il valore per queste proprietà solo se si utilizza il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà. Il <xref:System.Data.SqlClient.SqlConnection> classe fornisce funzionalità per la creazione e la gestione del contenuto delle stringhe di connessione.  
  
   
  
## Examples  
 Nell'esempio seguente crea e apre un <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Tramite il Provider di dati .NET Framework per SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione che non usa le parole chiave <see langword="Integrated Security = true" />, <see langword="UserId" /> o <see langword="Password" /> della stringa di connessione o che non usa <see langword="ContextConnection = true" />.</param>
        <param name="credential">Oggetto <see cref="T:System.Data.SqlClient.SqlCredential" />. Se <paramref name="credential" /> è Null, dal punto di vista funzionale <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> è equivalente a <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />.</param>
        <param name="cred">Un oggetto <see cref="T:System.Data.SqlClient.SqlCredential" />. Se <paramref name="credential" /> è Null, dal punto di vista funzionale <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> è equivalente a <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlConnection" /> data una stringa di connessione, che non usa <see langword="Integrated Security = true" /> e un oggetto <see cref="T:System.Data.SqlClient.SqlCredential" /> che contiene l'ID utente e la password.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il token di accesso per la connessione.</summary>
        <value>Token di accesso per la connessione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avvia una transazione di database.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia una transazione di database.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando viene eseguito il mapping per l'implementazione del Server SQL dell'istruzione BEGIN TRANSACTION.  
  
 In modo esplicito è necessario eseguire il commit o rollback della transazione utilizzando il <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> o <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> (metodo). Per assicurarsi che il Provider di dati .NET Framework per il modello di gestione delle transazioni di SQL Server venga eseguito correttamente, evitare di usare altri modelli di gestione delle transazioni, come quella fornita da SQL Server.  
  
> [!NOTE]
>  Se non si specifica un livello di isolamento, viene utilizzato il livello di isolamento predefinito. Per specificare un livello di isolamento con la <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> metodo, usare l'overload che accetta il `iso` parametro (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>). Il livello di isolamento impostato per una transazione viene mantenuto dopo il completamento della transazione e fino a quando la connessione viene chiusa o eliminata. Impostazione del livello di isolamento **Snapshot** in un database in cui non è abilitato il livello di isolamento dello snapshot non viene generata un'eccezione. La transazione viene completata utilizzando il livello di isolamento predefinito.  
  
> [!CAUTION]
>  Se viene avviata una transazione e si verifica un errore superiore o livello 16 nel server, le verrà non rollback della transazione finché il <xref:System.Data.SqlClient.SqlDataReader.Read%2A> metodo viene richiamato. Viene generata alcuna eccezione **ExecuteReader**.  
  
> [!CAUTION]
>  Quando la query restituisce una grande quantità di dati e le chiamate `BeginTransaction`, un <xref:System.Data.SqlClient.SqlException> viene generata perché SQL Server non supporta le transazioni parallele quando si utilizza MARS. Per evitare questo problema, associare sempre una transazione con il comando, la connessione o entrambi prima di qualsiasi lettore siano aperte.  
  
 Per altre informazioni sulle transazioni di SQL Server, vedere [transazioni (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e un <xref:System.Data.SqlClient.SqlTransaction>. Viene inoltre illustrato come usare il <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, una <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Le transazioni parallele non sono consentite quando si usa MARS (Multiple Active Result Sets).</exception>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transazioni e concorrenza</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Livello di isolamento in cui eseguire la transazione.</param>
        <summary>Avvia una transazione di database con il livello di isolamento specificato.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando viene eseguito il mapping per l'implementazione del Server SQL dell'istruzione BEGIN TRANSACTION.  
  
 In modo esplicito è necessario eseguire il commit o rollback della transazione utilizzando il <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> o <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> (metodo). Per assicurarsi che il Provider di dati .NET Framework per il modello di gestione delle transazioni di SQL Server venga eseguito correttamente, evitare di usare altri modelli di gestione delle transazioni, come quella fornita da SQL Server.  
  
> [!NOTE]
> Dopo aver eseguito il commit o il rollback di una transazione, viene mantenuto il livello di isolamento della transazione per tutti i comandi successivi che sono in modalità autocommit (impostazione predefinita di SQL Server). Questo può produrre risultati imprevisti, ad esempio un livello di isolamento di REPEATABLE READ persistenza e il blocco di altri utenti all'esterno di una riga. Per reimpostare il livello di isolamento per il valore predefinito (READ-COMMITTED), eseguire la [!INCLUDE[tsql](~/includes/tsql-md.md)] istruzione SET TRANSACTION ISOLATION LEVEL READ COMMITTED o chiamata <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> seguita immediatamente da <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Per altre informazioni sui livelli di isolamento di SQL Server, vedere [livelli di isolamento delle transazioni](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Per altre informazioni sulle transazioni di SQL Server, vedere [transazioni (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Quando la query restituisce una grande quantità di dati e le chiamate `BeginTransaction`, un <xref:System.Data.SqlClient.SqlException> viene generata perché SQL Server non supporta le transazioni parallele quando si utilizza MARS. Per evitare questo problema, associare sempre una transazione con il comando, la connessione o entrambi prima di qualsiasi lettore siano aperte.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e un <xref:System.Data.SqlClient.SqlTransaction>. Viene inoltre illustrato come usare il <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, una <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Le transazioni parallele non sono consentite quando si usa MARS (Multiple Active Result Sets).</exception>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transazioni (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Tramite il Provider di dati .NET Framework per SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">Nome della transazione.</param>
        <summary>Inizia una transazione di database con il nome della transazione specificato.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando viene eseguito il mapping per l'implementazione del Server SQL dell'istruzione BEGIN TRANSACTION.  
  
 La lunghezza del `transactionName` parametro non deve superare i 32 caratteri; in caso contrario verrà generata un'eccezione.  
  
 Il valore nel `transactionName` parametro può essere usato nelle chiamate successive a <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> e nel `savePoint` parametro del <xref:System.Data.SqlClient.SqlTransaction.Save%2A> (metodo).  
  
 In modo esplicito è necessario eseguire il commit o rollback della transazione utilizzando il <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> o <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> (metodo). Assicurarsi che il [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Provider di dati di modello di gestione delle transazioni di SQL Server viene eseguito correttamente, evitare di usare altri modelli di gestione delle transazioni, ad esempio quella fornita da SQL Server.  
  
 Per altre informazioni sulle transazioni di SQL Server, vedere [transazioni (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Quando la query restituisce una grande quantità di dati e le chiamate `BeginTransaction`, un <xref:System.Data.SqlClient.SqlException> viene generata perché SQL Server non supporta le transazioni parallele quando si utilizza MARS. Per evitare questo problema, associare sempre una transazione con il comando, la connessione o entrambi prima di qualsiasi lettore siano aperte.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e un <xref:System.Data.SqlClient.SqlTransaction>. Viene inoltre illustrato come usare il <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, una <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Le transazioni parallele non sono consentite quando si usa MARS (Multiple Active Result Sets).</exception>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transazioni (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Tramite il Provider di dati .NET Framework per SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">Livello di isolamento in cui eseguire la transazione.</param>
        <param name="transactionName">Nome della transazione.</param>
        <summary>Avvia una transazione di database con il nome della transazione e il livello di isolamento specificato.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando viene eseguito il mapping per l'implementazione del Server SQL dell'istruzione BEGIN TRANSACTION.  
  
 Il valore nel `transactionName` parametro può essere usato nelle chiamate successive a <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> e nel `savePoint` parametro del <xref:System.Data.SqlClient.SqlTransaction.Save%2A> (metodo).  
  
 In modo esplicito è necessario eseguire il commit o rollback della transazione utilizzando il <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> o <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> (metodo). Per assicurarsi che il modello di gestione delle transazioni di SQL Server venga eseguito correttamente, evitare di usare altri modelli di gestione delle transazioni, come quella fornita da SQL Server.  
  
> [!NOTE]
>  Dopo aver eseguito il commit o il rollback di una transazione, viene mantenuto il livello di isolamento della transazione per tutti i comandi successivi che sono in modalità autocommit (impostazione predefinita di SQL Server). Questo può produrre risultati imprevisti, ad esempio un livello di isolamento di REPEATABLE READ persistenza e il blocco di altri utenti all'esterno di una riga. Per reimpostare il livello di isolamento per il valore predefinito (READ-COMMITTED), eseguire la [!INCLUDE[tsql](~/includes/tsql-md.md)] istruzione SET TRANSACTION ISOLATION LEVEL READ COMMITTED o chiamata <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> seguita immediatamente da <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Per altre informazioni sui livelli di isolamento di SQL Server, vedere [livelli di isolamento delle transazioni](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Per altre informazioni sulle transazioni di SQL Server, vedere [transazioni (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Quando la query restituisce una grande quantità di dati e le chiamate `BeginTransaction`, un <xref:System.Data.SqlClient.SqlException> viene generata perché SQL Server non supporta le transazioni parallele quando si utilizza MARS. Per evitare questo problema, associare sempre una transazione con il comando, la connessione o entrambi prima di qualsiasi lettore siano aperte.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e un <xref:System.Data.SqlClient.SqlTransaction>. Viene inoltre illustrato come usare il <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, una <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Le transazioni parallele non sono consentite quando si usa MARS (Multiple Active Result Sets).</exception>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transazioni (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Tramite il Provider di dati .NET Framework per SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Nome del database da usare al posto di quello corrente.</param>
        <summary>Modifica il database corrente per un oggetto <see cref="T:System.Data.SqlClient.SqlConnection" /> aperto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore specificato nel `database` parametro deve essere un nome di database valido. Il `database` parametro non può contenere un valore null, una stringa vuota o una stringa contenente solo caratteri vuoti.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.SqlClient.SqlConnection> e sono riportate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il nome del database non è valido.</exception>
        <exception cref="T:System.InvalidOperationException">La connessione non è aperta.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Non è possibile modificare il database.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Modifica la password di SQL Server.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione contenente informazioni sufficienti per connettersi al server desiderato. La stringa di connessione deve contenere l'ID utente e la password corrente.</param>
        <param name="newPassword">Nuova password da impostare. Questa password deve essere conforme ai relativi criteri di sicurezza impostati sul server, inclusa la lunghezza minima, l'obbligo di usare determinati caratteri e così via.</param>
        <summary>Sostituisce la password SQL Server dell'utente indicata nella stringa di connessione con la nuova password specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si usa SQL Server in Windows Server, gli sviluppatori possono sfruttare i vantaggi delle funzionalità che consente all'applicazione client di fornire corrente e una nuova password per cambiare la password esistente. Le applicazioni possono implementare funzionalità, ad esempio chiedere conferma all'utente per una nuova password durante l'accesso iniziale se quello precedente è scaduto e questa operazione può essere completata senza l'intervento dell'amministratore.  
  
 Il <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> metodo modifica la password di SQL Server per l'utente indicato nell'oggetto fornito `connectionString` parametro per il valore specificato nel `newPassword` parametro. Se la stringa di connessione include l'opzione per la sicurezza integrata (vale a dire, "Integrated Security = True" o equivalente), viene generata un'eccezione.  
  
 Per determinare se la password è scaduta, chiama il <xref:System.Data.SqlClient.SqlConnection.Open%2A> metodo che genera un <xref:System.Data.SqlClient.SqlException>. Per indicare che è necessario reimpostare la password che è contenuta all'interno della stringa di connessione, il <xref:System.Data.SqlClient.SqlException.Number%2A> proprietà per l'eccezione contiene il valore di stato 18487 o 18488. Il primo valore (18487) indica che la password è scaduta mentre la seconda (18488) indica che è necessario reimpostare la password prima di accedere.  
  
 Questo metodo apre una connessione al server, richiede la modifica della password e la connessione viene chiusa non appena è stata completata. Questa connessione non viene recuperata dal, né restituita, il pool di connessioni SQL Server.  
  
   
  
## Examples  
 Di seguito è riportato un semplice esempio di modifica di una password:  
  
```  
class Program {  
   static void Main(string[] args) {  
      System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password");  
   }  
}  
  
```  
  
```  
Module Module1  
    Sub Main()  
System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password")  
    End Sub  
End Module  
  
```  
  
 L'applicazione console seguente illustra i problemi relativi ad modifica password dell'utente perché la password corrente è scaduta.  
  
 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La stringa di connessione include l'opzione per usare la sicurezza integrata.  
  
Oppure 
<paramref name="newPassword" /> supera i 128 caratteri.</exception>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="connectionString" /> o <paramref name="newPassword" /> è Null.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Stringhe di connessione (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Tramite il Provider di dati .NET Framework per SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione contenente informazioni sufficienti per connettersi a un server. La stringa di connessione non deve usare le parole chiave per stringhe di connessione seguenti: <see langword="Integrated Security = true" />, <see langword="UserId" />, <see langword="Password" /> o <see langword="ContextConnection = true" />.</param>
        <param name="credential">Un oggetto <see cref="T:System.Data.SqlClient.SqlCredential" />.</param>
        <param name="newPassword">To be added.</param>
        <param name="newSecurePassword">To be added.</param>
        <summary>Modifica la password SQL Server dell'utente indicata nell'oggetto <see cref="T:System.Data.SqlClient.SqlCredential" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">1.  La stringa di connessione contiene qualsiasi combinazione di <see langword="UserId" />, <see langword="Password" /> o <see langword="Integrated Security=true" />.  
  
2.  La stringa di connessione contiene <see langword="Context Connection=true" />.  
  
3.  <paramref name="newSecurePassword" /> è maggiore di 128 caratteri.  
  
4.  <paramref name="newSecurePassword" /> non è di sola lettura.  
  
5.  Il parametro <paramref name="newSecurePassword" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">Uno dei parametri (<paramref name="connectionString" />, <paramref name="credential" /> o <paramref name="newSecurePassword" />) è null.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Svuota il pool di connessioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A> Reimposta o Svuota il pool di connessioni. Se sono presenti connessioni in uso al momento della chiamata, queste vengono contrassegnate in modo appropriato e verranno eliminate quando (invece di essere restituite al pool) <xref:System.Data.SqlClient.SqlConnection.Close%2A> viene chiamato su di essi.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Pool di connessioni SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Oggetto <see cref="T:System.Data.SqlClient.SqlConnection" /> da cancellare dal pool.</param>
        <summary>Svuota il pool di connessioni associato alla connessione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearPool%2A> Cancella il pool di connessioni è associato il `connection`. Se altre connessioni associate `connection` sono in uso al momento della chiamata, queste vengono contrassegnate in modo appropriato e vengono eliminate quando (invece di essere restituite al pool) <xref:System.Data.SqlClient.SqlConnection.Close%2A> viene chiamato su di essi.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Pool di connessioni SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ID connessione del tentativo di connessione più recente, indipendentemente dall'esito del tentativo positivo o negativo.</summary>
        <value>ID connessione del tentativo di connessione più recente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A> funziona indipendentemente dalla versione del server si connette a, ma i log di eventi estesi e voce sugli errori di buffer circolare di connettività non saranno presenti in [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] e versioni precedenti.  
  
 È possibile individuare l'ID di connessione nel log degli eventi estesi per vedere se l'errore sia nel server se l'evento esteso per la registrazione di ID di connessione è abilitata. È anche possibile individuare l'ID di connessione nel buffer circolare di connessione ([risoluzione dei problemi di connettività in SQL Server 2008 con il Buffer circolare della connettività](https://go.microsoft.com/fwlink/?LinkId=207752)) per determinati errori di connessione. Se l'ID connessione non è presente nel buffer circolare di connessione, si può presupporre un errore di rete.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude la connessione al database. È il metodo preferito di chiusura di una connessione aperta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlConnection.Close%2A> metodo esegue il rollback di eventuali transazioni in sospeso. Quindi rilascia la connessione al pool di connessioni, o chiude la connessione se il pool di connessioni è disabilitato.  
  
> [!NOTE]
>  All'uso di transazioni in sospeso [!INCLUDE[tsql](~/includes/tsql-md.md)] o <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> automaticamente il rollback quando la connessione viene reimpostata, se il pool di connessioni è abilitato. Se il pool di connessioni è disattivata, il rollback della transazione dopo `SqlConnection.Close` viene chiamato. Le transazioni avviate tramite <xref:System.Transactions> sono controllate tramite il `System.Transactions` infrastrutture e non sono influenzate da `SqlConnection.Close`.  
  
 Un'applicazione può chiamare <xref:System.Data.SqlClient.SqlConnection.Close%2A> più di una volta. Viene generata alcuna eccezione.  
  
 Se il <xref:System.Data.SqlClient.SqlConnection> esula dall'ambito preposto, non verrà chiusa. Pertanto, è necessario chiudere in modo esplicito la connessione, chiamando `Close` o `Dispose`. `Close` e `Dispose` sono funzionalmente equivalenti. Se il pool di connessioni valore `Pooling` è impostata su `true` o `yes`, la connessione sottostante viene restituito al pool di connessioni. D'altra parte, se `Pooling` è impostata su `false` o `no`, la connessione al server sottostante è chiuso.  
  
> [!NOTE]
>  Nel server non vengono generati eventi di accesso e di disconnessione quando una connessione viene recuperata dal o restituita al pool di connessioni, in quanto la connessione non viene effettivamente chiusa quando viene restituita al pool di connessioni. Per altre informazioni, vedere [Pool di connessioni SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
> [!CAUTION]
>  Non chiamare `Close` oppure `Dispose` in una connessione, un oggetto DataReader o qualsiasi altro oggetto gestito nel `Finalize` metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se nella classe non sono presenti risorse non gestite, non includere un metodo `Finalize` nella relativa definizione della classe. Per altre informazioni, vedere [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.SqlClient.SqlConnection>, lo apre, vengono visualizzate alcune delle relative proprietà. La connessione viene chiusa automaticamente alla fine del `using` blocco.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Errore a livello di connessione che si è verificato durante l'apertura della stessa.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Pool di connessioni SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la durata delle voci delle chiavi di crittografia nella cache delle chiavi di crittografia di colonna per la funzionalità <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>. Il valore predefinito è 2 ore. 0 indica che non avviene nessuna memorizzazione nella cache.</summary>
        <value>Intervallo di tempo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la memorizzazione nella cache dei metadati di query è abilitata (true) o meno (false) per le query con parametri eseguite in database con l'opzione <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> abilitata. Il valore predefinito è true.</summary>
        <value>Restituisce true se la memorizzazione nella cache dei metadati di query è abilitata; in caso contrario, false. Il valore predefinito è true.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per le query con parametri, SqlClient effettua un round trip a SQL Server per i metadati del parametro, per visualizzare il parametro che è necessario per crittografare e in che modo (quali chiavi e algoritmi devono essere usati). Se l'applicazione chiama la stessa query più volte, ogni ora, che comporta una riduzione delle prestazioni dell'applicazione viene eseguito un round trip aggiuntivo per il server.  
  
 Con **ColumnEncryptionQueryMetadataCacheEnabled** impostato su true, se la stessa query viene chiamata più volte, il round trip al server verrà effettuato una sola volta. La cache ha un parametro di dimensione massima non configurabili che è impostato su 2000 query.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di impostare un elenco di percorsi chiavi attendibili per un server di database. Se durante l'elaborazione di una query dell'applicazione il driver riceve un percorso chiave non presente nell'elenco, la query non riesce. Questa proprietà fornisce un'ulteriore protezione contro gli attacchi alla sicurezza che comportano la trasmissione di percorsi chiavi falsi da un'istanza di SQL Server compromessa causando quindi la fuga di credenziali dell'archivio chiavi.</summary>
        <value>Elenco di percorsi chiavi master attendibili per la crittografia di colonna.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa usata per aprire un database di SQL Server.</summary>
        <value>Stringa di connessione che contiene il nome del database di origine e altri parametri necessari a stabilire la connessione iniziale. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> è simile a una stringa di connessione OLE DB, ma non identici. A differenza di OLE DB o ADO, la stringa di connessione restituito è lo stesso come il set di utenti <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>, le informazioni di sicurezza se il valore di Persist Security Info è impostato su `false` (impostazione predefinita). Il Provider di dati .NET Framework per SQL Server non salvare in modo permanente o restituisce la password in una stringa di connessione a meno che non si imposta Persist Security Info su `true`.  

 È possibile usare il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà per la connessione a un database. Nell'esempio seguente viene illustrata una stringa di connessione tipica.  
  
```  
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"  
```  
  
 Usare il nuovo <xref:System.Data.SqlClient.SqlConnectionStringBuilder> per costruire stringhe di connessione valide in fase di esecuzione. Per altre informazioni, vedere [Compilatori di stringhe di connessione](~/docs/framework/data/adonet/connection-string-builders.md).  
  
 Il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà può essere impostata solo quando la connessione viene chiusa. Molti dei valori di stringa di connessione contengono le proprietà corrispondenti di sola lettura. Quando la stringa di connessione è impostata, vengono aggiornate queste proprietà, tranne quando viene rilevato un errore. In questo caso, nessuna delle proprietà vengono aggiornata. <xref:System.Data.SqlClient.SqlConnection> le proprietà restituiscono solo le impostazioni contenute nel <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
 Per connettersi a un computer locale, specificare "(local)" per il server. Se non viene specificato un nome di server, verrà tentata una connessione all'istanza predefinita nel computer locale.  
  
 La reimpostazione di <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> in una connessione chiusa Reimposta tutti i valori di stringa di connessione (e le proprietà correlate) inclusa la password. Ad esempio, se si imposta una stringa di connessione che include "Database = AdventureWorks" e reimpostare la stringa di connessione per "origine dati = myserver; Integrated Security = true", il <xref:System.Data.SqlClient.SqlConnection.Database%2A> proprietà non è impostata su "AdventureWorks".  
  
 La stringa di connessione viene analizzata immediatamente dopo l'impostazione. Se vengono rilevati errori nella sintassi durante l'analisi, un'eccezione di runtime, ad esempio <xref:System.ArgumentException>, viene generato. Altri errori si trovano solo quando viene effettuato un tentativo di aprire la connessione.  
  
 Il formato di base di una stringa di connessione include una serie di coppie parola chiave/valore separate da punti e virgola. Il segno di uguale (=) connette ogni parola chiave al relativo valore. Per includere i valori che contengono un punto e virgola, virgoletta singola o virgolette doppie, il valore deve essere racchiuso tra virgolette doppie. Se il valore contiene un punto e virgola sia un carattere di virgolette doppie, il valore può essere racchiuso tra virgolette singole. La virgoletta singola è utile anche se il valore inizia con un carattere di virgolette doppie. Viceversa, le virgolette doppie possono essere utilizzate se il valore inizia con una virgoletta singola. Se il valore contiene caratteri di virgoletta singola e virgolette doppie, il carattere virgoletta usato per delimitare il valore deve essere raddoppiato, ogni volta che si verifica all'interno del valore.  
  
 Per includere spazi iniziali o finali nel valore della stringa, il valore deve essere racchiuso tra virgolette singole o virgolette doppie. Vengono ignorati tutti spazi iniziali o finali integer, Boolean o valori enumerati, anche se racchiusi tra virgolette. Tuttavia, vengono mantenuti gli spazi all'interno di una parola chiave della stringa letterale o un valore. Virgolette singole o doppie possono essere usate all'interno di una stringa di connessione senza delimitatori (ad esempio, l'origine dati = My ' Server o un'origine dati = my Server"), a meno che un carattere virgoletta è il primo o ultimo carattere nel valore.  
  
 Le parole chiave non sono tra maiuscole e minuscole.  
  
 La tabella seguente elenca i nomi validi per i valori di parola chiave all'interno di <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
|Parola chiave|Impostazione predefinita|Descrizione|  
|-------------|-------------|-----------------|  
|Addr|N/D|Sinonimo di **Zdroj dat**.|  
|Indirizzo|N/D|Sinonimo di **Zdroj dat**.|  
|App|N/D|Sinonimo di **nome dell'applicazione**.|  
|Nome applicazione|N/D|Il nome dell'applicazione, o ".NET SQLClient Data Provider" Se viene fornito alcun nome di applicazione.<br /><br /> Nome di un'applicazione può contenere 128 caratteri o meno.|  
|`ApplicationIntent`|`ReadWrite`|Dichiara il tipo di carico di lavoro dell'applicazione quando ci si connette a un server. I valori possibili sono `ReadOnly` e `ReadWrite`. Ad esempio:<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> Per altre informazioni sul supporto SqlClient per gruppi di disponibilità Always On, vedere [Supporto SqlClient per disponibilità elevata, ripristino di emergenza](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Elaborazione asincrona<br /><br /> oppure<br /><br /> Async|'false'|Quando `true`, abilita il supporto di operazione asincrona. I valori riconosciuti sono `true`, `false`, `yes` e `no`.<br /><br /> La proprietà che inizia con [!INCLUDE[net_v45](~/includes/net-v45-md.md)] viene ignorata. Per altre informazioni sul supporto SqlClient per la programmazione asincrona, vedere [programmazione asincrona](~/docs/framework/data/adonet/asynchronous-programming.md).|  
|AttachDBFilename<br /><br /> -oppure-<br /><br /> Proprietà estese<br /><br /> -oppure-<br /><br /> Nome File iniziale|N/D|Il nome del file di database primario, incluso il nome del percorso completo di un database collegabile. AttachDBFilename è supportata solo per i file di dati primario con estensione mdf.<br /><br /> Se viene specificato il valore della chiave AttachDBFileName nella stringa di connessione, il database viene collegato e diventa il database predefinito per la connessione.<br /><br /> Se questa chiave non è specificata e il database è stato collegato in precedenza, il database non essere ricollegato. Il database precedentemente associato verrà utilizzato come database predefinito per la connessione.<br /><br /> Se questa chiave viene specificata insieme alla chiave AttachDBFileName, il valore di questa chiave verrà usato come alias. Tuttavia, se il nome è già utilizzato in un altro database collegato, la connessione avrà esito negativo.<br /><br /> Il percorso può essere assoluto o relativo usando la stringa di sostituzione DataDirectory. Se viene usato DataDirectory, il file di database deve esistere all'interno di una sottodirectory della directory a cui punta la stringa di sostituzione. **Nota:**  Server remoti, HTTP e UNC non sono supportati nomi di percorso. <br /><br /> Il nome del database deve essere specificato con la parola chiave 'database' o uno dei relativi alias, come illustrato di seguito:<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> Verrà generato un errore se esiste un file di log nella stessa directory del file di dati e viene utilizzata la parola chiave 'database' quando ci si collega al file di dati primario. In questo caso, rimuovere il file di log. Una volta collegato il database, verrà automaticamente generato un nuovo file di log in base al percorso fisico.|  
|Autenticazione|N/D|Il metodo di autenticazione usato per [la connessione a SQL Database usando Azure Active Directory l'autenticazione](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities).<br /><br /> I valori validi sono:<br /><br /> Password integrata, Active Directory di Active Directory, Password Sql.|  
|Impostazione di crittografia di colonna|N/D|Abilita o disabilita [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) funzionalità per la connessione.|  
|Timeout della connessione<br /><br /> -oppure-<br /><br /> Timeout di connessione<br /><br /> -oppure-<br /><br /> Timeout|15|Il periodo di tempo (in secondi) di attesa per una connessione al server prima di terminare il tentativo e generare un errore.<br /><br /> I valori validi sono maggiori o uguali a 0 e minore o uguale a 2147483647.<br /><br /> Quando si apre una connessione a un Database SQL di Azure, impostare il timeout della connessione su 30 secondi.|  
|Durata connessione<br /><br /> -oppure-<br /><br /> Timeout bilanciamento del carico|0|Quando una connessione viene restituita al pool, l'ora di creazione viene confrontata con l'ora corrente e la connessione viene eliminata definitivamente se l'intervallo è superiore al valore in secondi della durata della connessione specificato da `Connection Lifetime`. Questa è utile nelle configurazioni cluster per applicare il bilanciamento del carico tra un server in esecuzione e un server appena portato online.<br /><br /> Un valore pari a zero (0) fa sì che il timeout di connessione massimo delle connessioni in pool.|  
|ConnectRetryCount|1|Controlli tenta il numero di riconnessione dopo che il client identifica un errore di connessione inattiva. I valori validi sono 0 e 255. Il valore predefinito è 1. 0 indica che non tentano di ristabilire la connessione (disabilitare la resilienza di connessione).<br /><br /> Per ulteriori informazioni sulla resilienza delle connessioni inattive, vedere [articolo tecnico - resilienza delle connessioni inattive](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|ConnectRetryInterval|10|Specifica il tempo tra ogni tentativo di ripetizione dei tentativi di connessione (ConnectRetryCount). I valori validi sono 1 e 60 secondi (impostazione predefinita = 10), applicato dopo il primo tentativo di riconnessione. Quando viene rilevata una connessione interrotta, il client prova immediatamente a ristabilire la connessione; Questo è il primo tentativo di riconnessione e si verifica solo se ConnectRetryCount è maggiore di 0. Se il primo tentativo di riconnessione non riesce e ConnectRetryCount è maggiore di 1, il client attende ConnectRetryInterval per provare i tentativi di riconnessione secondo e successive.<br /><br /> Per ulteriori informazioni sulla resilienza delle connessioni inattive, vedere [articolo tecnico - resilienza delle connessioni inattive](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|Connessione di contesto|'false'|`true` Se deve essere effettuata una connessione di in-process a SQL Server.|  
|Lingua corrente<br /><br /> -oppure-<br /><br /> Linguaggio|N/D|Imposta la lingua utilizzata per i messaggi di avviso o errore server di database.<br /><br /> Il nome della lingua può contenere 128 caratteri o meno.|  
|origine dati<br /><br /> oppure<br /><br /> Server<br /><br /> oppure<br /><br /> Indirizzo<br /><br /> oppure<br /><br /> Addr<br /><br /> oppure<br /><br /> Indirizzo di rete|N/D|Il nome o indirizzo di rete dell'istanza di SQL Server a cui connettersi. Il numero di porta può essere specificato dopo il nome del server:<br /><br /> `server=tcp:servername, portnumber`<br /><br /> Quando si specifica un'istanza locale, usare sempre (locale). Per forzare un protocollo, aggiungere uno dei prefissi seguenti:<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> A partire da [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile anche connettersi a un database LocalDB come segue:<br /><br /> `server=(localdb)\\myInstance`<br /><br /> Per altre informazioni su LocalDB, vedere [supporto SqlClient per LocalDB](~/docs/framework/data/adonet/sql/sqlclient-support-for-localdb.md).<br /><br /> **Zdroj dat** deve usare il formato TCP o la Named pipe.<br /><br /> È il seguente formato TCP:<br /><br /> -tcp:\<nome host >\\< nome istanza\><br />-tcp:\<nome host >,\<numero di porta TCP/IP ><br /><br /> Il formato TCP deve iniziare con il prefisso "tcp:" seguita dall'istanza del database, come specificato dal nome host e un nome di istanza. Questo formato non è applicabile quando la connessione al Database SQL di Azure. TCP viene selezionato automaticamente per le connessioni al Database SQL di Azure quando viene specificato alcun protocollo.<br /><br /> Il nome host deve essere specificato in uno dei modi seguenti:<br /><br /> -Nomenetbios<br />-IPv4Address<br />-IPv6Address<br /><br /> Il nome dell'istanza viene utilizzato per risolvere in un determinato numero di porta TCP/IP in cui è ospitata un'istanza di database. In alternativa, specificare direttamente un numero di porta TCP/IP è consentito. Se entrambi nome dell'istanza e il numero di porta non sono presenti, viene utilizzata l'istanza di database predefinita.<br /><br /> Il formato di Named pipe è come segue:<br /><br /> -np:\\\\< nome host\>\pipe\\< nome della pipe\><br /><br /> Il formato di Named pipe deve iniziare con il prefisso "np:" seguita da un nome di named pipe.<br /><br /> Il nome host deve essere specificato in uno dei modi seguenti:<br /><br /> -Nomenetbios<br />-IPv4Address<br />-IPv6Address<br /><br /> Il nome della pipe viene utilizzato per identificare l'istanza di database a cui verrà connessa l'applicazione .NET Framework.<br /><br /> Se il valore della **rete** chiave specificata, i prefissi "tcp:" e "np:" non deve essere specificato. **Nota:**  È possibile forzare l'utilizzo di TCP anziché memoria condivisa, anteponendo **tcp:** al nome del server nella stringa di connessione o tramite **localhost**.|  
|Encrypt|'false'|Quando `true`, SQL Server utilizza la crittografia SSL per tutti i dati inviati tra client e server, se il server è installato un certificato. I valori riconosciuti sono `true`, `false`, `yes` e `no`. Per altre informazioni, vedere [sintassi della stringa di connessione](~/docs/framework/data/adonet/connection-string-syntax.md).<br /><br /> A partire [!INCLUDE[net_v45](~/includes/net-v45-md.md)], quando `TrustServerCertificate` è false e `Encrypt` è true, il nome del server (o l'indirizzo IP) in un certificato SSL di SQL Server deve corrispondere esattamente il server name (o indirizzo IP) specificato nella stringa di connessione. In caso contrario, il tentativo di connessione non riuscirà. Per informazioni sul supporto per i certificati il cui oggetto inizia con un carattere jolly (*), vedere [accettati i caratteri jolly utilizzato dai certificati server per l'autenticazione server](https://support.microsoft.com/kb/258858).|  
|Inserisci|'true'|`true` indica che il pool di connessione SQL Server inserisce automaticamente la connessione nel contesto della transazione corrente del thread di creazione.|  
|Partner di failover|N/D|Il nome del server partner di failover in cui è configurato il mirroring del database.<br /><br /> Se il valore di questa chiave è "", quindi **Initial Catalog** deve essere presente, e il relativo valore non deve essere "".<br /><br /> Il nome del server può contenere 128 caratteri o meno.<br /><br /> Se si specifica un partner di failover, ma il server partner di failover non è configurato per il mirroring del database e il server primario (specificato con la parola chiave Server) non è disponibile, quindi la connessione avrà esito negativo.<br /><br /> Se si specifica un partner di failover e il server primario non è configurato per il mirroring del database, la connessione al server primario (specificata con la parola chiave Server) avrà esito positivo se il server primario non è disponibile.|  
|Catalogo iniziale<br /><br /> -oppure-<br /><br /> Database|N/D|Il nome del database.<br /><br /> Il nome del database può contenere 128 caratteri o meno.|  
|Sicurezza integrata<br /><br /> oppure<br /><br /> Trusted_Connection|'false'|Quando `false`, sono specificati ID utente e Password nella connessione. Quando `true`, vengono utilizzate le credenziali di account Windows correnti per l'autenticazione.<br /><br /> I valori riconosciuti sono `true`, `false`, `yes`, `no`, e `sspi` (scelta consigliata), che equivale a `true`.<br /><br /> Se l'ID utente e Password sono specificati e integrati sicurezza è impostata su true, l'ID utente e Password verranno ignorate e viene utilizzata la sicurezza integrata.<br /><br /> <xref:System.Data.SqlClient.SqlCredential> è un modo più sicuro per specificare le credenziali per una connessione che usa l'autenticazione di SQL Server (`Integrated Security=false`).|  
|Dimensione max pool|100|Il numero massimo di connessioni consentite nel pool.<br /><br /> I valori validi sono maggiori o uguali a 1. I valori che sono meno **Min Pool Size** generano un errore.|  
|Dimensione min pool|0|Il numero minimo di connessioni consentite nel pool.<br /><br /> I valori validi sono maggiori o uguali a 0. Zero (0) in questo campo indica che alcun numero minimo di connessioni inizialmente non viene aperti.<br /><br /> I valori maggiori **Max Pool Size** generano un errore.|  
|MultipleActiveResultSets|'false'|Quando `true`, l'applicazione può gestire multiple active result set (MARS). Quando `false`, un'applicazione deve elaborare o cancellare tutti i set di risultati da un batch prima di poter eseguire qualsiasi altro batch nella connessione.<br /><br /> I valori riconosciuti sono `true` e `false`.<br /><br /> Per altre informazioni, vedere [MARS (Multiple Active Result Sets)](~/docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md).|  
|`MultiSubnetFailover`|false|Specificare sempre `multiSubnetFailover=True` quando ci si connette a un'istanza SQL Server 2012 (o versione successiva) Failover del Cluster o i gruppi di disponibilità gruppo di disponibilità del listener di un SQL Server 2012 (o versione successiva). `multiSubnetFailover=True` Configura SqlClient per fornire un rilevamento più veloce di connessione al server attualmente attivo. I valori possibili sono `Yes` e `No`, `True` e `False` oppure `1` e `0`. Ad esempio:<br /><br /> `MultiSubnetFailover=True`<br /><br /> Il valore predefinito è `False`. Per altre informazioni sul supporto di SqlClient per sempre in gruppi di disponibilità, vedere [supporto SqlClient per disponibilità elevata, ripristino di emergenza](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Libreria di rete<br /><br /> oppure<br /><br /> Rete<br /><br /> oppure<br /><br /> NET|N/D|Libreria di rete utilizzata per stabilire una connessione a un'istanza di SQL Server. I valori supportati includono:<br /><br /> Dbnmpntw (Named Pipes)<br /><br /> Dbmsrpcn (Multiprotocol, RPC Windows)<br /><br /> Dbmsadsn (Apple Talk)<br /><br /> Dbmsgnet (VIA)<br /><br /> dbmslpcn (Shared Memory)<br /><br /> dbmsspxn (IPX/SPX)<br /><br /> Dbmssocn (TCP/IP)<br /><br /> Dbmsvinn (Banyan Vines)<br /><br /> È necessario installare il DLL di rete corrispondente sul sistema al quale si esegue la connessione. Se non si specifica una rete e si usa un server locale (ad esempio, "." o "(local)"), viene utilizzata la memoria condivisa. In questo esempio la libreria della rete è Win32 Winsock TCP/IP (dbmssocn) e la porta utilizzata è 1433.<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|  
|Dimensione pacchetti|8000|Dimensione in byte dei pacchetti di rete utilizzati per comunicare con un'istanza di SQL Server.<br /><br /> Le dimensioni del pacchetto possono essere maggiore o uguale a 512 e minore o uguale a 32768.|  
|Password<br /><br /> oppure<br /><br /> PWD|N/D|La password per l'accesso all'account di SQL Server. Non è consigliata. Per mantenere un elevato livello di sicurezza, è consigliabile usare la `Integrated Security` o `Trusted_Connection` parola chiave alternativa. <xref:System.Data.SqlClient.SqlCredential> è un modo più sicuro per specificare le credenziali per una connessione che usa l'autenticazione di SQL Server.<br /><br /> La password deve essere 128 caratteri o meno.|  
|Persist Security Info<br /><br /> -oppure-<br /><br /> PersistSecurityInfo|'false'|Se impostato su `false` o `no` (scelta consigliata), informazioni riservate, ad esempio la password, non viene restituite come parte della connessione se la connessione è aperta o è già stata aperta. Reimpostare la stringa di connessione Reimposta tutti i valori di stringa di connessione tra cui la password. I valori riconosciuti sono `true`, `false`, `yes` e `no`.|  
|PoolBlockingPeriod|Auto|Imposta il comportamento del periodo di blocco per un pool di connessioni. Vedere <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod> proprietà per i dettagli.|  
|Pooling|'true'|Quando il valore di questa chiave è impostato su true, tutti gli oggetti appena creati connessione verrà aggiunta al pool quando viene chiuso dall'applicazione. In un successivo tentativo di aprire la stessa connessione, tale connessione verrà disegnata dal pool.<br /><br /> Le connessioni vengono considerate uguali se hanno la stessa stringa di connessione. Connessioni diverse sono stringhe di connessione diverse.<br /><br /> Il valore di questa chiave può essere "true", "false", "yes" o "no".|  
|Replica|'false'|`true` Se la replica è supportata tramite la connessione.|  
|Associazioni transazionali|Implicit Unbind|Controlla l'associazione della connessione con una transazione integrata `System.Transactions` delle transazioni.<br /><br /> I possibili valori sono:<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> Dissocia implicita causa la disconnessione dalla transazione al termine. Dopo la disconnessione, vengono eseguite altre richieste nella connessione in modalità autocommit. La proprietà `System.Transactions.Transaction.Current` non è verificata quando si eseguono le richieste mentre la transazione è attiva. Dopo il termine della transazione, vengono eseguite altre richieste in modalità autocommit.<br /><br /> Se il sistema termina la transazione (nell'ambito dell'uso di un blocco) prima che venga completato l'ultimo comando, verrà generata <xref:System.InvalidOperationException>.<br /><br /> La separazione esplicita consente la connessione resti collegata alla transazione fino a quando la connessione viene chiusa o esplicita `SqlConnection.TransactionEnlist(null)` viene chiamato. A partire da [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], modifiche a disassocia implicita rendono esplicito disassociare obsoleto. Viene generata un'eccezione `InvalidOperationException` se `Transaction.Current` non è la transazione integrata o se la transazione integrata non è attiva.|  
|TransparentNetworkIPResolution|Vedere la descrizione.|Quando il valore di questa chiave è impostato su `true`, l'applicazione deve recuperare tutti gli indirizzi IP per una particolare voce DNS e tentare la connessione al primo nell'elenco. Se la connessione non viene stabilita entro 0,5 secondi, l'applicazione tenterà di connettersi a tutti gli altri in parallelo. Quando il primo risponde, l'applicazione stabilirà la connessione con l'indirizzo IP che ha risposto.<br /><br /> Se il `MultiSubnetFailover` chiave è impostata su `true`, `TransparentNetworkIPResolution` viene ignorato.<br /><br /> Se il `Failover Partner` chiave è impostata, `TransparentNetworkIPResolution` viene ignorato.<br /><br /> Il valore di questa chiave deve essere `true`, `false`, `yes`, o `no`.<br /><br /> Un valore pari `yes` viene considerato lo stesso valore `true`.<br /><br /> Un valore pari `no` viene considerato lo stesso valore `false`.<br /><br /> I valori predefiniti sono come segue:<br /><br /> <ul><li>`false` Quando:<br /><br /> <ul><li>La connessione al Database SQL di Azure in cui l'origine dati termina con:<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication` è 'Password di Active Directory' o 'Integrata di Active Directory'</li></ul></li><li>`true` in tutti gli altri casi.</li></ul>|  
|TrustServerCertificate|'false'|Se impostato su `true`, SSL viene utilizzato per crittografare il canale, ignorando l'analisi della catena di certificati per convalidare l'attendibilità. Se TrustServerCertificate è impostata su `true` ed Encrypt è impostata su `false`, il canale non crittografato. I valori riconosciuti sono `true`, `false`, `yes` e `no`. Per altre informazioni, vedere [sintassi della stringa di connessione](~/docs/framework/data/adonet/connection-string-syntax.md).|  
|Type System Version|N/D|Valore stringa che indica il tipo di sistema prevede che l'applicazione. Le funzionalità disponibili per un'applicazione client dipendono dalla versione di SQL Server e dal livello di compatibilità del database. L'impostazione esplicita della versione del sistema di tipi per cui l'applicazione client è stata scritta consente di evitare potenziali problemi che potrebbero causare l'interruzione di un'applicazione se viene utilizzata una versione di SQL Server diversa. **Nota:**  La versione del sistema di tipi non può essere impostata per il codice CLR (Common Language Runtime) in esecuzione in-process in SQL Server. Per altre informazioni, vedere [SQL Server integrazione Common Language Runtime](~/docs/framework/data/adonet/sql/sql-server-common-language-runtime-integration.md). <br /><br /> I possibili valori sono:<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;` Specifica che l'applicazione richiederà versione 11.0.0.0 di Microsoft.SqlServer.Types.dll. L'altro `Type System Version` impostazioni richiederanno versione 10.0.0.0 di Microsoft.SqlServer.Types.dll.<br /><br /> `Latest` è obsoleto e non deve essere utilizzato. `Latest` è equivalente a `Type System Version=SQL Server 2008;`.|  
|ID utente<br /><br /> -oppure-<br /><br /> UID<br /><br /> oppure|N/D|L'account di accesso di SQL Server. Non è consigliata. Per mantenere un elevato livello di sicurezza, è consigliabile usare la `Integrated Security` o `Trusted_Connection` parole chiave invece. <xref:System.Data.SqlClient.SqlCredential> è un modo più sicuro per specificare le credenziali per una connessione che usa l'autenticazione di SQL Server.<br /><br /> L'ID utente deve essere 128 caratteri o meno.|  
|Istanza utente|'false'|Un valore che indica se reindirizzare la connessione dall'istanza predefinita di SQL Server Express a un'istanza di avviato dal runtime in esecuzione con l'account del chiamante.|  
|ID Workstation<br /><br /> oppure<br /><br /> WSID|Il nome del computer locale|Il nome della workstation connessa a SQL Server.<br /><br /> L'ID deve essere 128 caratteri o meno.|  
  
 Nell'elenco seguente contiene i nomi validi per i valori all'interno del pool di <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>. Per altre informazioni, vedere [Pool di connessioni SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
-   Durata connessione (o Load Balance Timeout)  
  
-   Inserisci  
  
-   Dimensione max pool  
  
-   Dimensione min pool  
  
-   Pooling  
  
 Quando si impostano i valori che richiedono un valore booleano di pool di connessioni o parola chiave, è possibile usare 'Sì' anziché 'true' e 'no' anziché 'false'. I valori integer sono rappresentati come stringhe.  

> [!NOTE]
>  Il Provider di dati .NET Framework per SQL Server Usa il proprio protocollo per comunicare con SQL Server. Pertanto, non supporta l'uso di un nome di origine dati ODBC (DSN) quando ci si connette a SQL Server perché non viene aggiunto un livello ODBC.  
  
> [!NOTE]
>  File Universal data link (UDL) non sono supportati per il Provider di dati .NET Framework per SQL Server.  
  
> [!CAUTION]
>  In questa versione, l'applicazione deve prestare attenzione quando si costruisce una stringa di connessione basata sull'input dell'utente (ad esempio durante il recupero di informazioni su ID e password utente da una finestra di dialogo e aggiungerlo alla stringa di connessione). L'applicazione deve verificare che un utente non è possibile incorporare i parametri della stringa di connessione aggiuntive in questi valori (ad esempio si immette una password come "validpassword; database = somedb" nel tentativo di collegare a un database diverso). Se è necessario costruire stringhe di connessione basate sull'input dell'utente, usare il nuovo <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, che convalida la stringa di connessione e consente di eliminare questo problema. Visualizzare [generatori di stringhe di connessione](~/docs/framework/data/adonet/connection-string-builders.md) per altre informazioni.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e imposta il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà prima dell'apertura della connessione.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato fornito un argomento stringa di connessione non valido o non è stato specificato un argomento stringa di connessione richiesto.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Stringhe di connessione in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">Pool di connessioni SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Provider gestiti ADO.NET e Centro per sviluppatori di set di dati</related>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Stringhe di connessione in ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Pool di connessioni SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tempo di attesa relativo al tentativo di stabilire una connessione prima di terminare il tentativo e generare un errore.</summary>
        <value>Tempo di attesa in secondi per l'apertura di una connessione. Il valore predefinito è 15 secondi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare la quantità di tempo di attesa di una connessione timeout utilizzando il `Connect Timeout` o `Connection Timeout` parole chiave nella stringa di connessione. Un valore pari a 0 indica nessun limite e devono essere evitato in un <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> perché un tentativo di connettere attende indefinitamente.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e imposta il `Connection Timeout` su 30 secondi nella stringa di connessione. Il codice apre la connessione e visualizza il <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> proprietà nella finestra della console.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore impostato è minore di 0.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Stringhe di connessione in ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Pool di connessioni SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce un oggetto <see cref="T:System.Data.SqlClient.SqlCommand" /> associato all'oggetto <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.SqlClient.SqlCommand" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.SqlClient.SqlCredential" /> per questa connessione.</summary>
        <value>Oggetto <see cref="T:System.Data.SqlClient.SqlCredential" /> per questa connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Persist Security Info = true` è necessario per ottenere il valore della <xref:System.Data.SqlClient.SqlCredential> dell'oggetto con <xref:System.Data.SqlClient.SqlConnection.Credential%2A>.  
  
 Il valore predefinito di <xref:System.Data.SqlClient.SqlConnection.Credential%2A> è null.  
  
 Un <xref:System.InvalidOperationException> generata:  
  
-   Se <xref:System.Data.SqlClient.SqlConnection.Credential%2A> è impostato su una connessione aperta.  
  
-   Se <xref:System.Data.SqlClient.SqlConnection.Credential%2A> viene impostata quando `Context Connection=true`.  
  
-   Se <xref:System.Data.SqlClient.SqlConnection.Credential%2A> viene impostata quando `Integrated Security = true`.  
  
-   Se <xref:System.Data.SqlClient.SqlConnection.Credential%2A> viene impostato quando si usa la stringa di connessione `Password`.  
  
-   Se <xref:System.Data.SqlClient.SqlConnection.Credential%2A> viene impostato quando si usa la stringa di connessione `UserID`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del database corrente o del database da usare dopo l'apertura della connessione.</summary>
        <value>Nome del database corrente o del database da usare dopo l'apertura di una connessione. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlConnection.Database%2A> proprietà Aggiorna in modo dinamico. Se si modifica il database corrente utilizzando un [!INCLUDE[tsql](~/includes/tsql-md.md)] istruzione o il <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> metodo, viene inviato un messaggio informativo e la proprietà viene aggiornata automaticamente.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.SqlClient.SqlConnection> e sono riportate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Comandi e parametri</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'istanza di SQL Server a cui connettersi.</summary>
        <value>Il nome dell'istanza di SQL Server a cui connettersi. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> proprietà restituisce `null` se la stringa di connessione per il <xref:System.Data.SqlClient.SqlConnection> è "connessione di contesto = true".  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.SqlClient.SqlConnection> e sono riportate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Riferimento a un oggetto <see cref="T:System.EnterpriseServices.ITransaction" /> esistente in cui eseguire l'integrazione.</param>
        <summary>Permette l'integrazione nella transazione specificata come transazione distribuita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare il <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> metodo per l'inserimento in una transazione distribuita. Poiché inserisce una connessione bism in una <xref:System.Transactions.Transaction> istanza **EnlistTransaction** sfrutta i vantaggi delle funzionalità disponibili nel <xref:System.Transactions> dello spazio dei nomi per la gestione transazioni distribuite, rendendo preferibile  **EnlistDistributedTransaction** per questo scopo. Per altre informazioni, vedere [transazioni distribuite](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 È possibile continuare a eseguire l'inserimento di una transazione distribuita esistente usando il **EnlistDistributedTransaction** metodo se l'inserimento automatico è disabilitato. L'integrazione in una transazione distribuita esistente assicura che, se è stato eseguito il commit o il rollback della transazione, anche le modifiche apportate dal codice nell'origine dati vengono eseguito il commit o rollback.  
  
 `EnlistDistributedTransaction` Restituisce un'eccezione se il <xref:System.Data.SqlClient.SqlConnection> è già avviato una transazione tramite <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>. Tuttavia, se la transazione è una transazione locale avviata nell'origine dati (ad esempio, eseguendo in modo esplicito l'istruzione BEGIN TRANSACTION tramite un <xref:System.Data.SqlClient.SqlCommand> oggetto), **EnlistDistributedTransaction** rollback il transazione locale e consente di integrare nella transazione distribuita esistente come richiesto. Si noti che è stato eseguito il rollback della transazione locale e sono responsabili della gestione delle transazioni locali non avviati tramite non si ricevono <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transazioni (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Riferimento a un oggetto <see cref="T:System.Transactions.Transaction" /> esistente in cui eseguire l'integrazione.</param>
        <summary>Permette l'integrazione nella transazione specificata come transazione distribuita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare il <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> metodo per l'inserimento in una transazione distribuita. Poiché inserisce una connessione bism in una <xref:System.Transactions.Transaction> istanza **EnlistTransaction** sfrutta i vantaggi delle funzionalità disponibili nel <xref:System.Transactions> dello spazio dei nomi per la gestione transazioni distribuite, rendendo preferibile  **EnlistDistributedTransaction**, che usa un **System.EnterpriseServices.ITransaction** oggetto. Include inoltre una semantica leggermente diversa: una volta una connessione è stata inserita esplicitamente in una transazione, non può essere rimosso o inserito in un'altra transazione fino al termine della prima transazione. Per altre informazioni sulle transazioni distribuite, vedere [transazioni distribuite](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transazioni (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la proprietà <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />.</summary>
        <value><see langword="true" /> se la proprietà <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> è stata impostata; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> al `true`, gli errori sono stati trattati in precedenza come le eccezioni vengono ora gestite come <xref:System.Data.SqlClient.SqlConnection.InfoMessage> gli eventi. Tutti gli eventi vengono attivati immediatamente e vengono gestiti dal gestore dell'evento. Se viene <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> è impostata su `false`, quindi <xref:System.Data.SqlClient.SqlConnection.InfoMessage> vengono gestiti gli eventi alla fine della procedura.  
  
> [!NOTE]
>  Un errore con un livello di gravità pari a 17 o successiva che fa sì che il server di arrestare l'elaborazione del comando deve essere gestito come un'eccezione. In questo caso viene generata un'eccezione indipendentemente da come viene gestito l'errore nell'evento <xref:System.Data.SqlClient.SqlConnection.InfoMessage>.  
  
 Per altre informazioni sull'utilizzo degli eventi, vedere [eventi di connessione](~/docs/framework/data/adonet/connection-events.md). Per altre informazioni sugli errori generati dal motore di SQL Server, vedere [errori del motore di Database](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Eventi di connessione</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce informazioni sullo schema per l'origine dati di questo oggetto <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si tenta di recuperare informazioni sullo schema per più di una stored procedure con controllo delle versioni, viene restituito solo lo schema per la versione più recente.
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Ottenere informazioni sullo Schema da un Database</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce informazioni sullo schema per l'origine dati di questo oggetto <see cref="T:System.Data.SqlClient.SqlConnection" />. Per altre informazioni sullo schema, vedere [Raccolte di schemi di SQL Server](~/docs/framework/data/adonet/sql-server-schema-collections.md).</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Ottenere informazioni sullo Schema da un Database</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Specifica il nome dello schema da restituire.</param>
        <summary>Restituisce le informazioni di schema per l'origine dati dell'oggetto <see cref="T:System.Data.SqlClient.SqlConnection" /> usando la stringa specificata per il nome dello schema.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Potrebbe essere necessario le informazioni sullo schema del database, tabelle o colonne. In questo esempio:  
  
-   Usa GetSchema per ottenere informazioni sullo schema.  
  
-   Usare le restrizioni dello schema per ottenere le informazioni specificate.  
  
-   Ottiene le informazioni sullo schema del database, tabelle e alcune colonne.  
  
 Prima di eseguire l'esempio, è necessario creare il database di esempio, utilizzando la seguente query [!INCLUDE[tsql](~/includes/tsql-md.md)]:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 [Come ottenere informazioni sullo Schema dal Database](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) con le versioni di c# e Visual Basic dell'esempio di codice in un progetto di Visual Studio.  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {  
         conn.Open();  
  
         // Get the Meta Data for Supported Schema Collections  
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");  
  
         Console.WriteLine("Meta Data for Supported Schema Collections:");  
         ShowDataTable(metaDataTable, 25);  
         Console.WriteLine();  
  
         // Get the schema information of Databases in your instance  
         DataTable databasesSchemaTable = conn.GetSchema("Databases");  
  
         Console.WriteLine("Schema Information of Databases:");  
         ShowDataTable(databasesSchemaTable, 25);  
         Console.WriteLine();  
  
         // First, get schema information of all the tables in current database;  
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");  
  
         Console.WriteLine("Schema Information of All Tables:");  
         ShowDataTable(allTablesSchemaTable, 20);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Table Type to get   
         // the specified table(s).  
         // You can use four restrictions for Table, so you should create a 4 members array.  
         String[] tableRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Table Type.   
         // Now we specify the Table Name of the table what we want to get schema information.  
         tableRestrictions[2] = "Course";  
  
         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);  
  
         Console.WriteLine("Schema Information of Course Tables:");  
         ShowDataTable(courseTableSchemaTable, 20);  
         Console.WriteLine();  
  
         // First, get schema information of all the columns in current database.  
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");  
  
         Console.WriteLine("Schema Information of All Columns:");  
         ShowColumns(allColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).  
         // You can use four restrictions for Column, so you should create a 4 members array.  
         String[] columnRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         columnRestrictions[2] = "Course";  
         columnRestrictions[3] = "DepartmentID";  
  
         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);  
  
         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");  
         ShowColumns(departmentIDSchemaTable);  
         Console.WriteLine();  
  
         // First, get schema information of all the IndexColumns in current database  
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");  
  
         Console.WriteLine("Schema Information of All IndexColumns:");  
         ShowIndexColumns(allIndexColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to   
         // get the specified column(s).  
         // You can use five restrictions for Column, so you should create a 5 members array.  
         String[] indexColumnsRestrictions = new String[5];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         indexColumnsRestrictions[2] = "Course";  
         indexColumnsRestrictions[4] = "CourseID";  
  
         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);  
  
         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");  
         ShowIndexColumns(courseIdIndexSchemaTable);  
         Console.WriteLine();  
      }  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   private static void ShowDataTable(DataTable table, Int32 length) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-" + length + "}", col.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         foreach (DataColumn col in table.Columns) {  
            if (col.DataType.Equals(typeof(DateTime)))  
               Console.Write("{0,-" + length + ":d}", row[col]);  
            else if (col.DataType.Equals(typeof(Decimal)))  
               Console.Write("{0,-" + length + ":C}", row[col]);  
            else  
               Console.Write("{0,-" + length + "}", row[col]);  
         }  
         Console.WriteLine();  
      }  
   }  
  
   private static void ShowDataTable(DataTable table) {  
      ShowDataTable(table, 14);  
   }  
  
   private static void ShowColumns(DataTable columnsTable) {  
      var selectedRows = from info in columnsTable.AsEnumerable()  
                         select new {  
                            TableCatalog = info["TABLE_CATALOG"],  
                            TableSchema = info["TABLE_SCHEMA"],  
                            TableName = info["TABLE_NAME"],  
                            ColumnName = info["COLUMN_NAME"],  
                            DataType = info["DATA_TYPE"]  
                         };  
  
      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",  
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,  
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);  
      }  
   }  
  
   private static void ShowIndexColumns(DataTable indexColumnsTable) {  
      var selectedRows = from info in indexColumnsTable.AsEnumerable()  
                         select new {  
                            TableSchema = info["table_schema"],  
                            TableName = info["table_name"],  
                            ColumnName = info["column_name"],  
                            ConstraintSchema = info["constraint_schema"],  
                            ConstraintName = info["constraint_name"],  
                            KeyType = info["KeyType"]  
                         };  
  
      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,  
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> è specificato come Null.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Ottenere informazioni sullo Schema da un Database</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Specifica il nome dello schema da restituire.</param>
        <param name="restrictionValues">Insieme di valori di restrizione per lo schema richiesto.</param>
        <summary>Restituisce le informazioni di schema per l'origine dati dell'oggetto <see cref="T:System.Data.SqlClient.SqlConnection" /> utilizzando la stringa specificata per il nome dello schema e la matrice di stringhe specificata per i valori di restrizione.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `restrictionValues` parametro può fornire *n* profondità dei valori che vengono specificati dalla raccolta delle restrizioni per una raccolta specifica. Per impostare i valori per una determinata restrizione e non impostare i valori di altre restrizioni, è necessario impostare le restrizioni precedenti `null` e quindi inserire il valore corretto per la restrizione che si desidera specificare un valore per.  
  
 Un esempio è la raccolta "Tabelle". Se la raccolta "Tabelle" ha tre restrizioni, ovvero database, proprietario e nome della tabella e si desidera vengano restituite solo le tabelle associate al proprietario "Carl", è necessario passare i valori seguenti: null, "Carlo". Se un valore di restrizione non viene passato, vengono utilizzati i valori predefiniti per tale restrizione. Questo è lo stesso mapping come il passaggio di `null`, che è diverso dal passaggio di una stringa vuota per il valore del parametro. In tal caso, una stringa vuota ("") viene considerato come valore per il parametro specificato.  
  
 Per un esempio di codice che illustrano <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>, vedere <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> è specificato come Null.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Ottenere informazioni sullo Schema da un Database</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando SQL Server restituisce un avviso o un messaggio informativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I client che desidera elaborare avvisi o messaggi informativi inviati dal server devono creare un <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> delegato per l'ascolto dell'evento.  
  
 Il <xref:System.Data.SqlClient.SqlConnection.InfoMessage> evento si verifica quando un messaggio con un livello di gravità 10 o meno restituito da SQL Server. I messaggi con livello di gravità compreso tra 11 e 20 generano un errore e i messaggi che hanno un livello di gravità superiore a 20 determinano la chiusura della connessione. Per altre informazioni sui livelli di errore di SQL Server, vedere [gravità degli errori del motore di Database](/sql/relational-databases/errors-events/database-engine-error-severities).
  
 Per altre informazioni e un esempio, vedere [eventi di connessione](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Utilizzo degli eventi di connessione</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Apre una connessione a un database con le impostazioni delle proprietà specificate dalla proprietà <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlConnection> Disegna una connessione aperta dal pool di connessioni, se disponibile. In caso contrario, stabilisce una nuova connessione a un'istanza di SQL Server.  
  
> [!NOTE]
>  Se il <xref:System.Data.SqlClient.SqlConnection> esula dall'ambito preposto, non è chiusa. Pertanto, è necessario chiudere in modo esplicito la connessione tramite una chiamata <xref:System.Data.SqlClient.SqlConnection.Close%2A>.  
  
> [!NOTE]
>  Se si specifica un numero di porta diversa dalla 1433 quando si tenta di connettersi a un'istanza di SQL Server utilizzando un protocollo diverso da TCP/IP, il <xref:System.Data.SqlClient.SqlConnection.Open%2A> metodo ha esito negativo. Per specificare un numero di porta diversa dalla 1433, includere "server = machinename, numero di porta" nella stringa di connessione e protocollo Usa il TCP/IP.  
  
> [!NOTE]
>  Il Provider di dati .NET Framework per SQL Server richiede l'autorizzazione di sicurezza con "Consentire le chiamate agli assembly non gestito" abilitato (<xref:System.Security.Permissions.SecurityPermission> con <xref:System.Security.Permissions.SecurityPermissionFlag> impostata su `UnmanagedCode`) per aprire un <xref:System.Data.SqlClient.SqlConnection> con debug SQL abilitato.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.SqlClient.SqlConnection>, viene aperto e sono riportate alcune delle relative proprietà. La connessione viene chiusa automaticamente alla fine del `using` blocco.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Non è possibile stabilire una connessione senza specificare un'origine dati o un server.  
  
oppure 
Connessione già aperta.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Errore a livello di connessione durante l'apertura della stessa. Se la proprietà <see cref="P:System.Data.SqlClient.SqlException.Number" /> contiene il valore 18487 o 18488, indica che la password specificata è scaduta o deve essere reimpostata. Per altre informazioni, vedere il metodo <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />.  
  
Il tag <see langword="&lt;system.data.localdb&gt;" /> nel file app.config contiene elementi non validi o sconosciuti.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Esistono due voci con lo stesso nome nella sezione <see langword="&lt;localdbinstances&gt;" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Stringhe di connessione in ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Pool di connessioni SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">L'istruzione di annullamento.</param>
        <summary>Versione asincrona di <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, che apre una connessione di database con le impostazioni di proprietà specificate dalla proprietà <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />. Il token di annullamento può essere usato per richiedere che l'operazione venga abbandonata prima che trascorra l'intervallo di timeout.  Le eccezioni verranno propagate tramite l'attività restituita. Se l'intervallo di tempo di connessione trascorre senza ottenere la connessione, l'attività restituita viene contrassegnata come attività che presenta errori con un'eccezione. L'implementazione restituisce un'attività senza bloccare il thread chiamante per le connessioni raccolte e non raccolte.</summary>
        <returns>Attività che rappresenta l'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo avere chiamato <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>, <xref:System.Data.SqlClient.SqlConnection.State%2A> devono restituire <xref:System.Data.ConnectionState.Connecting> finché l'oggetto restituito <xref:System.Threading.Tasks.Task> viene completata. Quindi, se la connessione è stata completata <xref:System.Data.SqlClient.SqlConnection.State%2A> deve restituire <xref:System.Data.ConnectionState.Open>. Se la connessione ha esito negativo, <xref:System.Data.SqlClient.SqlConnection.State%2A> deve restituire <xref:System.Data.ConnectionState.Closed>.  
  
 Una chiamata a <xref:System.Data.SqlClient.SqlConnection.Close%2A> tenterà di annullare o chiudere corrispondente <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> chiamare.  
  
 Per altre informazioni sulla programmazione asincrona nel Provider di dati .NET Framework per SQL Server, vedere [programmazione asincrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> viene chiamato più volte per la stessa istanza prima del completamento dell'attività.  
  
 <see langword="Context Connection=true" /> è specificato nella stringa di connessione.  
  
Non era disponibile una connessione dal pool di connessioni prima del timeout.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualsiasi errore restituito da SQL Server che si è verificato durante l'apertura della connessione.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_PacketSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le dimensioni in byte dei pacchetti di rete usati per comunicare con un'istanza di SQL Server.</summary>
        <value>Dimensione in byte dei pacchetti di rete. Il valore predefinito è 8000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un'applicazione esegue operazioni di copia bulk, oppure invia o riceve un numero elevato di dati text o image, impostare dimensioni maggiori di quelle predefinite possono aumentare l'efficienza perché causa un minor numero di rete letti e le operazioni di scrittura. Se un'applicazione invia e riceve quantità limitate di dati, è possibile impostare le dimensioni del pacchetto su 512 byte (usando il valore di dimensioni del pacchetto nel <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), che è sufficiente per la maggior parte delle operazioni di trasferimento dei dati. Per la maggior parte delle applicazioni, le dimensioni predefinite risultano ottimali.  
  
 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> può essere un valore compreso nell'intervallo di byte tra 512 e 32767. Se il valore è esterno all'intervallo, viene generata un'eccezione.  
  
 Impostando il valore predefinito a un numero maggiore di 8000 causerà il pacchetto da utilizzare l'allocatore di pagine nell'istanza di SQL Server anziché l'allocatore SinglePage molto più efficiente, riducendo la scalabilità complessiva di SQL Server. Per altre informazioni sulle modalità di utilizzo memoria SQL Server, vedere [Guida all'architettura di gestione della memoria](/sql/relational-databases/memory-management-architecture-guide).
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection>, tra cui l'impostazione di `Packet Size` a 512 nella stringa di connessione. Viene visualizzato il <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> e <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> proprietà nella finestra della console.  
  
 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="customProviders">Provider personalizzati</param>
        <summary>Registra i provider dell'archivio chiavi di crittografia di colonna.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se viene attivata la raccolta delle statistiche, tutti i valori vengono reimpostati su zero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la raccolta delle statistiche non sono abilitata e questo metodo viene chiamato, non viene generato alcun errore.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statistiche di provider per SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una raccolta di statistiche sulla coppia valore/nome al momento della chiamata al metodo.</summary>
        <returns>Restituisce un riferimento di tipo <see cref="T:System.Collections.IDictionary" /> degli elementi <see cref="T:System.Collections.DictionaryEntry" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene chiamato questo metodo, i valori recuperati sono quelli nel punto corrente nel tempo. Se si continua con la connessione, i valori sono corretti. È necessario eseguire nuovamente il metodo per ottenere i valori più recenti.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statistiche di provider per SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa che contiene la versione dell'istanza di SQL Server a cui il client è connesso.</summary>
        <value>La versione dell'istanza di SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La versione è nel formato *# #. # #. # # #*, in cui le prime due cifre sono la versione principale, le due cifre sono la versione secondaria e le ultime quattro cifre sono la versione di rilascio. La stringa è nel formato *Major*, in cui principali e secondarie sono esattamente due cifre e compilazione è esattamente quattro cifre.  
  
 È stato chiamato <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> ma l'attività restituita non è stata completata e la connessione non è stata aperta dopo una chiamata a <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e visualizza il <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> proprietà.  
  
 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connessione è chiusa.  
  
 È stato chiamato <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> ma l'attività restituita non è stata completata e la connessione non è stata aperta dopo una chiamata a <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica lo stato dell'oggetto <see cref="T:System.Data.SqlClient.SqlConnection" /> durante l'ultima operazione di rete eseguita sulla connessione.</summary>
        <value>Enumerazione <see cref="T:System.Data.ConnectionState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restituisce un <xref:System.Data.ConnectionState> enumerazione che indica lo stato di <xref:System.Data.SqlClient.SqlConnection>. Chiudere e riaprire la connessione aggiornerà il valore di <xref:System.Data.SqlClient.SqlConnection.State%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connessione a un'origine dati (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se impostato su <see langword="true" />, attiva la raccolta delle statistiche per la connessione corrente.</summary>
        <value>Restituisce <see langword="true" /> se è attivata la raccolta delle statistiche; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abilitazione della raccolta delle statistiche ha un effetto ma percepibile sulle prestazioni e pertanto deve essere abilitata solo quando è necessario.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statistiche di provider per SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia una transazione di database.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Al termine della transazione, in modo esplicito è necessario eseguire il commit o rollback della transazione usando il <xref:System.Data.IDbTransaction.Commit> o <xref:System.Data.IDbTransaction.Rollback> (metodo).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Uno dei valori di <see cref="T:System.Data.IsolationLevel" />.</param>
        <summary>Avvia una transazione di database con il valore specificato di <see cref="T:System.Data.IsolationLevel" />.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Al termine della transazione, in modo esplicito è necessario eseguire il commit o rollback della transazione usando il <xref:System.Data.IDbTransaction.Commit> o <xref:System.Data.IDbTransaction.Rollback> (metodo).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce un oggetto Command associato alla connessione.</summary>
        <returns>Oggetto Command associato alla connessione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente.</summary>
        <returns>Nuovo oggetto che è una copia dell'istanza corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.SqlClient.SqlConnection> a un'interfaccia <xref:System.ICloneable>.  
  
 Questo membro è supportato solo da .NET Compact Framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_WorkstationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa mediante cui si identifica il client di database.</summary>
        <value>Stringa mediante cui si identifica il client di database. Se non specificato, il nome del computer client. Se non è specificato niente, il valore è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa contiene in genere il nome di rete del client. Il <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> proprietà corrisponde alla proprietà di `Workstation ID` proprietà della stringa di connessione.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Data.SqlClient.SqlConnection> e visualizza il <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> proprietà.  
  
 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Cenni preliminari su ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>