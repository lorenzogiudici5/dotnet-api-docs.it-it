<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlTransaction.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c1514c4f5c3e1a37ca99143298ddcf3567e1cdbdeb8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14c4f5c3e1a37ca99143298ddcf3567e1cdbdeb8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>Represents a Transact-SQL transaction to be made in a SQL Server database.</source>
          <target state="translated">Rappresenta una transazione Transact-SQL da eseguire in un database SQL Server.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>The application creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object by calling <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
          <target state="translated">L'applicazione crea un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> oggetto chiamando <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> sul <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object.</source>
          <target state="translated">Tutte le operazioni successive associate alla transazione (ad esempio, eseguire il commit o l'interruzione della transazione), vengono eseguite sul <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when committing or rolling back a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione delle eccezioni deve essere sempre utilizzata durante il commit o rollback un <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>Both <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> generate an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Entrambi <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> generare un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> se la connessione viene terminata o se è già stata il rollback della transazione nel server.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>For more information on SQL Server transactions, see <bpt id="p1">[</bpt>Explicit Transactions<ept id="p1">](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx)</ept> and <bpt id="p2">[</bpt>Coding Efficient Transactions<ept id="p2">](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle transazioni di SQL Server, vedere <bpt id="p1">[</bpt>transazioni esplicite<ept id="p1">](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx)</ept> e <bpt id="p2">[</bpt>alla codifica di transazioni efficienti<ept id="p2">](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Viene inoltre illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>The transaction is rolled back on any error, or if it is disposed without first being committed.</source>
          <target state="translated">Il rollback della transazione su qualsiasi errore, o se viene eliminato senza prima è stato eseguito il commit.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione degli errori viene utilizzata per gestire eventuali errori durante il tentativo di eseguire il commit o il rollback della transazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>Commits the database transaction.</source>
          <target state="translated">Esegue il commit della transazione di database.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> metodo è equivalente all'istruzione Transact-SQL COMMIT TRANSACTION.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</source>
          <target state="translated">È Impossibile rollback della transazione dopo che è stato eseguito il commit, poiché tutte le modifiche hanno diventano parte permanente del database.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>For more information, see SQL Server Books Online.</source>
          <target state="translated">Per altre informazioni, vedere la documentazione online di SQL Server.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when committing or rolling back a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione delle eccezioni deve essere sempre utilizzata durante il commit o rollback un <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>Both <ph id="ph1">`Commit`</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> generates an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Entrambi <ph id="ph1">`Commit`</ph> e <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> genera un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> se la connessione viene terminata o se è già stata il rollback della transazione nel server.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">Per ulteriori informazioni sulle transazioni di SQL Server, vedere gli argomenti relativi alle transazioni esplicite e alla codifica di transazioni efficienti nella documentazione online di SQL Server.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Viene inoltre illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The transaction is rolled back on any error.</source>
          <target state="translated">Il rollback della transazione su qualsiasi errore.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione degli errori viene utilizzata per gestire eventuali errori durante il tentativo di eseguire il commit o il rollback della transazione.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di eseguire il commit della transazione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">È già stato eseguito il rollback o il commit della transazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The connection is broken.</source>
          <target state="translated">La connessione non funziona.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object associated with the transaction, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the transaction is no longer valid.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> associato alla transazione o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se la transazione non è più valida.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object associated with the transaction.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> associato alla transazione.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>A single application may have multiple database connections, each with zero or more transactions.</source>
          <target state="translated">Una singola applicazione può avere più connessioni di database, ciascuna con zero o più transazioni.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>This property lets you determine the connection object associated with a particular transaction created by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">Questa proprietà consente di determinare l'oggetto connessione associato a una particolare transazione creata da <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> for this transaction.</source>
          <target state="translated">Specifica l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> per questa transazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> for this transaction.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> per questa transazione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>The default is <ph id="ph1">&lt;see langword="ReadCommitted" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="ReadCommitted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">Le transazioni parallele non sono supportate.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> applies to the whole transaction.</source>
          <target state="translated">Pertanto, il <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> si applica all'intera transazione.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</source>
          <target state="translated">Per ulteriori informazioni sui livelli di isolamento di SQL Server, vedere "Isolamento livelli nel motore di Database" nella documentazione Online di SQL Server.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>Rolls back a transaction from a pending state.</source>
          <target state="translated">Esegue il rollback di una transazione da uno stato in sospeso.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>Rolls back a transaction from a pending state.</source>
          <target state="translated">Esegue il rollback di una transazione da uno stato in sospeso.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> metodo è equivalente all'istruzione Transact-SQL ROLLBACK TRANSACTION.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>For more information, see SQL Server Books Online.</source>
          <target state="translated">Per altre informazioni, vedere la documentazione online di SQL Server.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction can only be rolled back from a pending state (after <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> is called).</source>
          <target state="translated">Può solo essere il rollback della transazione da uno stato in sospeso (dopo <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> è stato chiamato, ma prima <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> viene chiamato).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction is rolled back in the event it is disposed before <ph id="ph1">`Commit`</ph> or <ph id="ph2">`Rollback`</ph> is called.</source>
          <target state="translated">La transazione viene eseguito il rollback nel caso venga eliminata prima <ph id="ph1">`Commit`</ph> o <ph id="ph2">`Rollback`</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when rolling back a transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione delle eccezioni deve essere sempre utilizzata durante il rollback di una transazione.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>A <ph id="ph1">`Rollback`</ph> generates an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Oggetto <ph id="ph1">`Rollback`</ph> genera un <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> se la connessione viene terminata o se è già stata il rollback della transazione nel server.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">Per ulteriori informazioni sulle transazioni di SQL Server, vedere gli argomenti relativi alle transazioni esplicite e alla codifica di transazioni efficienti nella documentazione online di SQL Server.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Viene inoltre illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction is rolled back on any error.</source>
          <target state="translated">Il rollback della transazione su qualsiasi errore.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione degli errori viene utilizzata per gestire eventuali errori durante il tentativo di eseguire il commit o il rollback della transazione.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di eseguire il commit della transazione.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">È già stato eseguito il rollback o il commit della transazione.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The connection is broken.</source>
          <target state="translated">La connessione non funziona.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The name of the transaction to roll back, or the savepoint to which to roll back.</source>
          <target state="translated">Nome della transazione di cui eseguire il rollback o punto di salvataggio a cui eseguire il rollback.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</source>
          <target state="translated">Esegue il rollback di una transazione da uno stato in sospeso e specifica la transazione o il nome del punto di salvataggio.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> metodo è equivalente all'istruzione Transact-SQL ROLLBACK TRANSACTION.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>For more information, see "Explicit Transactions" and "Transaction Savepoints" in SQL Server Books Online.</source>
          <target state="translated">Per ulteriori informazioni, vedere "Transazioni esplicite" e "Salvataggio delle transazioni" nella documentazione Online di SQL Server.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction can only be rolled back from a pending state (after <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> is called).</source>
          <target state="translated">Può solo essere il rollback della transazione da uno stato in sospeso (dopo <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> è stato chiamato, ma prima <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> viene chiamato).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction is rolled back if it is disposed before <ph id="ph1">`Commit`</ph> or <ph id="ph2">`Rollback`</ph> is called.</source>
          <target state="translated">Viene eseguito il rollback della transazione se viene eliminato prima <ph id="ph1">`Commit`</ph> o <ph id="ph2">`Rollback`</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when rolling back a transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione delle eccezioni deve essere sempre utilizzata durante il rollback di una transazione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>A <ph id="ph1">`Rollback`</ph> generates an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Oggetto <ph id="ph1">`Rollback`</ph> genera un <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> se la connessione viene terminata o se è già stata il rollback della transazione nel server.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">Per ulteriori informazioni sulle transazioni di SQL Server, vedere gli argomenti relativi alle transazioni esplicite e alla codifica di transazioni efficienti nella documentazione online di SQL Server.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Viene inoltre illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction is rolled back on any error.</source>
          <target state="translated">Il rollback della transazione su qualsiasi errore.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> gestione degli errori viene utilizzata per gestire eventuali errori durante il tentativo di eseguire il commit o il rollback della transazione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>No transaction name was specified.</source>
          <target state="translated">Non è stato specificato alcun nome di transazione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">È già stato eseguito il rollback o il commit della transazione.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The connection is broken.</source>
          <target state="translated">La connessione non funziona.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The name of the savepoint.</source>
          <target state="translated">Nome del punto di salvataggio.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</source>
          <target state="translated">Crea un punto di salvataggio nella transazione, utilizzabile per eseguire il rollback di una parte della transazione, e specifica il nome del punto di salvataggio.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> metodo è equivalente all'istruzione SAVE TRANSACTION Transact-SQL.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The value used in the <ph id="ph1">`savePoint`</ph> parameter can be the same value used in the <ph id="ph2">`transactionName`</ph> parameter of some implementations of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> method.</source>
          <target state="translated">Il valore utilizzato per il <ph id="ph1">`savePoint`</ph> parametro può essere lo stesso valore utilizzato nel <ph id="ph2">`transactionName`</ph> parametro di alcune implementazioni del <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>Savepoints offer a mechanism to roll back parts of transactions.</source>
          <target state="translated">I punti di salvataggio offrono un meccanismo per eseguire il rollback di parti delle transazioni.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>You create a savepoint using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method, and then later call the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method to roll back to the savepoint instead of rolling back to the start of the transaction.</source>
          <target state="translated">Si crea un punto di salvataggio tramite il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> (metodo) e chiamare successivamente il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> metodo per eseguire il rollback del punto di salvataggio invece del rollback all'inizio della transazione.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di eseguire il commit della transazione.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">È già stato eseguito il rollback o il commit della transazione.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The connection is broken.</source>
          <target state="translated">La connessione non funziona.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>