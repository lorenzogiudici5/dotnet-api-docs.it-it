<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlCommandBuilder.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51d6c2a42dc06d05c2f30996ed8802e30cd2597f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d6c2a42dc06d05c2f30996ed8802e30cd2597f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated SQL Server database.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>This class cannot be inherited.</source>
          
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated instance of SQL Server.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> non genera automaticamente le istruzioni Transact-SQL necessarie per risolvere le modifiche apportate a un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con l'istanza associata di SQL Server.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object to automatically generate Transact-SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Tuttavia, è possibile creare un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> oggetto per generare automaticamente le istruzioni Transact-SQL per gli aggiornamenti a tabella singola, se si imposta la <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Then, any additional Transact-SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">Quindi, generate da qualsiasi istruzioni Transact-SQL aggiuntive che non si imposta la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registra se stesso come un listener per <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> eventi ogni volta che si imposta la <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">È possibile associare solo uno <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> oggetto tra loro in una sola volta.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">Per generare istruzioni INSERT, UPDATE o DELETE, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> utilizza il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> proprietà da recuperare automaticamente un set di metadati richiesto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved, such as after the first update, you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">Se si modifica il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> dopo aver recuperato i metadati, ad esempio dopo il primo aggiornamento, è necessario chiamare il <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> metodo per aggiornare i metadati.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated">È inoltre necessario che <ph id="ph1">`SelectCommand`</ph> restituisca almeno una chiave primaria o una colonna univoca.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If none are present, an <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> exception is generated, and the commands are not generated.</source>
          <target state="translated">Se è presente nessuno, un <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> viene generata l'eccezione e i comandi non vengono generati.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> utilizza inoltre il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> proprietà a cui fa riferimento il <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if one or more of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">L'utente deve chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se uno o più di queste proprietà vengono modificati o se il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> stessa viene sostituita.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">In caso contrario il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> mantengono i valori precedenti.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> viene annullata l'associazione di <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, e i comandi generati non vengono più utilizzati.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, along <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, to select rows from a data source.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> e <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>per selezionare le righe da un'origine dati.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table.</source>
          <target state="translated">Nell'esempio viene passato a una stringa di connessione, una stringa di query che rappresenta un'istruzione Transact-SQL SELECT e una stringa che rappresenta il nome della tabella di database.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">L'esempio crea quindi un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registra se stesso come un listener per <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> gli eventi generati dal <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specificato in questa proprietà.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Quando si crea una nuova istanza della <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, qualsiasi esistente <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associato a questo <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> viene rilasciato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>A string that indicates the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Stringa che indica il separatore di catalogo da utilizzare con un'istanza di <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registra se stesso come un listener per <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> gli eventi generati dal <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specificato in questa proprietà.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Quando si crea una nuova istanza della <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, qualsiasi esistente <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associato a questo <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> viene rilasciato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id="ph2">`SqlDbCommand`</ph>.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> sovrascrive qualsiasi informazione esistente sui parametri per il <ph id="ph2">`SqlDbCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> richiede una chiamata aggiuntiva al database per ottenere le informazioni.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">Se le informazioni sui parametri è noto in anticipo, risulta più efficiente per popolare la raccolta di parametri impostando le informazioni in modo esplicito.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You can only use <ph id="ph1">`DeriveParameters`</ph> with stored procedures.</source>
          <target state="translated">È possibile utilizzare solo <ph id="ph1">`DeriveParameters`</ph> con le stored procedure.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> with extended stored procedures.</source>
          <target state="translated">Non è possibile utilizzare <ph id="ph1">`DeriveParameters`</ph> con stored procedure estese.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> to populate the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">Non è possibile utilizzare <ph id="ph1">`DeriveParameters`</ph> per popolare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph> con le istruzioni Transact-SQL arbitrarie, ad esempio un'istruzione SELECT con parametri.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>configurazione dei parametri e tipi di dati di parametro<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The command text is not a valid stored procedure name.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions on the database.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Il passaggio di <ph id="ph1">`true`</ph> per il <ph id="ph2">`useColumnsForParameterNames`</ph> parametro consente di forzare il <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Questo ha esito positivo solo se vengono soddisfatte le condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> raccolta è stata specificata e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">Il nome di parametro generato soddisfa i criteri specificati nel <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> espressione regolare di raccolta.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> raccolta specificata.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generato l'istruzione Transact-SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni Transact-SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions.</source>
          
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generato l'istruzione Transact-SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni Transact-SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generato l'istruzione Transact-SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni Transact-SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Il passaggio di <ph id="ph1">`true`</ph> per il <ph id="ph2">`useColumnsForParameterNames`</ph> parametro consente di forzare il <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Questo ha esito positivo solo se vengono soddisfatte le condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> raccolta è stata specificata e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">Il nome di parametro generato soddisfa i criteri specificati nel <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> espressione regolare di raccolta.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> raccolta specificata.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generato l'istruzione Transact-SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni Transact-SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform updates.</source>
          
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generato l'istruzione Transact-SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni Transact-SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates.</source>
          
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificare il <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> valore e quindi impostato in modo esplicito che il <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generato l'istruzione Transact-SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni Transact-SQL vengono generate quando l'applicazione chiama uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Il passaggio di <ph id="ph1">`true`</ph> per il <ph id="ph2">`useColumnsForParameterNames`</ph> parametro consente di forzare il <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Questo ha esito positivo solo se vengono soddisfatte le condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> raccolta è stata specificata e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">Il nome di parametro generato soddisfa i criteri specificati nel <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> espressione regolare di raccolta.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> restituito dal <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> metodo chiamare e trovato nel <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> raccolta specificata.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la generazione di comandi tramite commandbuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The starting character or characters to use.</source>
          <target state="translated">Il carattere iniziale o i caratteri da utilizzare.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">Il valore predefinito è una stringa vuota.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">Anche se non è possibile modificare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> proprietà dopo che un'istruzione insert, update o delete comando è stato generato, è possibile modificare le impostazioni dopo la chiamata di <ph id="ph3">`Update`</ph> metodo di un oggetto DataAdapter.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</source>
          
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">Il carattere o i caratteri finali da utilizzare.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">Il valore predefinito è una stringa vuota.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">Anche se non è possibile modificare il <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> proprietà dopo che un'istruzione insert, update o delete è stata generata l'operazione, è possibile modificare le impostazioni dopo la chiamata di <ph id="ph3">`Update`</ph> metodo di un oggetto DataAdapter.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">Carattere da utilizzare come separatore di schema.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">In genere, i server di database indicano lo schema di un identificatore separando il nome dello schema dall'identificatore con un carattere.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">Ad esempio, SQL Server viene utilizzato un periodo, creando identificatori completi, ad esempio Person. CustomerName, dove "Person" è il nome dello schema e "CustomerName" è l'identificatore.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Setting this property lets developers modify this behavior.</source>
          <target state="translated">Impostazione di questa proprietà consente agli sviluppatori di modificare questo comportamento.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>This includes correctly unescaping any embedded quotes in the identifier.</source>
          
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly unescaped.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>