<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce02332bd5cef1be5bc77ad2a4706ed56eef2c00" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40212174" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oggetto <see cref="T:System.Data.SqlClient.SqlDependency" /> rappresenta una dipendenza per notifica di query fra un'applicazione e un'istanza di SQL Server. Un'applicazione può creare un oggetto <see cref="T:System.Data.SqlClient.SqlDependency" /> e registrarsi per ricevere notifiche tramite il gestore eventi <see cref="T:System.Data.SqlClient.OnChangeEventHandler" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> è ideale per la memorizzazione nella cache gli scenari, in cui l'applicazione ASP.NET o il servizio di livello intermedio deve conservare alcune informazioni memorizzate nella cache in memoria. <xref:System.Data.SqlClient.SqlDependency> Consente di ricevere notifiche quando i dati originali nel database viene modificato in modo che la cache può essere aggiornata.  
  
 Per impostare una dipendenza, è necessario associare una <xref:System.Data.SqlClient.SqlDependency> a uno o più oggetti <xref:System.Data.SqlClient.SqlCommand> oggetti. Per ricevere notifiche, è necessario sottoscrivere il <xref:System.Data.SqlClient.SqlDependency.OnChange> evento. Per altre informazioni sui requisiti per la creazione di query per le notifiche, vedere [funziona con le notifiche delle Query](/sql/relational-databases/native-client/features/working-with-query-notifications).
  
> [!NOTE]
> <xref:System.Data.SqlClient.SqlDependency> è stato progettato per essere utilizzato in ASP.NET o servizi di livello intermedio in cui è presente un numero relativamente ridotto di server con dipendenze attive sul database. Non è stato progettato per l'uso nelle applicazioni client, in cui si hanno centinaia o migliaia di computer client <xref:System.Data.SqlClient.SqlDependency> oggetti impostati per un singolo server di database. Se si sviluppa un'applicazione in cui è necessario le notifiche di frazioni di secondo affidabili quando i dati vengono modificati, consultare le sezioni [pianificazione di una strategia di notifiche di Query efficienti](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#planning-an-efficient-query-notifications-strategy) e [alternative alla Query Le notifiche](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#alternatives-to-query-notifications) nella [pianificazione delle notifiche](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v%3dsql.105)) articolo.
  
 Per altre informazioni, vedere [notifiche di Query in SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) e [creazione di soluzioni di notifica](https://docs.microsoft.com/previous-versions/sql/sql-server-2005/ms171065(v%3dsql.90)).  
  
> [!NOTE]
>  Il <xref:System.Data.SqlClient.SqlDependency.OnChange> evento può essere generato in un thread diverso dal thread che ha avviato l'esecuzione del comando.  
  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. 
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlDependency" /> con le impostazioni predefinite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore inizializza il <xref:System.Data.SqlClient.SqlDependency> usando il nome predefinito del servizio Service Broker e il timeout dell'oggetto. A un certo punto dopo la costruzione, è necessario usare il <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> per associare uno o più comandi a questo metodo <xref:System.Data.SqlClient.SqlDependency> oggetto.  
  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Per altre informazioni, vedere [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [funziona con le notifiche delle Query](/sql/connect/oledb/features/working-with-query-notifications).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">Oggetto <see cref="T:System.Data.SqlClient.SqlCommand" /> da associare all'oggetto <see cref="T:System.Data.SqlClient.SqlDependency" />. Il costruttore imposterà un oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> e lo associerà al comando.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlDependency" /> e la associa al parametro <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internamente, questo costruttore crea un'istanza di <xref:System.Data.Sql.SqlNotificationRequest> classe e lo associa a un <xref:System.Data.SqlClient.SqlCommand> oggetto.  
  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Per altre informazioni, vedere [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [funziona con le notifiche delle Query](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="command" /> è NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Alla proprietà <see cref="T:System.Data.SqlClient.SqlCommand" /> dell'oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> è già stato assegnato un oggetto <see cref="P:System.Data.SqlClient.SqlCommand.Notification" />, ma tale oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> non è associato a questa dipendenza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">Oggetto <see cref="T:System.Data.SqlClient.SqlCommand" /> da associare all'oggetto <see cref="T:System.Data.SqlClient.SqlDependency" />. Il costruttore imposta un oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> e lo associerà al comando.</param>
        <param name="options">Opzioni per la richiesta di notifica che verranno utilizzate dalla dipendenza.  <c>null</c> per usare il servizio predefinito.</param>
        <param name="timeout">Timeout per questa notifica, in secondi. Il valore predefinito 0 indica che deve essere utilizzato il valore di timeout del server.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Data.SqlClient.SqlDependency" />, la associa al parametro <see cref="T:System.Data.SqlClient.SqlCommand" /> e specifica le opzioni di notifica e un valore di timeout.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Per altre informazioni, vedere [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [funziona con le notifiche delle Query](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="command" /> è NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore di timeout è minore di zero.</exception>
        <exception cref="T:System.InvalidOperationException">Alla proprietà <see cref="T:System.Data.SqlClient.SqlCommand" /> dell'oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> è già stato assegnato un oggetto <see cref="P:System.Data.SqlClient.SqlCommand.Notification" />, ma tale oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> non è associato a questa dipendenza.  
  
È stato effettuato un tentativo di creare un'istanza di **SqlDependency** dall'interno di SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">Oggetto <see cref="T:System.Data.SqlClient.SqlCommand" /> contenente un'istruzione valida per le notifiche.</param>
        <summary>Associa un oggetto <see cref="T:System.Data.SqlClient.SqlCommand" /> a questa istanza di <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Per altre informazioni, vedere [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [funziona con le notifiche delle Query](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="command" /> è null.</exception>
        <exception cref="T:System.InvalidOperationException">Alla proprietà <see cref="T:System.Data.SqlClient.SqlCommand" /> dell'oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> è già stato assegnato un oggetto <see cref="P:System.Data.SqlClient.SqlCommand.Notification" />, ma tale oggetto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> non è associato a questa dipendenza.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se uno degli insiemi di risultati associati alla dipendenza è cambiato.</summary>
        <value>Valore Boolean che indica se uno degli insiemi di risultati è cambiato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non si usa la <xref:System.Data.SqlClient.SqlDependency.OnChange> evento, è possibile controllare il <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> proprietà per determinare se i risultati della query sono state modificate.  
  
 Il <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> proprietà non implica necessariamente un cambiamento nei dati. Altre circostanze, ad esempio timeout scaduto e impossibilità di impostare la richiesta di notifica, generare un evento di modifica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che identifica in modo univoco questa istanza della classe <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <value>Rappresentazione in forma di stringa di un GUID generato per ciascuna istanza della classe <see cref="T:System.Data.SqlClient.SqlDependency" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency.Id%2A> proprietà viene utilizzata per identificare in modo univoco un determinato <xref:System.Data.SqlClient.SqlDependency> istanza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene ricevuta una notifica per uno qualsiasi dei comandi associati all'oggetto <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> si verifica quando cambiano i risultati del comando associato. Se non si usa <xref:System.Data.SqlClient.SqlDependency.OnChange>, è possibile controllare il <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> proprietà per determinare se i risultati della query sono stati modificati.  
  
 Il <xref:System.Data.SqlClient.SqlDependency.OnChange> eventi non implicano necessariamente un cambiamento nei dati. Altre circostanze, ad esempio timeout è scaduto e comportano l'impossibilità di impostare la richiesta di notifica, <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avvia il listener per la ricezione delle notifiche relative alle modifiche apportate alla dipendenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency> listener verrà riavviato quando si verifica un errore nella connessione di SQL Server.  
  
 Più chiamate al metodo il <xref:System.Data.SqlClient.SqlDependency.Start%2A> metodo può essere trasformato, soggetto alle restrizioni seguenti:  
  
-   Più chiamate con parametri identici (la stessa stringa di connessione e le credenziali di Windows del thread chiamante) sono valide.  
  
-   Più chiamate con stringhe di connessione diverse sono valide purché:  
  
    -   Ogni stringa di connessione specifica un database diverso, o  
  
    -   Ogni stringa di connessione specifica un altro utente, o  
  
    -   Le chiamate proverranno dai domini applicazione diversi.  
  
 È possibile rendere la <xref:System.Data.SqlClient.SqlDependency> funzionano correttamente per le applicazioni che usano più thread per rappresentare le credenziali utente diverse senza assegnare il ruolo dbo al gruppo, perché utenti diversi possono effettuare la sottoscrizione e in ascolto (usando <xref:System.Web.Caching.SqlCacheDependency> o <xref:System.Data.SqlClient.SqlCommand>) a una coda di notifica creata da un amministratore. Quando viene avviato il dominio applicazione in questione, chiama il metodo Start con le credenziali (Windows) di un utente che dispone dell'autorizzazione per l'inizializzazione di una servizio/coda (le autorizzazioni CREATE QUEUE e crea servizio per il database). Assicurarsi che l'avvio viene chiamato solo una volta per ogni AppDomain, in caso contrario, viene generata un'eccezione di ambiguità.  Il thread utente deve disporre dell'autorizzazione per la sottoscrizione alla notifica (l'autorizzazione SUBSCRIBE QUERY NOTIFICATIONS per il database). <xref:System.Data.SqlClient.SqlDependency> la richiesta di sottoscrizione di un utente senza privilegi di amministratore per il servizio/coda creato dall'amministratore, verranno associati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione per l'istanza di SQL Server da cui ricevere le notifiche di modifiche.</param>
        <summary>Avvia il listener per ricevere le notifiche relative alle modifiche subite dalla dipendenza dall'istanza di SQL Server specificata dalla stringa di connessione.</summary>
        <returns>**true** se l'inizializzazione del listener ha avuto esito positivo, **false** se esiste già un listener compatibile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo avvia il listener per il <xref:System.AppDomain> per ricevere le notifiche di dipendenza dall'istanza di SQL Server specificata dal `connectionString` parametro. Questo metodo può essere chiamato più volte con stringhe di connessione diverse per più server.  
  
 Per osservazioni aggiuntive, vedere <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="connectionString" /> è NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Il parametro <paramref name="connectionString" /> è lo stesso utilizzato per una precedente chiamata al metodo, ma gli altri parametri sono diversi.  
  
Il metodo è stato chiamato dall'interno di CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione di sicurezza dall'accesso di codice (CAS, Code Access Security) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> richiesta.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">È stata effettuata una chiamata successiva al metodo con un parametro <paramref name="connectionString" /> equivalente, ma con un utente diverso, o con un utente che non utilizza lo stesso schema per impostazione predefinita.  
  
Anche qualsiasi eccezione **SqlClient** sottostante.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione per l'istanza di SQL Server da cui ricevere le notifiche di modifiche.</param>
        <param name="queue">Coda del Service Broker di SQL Server da utilizzare. Se <see langword="null" />, viene utilizzata la coda predefinita.</param>
        <summary>Avvia il listener per ricevere le notifiche relative alle modifiche apportate alla dipendenza dall'istanza di SQL Server specificata dalla stringa di connessione utilizzando la coda del Service Broker di SQL Server specificata.</summary>
        <returns>**true** se l'inizializzazione del listener ha avuto esito positivo, **false** se esiste già un listener compatibile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo avvia il listener per il <xref:System.AppDomain> per ricevere le notifiche di dipendenza dall'istanza di SQL Server specificata dal `connectionString` parametro. Questo metodo può essere chiamato più volte con stringhe di connessione diverse per più server.  
  
 Se viene specificato alcun nome di coda, <xref:System.Data.SqlClient.SqlDependency> crea una coda temporanea e del servizio sul server che viene usato per l'intero processo, anche se il processo prevede più <xref:System.AppDomain>. La coda e il servizio vengono rimossi automaticamente alla chiusura dell'applicazione.  
  
 Per osservazioni aggiuntive, vedere <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="connectionString" /> è NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Il parametro <paramref name="connectionString" /> è lo stesso utilizzato per una precedente chiamata al metodo, ma gli altri parametri sono diversi.  
  
Il metodo è stato chiamato dall'interno di CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione di sicurezza dall'accesso di codice (CAS, Code Access Security) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> richiesta.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">È stata effettuata una chiamata successiva al metodo con un parametro <paramref name="connectionString" /> equivalente, ma con un utente diverso, o con un utente che non utilizza lo stesso schema per impostazione predefinita.  
  
Anche qualsiasi eccezione **SqlClient** sottostante.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Arresta un listener per una connessione specificata in una chiamata <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> precedente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency> listener verrà riavviato quando si verifica un errore nella connessione di SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione per l'istanza di SQL Server utilizzata in una chiamata <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> precedente.</param>
        <summary>Arresta un listener per una connessione specificata in una chiamata <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> precedente.</summary>
        <returns>**true** se il listener è stato interrotto completamente, **false** se l'oggetto <see cref="T:System.AppDomain" /> è stato dissociato dal listener ma esiste almeno un altro oggetto <see cref="T:System.AppDomain" /> che usa lo stesso listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency.Stop%2A> metodo deve essere chiamato per ogni <xref:System.Data.SqlClient.SqlDependency.Start%2A> chiamare. Solo un determinato listener arresta completamente quando riceve lo stesso numero di <xref:System.Data.SqlClient.SqlDependency.Stop%2A> richiede come <xref:System.Data.SqlClient.SqlDependency.Start%2A> richieste.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="connectionString" /> è NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Il metodo è stato chiamato dall'interno di SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione di sicurezza dall'accesso di codice (CAS, Code Access Security) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> richiesta.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">È stata generata un'eccezione **SqlClient** sottostante.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione per l'istanza di SQL Server utilizzata in una chiamata <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> precedente.</param>
        <param name="queue">Coda del Service Broker di SQL Server utilizzata in una chiamata <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> precedente.</param>
        <summary>Arresta un listener per una connessione specificata in una chiamata <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> precedente.</summary>
        <returns>**true** se il listener è stato interrotto completamente, **false** se l'oggetto <see cref="T:System.AppDomain" /> è stato dissociato dal listener ma esiste almeno un altro oggetto <see cref="T:System.AppDomain" /> che usa lo stesso listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency.Stop%2A> metodo deve essere chiamato per ogni <xref:System.Data.SqlClient.SqlDependency.Start%2A> chiamare. Solo un determinato listener arresta completamente quando riceve lo stesso numero di <xref:System.Data.SqlClient.SqlDependency.Stop%2A> richiede come <xref:System.Data.SqlClient.SqlDependency.Start%2A> richieste.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="connectionString" /> è NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Il metodo è stato chiamato dall'interno di SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione di sicurezza dall'accesso di codice (CAS, Code Access Security) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> richiesta.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">È stata generata un'eccezione **SqlClient** sottostante.</exception>
      </Docs>
    </Member>
  </Members>
</Type>