<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c83c563de4e2500f12149fe24a87813d206f6765" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37672013" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.Data.SqlClient.SqlDependency" /> object represents a query notification dependency between an application and an instance of SQL Server. An application can create a <see cref="T:System.Data.SqlClient.SqlDependency" /> object and register to receive notifications via the <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> event handler.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> è ideale per la memorizzazione nella cache gli scenari, in cui l'applicazione ASP.NET o il servizio di livello intermedio deve conservare alcune informazioni memorizzate nella cache in memoria. <xref:System.Data.SqlClient.SqlDependency> Consente di ricevere notifiche quando i dati originali nel database viene modificato in modo che la cache può essere aggiornata.  
  
 Per impostare una dipendenza, è necessario associare una <xref:System.Data.SqlClient.SqlDependency> a uno o più oggetti <xref:System.Data.SqlClient.SqlCommand> oggetti. Per ricevere notifiche, è necessario sottoscrivere il <xref:System.Data.SqlClient.SqlDependency.OnChange> evento. Per altre informazioni sui requisiti per la creazione di query per le notifiche, vedere "Creazione di una Query da notificare" nella documentazione Online di SQL Server.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency> è stato progettato per essere utilizzato in ASP.NET o servizi di livello intermedio in cui è presente un numero relativamente ridotto di server con dipendenze attive sul database. Non è stato progettato per l'uso nelle applicazioni client, in cui si hanno centinaia o migliaia di computer client <xref:System.Data.SqlClient.SqlDependency> oggetti impostati per un singolo server di database. Se si sviluppa un'applicazione in cui è necessario le notifiche di frazioni di secondo affidabili quando i dati vengono modificati, consultare le sezioni **pianificazione di una strategia di notifiche di Query efficienti** e **alternative alla Query Le notifiche** nella [pianificazione delle notifiche](http://go.microsoft.com/fwlink/?LinkId=211984) argomento nella documentazione Online di SQL Server.  
  
 Per altre informazioni, vedere [notifiche di Query in SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) e "Building Notification Solutions" nella documentazione Online di SQL Server.  
  
> [!NOTE]
>  Il <xref:System.Data.SqlClient.SqlDependency.OnChange> evento può essere generato in un thread diverso dal thread che ha avviato l'esecuzione del comando.  
  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Nella tabella seguente sono forniti i collegamenti alla documentazione sulle notifiche di query e Service Broker disponibili nella documentazione online di SQL Server.  
  
 **Documentazione online di SQL Server**  
  
-   [Creazione di una Query per la notifica](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Considerazioni sulla sicurezza per Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicurezza e protezione (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Considerazioni sulla sicurezza per Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Autorizzazioni di notifica delle query](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Considerazioni sulle funzionalità internazionali di Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Considerazioni sulla progettazione di soluzioni (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centro informazioni per sviluppatori di Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guida per sviluppatori (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class with the default settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore inizializza il <xref:System.Data.SqlClient.SqlDependency> usando il nome predefinito del servizio Service Broker e il timeout dell'oggetto. A un certo punto dopo la costruzione, è necessario usare il <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> per associare uno o più comandi a questo metodo <xref:System.Data.SqlClient.SqlDependency> oggetto.  
  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Nella tabella seguente sono forniti i collegamenti alla documentazione sulle notifiche di query e Service Broker disponibili nella documentazione online di SQL Server.  
  
 **Documentazione online di SQL Server**  
  
-   [Creazione di una Query per la notifica](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Considerazioni sulla sicurezza per Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicurezza e protezione (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Considerazioni sulla sicurezza per Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Autorizzazioni di notifica delle query](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Considerazioni sulle funzionalità internazionali di Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Considerazioni sulla progettazione di soluzioni (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centro informazioni per sviluppatori di Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guida per sviluppatori (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor will set up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class and associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internamente, questo costruttore crea un'istanza di <xref:System.Data.Sql.SqlNotificationRequest> classe e lo associa a un <xref:System.Data.SqlClient.SqlCommand> oggetto.  
  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Nella tabella seguente sono forniti i collegamenti alla documentazione sulle notifiche di query e Service Broker disponibili nella documentazione online di SQL Server.  
  
 **Documentazione online di SQL Server**  
  
-   [Creazione di una Query per la notifica](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Considerazioni sulla sicurezza per Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicurezza e protezione (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Considerazioni sulla sicurezza per Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Autorizzazioni di notifica delle query](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Considerazioni sulle funzionalità internazionali di Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Considerazioni sulla progettazione di soluzioni (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centro informazioni per sviluppatori di Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guida per sviluppatori (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor sets up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <param name="options">The notification request options to be used by this dependency.  <c>null</c> to use the default service.</param>
        <param name="timeout">The time-out for this notification in seconds. The default is 0, indicating that the server's time-out should be used.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class, associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter, and specifies notification options and a time-out value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Nella tabella seguente sono forniti i collegamenti alla documentazione sulle notifiche di query e Service Broker disponibili nella documentazione online di SQL Server.  
  
 **Documentazione online di SQL Server**  
  
-   [Creazione di una Query per la notifica](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Considerazioni sulla sicurezza per Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicurezza e protezione (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Considerazioni sulla sicurezza per Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Autorizzazioni di notifica delle query](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Considerazioni sulle funzionalità internazionali di Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Considerazioni sulla progettazione di soluzioni (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centro informazioni per sviluppatori di Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guida per sviluppatori (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The time-out value is less than zero.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.  An attempt was made to create a **SqlDependency** instance from within SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A <see cref="T:System.Data.SqlClient.SqlCommand" /> object containing a statement that is valid for notifications.</param>
        <summary>Associates a <see cref="T:System.Data.SqlClient.SqlCommand" /> object with this <see cref="T:System.Data.SqlClient.SqlDependency" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le notifiche di query sono supportate solo per le istruzioni SELECT che soddisfano un elenco di specifici requisiti. Nella tabella seguente sono forniti i collegamenti alla documentazione sulle notifiche di query e Service Broker disponibili nella documentazione online di SQL Server.  
  
 **Documentazione online di SQL Server**  
  
-   [Creazione di una Query per la notifica](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Considerazioni sulla sicurezza per Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicurezza e protezione (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Considerazioni sulla sicurezza per Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Autorizzazioni di notifica delle query](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Considerazioni sulle funzionalità internazionali di Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Considerazioni sulla progettazione di soluzioni (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centro informazioni per sviluppatori di Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guida per sviluppatori (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is null.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether one of the result sets associated with the dependency has changed.</summary>
        <value>Valore booleano che indica se uno del risultato del set è stato modificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non si usa la <xref:System.Data.SqlClient.SqlDependency.OnChange> evento, è possibile controllare il <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> proprietà per determinare se i risultati della query sono state modificate.  
  
 Il <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> proprietà non implica necessariamente un cambiamento nei dati. Altre circostanze, ad esempio timeout scaduto e impossibilità di impostare la richiesta di notifica, generare un evento di modifica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that uniquely identifies this instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
        <value>Rappresentazione di stringa del GUID che viene generato per ogni istanza del <see cref="T:System.Data.SqlClient.SqlDependency" /> classe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency.Id%2A> proprietà viene utilizzata per identificare in modo univoco un determinato <xref:System.Data.SqlClient.SqlDependency> istanza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a notification is received for any of the commands associated with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> si verifica quando cambiano i risultati del comando associato. Se non si usa <xref:System.Data.SqlClient.SqlDependency.OnChange>, è possibile controllare il <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> proprietà per determinare se i risultati della query sono stati modificati.  
  
 Il <xref:System.Data.SqlClient.SqlDependency.OnChange> eventi non implicano necessariamente un cambiamento nei dati. Altre circostanze, ad esempio timeout è scaduto e comportano l'impossibilità di impostare la richiesta di notifica, <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Starts the listener for receiving dependency change notifications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency> listener verrà riavviato quando si verifica un errore nella connessione di SQL Server.  
  
 Più chiamate al metodo il <xref:System.Data.SqlClient.SqlDependency.Start%2A> metodo può essere trasformato, soggetto alle restrizioni seguenti:  
  
-   Più chiamate con parametri identici (la stessa stringa di connessione e le credenziali di Windows del thread chiamante) sono valide.  
  
-   Più chiamate con stringhe di connessione diverse sono valide purché:  
  
    -   Ogni stringa di connessione specifica un database diverso, o  
  
    -   Ogni stringa di connessione specifica un altro utente, o  
  
    -   Le chiamate proverranno dai domini applicazione diversi.  
  
 È possibile rendere la <xref:System.Data.SqlClient.SqlDependency> funzionano correttamente per le applicazioni che usano più thread per rappresentare le credenziali utente diverse senza assegnare il ruolo dbo al gruppo, perché utenti diversi possono effettuare la sottoscrizione e in ascolto (usando <xref:System.Web.Caching.SqlCacheDependency> o <xref:System.Data.SqlClient.SqlCommand>) a una coda di notifica creata da un amministratore. Quando viene avviato il dominio applicazione in questione, chiama il metodo Start con le credenziali (Windows) di un utente che dispone dell'autorizzazione per l'inizializzazione di una servizio/coda (le autorizzazioni CREATE QUEUE e crea servizio per il database). Assicurarsi che l'avvio viene chiamato solo una volta per ogni AppDomain, in caso contrario, viene generata un'eccezione di ambiguità.  Il thread utente deve disporre dell'autorizzazione per la sottoscrizione alla notifica (l'autorizzazione SUBSCRIBE QUERY NOTIFICATIONS per il database). <xref:System.Data.SqlClient.SqlDependency> la richiesta di sottoscrizione di un utente senza privilegi di amministratore per il servizio/coda creato dall'amministratore, verranno associati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo avvia il listener per il <xref:System.AppDomain> per ricevere le notifiche di dipendenza dall'istanza di SQL Server specificata dal `connectionString` parametro. Questo metodo può essere chiamato più volte con stringhe di connessione diverse per più server.  
  
 Per osservazioni aggiuntive, vedere <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter with a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <param name="queue">An existing SQL Server Service Broker queue to be used. If <see langword="null" />, the default queue is used.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string using the specified SQL Server Service Broker queue.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo avvia il listener per il <xref:System.AppDomain> per ricevere le notifiche di dipendenza dall'istanza di SQL Server specificata dal `connectionString` parametro. Questo metodo può essere chiamato più volte con stringhe di connessione diverse per più server.  
  
 Se viene specificato alcun nome di coda, <xref:System.Data.SqlClient.SqlDependency> crea una coda temporanea e del servizio sul server che viene usato per l'intero processo, anche se il processo prevede più <xref:System.AppDomain>. La coda e il servizio vengono rimossi automaticamente alla chiusura dell'applicazione.  
  
 Per osservazioni aggiuntive, vedere <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter but a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency> listener verrà riavviato quando si verifica un errore nella connessione di SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there are is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency.Stop%2A> metodo deve essere chiamato per ogni <xref:System.Data.SqlClient.SqlDependency.Start%2A> chiamare. Solo un determinato listener arresta completamente quando riceve lo stesso numero di <xref:System.Data.SqlClient.SqlDependency.Stop%2A> richiede come <xref:System.Data.SqlClient.SqlDependency.Start%2A> richieste.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">An underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <param name="queue">The SQL Server Service Broker queue that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlClient.SqlDependency.Stop%2A> metodo deve essere chiamato per ogni <xref:System.Data.SqlClient.SqlDependency.Start%2A> chiamare. Solo un determinato listener arresta completamente quando riceve lo stesso numero di <xref:System.Data.SqlClient.SqlDependency.Stop%2A> richiede come <xref:System.Data.SqlClient.SqlDependency.Start%2A> richieste.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">And underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
  </Members>
</Type>