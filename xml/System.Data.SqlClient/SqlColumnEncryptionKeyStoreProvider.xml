<Type Name="SqlColumnEncryptionKeyStoreProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00c3dc0c0021ea648e6e76a3a56541a3e7aebbff" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36680107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionKeyStoreProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionKeyStoreProvider abstract" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionKeyStoreProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe di base per tutti i provider dellâ€™archivio chiavi. Un provider personalizzato deve derivare da questa classe, eseguire l'override delle relative funzioni membro e quindi registrarla usando SqlConnection.RegisterColumnEncryptionKeyStoreProviders(). Per informazioni dettagliate, vedere [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionKeyStoreProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionKeyStoreProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza di SqlColumnEncryptionKeyStoreProviderClass.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">Percorso di chiave master.</param>
        <param name="encryptionAlgorithm">Algoritmo di crittografia.</param>
        <param name="encryptedColumnEncryptionKey">Chiave di crittografia di colonna crittografata.</param>
        <summary>Esegue la decrittografia del valore crittografato specificato di una chiave di crittografia di colonna. Il valore dovrebbe essere crittografato usando la chiave master di colonna con il percorso di chiave specificato e usando l'algoritmo specificato.</summary>
        <returns>Restituisce <see cref="T:System.Byte" />.   
Chiave di crittografia di colonna decrittografata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">Percorso di chiave master.</param>
        <param name="encryptionAlgorithm">Algoritmo di crittografia.</param>
        <param name="columnEncryptionKey">Chiave di crittografia di colonna crittografata.</param>
        <summary>Crittografa una chiave di crittografia di colonna usando la chiave master di colonna con il percorso di chiave specificato e usando l'algoritmo specificato.</summary>
        <returns>Restituisce <see cref="T:System.Byte" />.   
Chiave di crittografia di colonna crittografata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="abstract member SignColumnMasterKeyMetadata : string * bool -&gt; byte[]&#xA;override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">Percorso della chiave master di colonna.</param>
        <param name="allowEnclaveComputations">
          <see langword="true" /> per indicare che la chiave master di colonna supporta i calcoli enclave; in caso contrario, <see langword="false" />.</param>
        <summary>Se implementato in una classe derivata, firma digitalmente i metadati di chiave master della colonna con la chiave master di colonna a cui fa riferimento il parametro <paramref name="masterKeyPath" />. I valori di input usati per generare la firma devono essere i valori specificati dei parametri <paramref name="masterKeyPath" /> e <paramref name="allowEnclaveComputations" />.</summary>
        <returns>Firma dei metadati della chiave master di colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per garantire che il <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> metodo non si interrompe le applicazioni basate su un'API precedente, genera un <xref:System.NotImplementedException> eccezione per impostazione predefinita.  
  
 Il <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> metodo verrÃ  utilizzato dagli strumenti client che generano le chiavi Master della colonna (CMK) per i clienti. <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> deve essere implementata dai provider dell'archivio chiavi corrispondenti che intendo usare zone franche con [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">In tutti i casi.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="abstract member VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool&#xA;override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">Percorso della chiave master di colonna.</param>
        <param name="allowEnclaveComputations">Indica che la chiave master di colonna supporta i calcoli enclave.</param>
        <param name="signature">Firma dei metadati della chiave master di colonna.</param>
        <summary>Se implementato in una classe derivata, questo metodo dovrebbe verificare la validitÃ  della firma specificata per la chiave master di colonna con il percorso di chiave e il comportamento di enclave specificati. L'implementazione predefinita genera NotImplementedException.</summary>
        <returns>Se implementato in una classe derivata, il metodo dovrebbe restituire true se la firma specificata Ã¨ valida o false se non Ã¨ valida. L'implementazione predefinita genera NotImplementedException.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>