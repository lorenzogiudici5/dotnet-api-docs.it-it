<Type Name="InertiaProcessor2D" FullName="System.Windows.Input.Manipulations.InertiaProcessor2D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa0ba327c15587eb184c809f1699ed9c026ddd1b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30648575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InertiaProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InertiaProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.InertiaProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class InertiaProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class InertiaProcessor2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b2485-101">Implementa l'estrapolazione della posizione, dell'orientamento e del raggio medio di una manipolazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b2485-101">Implements the extrapolation of a manipulation's position, orientation, and average radius.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2485-102">Un <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> consente all'applicazione di estrapolare percorso di un elemento, l'orientamento e altre proprietà, simulando un comportamento reale.</span><span class="sxs-lookup"><span data-stu-id="b2485-102">An <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> object enables your application to extrapolate an element's location, orientation, and other properties by simulating real-world behavior.</span></span>  
  
 <span data-ttu-id="b2485-103">Ad esempio, quando un utente si sposta un elemento e lo rilascia quindi, l'elemento può continuare a spostare decelerazione e quindi lentamente fino ad arrestarsi.</span><span class="sxs-lookup"><span data-stu-id="b2485-103">For instance, when a user moves an element and then releases it, the element can continue moving, decelerate, and then slowly stop.</span></span> <span data-ttu-id="b2485-104">Un processore di inerzia implementa questo comportamento facendo in modo i valori 2D affini (origine, scala, traslazione e rotazione) per modificare in un tempo specificato a una velocità di decelerazione specificata.</span><span class="sxs-lookup"><span data-stu-id="b2485-104">An inertia processor implements this behavior by causing the affine 2-D values (origin, scale, translation, and rotation) to change over a specified time at a specified deceleration rate.</span></span>  
  
 <span data-ttu-id="b2485-105">Un processore di inerzia da solo non causa un elemento da spostare e decelerazione.</span><span class="sxs-lookup"><span data-stu-id="b2485-105">An inertia processor by itself does not cause an element to move and decelerate.</span></span> <span data-ttu-id="b2485-106">L'applicazione riceve informazioni da un processore di inerzia e applica i valori in base alle esigenze per un elemento specifico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b2485-106">Your application receives information from an inertia processor and applies the values as needed to an application-specific element.</span></span> <span data-ttu-id="b2485-107">In genere, un'applicazione utilizza le informazioni ricevute da un processore di inerzia per modificare la posizione, dimensione o orientamento di un elemento.</span><span class="sxs-lookup"><span data-stu-id="b2485-107">Typically, an application uses the information received from an inertia processor to change the location, size or orientation of an element.</span></span>  
  
 <span data-ttu-id="b2485-108">L'elaborazione dell'inerzia viene in genere utilizzato in combinazione con l'elaborazione delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="b2485-108">Inertia processing is typically used in conjunction with manipulation processing.</span></span> <span data-ttu-id="b2485-109">Per altre informazioni, vedere la classe <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>.</span><span class="sxs-lookup"><span data-stu-id="b2485-109">For more information, see the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaProcessor2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InertiaProcessor2D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2485-110">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-110">Initializes a new instance of the <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(long timestamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp">
          <span data-ttu-id="b2485-111">Timestamp per completare l'estrapolazione, in cicli di 100 nanosecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-111">The timestamp to complete extrapolation, in 100-nanosecond ticks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2485-112">Completa l'estrapolazione finale usando il timestamp specificato e genera l'evento <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-112">Completes final extrapolation by using the specified timestamp and raises the <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2485-113">Timestamp sono espresso in unità di 100 nanosecondi.</span><span class="sxs-lookup"><span data-stu-id="b2485-113">Timestamps are in 100-nanosecond units.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2485-114">Nell'esempio seguente, un gestore eventi per il <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> evento controlla se l'elaborazione dell'inerzia è in esecuzione e in caso affermativo, arresta chiamando il <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="b2485-114">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> event checks to see if inertia processing is running and if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A> method.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b2485-115">Il parametro di timestamp è inferiore al timestamp iniziale o precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-115">The timestamp parameter is less than the initial or previous timestamp.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-116">Si verifica al completamento dell'estrapolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-116">Occurs when extrapolation has completed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-117">Si verifica quando viene modificata l'origine dell'estrapolazione o in seguito alla traslazione, alla scala o alla rotazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-117">Occurs when the extrapolation origin has changed or when translation, scaling, or rotation have occurred.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2485-118">Il <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> evento e <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> evento sono dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="b2485-118">The <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="b2485-119">In genere, è possibile utilizzare lo stesso gestore eventi per entrambi gli eventi.</span><span class="sxs-lookup"><span data-stu-id="b2485-119">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpansionBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpansionBehavior As InertiaExpansionBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ ExpansionBehavior { System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaExpansionBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-120">Ottiene o imposta il comportamento di espansione del processore di inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-120">Gets or sets the expansion behavior of the inertia processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2485-121">Comportamento di espansione del processore di inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-121">The expansion behavior of the inertia processor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialOriginX">
      <MemberSignature Language="C#" Value="public float InitialOriginX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialOriginX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialOriginX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialOriginX { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-122">Ottiene o imposta la coordinata X dell'origine iniziale, in unità di misura delle coordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-122">Gets or sets the x-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2485-123">Coordinata X dell'origine iniziale, in unità di misura delle coordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-123">The x-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2485-124">Il punto di origine è rappresentata la <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> e <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> proprietà è la posizione Media di tutti i manipolatori associata a un elemento.</span><span class="sxs-lookup"><span data-stu-id="b2485-124">The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.</span></span>  
  
 <span data-ttu-id="b2485-125">Un valore valido per <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> è un numero finito.</span><span class="sxs-lookup"><span data-stu-id="b2485-125">A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> is any finite number.</span></span> <span data-ttu-id="b2485-126">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="b2485-126">The default value is 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialOriginY">
      <MemberSignature Language="C#" Value="public float InitialOriginY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialOriginY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialOriginY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialOriginY { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-127">Ottiene o imposta la coordinata Y dell'origine iniziale, in unità di misura delle coordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-127">Gets or sets the y-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2485-128">Coordinata Y dell'origine iniziale, in unità di misura delle coordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-128">The y-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2485-129">Il punto di origine è rappresentata la <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> e <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> proprietà è la posizione Media di tutti i manipolatori associata a un elemento.</span><span class="sxs-lookup"><span data-stu-id="b2485-129">The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.</span></span>  
  
 <span data-ttu-id="b2485-130">Un valore valido per <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> è un numero finito.</span><span class="sxs-lookup"><span data-stu-id="b2485-130">A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> is any finite number.</span></span> <span data-ttu-id="b2485-131">Il valore predefinito è 0,0.</span><span class="sxs-lookup"><span data-stu-id="b2485-131">The default value is 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-132">Ottiene un valore che indica se l'inerzia è attualmente in corso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-132">Gets whether inertia is currently in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2485-133">Valore booleano che indica se l'inerzia è attualmente in corso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-133">A Boolean value indicating whether inertia is currently in progress.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2485-134">Nell'esempio seguente, un gestore eventi per il <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> eventi controlla se l'elaborazione dell'inerzia è in esecuzione e, in caso affermativo, arresta chiamando il <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> metodo.</span><span class="sxs-lookup"><span data-stu-id="b2485-134">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> event checks to see if inertia processing is running and, if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> method.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public bool Process (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Process(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Process (timestamp As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Process(long timestamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp">
          <span data-ttu-id="b2485-135">Timestamp per eseguire l'estrapolazione, in cicli di 100 nanosecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-135">The timestamp to perform extrapolation, in 100-nanosecond ticks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2485-136">Estrapola la posizione, l'orientamento e il raggio medio della manipolazione all'ora specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-136">Extrapolates the manipulation's position, orientation, and average radius at the specified time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2485-137">Posizione, orientamento e raggio medio della manipolazione all'ora specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-137">The manipulation's position, orientation, and average radius at the specified time.</span>
          </span>
          <span data-ttu-id="b2485-138">
            <see langword="true" /> se l'estrapolazione è in corso; <see langword="false" /> se l'estrapolazione è stata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-138">
              <see langword="true" /> if extrapolation is in progress; otherwise, <see langword="false" /> if extrapolation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2485-139">Timestamp sono espresso in unità di 100 nanosecondi.</span><span class="sxs-lookup"><span data-stu-id="b2485-139">Timestamps are in 100-nanosecond units.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b2485-140">Il parametro di timestamp è inferiore al timestamp iniziale o precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-140">The timestamp parameter is less than the initial or previous timestamp.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RotationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationBehavior As InertiaRotationBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ RotationBehavior { System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaRotationBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-141">Ottiene o imposta il comportamento di rotazione del processore di inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-141">Gets or sets the rotation behavior of the inertia processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2485-142">Comportamento di rotazione del processore di inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-142">The rotation behavior of the inertia processor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2485-143">Nell'esempio seguente, la <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> proprietà è impostata per consentire l'elaborazione dell'inerzia ruotare un oggetto tre-e-quarti dall'orientamento iniziale.</span><span class="sxs-lookup"><span data-stu-id="b2485-143">In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.InertiaParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.InertiaParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As InertiaParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::InertiaParameters2D ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.InertiaParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="b2485-144">Parametri da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-144">Parameters to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2485-145">Imposta i parametri nel processore a inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-145">Sets parameters on the inertia processor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslationBehavior As InertiaTranslationBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ TranslationBehavior { System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaTranslationBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2485-146">Ottiene o imposta il comportamento di traslazione del processore di inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-146">Gets or sets the translation behavior of the inertia processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2485-147">Comportamento di traslazione del processore di inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2485-147">The translation behavior of the inertia processor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>