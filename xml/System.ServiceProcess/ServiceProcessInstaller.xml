<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e74b3ded65de2cf8f02653a0912be16df26e0a19" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37611532" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />. This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ServiceProcess.ServiceProcessInstaller> esegue operazioni comuni a tutti i servizi in un file eseguibile. Utilizzato dall'utilità di installazione di scrivere i valori del Registro di sistema associati ai servizi che si desidera installare.  
  
 Per installare un servizio, creare una classe di programma di installazione di progetto che eredita da <xref:System.Configuration.Install.Installer>e impostare il <xref:System.ComponentModel.RunInstallerAttribute> della classe su `true`. All'interno del progetto, creare un'istanza <xref:System.ServiceProcess.ServiceProcessInstaller> istanza per ogni applicazione di servizio e quello <xref:System.ServiceProcess.ServiceInstaller> istanza per ogni servizio dell'applicazione. Infine, aggiungere il <xref:System.ServiceProcess.ServiceProcessInstaller> istanza e il <xref:System.ServiceProcess.ServiceInstaller> istanze di classe del programma di installazione del progetto.  
  
 Quando viene eseguito InstallUtil.exe, l'utilità Cerca classi nell'assembly del servizio con il <xref:System.ComponentModel.RunInstallerAttribute> impostato su `true`. Aggiungere classi per l'assembly del servizio vengono aggiunte al <xref:System.Configuration.Install.Installer.Installers%2A> raccolta associata al programma di installazione del progetto. Se <xref:System.ComponentModel.RunInstallerAttribute> è `false`, l'utilità di installazione ignora il programma di installazione di progetto.  
  
 Per un'istanza di <xref:System.ServiceProcess.ServiceProcessInstaller>, le proprietà modificabili includono la specifica che un'applicazione di servizio eseguito con un account diverso dall'utente connesso. È possibile specificare un determinato <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> coppia in cui il servizio deve essere eseguito o è possibile usare <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> per specificare che il servizio eseguito con l'account del computer del sistema, una variabile locale o account del servizio di rete o un account utente.  
  
> [!NOTE]
>  Account di sistema del computer non è quello utilizzato per l'account amministratore.  
  
 In genere, non è necessario chiamare i metodi su <xref:System.ServiceProcess.ServiceInstaller> all'interno del codice; in genere vengono chiamati solo dall'utilità di installazione. L'utilità di installazione viene chiamata automaticamente il <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> e <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> metodi durante il processo di installazione. Per il ripristino da errori, se necessario, chiamando <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (o <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) in tutti i componenti installati in precedenza.  
  
 Routine di installazione di un'applicazione mantiene automaticamente le informazioni relative ai componenti già installati, con l'installazione guidata progetto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Queste informazioni sullo stato viene aggiornate in modo continuo come le <xref:System.ServiceProcess.ServiceProcessInstaller> istanza e ogni <xref:System.ServiceProcess.ServiceInstaller> istanza viene installata dall'utilità. Non è in genere necessario per il codice modificare queste informazioni sullo stato in modo esplicito.  
  
 Creare un'istanza di un <xref:System.ServiceProcess.ServiceProcessInstaller> fa sì che il costruttore di classe di base, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, da chiamare.  
  
   
  
## Examples  
 L'esempio seguente crea un programma di installazione denominato MyProjectInstaller, che eredita da <xref:System.Configuration.Install.Installer>. Si presuppone di trovare un file eseguibile del servizio che contiene due servizi, "Hello-World servizio 1" e "servizio Hello-World 2". All'interno del costruttore per MyProjectInstaller (che deve essere chiamato dall'utilità di installazione), <xref:System.ServiceProcess.ServiceInstaller> gli oggetti vengono creati per ogni servizio e un <xref:System.ServiceProcess.ServiceProcessInstaller> viene creato per il file eseguibile. Per l'utilità di installazione riconoscere MyProjectInstaller come un programma di installazione valido, il <xref:System.ComponentModel.RunInstallerAttribute> attributo è impostato su `true`.  
  
 Proprietà facoltative impostate sull'installazione del processo e il servizio prima di aggiungere i programmi di installazione di <xref:System.Configuration.Install.Installer.Installers%2A> raccolta. Quando si accede all'utilità di installazione a MyProjectInstaller, gli oggetti aggiunti al <xref:System.Configuration.Install.Installer.Installers%2A> raccolta tramite una chiamata a <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> verrà installato a sua volta. Durante il processo, il programma di installazione mantiene informazioni sullo stato che indica gli oggetti che sono stati installati, in modo che ogni oggetto possa essere escluse a sua volta in caso di un errore di installazione.  
  
 In genere, si potrebbe non crea un'istanza di classe del programma di installazione del progetto in modo esplicito. È necessario crearla e aggiungere il <xref:System.ComponentModel.RunInstallerAttribute>, ma effettivamente chiama l'utilità di installazione e quindi crea un'istanza, la classe.  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of account under which to run this service application.</summary>
        <value>Oggetto <see cref="T:System.ServiceProcess.ServiceAccount" /> che definisce il tipo di account con cui il sistema viene eseguito questo servizio. Il valore predefinito è <see langword="User" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando la <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> proprietà viene `User`, il <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> proprietà vengono usate per definire un account con cui viene eseguito l'applicazione di servizio.  
  
 Il <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> coppia consente al servizio venga eseguito con un account diverso dall'account di sistema. Questo può, ad esempio, consentire al servizio per l'avvio automatico al riavvio del computer, quando nessun utente è connesso. Se si lasciano le <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> oppure <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> vuoto e impostare <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> a `User`, verrà richiesto un nome utente valido e la password al momento dell'installazione.  
  
 È inoltre possibile specificare che il servizio venga eseguito con l'account sistema locale o come una variabile locale o servizio di rete. Vedere il <xref:System.ServiceProcess.ServiceAccount> enumerazione per informazioni dettagliate sui tipi di account.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</param>
        <summary>Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non deve essere chiamato all'interno del codice. Il metodo di classe di base sul <xref:System.Configuration.Install.ComponentInstaller> è `abstract`, pertanto viene qui implementato nella classe derivata. Tuttavia, vi è alcun <xref:System.ServiceProcess.ServiceProcessInstaller> specifico della classe nell'implementazione del metodo di elaborazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets help text displayed for service installation options.</summary>
        <value>Testo della Guida che fornisce una descrizione dei passaggi per impostare il nome utente e la password per poter eseguire il servizio con un account specifico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo argomento della Guida è utilizzabile quando un servizio viene avviato manualmente. Indica all'utente come immettere le informazioni di nome e una password utente.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
        <summary>Writes service application information to the registry. This method is meant to be used by installation tools, which call the appropriate methods automatically.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, non è necessario chiamare i metodi su <xref:System.ServiceProcess.ServiceProcessInstaller> all'interno del codice; in genere vengono chiamati solo dall'utilità di installazione. L'utilità di installazione chiama automaticamente il <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metodo durante il processo di installazione. Per il ripristino da errori, se necessario, chiamando <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> su tutti i componenti installati in precedenza. Questo metodo passa l'installazione per la classe di base <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> (metodo).  
  
 In genere, non si chiamerà i metodi su <xref:System.ServiceProcess.ServiceInstaller> all'interno del codice; in genere vengono chiamati solo dall'utilità di installazione. L'utilità di installazione viene chiamata automaticamente il <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> e <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> metodi durante il processo di installazione. Per il ripristino da errori, se necessario, chiamando <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (o <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) in tutti i componenti installati in precedenza  
  
 Routine di installazione di un'applicazione mantiene automaticamente le informazioni relative ai componenti già installati, con l'installazione guidata progetto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Queste informazioni sullo stato, passati <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> come il `stateSaver` parametro, vengono aggiornate continuamente durante il <xref:System.ServiceProcess.ServiceProcessInstaller> istanza e ogni <xref:System.ServiceProcess.ServiceInstaller> istanza viene installata dall'utilità. Non è in genere necessario per il codice modificare queste informazioni sullo stato in modo esplicito.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> passa al metodo di chiamata tutte le eccezioni generate dai metodi della classe base oppure <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> gestori eventi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="stateSaver" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the password associated with the user account under which the service application runs.</summary>
        <value>La password associata all'account con cui eseguire il servizio. Il valore predefinito è una stringa vuota (""). La proprietà non è pubblica e non viene mai serializzata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> coppia consente al servizio venga eseguito con un account diverso dall'account di sistema. Questo può, ad esempio, consentire al servizio per l'avvio automatico al riavvio del computer, quando nessun utente è connesso.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> vengono gestite in modo sicuro in quanto non vengono mai serializzati o salvati lo stato di installazione (il programma di installazione progetto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) o un altro percorso con accesso pubblico.  
  
 Impostando il <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> consente a un account da associare automaticamente il servizio in fase di installazione. Se si lasciano le <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> oppure <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> vuoto e impostare <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> a `User`, verrà richiesto un nome utente valido e la password al momento dell'installazione.  
  
 Un'altra opzione per l'esecuzione di un servizio con un account separato consiste nell'usare l'account del computer del sistema. Tale account, che è diverso dall'account dell'amministratore, è necessaria alcuna password. I privilegi dell'account di sistema potrebbero superare quelle dell'utente attualmente connesso. Il servizio in esecuzione con l'account di sistema anziché un account utente consente di evitare i problemi causati dall'assenza di un'autorizzazione l'utente richiede  
  
 Se <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> è un valore qualsiasi diverso da `User`, viene utilizzato l'account specificato (locale o servizio di rete o sistema locale), anche se il <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> proprietà sono popolate.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
        <summary>Rolls back service application information written to the registry by the installation procedure. This method is meant to be used by installation tools, which process the appropriate methods automatically.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, non è necessario chiamare i metodi su <xref:System.ServiceProcess.ServiceProcessInstaller> all'interno del codice; in genere vengono chiamati solo dall'utilità di installazione. L'utilità di installazione chiama automaticamente il <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metodo durante il processo di installazione. Per il ripristino da errori, se necessario, chiamando <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> sull'oggetto che ha generato l'eccezione.  
  
 Routine di installazione di un'applicazione mantiene automaticamente le informazioni relative ai componenti già installati, con l'installazione guidata progetto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Queste informazioni sullo stato, passati <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> come il `savedState` parametro, vengono aggiornate continuamente durante il <xref:System.ServiceProcess.ServiceProcessInstaller> istanza e ogni <xref:System.ServiceProcess.ServiceInstaller> istanza viene installata dall'utilità. Non è in genere necessario per il codice modificare queste informazioni sullo stato in modo esplicito.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> passa al metodo di chiamata tutte le eccezioni generate dai metodi della classe base oppure <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> gestori eventi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> is <see langword="null" />.  -or-  The <paramref name="savedState" /> is corrupted or non-existent.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the user account under which the service application will run.</summary>
        <value>L'account con cui eseguire il servizio. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> coppia consente al servizio venga eseguito con un account diverso dall'account di sistema. Questo può, ad esempio, consentire al servizio per l'avvio automatico al riavvio del computer, quando nessun utente è connesso.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> vengono gestite in modo sicuro in quanto non vengono mai serializzati o salvati lo stato di installazione (il programma di installazione progetto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) o un altro percorso con accesso pubblico.  
  
 Impostando il <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> consente a un account da associare automaticamente il servizio in fase di installazione. Se si lasciano le <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> oppure <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> vuoto e impostare <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> a `User`, verrà richiesto un nome utente valido e la password al momento dell'installazione.  
  
 Un'altra opzione per l'esecuzione di un servizio con un account separato consiste nell'usare l'account del computer del sistema. Tale account, che è diverso dall'account dell'amministratore, è necessaria alcuna password. I privilegi dell'account di sistema potrebbero superare quelle dell'utente attualmente connesso. Il servizio in esecuzione con l'account di sistema anziché un account utente consente di evitare i problemi causati dall'assenza di un'autorizzazione l'utente richiede  
  
 Se <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> è un valore qualsiasi diverso da `User`, viene usato l'account specificato (locale o servizio di rete o sistema locale), anche se il <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> e <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> proprietà sono popolate.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>