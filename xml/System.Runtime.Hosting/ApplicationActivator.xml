<Type Name="ApplicationActivator" FullName="System.Runtime.Hosting.ApplicationActivator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d9c7e46b422c36123dd6ccae1ab2e5b26bc459a" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48644650" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ApplicationActivator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationActivator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ApplicationActivator" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationActivator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationActivator" />
  <TypeSignature Language="F#" Value="type ApplicationActivator = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce la classe base per l'attivazione di assembly basati su manifesto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È una singola istanza designata del <xref:System.Runtime.Hosting.ApplicationActivator> in ogni classe <xref:System.AppDomain> per cui l'attivazione tutte le chiamate vengono indirizzate. Il <xref:System.AppDomainManager> per l'oggetto corrente <xref:System.AppDomain> può fornire il proprio personalizzata <xref:System.Runtime.Hosting.ApplicationActivator> per questo scopo. Se una classe personalizzata <xref:System.Runtime.Hosting.ApplicationActivator> non viene specificato, un'istanza dell'oggetto default <xref:System.Runtime.Hosting.ApplicationActivator> viene creato.  
  
 I passaggi seguenti descrivono il comportamento dell'oggetto default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> implementazione del metodo:  
  
1.  Controlla se il <xref:System.ActivationContext> del componente aggiuntivo da attivare corrisponde al <xref:System.ActivationContext> corrente dominio; in caso contrario, procede al passaggio 2. In caso contrario, esegue l'assembly e restituisce il risultato sottoposta a wrapping in un handle dell'oggetto.  
  
2.  Attiva il componente aggiuntivo in un nuovo <xref:System.AppDomain>. Vengono eseguiti i passaggi seguenti per inizializzare una nuova <xref:System.AppDomain> utilizzando il <xref:System.Runtime.Hosting.ActivationArguments> per il componente aggiuntivo.  
  
    1.  Crea un nuovo <xref:System.AppDomainSetup> dell'oggetto usando un <xref:System.Runtime.Hosting.ActivationArguments> oggetto che contiene il contesto di attivazione per il componente aggiuntivo.  
  
    2.  Chiama il <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> metodo per creare un nuovo dominio utilizzando il <xref:System.AppDomainSetup> oggetto.  
  
    3.  Il <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> chiamate al metodo il <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> metodo per acquisire un <xref:System.Security.Policy.ApplicationTrust> oggetto per il componente aggiuntivo. Se il <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> restituisce proprietà `true`, il componente aggiuntivo viene eseguito. In caso contrario, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> genera un <xref:System.Security.Policy.PolicyException> indicante che non è stato possibile acquisire l'autorizzazione di esecuzione.  
  
    4.  Se il componente aggiuntivo è attendibile per essere eseguito, un nuovo <xref:System.AppDomain> viene creata e configurata per il <xref:System.ActivationContext> del componente aggiuntivo, e il componente aggiuntivo viene caricato ed eseguito.  
  
    5.  Viene restituito il risultato dell'attivazione del componente aggiuntivo, inserito in un handle dell'oggetto.  
  
 Un attivatore personalizzato è possibile personalizzare l'attivazione di un componente aggiuntivo a un particolare set di casi. Ad esempio, un attivatore personalizzato è stato possibile trovare un oggetto esistente <xref:System.AppDomain> per attivare questo componente aggiuntivo anziché creare un nuovo dominio ogni volta.  
  
 I passaggi seguenti descrivono il comportamento di una classe personalizzata <xref:System.Runtime.Hosting.ApplicationActivator> che attiva un componente aggiuntivo in un oggetto esistente <xref:System.AppDomain>:  
  
1.  L'attivatore personalizzata consente di trovare un dominio con lo stesso <xref:System.ActivationContext> come il componente aggiuntivo che viene attivato.  
  
2.  Se il <xref:System.ActivationContext> non è stato riconosciuto prima del processo, crea un nuovo attivatore personalizzato <xref:System.AppDomain> per questa <xref:System.ActivationContext> chiamando il <xref:System.AppDomain.CreateDomain%2A> metodo direttamente o delegare questa attività per il <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> nella classe di base.  
  
3.  Se è presente un dominio esistente con lo stesso <xref:System.ActivationContext>, quindi l'attivatore può delegare la <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> chiamata al metodo il <xref:System.Runtime.Hosting.ApplicationActivator> nel dominio di destinazione. Si noti che questo sarebbe una chiamata tra domini a un <xref:System.Runtime.Hosting.ApplicationActivator> che si trova nel database di destinazione <xref:System.AppDomain>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere un <xref:System.Runtime.Hosting.ApplicationActivator> oggetto dall'insieme corrente <xref:System.AppDomain.DomainManager%2A> per un'applicazione basata su manifesto.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationActivator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationActivator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Hosting.ApplicationActivator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un'istanza dell'applicazione da attivare, utilizzando un contesto di attivazione che identifica l'applicazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">Oggetto <see cref="T:System.ActivationContext" /> che identifica l'applicazione da attivare.</param>
        <summary>Crea un'istanza dell'applicazione da attivare, utilizzando il contesto di attivazione specificato.</summary>
        <returns>Oggetto <see cref="T:System.Runtime.Remoting.ObjectHandle" /> che rappresenta un wrapper per il valore restituito dell'esecuzione dell'applicazione. Per accedere all'oggetto reale è necessario annullare il wrapping del valore restituito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è destinato l'attivazione basata su manifesto delle applicazioni.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationContext" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">Oggetto <see cref="T:System.ActivationContext" /> che identifica l'applicazione da attivare.</param>
        <param name="activationCustomData">Dati di attivazione personalizzati.</param>
        <summary>Crea un'istanza dell'applicazione da attivare, usando il contesto di attivazione specificato e dati di attivazione personalizzati.</summary>
        <returns>Oggetto <see cref="T:System.Runtime.Remoting.ObjectHandle" /> che rappresenta un wrapper per il valore restituito dell'esecuzione dell'applicazione. Per accedere all'oggetto reale è necessario annullare il wrapping del valore restituito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è destinato l'attivazione basata su manifesto delle applicazioni. I dati di attivazione è costituito da informazioni quali la parte della stringa di query di un URL.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationContext" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHelper">
      <MemberSignature Language="C#" Value="protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceHelper(class System.AppDomainSetup adSetup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateInstanceHelper (adSetup As AppDomainSetup) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceHelper(AppDomainSetup ^ adSetup);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceHelper : AppDomainSetup -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper adSetup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adSetup" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="adSetup">Oggetto <see cref="T:System.AppDomainSetup" /> la cui proprietà <see cref="P:System.AppDomainSetup.ActivationArguments" /> identifica l'applicazione da attivare.</param>
        <summary>Crea un'istanza di un'applicazione utilizzando l'oggetto <see cref="T:System.AppDomainSetup" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Runtime.Remoting.ObjectHandle" /> che rappresenta un wrapper per il valore restituito dell'esecuzione dell'applicazione. Per accedere all'oggetto reale è necessario annullare il wrapping del valore restituito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è destinato l'attivazione basata su manifesto delle applicazioni.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.AppDomainSetup.ActivationArguments" /> di <paramref name="adSetup" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Policy.PolicyException">L'istanza dell'applicazione non è stata eseguita perché le impostazioni dei criteri sul dominio applicazione corrente non prevedono l'autorizzazione per l'esecuzione dell'applicazione.</exception>
      </Docs>
    </Member>
  </Members>
</Type>