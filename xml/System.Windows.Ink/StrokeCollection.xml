<Type Name="StrokeCollection" FullName="System.Windows.Ink.StrokeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b4cf8910185e5ae416d5a30e9e9a138571eeb14" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650715" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StrokeCollection : System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrokeCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Ink.Stroke&gt; implements class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.StrokeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StrokeCollection&#xA;Inherits Collection(Of Stroke)&#xA;Implements INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrokeCollection : System::Collections::ObjectModel::Collection&lt;System::Windows::Ink::Stroke ^&gt;, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Windows.Ink.Stroke</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.StrokeCollectionConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una raccolta di oggetti <see cref="T:System.Windows.Ink.Stroke" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection> consente di eseguire funzioni, ad esempio l'hit test, il ritaglio e la cancellazione dei tratti. Il <xref:System.Windows.Controls.InkCanvas> controllo esegue molte di queste funzioni, ma se è necessario un maggiore controllo rispetto il <xref:System.Windows.Controls.InkCanvas> , fornisce il <xref:System.Windows.Ink.StrokeCollection> offre più opzioni.  
  
 Nella tabella seguente sono elencati come informazioni sulla gestione di input penna su un controllo personalizzato.  
  
|Per eseguire questa operazione...|Vedere l'articolo|  
|-----------------|----------------------|  
|Creare un controllo che raccoglie input penna|[Creazione di un controllo di input penna](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  
|Creare un controllo che consente all'utente di selezionare input penna|[Procedura: selezionare tra un controllo personalizzato](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  
|Creare un controllo che consente all'utente di input penna di punto di cancellazione|[Procedura: cancellare l'input penna su un controllo personalizzato](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  
  
<a name="xamlAttributeUsage_StrokeCollection"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object StrokeCollection="isfString"/>  
```  
  
<a name="xamlObjectElementUsage_StrokeCollection"></a>   
## <a name="xaml-object-element-usage"></a>Utilizzo della sintassi XAML per gli elementi oggetto  
  
```  
<object>isfString</object>  
```  
  
<a name="xamlValues_StrokeCollection"></a>   
## <a name="xaml-values"></a>Valori XAML  
  
|Termine|Definizione|  
|----------|----------------|  
|`isfString`|Stringa che rappresenta il tratto in base 64, codificato input penna serializzato formato (ISF).|  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come copiare l'input penna in una <xref:System.Windows.Controls.InkCanvas> su un altro <xref:System.Windows.Controls.InkCanvas>. In questo esempio si presuppone che:  
  
-   Esistono due <xref:System.Windows.Controls.InkCanvas> oggetti denominati `inkCanvas1` e `inkCanvas2`.  
  
-   Il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento è stato connesso al gestore dell'evento.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt; strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Ink.Stroke&gt; strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strokes As IEnumerable(Of Stroke))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::Stroke ^&gt; ^ strokes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt;" />
      </Parameters>
      <Docs>
        <param name="strokes">Tratti da aggiungere all'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Ink.StrokeCollection" /> contenente i tratti specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso che contiene i dati dell'input penna.</param>
        <summary>Inizializza un insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> dall'oggetto <see cref="T:System.IO.Stream" /> specificato del formato ISF (Ink Serialized Format).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come salvare e caricare un <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
[!code-csharp[StrokeCollectionMethods#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#11)]
[!code-vb[StrokeCollectionMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">Oggetto <see cref="T:System.Windows.Ink.StrokeCollection" /> da aggiungere alla raccolta.</param>
        <summary>Aggiunge i tratti specificati all'oggetto <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.Windows.Ink.StrokeCollection.Add%2A> genera l'evento <xref:System.Windows.Ink.StrokeCollection.StrokesChanged>.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come copiare l'input penna in una <xref:System.Windows.Controls.InkCanvas> su un altro <xref:System.Windows.Controls.InkCanvas>. In questo esempio si presuppone che:  
  
-   Esistono due <xref:System.Windows.Controls.InkCanvas> oggetti denominati `inkCanvas1` e `inkCanvas2`.  
  
-   Il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento è stato connesso al gestore dell'evento.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Windows.Ink.Stroke" /> in <paramref name="strokes" /> è già un membro di <see cref="T:System.Windows.Ink.StrokeCollection" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="strokes" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> da associare alla proprietà personalizzata.</param>
        <param name="propertyData">Valore della proprietà personalizzata. <c>propertyData</c> deve essere di tipo <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> o una matrice di questi tipi di dati, eccetto <see cref="T:System.String" />, che non è consentito.</param>
        <summary>Aggiunge una proprietà personalizzata a <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> metodo consente di aggiungere proprietà personalizzate a un <xref:System.Windows.Ink.StrokeCollection>. È quindi possibile includere informazioni aggiuntive con un <xref:System.Windows.Ink.StrokeCollection>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere e recuperare i dati di proprietà personalizzata. Il `AddTimeStamp_Click` metodo utilizza il <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> metodo per aggiungere l'ora corrente per il <xref:System.Windows.Ink.StrokeCollection>. Il `GetTimeStap_Click` metodo utilizza il <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> metodo per recuperare il timestamp dal <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          L'oggetto <paramref name="propertyDataId" /> è un oggetto <see cref="T:System.Guid" /> vuoto.  
  
 oppure  
  
 L'oggetto <paramref name="propertyData" /> non è uno dei tipi di dati consentiti, elencati nella sezione <see langword="Parameters" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override sealed void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella tutti i tratti dall'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clip">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove tutti i tratti dell'insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> che sono esterni ai limiti specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Matrice di tipo <see cref="T:System.Drawing.Point" /> che specifica l'area da ritagliare.</param>
        <summary>Rimuove tutti i tratti presenti in <see cref="T:System.Windows.Ink.StrokeCollection" /> che sono esterni ai limiti della matrice <see cref="T:System.Drawing.Point" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.Clip%2A> metodo connette i punti e il cognome in `lassoPoints` per creare il lazo.  
  
 Il <xref:System.Windows.Ink.StrokeCollection.Clip%2A> metodo genera il <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> evento per ogni <xref:System.Windows.Ink.Stroke> che Ritaglia.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come ritagliare i tratti in un <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#13)]
 [!code-vb[StrokeCollectionMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Windows::Rect bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <see cref="T:System.Windows.Rect" /> che specifica l'area da ritagliare.</param>
        <summary>Sostituisce tutti i tratti ritagliati dal rettangolo specificato con nuovi tratti che non fuoriescono dal rettangolo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono rimossi tutti i tratti completamente di fuori del rettangolo specificato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come cancellare l'input penna che è esterno ai limiti di un <xref:System.Windows.Rect>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#35](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#35)]
 [!code-vb[StrokeCollectionMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.StrokeCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.StrokeCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::StrokeCollection ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copia <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Copia di <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.Clone%2A> metodo copia ogni <xref:System.Windows.Ink.Stroke> nella raccolta e il nuovo <xref:System.Windows.Ink.StrokeCollection> fa riferimento a nuovi tratti.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come copiare l'input penna in una <xref:System.Windows.Controls.InkCanvas> su un altro <xref:System.Windows.Controls.InkCanvas>. In questo esempio si presuppone che:  
  
-   Esistono due <xref:System.Windows.Controls.InkCanvas> oggetti denominati `inkCanvas1` e `inkCanvas2.`  
  
-   Il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento è stato connesso al gestore dell'evento.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> da individuare in <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Indica se l'identificatore della proprietà personalizzata e specificata si trova o meno nell'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>
          <see langword="true" /> se l'identificatore della proprietà personalizzata e specificata si trova nell'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come verificare la proprietà personalizzata in un <xref:System.Windows.Ink.StrokeCollection>. Se è stata associata una proprietà personalizzata con `timestamp`, l'esempio ottiene la proprietà personalizzata e indica quando il <xref:System.Windows.Ink.StrokeCollection> è stato salvato. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (context As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.Windows.Media.DrawingContext" /> sul quale creare l'oggetto <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Disegna i tratti in <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente crea un elemento personalizzato che consente di visualizzare un'anteprima di un <xref:System.Windows.Controls.InkCanvas>. L'elemento personalizzato mantiene un riferimento a un <xref:System.Windows.Controls.InkCanvas> e viene ridisegnato quando il <xref:System.Windows.Controls.InkCanvas.StrokeCollected> si verifica l'evento.  
  
 [!code-csharp[StrokeCollectionMethods#33](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window3.xaml.cs#33)]
 [!code-vb[StrokeCollectionMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window3.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove l'input penna che è interno ai limiti dell'area specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Matrice di tipo <see cref="T:System.Drawing.Point" /> che specifica l'area da cancellare.</param>
        <summary>Rimuove l'input penna che è interno ai limiti dell'area specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.Erase%2A> metodo connette i punti e il cognome in `lassoPoints` per creare il lazo.  
  
 Il <xref:System.Windows.Ink.StrokeCollection> potrebbe contenere tratti nuovi dopo il <xref:System.Windows.Ink.StrokeCollection.Erase%2A> metodo viene chiamato. Ad esempio, se l'area specificata si trova al centro di un <xref:System.Windows.Ink.Stroke>, il metodo di cancellazione rimuove l'oggetto <xref:System.Windows.Ink.Stroke> e crea due tratti nuovi.  
  
 Il <xref:System.Windows.Ink.StrokeCollection.Erase%2A> metodo genera il <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> evento per ogni <xref:System.Windows.Ink.Stroke> che Cancella.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come cancellare i tratti in un <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#2)]
 [!code-vb[StrokeCollectionMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Windows::Rect bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Oggetto <see cref="T:System.Windows.Rect" /> che specifica l'area da cancellare.</param>
        <summary>Sostituisce tutti i tratti ritagliati dal rettangolo specificato con tratti nuovi che non vengono inseriti all'interno dei limiti del rettangolo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection> potrebbe contenere tratti nuovi dopo il <xref:System.Windows.Ink.StrokeCollection.Erase%2A> metodo viene chiamato. Ad esempio, se l'area specificata si trova al centro di un <xref:System.Windows.Ink.Stroke>, il metodo di cancellazione rimuove l'oggetto <xref:System.Windows.Ink.Stroke> e crea due tratti nuovi.  Vengono rimossi tutti i tratti interamente all'interno del rettangolo specificato.  
  
 Il <xref:System.Windows.Ink.StrokeCollection.Erase%2A> metodo genera il <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> evento per ogni <xref:System.Windows.Ink.Stroke> che Cancella.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come cancellare l'input penna all'interno di <xref:System.Windows.Rect>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#34](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#34)]
 [!code-vb[StrokeCollectionMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; eraserPath, System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; eraserPath, class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (eraserPath As IEnumerable(Of Point), eraserShape As StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ eraserPath, System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserPath" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserPath">La matrice di tipo <see cref="T:System.Windows.Point" /> che specifica il tracciato da cancellare.</param>
        <param name="eraserShape">Oggetto <see cref="T:System.Windows.Ink.StylusShape" /> che specifica la forma della gomma da cancellare.</param>
        <summary>Sostituisce tutti i tratti ritagliati dall'area creata dall'oggetto <see cref="T:System.Windows.Ink.StylusShape" /> specificato lungo il tracciato specificato con nuovi oggetti Strokes e che non vengono ritagliati dall'area.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection> potrebbe contenere tratti nuovi dopo il <xref:System.Windows.Ink.StrokeCollection.Erase%2A> metodo viene chiamato. Ad esempio, se `path` interseca il centro di un <xref:System.Windows.Ink.Stroke>, il metodo di cancellazione rimuove l'oggetto <xref:System.Windows.Ink.Stroke> e crea due tratti nuovi.  
  
 Il <xref:System.Windows.Ink.StrokeCollection.Erase%2A> metodo genera il <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> evento per ogni <xref:System.Windows.Ink.Stroke> che Cancella.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come cancellare l'input penna lungo un percorso specifico. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#14)]
 [!code-vb[StrokeCollectionMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce i limiti dei tratti nella raccolta.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Rect" /> che contiene i limiti dei tratti in <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> metodo restituisce un <xref:System.Windows.Rect> che prende l'aspetto dell'oggetto sottoposto a rendering <xref:System.Windows.Ink.Stroke>. Ad esempio, se <xref:System.Windows.Ink.Stroke> 10 visualizzazione indipendente pixel (DIP), il <xref:System.Windows.Rect> include l'intera larghezza del <xref:System.Windows.Ink.Stroke>.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come ottenere i limiti del <xref:System.Windows.Ink.StrokeCollection> e di disegno del controllo. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#20)]
 [!code-vb[StrokeCollectionMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalLassoHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester (int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester(int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalLassoHitTester (percentageWithinLasso As Integer) As IncrementalLassoHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalLassoHitTester ^ GetIncrementalLassoHitTester(int percentageWithinLasso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalLassoHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentageWithinLasso">La minima percentuale di ogni oggetto <see cref="T:System.Windows.Ink.Stroke" /> che deve essere contenuto nel lazo affinché possa essere considerato un riscontro.</param>
        <summary>Crea un oggetto <see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /> che sottopone <see cref="T:System.Windows.Ink.StrokeCollection" /> a hit testing, con un tracciato lazo, a mano libera</summary>
        <returns>Oggetto <see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /> che sottopone l'insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> a hit testing.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> metodo restituisce un <xref:System.Windows.Ink.IncrementalLassoHitTester> che considera un <xref:System.Windows.Ink.Stroke> come "riscontrato" quando è circondato lazo. Ciò è utile per implementare le funzionalità, ad esempio la possibilità di selezionare un tratto con lo strumento. Il <xref:System.Windows.Controls.InkCanvas> utilizza un <xref:System.Windows.Ink.IncrementalLassoHitTester> per implementare lo strumento di selezione lazo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere un <xref:System.Windows.Ink.IncrementalLassoHitTester> che consente all'utente di selezionare i tratti mediante lo strumento. Per creare un controllo che consente all'utente di selezionare input penna, vedere [come: seleziona input penna da un controllo personalizzato](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  
  
 [!code-csharp[StrokeCollectionMethods#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#17)]
 [!code-vb[StrokeCollectionMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalStrokeHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester (System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester(class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalStrokeHitTester (eraserShape As StylusShape) As IncrementalStrokeHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalStrokeHitTester ^ GetIncrementalStrokeHitTester(System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalStrokeHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserShape">
          <see cref="T:System.Windows.Ink.StylusShape" />, che specifica la punta dello stilo.</param>
        <summary>Crea un oggetto <see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /> che sottopone <see cref="T:System.Windows.Ink.StrokeCollection" /> a hit testing con un tracciato di cancellazione.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /> che sottopone l'insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> a hit testing.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> metodo restituisce un <xref:System.Windows.Ink.IncrementalStrokeHitTester> che considera un <xref:System.Windows.Ink.Stroke> a "hit" quando il percorso di gomma interseca. Ciò è utile per implementare le funzionalità, ad esempio la capacità di eliminare parte di un <xref:System.Windows.Ink.Stroke>. Il <xref:System.Windows.Controls.InkCanvas> utilizza un <xref:System.Windows.Ink.IncrementalStrokeHitTester> quando il <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> è impostata su <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere un <xref:System.Windows.Ink.IncrementalStrokeHitTester> che può essere utilizzato per cancellare una parte di un <xref:System.Windows.Ink.Stroke>. Per creare un controllo che consente di cancellare l'input penna, vedere [come: cancellare input penna su un controllo personalizzato](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> associato alla proprietà personalizzata da ottenere.</param>
        <summary>Restituisce il valore della proprietà personalizzata associato all'oggetto <see cref="T:System.Guid" /> specificato.</summary>
        <returns>Valore della proprietà personalizzata associata all'oggetto <see cref="T:System.Guid" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> e <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> metodi consentono di aggiungere proprietà personalizzate a un <xref:System.Windows.Ink.StrokeCollection>. È quindi possibile includere informazioni aggiuntive con un <xref:System.Windows.Ink.StrokeCollection>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere e recuperare i dati di proprietà personalizzata. Il `AddTimeStamp_Click` metodo utilizza il <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> metodo per aggiungere l'ora corrente per il <xref:System.Windows.Ink.StrokeCollection>. Il `GetTimeStap_Click` metodo utilizza il <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> metodo per recuperare il timestamp dal <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          La proprietà <paramref name="propertyDataId" /> non è associata alla proprietà personalizzata dell'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce i GUID di qualsiasi proprietà personalizzata associata all'oggetto <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Matrice di tipo <see cref="T:System.Guid" /> che rappresenta gli identificatori della proprietà personalizzata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere gli identificatori di proprietà personalizzata dal <xref:System.Windows.Ink.StrokeCollection>.  
  
 [!code-csharp[StrokeCollectionMethods#27](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#27)]
 [!code-vb[StrokeCollectionMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un insieme di tratti contenuti nell'area specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">Il punto da sottoporre a hit testing.</param>
        <summary>Restituisce un insieme di tratti che intersecano il punto specificato.</summary>
        <returns>L'insieme degli oggetti <see cref="T:System.Windows.Ink.Stroke" /> che intersecano il punto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere i tratti che intersecano specificato <xref:System.Windows.Point>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints, int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (lassoPoints As IEnumerable(Of Point), percentageWithinLasso As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints, int percentageWithinLasso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Matrice di tipo <see cref="T:System.Windows.Point" /> che rappresenta i limiti dell'area da sottoporre a hit testing.</param>
        <param name="percentageWithinLasso">Lunghezza accettabile dell'oggetto <see cref="T:System.Windows.Ink.Stroke" />, in percentuale, che <c>lassoPoints</c> può contenere.</param>
        <summary>Restituisce un insieme di tratti che hanno almeno la percentuale di lunghezza specificata nell'area specificata.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Ink.StrokeCollection" /> che ha i tratti con almeno la percentuale specificata nella matrice <see cref="T:System.Windows.Point" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come rimuovere tutti i tratti almeno l'80 percento nel lazo specificato da un <xref:System.Windows.Ink.StrokeCollection>. Ciò è utile quando un controllo personalizzato consente all'utente di selezionare input penna con un lazo. Per creare un controllo che consente all'utente di selezionare input penna con un lazo, vedere [come: seleziona input penna da un controllo personalizzato](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lassoPoints" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="percentageWithinLasso" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="lassoPoints" /> contiene una matrice vuota.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="percentageWithinLasso" /> è minore di 0 o maggiore di 100.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; path, System.Windows.Ink.StylusShape stylusShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; path, class System.Windows.Ink.StylusShape stylusShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ path, System::Windows::Ink::StylusShape ^ stylusShape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="stylusShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="path">Matrice per il tipo <see cref="T:System.Windows.Point" /> che rappresenta il tracciato da sottoporre a hit testing.</param>
        <param name="stylusShape">Oggetto <see cref="T:System.Windows.Ink.StylusShape" /> che specifica la forma di <c>eraserPath</c>.</param>
        <summary>Restituisce un insieme di tratti che intersecano con il tracciato specificato.</summary>
        <returns>Insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> di tratti che si intersecano con <paramref name="path" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente modifica il colore di tutti i tratti che intersecano il percorso che viene creata la <xref:System.Windows.Point> matrice.  Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#37](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#37)]
 [!code-vb[StrokeCollectionMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point, double diameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point, float64 diameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point, double diameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="diameter" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="point">
          <see cref="T:System.Windows.Point" /> per l'hit test.</param>
        <param name="diameter">La dimensione dell'area intorno all'oggetto <see cref="T:System.Windows.Point" /> da sottoporre a hit testing.</param>
        <summary>Restituisce un insieme di tratti che intersecano l'area specificata.</summary>
        <returns>L'insieme degli oggetti <see cref="T:System.Windows.Ink.Stroke" /> che intersecano il punto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere i tratti che intersecano specificato <xref:System.Windows.Point>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Rect bounds, int32 percentageWithinBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (bounds As Rect, percentageWithinBounds As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Rect bounds, int percentageWithinBounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
        <Parameter Name="percentageWithinBounds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bounds">Oggetto <see cref="T:System.Windows.Rect" /> che specifica i limiti da sottoporre a hit testing.</param>
        <param name="percentageWithinBounds">Lunghezza minima richiesta per un tratto, che deve esserci all'interno dei limiti, affinché possa essere considerato riscontrato.</param>
        <summary>Restituisce un insieme di tratti che hanno almeno la percentuale di lunghezza specificata all'interno del rettangolo specificato.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Ink.StrokeCollection" /> che ha i tratti con almeno la percentuale specificata all'interno dell'oggetto <see cref="T:System.Windows.Rect" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente consente di cancellare i tratti con almeno il 50% entro i limiti del <xref:System.Windows.Rect>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkPresenter> chiamato `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#36](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#36)]
 [!code-vb[StrokeCollectionMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Ink::Stroke ^ stroke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="stroke">Tratto la cui posizione è richiesta.</param>
        <summary>Restituisce l'indice dell'oggetto <see cref="T:System.Windows.Ink.Stroke" /> specificato, nell'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Indice del tratto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A> metodo restituisce -1 se `stroke` non è membro il <xref:System.Windows.Ink.StrokeCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkSerializedFormat">
      <MemberSignature Language="C#" Value="public static readonly string InkSerializedFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string InkSerializedFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkSerializedFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ InkSerializedFormat;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il formato nativo della persistenza per i dati dell'input penna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat> campo per specificare il formato del <xref:System.Windows.Ink.StrokeCollection> quando si trasferiscono dati, ad esempio quando si copia il <xref:System.Windows.Ink.StrokeCollection> negli Appunti.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come copiare un <xref:System.Windows.Ink.StrokeCollection> negli Appunti. L'esempio specifica che il <xref:System.Windows.Ink.StrokeCollection> è in input penna serializzato formato (ISF), in modo che altri programmi, ad esempio Microsoft Office Word è possibile accettare i dati copiati.  
  
 [!code-csharp[StrokeCollectionMethods#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#5)]
 [!code-vb[StrokeCollectionMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override sealed void InsertItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">Indice specificato.</param>
        <param name="stroke">Tratto specificato.</param>
        <summary>Inserisce un tratto nell'oggetto <see cref="T:System.Windows.Ink.StrokeCollection" /> in corrispondenza dell'indice specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati dell'evento.</param>
        <summary>Si verifica quando cambia una qualsiasi proprietà di <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesChanged (System.Windows.Ink.StrokeCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesChanged(class System.Windows.Ink.StrokeCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesChanged (e As StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesChanged(System::Windows::Ink::StrokeCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.StrokeCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Ink.StrokeCollectionChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Ink.StrokeCollection.StrokesChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.  
  
 Il <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato che è la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> metodo della classe base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà personalizzata viene aggiunta o  rimossa dall'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come gestire il <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> evento. Questo esempio si presuppone che sia presente un <xref:System.Guid> chiamato `dateTimeGuid` e <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> evento sia connesso al gestore dell'evento definito in questo esempio.  
  
 [!code-csharp[StrokeCollectionMethods#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#29)]
 [!code-vb[StrokeCollectionMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">Oggetto <see cref="T:System.Windows.Ink.StrokeCollection" /> da rimuovere dalla raccolta.</param>
        <summary>Rimuove i tratti specificati dalla raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.Remove%2A> metodo genera il <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> evento per ogni <xref:System.Windows.Ink.Stroke> viene rimosso.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come rimuovere tutti i tratti almeno l'80 percento nel lazo specificato da un <xref:System.Windows.Ink.StrokeCollection>. Ciò è utile quando un controllo personalizzato consente all'utente di selezionare input penna con un lazo. Per creare un controllo che consente all'utente di selezionare input penna con un lazo, vedere [come: seleziona input penna da un controllo personalizzato](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override sealed void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice specificato.</param>
        <summary>Rimuove il tratto nell'indice specificato dall'insieme <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> associato alla proprietà personalizzata da rimuovere.</param>
        <summary>Rimuove la proprietà personalizzata associata all'oggetto <see cref="T:System.Guid" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come rimuovere una proprietà personalizzata dal <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1` e <xref:System.Guid> chiamato `timestamp`.  
  
 [!code-csharp[StrokeCollectionMethods#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#28)]
 [!code-vb[StrokeCollectionMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sostituisce i tratti nell'insieme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.Stroke strokeToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.Stroke strokeToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokeToReplace As Stroke, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::Stroke ^ strokeToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokeToReplace" Type="System.Windows.Ink.Stroke" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokeToReplace">
          <see cref="T:System.Windows.Ink.Stroke" /> da sostituire.</param>
        <param name="strokesToReplaceWith">Il <see cref="T:System.Windows.Ink.StrokeCollection" /> di origine.</param>
        <summary>Sostituisce l'oggetto <see cref="T:System.Windows.Ink.Stroke" /> specificato con l'oggetto <see cref="T:System.Windows.Ink.StrokeCollection" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.Windows.Ink.StrokeCollection.Replace%2A> genera l'evento <xref:System.Windows.Ink.StrokeCollection.StrokesChanged>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come sostituire i tratti selezionati in un <xref:System.Windows.Controls.InkCanvas> con un altro <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="strokesToReplace" /> è vuoto.  
  
 oppure  
  
 <paramref name="strokesToReplaceWith" /> è vuoto.  
  
 oppure  
  
 Un oggetto <see cref="T:System.Windows.Ink.Stroke" /> in <paramref name="strokesToReplaceWith" /> si trova già in <paramref name="strokesToReplace" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.StrokeCollection strokesToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.StrokeCollection strokesToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokesToReplace As StrokeCollection, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::StrokeCollection ^ strokesToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokesToReplace" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokesToReplace">Il <see cref="T:System.Windows.Ink.StrokeCollection" /> di destinazione.</param>
        <param name="strokesToReplaceWith">Il <see cref="T:System.Windows.Ink.StrokeCollection" /> di origine.</param>
        <summary>Sostituisce l'insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> specificato con un nuovo insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.Replace%2A> metodo genera il <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> evento per ogni <xref:System.Windows.Ink.Stroke> sostituisce.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come sostituire i tratti selezionati in un <xref:System.Windows.Controls.InkCanvas> con un altro <xref:System.Windows.Ink.StrokeCollection>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="strokesToReplace" /> è vuoto.  
  
 oppure  
  
 <paramref name="strokesToReplaceWith" /> è vuoto.  
  
 oppure  
  
 Un oggetto <see cref="T:System.Windows.Ink.Stroke" /> in <paramref name="strokesToReplaceWith" /> si trova già in <paramref name="strokesToReplace." />.  
  
 oppure  
  
 I tratti in <paramref name="strokesToReplaceWith" /> non sono continui.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Salva <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Classe <see cref="T:System.IO.Stream" /> in cui salvare <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Salva l'insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> nell'oggetto <see cref="T:System.IO.Stream" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.Save%2A> metodo salva il <xref:System.Windows.Ink.StrokeCollection> come input penna serializzato formato (ISF).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come salvare un <xref:System.Windows.Ink.StrokeCollection> in un file utilizzando il <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> metodo. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream stream, bool compress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream stream, bool compress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ stream, bool compress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compress" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Classe <see cref="T:System.IO.Stream" /> in cui salvare <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <param name="compress">
          <see langword="true" /> per comprimere <see cref="T:System.Windows.Ink.StrokeCollection" />; in caso contrario, <see langword="false" />.</param>
        <summary>Salva l'insieme <see cref="T:System.Windows.Ink.StrokeCollection" /> nell'oggetto <see cref="T:System.IO.Stream" /> specificato e, se viene specificato, lo comprime.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.StrokeCollection.Save%2A> metodo salva il <xref:System.Windows.Ink.StrokeCollection> come input penna serializzato formato (ISF).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come salvare un <xref:System.Windows.Ink.StrokeCollection> in un file utilizzando il <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> metodo. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override sealed void SetItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">Posizione in cui sostituire il tratto.</param>
        <param name="stroke">Tratto da usare in sostituzione di quello corrente.</param>
        <summary>Sostituisce il tratto in corrispondenza dell'indice specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.StrokesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesChanged As StrokeCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::StrokeCollectionChangedEventHandler ^ StrokesChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un oggetto <see cref="T:System.Windows.Ink.Stroke" /> viene modificato nell'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente aggiunge l'ora corrente come una proprietà personalizzata a ogni nuovo tratto nel <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> gestore dell'evento. Nell'esempio si presuppone che il <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> evento sia connesso al gestore dell'evento definito in questo esempio.  
  
 [!code-csharp[DrawingAttributes#4](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#4)]
 [!code-vb[DrawingAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (transformMatrix As Matrix, applyToStylusTip As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformMatrix" Type="System.Windows.Media.Matrix" />
        <Parameter Name="applyToStylusTip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transformMatrix">Oggetto <see cref="T:System.Windows.Media.Matrix" /> che specifica la trasformazione da eseguire su <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <param name="applyToStylusTip">
          <see langword="true" /> per applicare la trasformazione alla punta dello stilo; in caso contrario, <see langword="false" />.</param>
        <summary>Modifica ogni <see cref="P:System.Windows.Ink.Stroke.StylusPoints" /> e facoltativamente <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /> per ogni tratto in <see cref="T:System.Windows.Ink.StrokeCollection" /> in base all'oggetto <see cref="T:System.Windows.Media.Matrix" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `applyToStylusTip` è `true`, <xref:System.Windows.Ink.StrokeCollection.Transform%2A> metodo interessa la forma della punta dello stilo, nonché la posizione dei tratti. Ad esempio, se si ruota un <xref:System.Windows.Ink.StrokeCollection> 90 gradi, spostare i tratti attorno a un asse e l'altezza e larghezza dei tratti sembrano essere invertiti.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come spostare tutti i tratti su un <xref:System.Windows.Controls.InkCanvas>. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#9)]
 [!code-vb[StrokeCollectionMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>