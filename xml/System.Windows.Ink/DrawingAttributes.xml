<Type Name="DrawingAttributes" FullName="System.Windows.Ink.DrawingAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="083fe4763417420c7258b32aab8515e52b095a8c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650585" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawingAttributes : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingAttributes extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.DrawingAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawingAttributes&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingAttributes : System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Specifica l'aspetto di un oggetto <see cref="T:System.Windows.Ink.Stroke" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> proprietà per specificare le impostazioni, ad esempio colore, larghezza, trasparenza e la forma della punta dello stilo per un <xref:System.Windows.Ink.Stroke>.  
  
 Utilizzare il <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> proprietà per specificare gli attributi di disegno per i tratti aggiunti a un <xref:System.Windows.Controls.InkCanvas>. Solo i tratti che vengono aggiunti dopo la <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> subiscono modifiche Mostra gli attributi aggiornati. L'aspetto dei tratti che già la <xref:System.Windows.Controls.InkCanvas> non cambia.  
  
 Per un elenco dei valori iniziali delle proprietà di un'istanza della classe <xref:System.Windows.Ink.DrawingAttributes>, vedere il costruttore <xref:System.Windows.Ink.DrawingAttributes>.  
  
<a name="xamlTextUsage_DrawingAttributes"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa classe non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare due <xref:System.Windows.Ink.DrawingAttributes> oggetti per simulare l'utilizzo di un oggetto pen ed evidenziatore sullo stesso <xref:System.Windows.Controls.InkCanvas>. Nell'esempio si presuppone l'elemento radice nel file XAML è un <xref:System.Windows.Controls.DockPanel> chiamato `root`. Si presuppone inoltre che sia presente un <xref:System.Windows.Controls.Button> chiamato `switchHighlighter` e che il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento sia connesso al gestore dell'evento definito in questo esempio.  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Di seguito sono illustrati i valori iniziali delle proprietà di un'istanza della classe <xref:System.Windows.Ink.DrawingAttributes>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Windows.Ink.DrawingAttributes.Color%2A>|Nero|  
|<xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.Height%2A>|2 device independent pixel (DIP)|  
|<xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>|<xref:System.Windows.Ink.StylusTip.Ellipse?displayProperty=nameWithType>|  
|<xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>|<xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=nameWithType>|  
|<xref:System.Windows.Ink.DrawingAttributes.Width%2A>|2 DIP|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> da associare alla proprietà personalizzata.</param>
        <param name="propertyData">Valore della proprietà personalizzata. Il valore di <c>propertyData</c> deve essere di tipo <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> o una matrice di questi tipi di dati. Non può tuttavia essere una matrice di tipo <see cref="T:System.String" />.</param>
        <summary>Aggiunge una proprietà personalizzata all'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.DrawingAttributes.AddPropertyData%2A> metodo consente di aggiungere proprietà personalizzate a un <xref:System.Windows.Ink.DrawingAttributes> oggetto. Ciò è utile quando si proprio tratti di eseguire il rendering e si desidera fornire informazioni aggiuntive.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come aggiungere e recuperare una proprietà personalizzata dal <xref:System.Windows.Ink.DrawingAttributes> oggetto. Nell'esempio viene aggiunta una proprietà che indica se il <xref:System.Windows.Ink.DrawingAttributes> oggetto è una penna o evidenziatore. Il codice il `ChangeColors_Click` gestore dell'evento esegue il rendering di un nuovo colore per i tratti sul <xref:System.Windows.Controls.InkCanvas> che utilizzano il <xref:System.Windows.Ink.DrawingAttributes> oggetto, `inkDA`. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> denominato `inkCanvas1`, e che sono disponibili due <xref:System.Windows.Ink.DrawingAttributes> gli oggetti denominati `inkDA`, e `highlighterDA.`  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyData" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          L'oggetto <paramref name="propertyDataId" /> è un oggetto <see cref="T:System.Guid" /> vuoto.  
  
 oppure  
  
 L'oggetto <paramref name="propertyData" /> non è uno dei tipi di dati consentiti, elencati nella sezione <see langword="Parameters" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.AttributeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AttributeChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ AttributeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene modificata una proprietà nell'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente viene gestito il <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> evento. Questo esempio si presuppone che sia presente un <xref:System.Windows.Ink.DrawingAttributes> oggetto denominato `inkDA` e che il <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> evento sia connesso al gestore dell'evento definito in questo esempio.  
  
 [!code-csharp[DrawingAttributes#6](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#6)]
 [!code-vb[DrawingAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.DrawingAttributes Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.DrawingAttributes Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::DrawingAttributes ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copia l'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <returns>Copia dell'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Ink.DrawingAttributes.Clone%2A> crea un nuovo metodo <xref:System.Windows.Ink.DrawingAttributes> dell'oggetto e la popola con gli stessi valori dell'oggetto corrente. Tutte le proprietà personalizzate vengono inoltre copiate.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come copiare un <xref:System.Windows.Ink.DrawingAttributes> oggetto.  
  
 [!code-csharp[DrawingAttributes#8](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#8)]
 [!code-vb[DrawingAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Color Color { System::Windows::Media::Color get(); void set(System::Windows::Media::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore di un oggetto <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <value>Colore di un oggetto <see cref="T:System.Windows.Ink.Stroke" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Color"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.Color%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> da individuare nell'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</param>
        <summary>Restituisce un valore che indica se l'identificatore di dati della proprietà specificato si trovi o meno nell'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <returns>
          <see langword="true" /> se l'identificatore di dati della proprietà specificato si trova nell'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come aggiungere e recuperare una proprietà personalizzata dal <xref:System.Windows.Ink.DrawingAttributes> oggetto. Nell'esempio viene aggiunta una proprietà che indica se il <xref:System.Windows.Ink.DrawingAttributes> oggetto è una penna o evidenziatore. Il `ChangeColors_Click` tutti i tratti che sono stati inseriti nel gestore eventi modifica il <xref:System.Windows.Controls.InkCanvas> con un <xref:System.Windows.Ink.DrawingAttributes> chiamato `inkDA` per un nuovo colore. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> denominato `inkCanvas1`, e che sono disponibili due <xref:System.Windows.Ink.DrawingAttributes> gli oggetti denominati `inkDA`, e `highlighterDA.`  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" /> da confrontare con l'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" /> corrente.</param>
        <summary>Determina se l'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" /> specificato equivale all'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" /> corrente.</summary>
        <returns>
          <see langword="true" /> se gli oggetti sono uguali. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Due <xref:System.Windows.Ink.DrawingAttributes> gli oggetti sono uguali se le proprietà seguenti:  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
> [!NOTE]
>  Il <xref:System.Windows.Ink.DrawingAttributes.Equals%2A> metodo non verifica le proprietà personalizzate per verificarne l'uguaglianza.  
  
   
  
## Examples  
 Nell'esempio seguente vengono confrontate due <xref:System.Windows.Ink.DrawingAttributes> oggetti per verificarne l'uguaglianza. Poiché il <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, e <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà `attributes1` e `attributes2` impostati per gli stessi valori, viene visualizzato il messaggio "Modifica dei DrawingAttributes è uguali".  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#12](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#12)]
[!code-vb[DrawingAttributes#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FitToCurve">
      <MemberSignature Language="C#" Value="public bool FitToCurve { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FitToCurve" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.FitToCurve" />
      <MemberSignature Language="VB.NET" Value="Public Property FitToCurve As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FitToCurve { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se viene utilizzata la smussatura di Bezier per il rendering dell'oggetto <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <value>
          <see langword="true" /> per utilizzare la smussatura di Bezier per il rendering dell'oggetto <see cref="T:System.Windows.Ink.Stroke" />; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_FitToCurve"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Viene usato come funzione hash per un tipo specifico.</summary>
        <returns>Codice hash per l'oggetto <see cref="T:System.Object" /> corrente.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> associato alla proprietà personalizzata da ottenere.</param>
        <summary>Ottiene il valore della proprietà personalizzata associata all'oggetto <see cref="T:System.Guid" /> specificato.</summary>
        <returns>Valore della proprietà personalizzata associata all'oggetto <see cref="T:System.Guid" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> per accedere alle proprietà personalizzate aggiunte a un <xref:System.Windows.Ink.DrawingAttributes> oggetto. <xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> Restituisce il valore predefinito per la proprietà predefinita se non è stato impostato un valore.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come aggiungere e recuperare una proprietà personalizzata dal <xref:System.Windows.Ink.DrawingAttributes> oggetto. Nell'esempio viene aggiunta una proprietà che indica se il <xref:System.Windows.Ink.DrawingAttributes> oggetto è una penna o evidenziatore. Il codice il `ChangeColors_Click` gestore dell'evento esegue il rendering di un nuovo colore per i tratti sul <xref:System.Windows.Controls.InkCanvas> che utilizzano il <xref:System.Windows.Ink.DrawingAttributes> oggetto, `inkDA`. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> denominato `inkCanvas1`, e che sono disponibili due <xref:System.Windows.Ink.DrawingAttributes> gli oggetti denominati `inkDA`, e `highlighterDA.`  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          L'oggetto <paramref name="propertyDataId" /> non è associato a una proprietà personalizzata dell'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</exception>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce i GUID di qualsiasi proprietà personalizzata associata all'oggetto <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Matrice di tipo <see cref="T:System.Guid" /> che rappresenta gli identificatori di dati della proprietà.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I GUID per le proprietà predefinite del <xref:System.Windows.Ink.DrawingAttributes> classe presenti il <xref:System.Windows.Ink.DrawingAttributeIds> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere gli identificatori di dati della proprietà dal <xref:System.Windows.Ink.DrawingAttributes> oggetto. In questo esempio si presuppone che un <xref:System.Windows.Ink.DrawingAttributes> chiamato `inkDA` è stato dichiarato.  
  
 [!code-csharp[DrawingAttributes#7](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#7)]
 [!code-vb[DrawingAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'altezza dello stilo utilizzato per disegnare l'oggetto <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <value>Valore che indica l'altezza dello stilo utilizzato per disegnare l'oggetto <see cref="T:System.Windows.Ink.Stroke" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I seguenti fattori influenzano l'altezza e larghezza di un <xref:System.Windows.Ink.Stroke> quando ne viene eseguito il rendering, ma non il valore della <xref:System.Windows.Ink.DrawingAttributes.Height%2A> proprietà.  
  
-   La quantità di pressione applicata per lo stilo quando il <xref:System.Windows.Ink.Stroke> viene disegnato.  
  
-   Il valore della proprietà <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>.  
  
 Se si imposta la <xref:System.Windows.Ink.DrawingAttributes.Height%2A> proprietà per 0 device independent pixel (DIP), viene modificato a 2 DIP.  
  
<a name="xamlTextUsage_Height"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.Height%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> è minore di <see cref="F:System.Double.Epsilon" /> o di <see cref="F:System.Double.NaN" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnorePressure">
      <MemberSignature Language="C#" Value="public bool IgnorePressure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnorePressure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.IgnorePressure" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnorePressure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnorePressure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se lo spessore di un oggetto <see cref="T:System.Windows.Ink.Stroke" />, sottoposto a rendering, viene o meno modificato in base alla quantità di pressione applicata.</summary>
        <value>
          <see langword="true" /> per indicare che lo spessore del tratto è uniforme; <see langword="false" /> per indicare che lo spessore dell'oggetto <see cref="T:System.Windows.Ink.Stroke" /> aumenta quando la pressione viene aumentata. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_IgnorePressure"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighter">
      <MemberSignature Language="C#" Value="public bool IsHighlighter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.IsHighlighter" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHighlighter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Windows.Ink.Stroke" /> assomigli o meno a un evidenziatore.</summary>
        <value>
          <see langword="true" /> per il rendering dell'oggetto <see cref="T:System.Windows.Ink.Stroke" /> a evidenziatore; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> è impostata su `true`, <xref:System.Windows.Ink.Stroke> è leggermente trasparente, che consente il tratto sottostante da visualizzare.  
  
<a name="xamlTextUsage_IsHighlighter"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public static readonly double MaxHeight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxHeight" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MaxHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxHeight As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxHeight;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il valore più grande consentito per la proprietà <see cref="P:System.Windows.Ink.DrawingAttributes.Height" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.DrawingAttributes.MaxHeight> campo per verificare se un valore all'interno dei limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Height%2A> proprietà. Eseguire questa operazione quando il valore proviene da un'origine sconosciuta, ad esempio l'input dell'utente non vincolato.  
  
   
  
## Examples  
 Nell'esempio seguente garantisce la <xref:System.Windows.Ink.DrawingAttributes.Height%2A> proprietà del <xref:System.Windows.Ink.DrawingAttributes> è impostata su un valore valido. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[DrawingAttributes#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#14)]
 [!code-vb[DrawingAttributes#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public static readonly double MaxWidth;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxWidth" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxWidth As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxWidth;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il valore più grande consentito per la proprietà <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.DrawingAttributes.MaxWidth> campo per verificare se un valore all'interno dei limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà. Eseguire questa operazione quando il valore proviene da un'origine sconosciuta, ad esempio l'input dell'utente non vincolato.  
  
   
  
## Examples  
 Nell'esempio seguente garantisce la <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà del <xref:System.Windows.Ink.DrawingAttributes> è impostata su un valore valido. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[DrawingAttributes#15](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#15)]
 [!code-vb[DrawingAttributes#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinHeight">
      <MemberSignature Language="C#" Value="public static readonly double MinHeight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinHeight" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MinHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinHeight As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinHeight;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il valore più piccolo consentito alla proprietà <see cref="P:System.Windows.Ink.DrawingAttributes.Height" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.DrawingAttributes.MinHeight> campo per verificare se un valore all'interno dei limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Height%2A> proprietà. Eseguire questa operazione quando il valore proviene da un'origine sconosciuta, ad esempio l'input dell'utente non vincolato.  
  
   
  
## Examples  
 Nell'esempio seguente garantisce la <xref:System.Windows.Ink.DrawingAttributes.Height%2A> proprietà del <xref:System.Windows.Ink.DrawingAttributes> è impostata su un valore valido. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[DrawingAttributes#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#14)]
 [!code-vb[DrawingAttributes#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public static readonly double MinWidth;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinWidth" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinWidth As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinWidth;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il valore più piccolo consentito alla proprietà <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.DrawingAttributes.MinWidth> campo per verificare se un valore all'interno dei limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà. Eseguire questa operazione quando il valore proviene da un'origine sconosciuta, ad esempio l'input dell'utente non vincolato.  
  
   
  
## Examples  
 Nell'esempio seguente garantisce la <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà del <xref:System.Windows.Ink.DrawingAttributes> è impostata su un valore valido. Questo esempio si presuppone che sia presente un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`.  
  
 [!code-csharp[DrawingAttributes#15](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#15)]
 [!code-vb[DrawingAttributes#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttributeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAttributeChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAttributeChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAttributeChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAttributeChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Ink.DrawingAttributes.AttributeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.  
  
 Il metodo <xref:System.Windows.Ink.DrawingAttributes.OnAttributeChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> in una classe derivata, chiamare il <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> metodo per la classe base garantire che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">EventArgs</param>
        <summary>Si verifica quando cambia una qualsiasi proprietà di <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Ink.DrawingAttributes.PropertyDataChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.  
  
 Il metodo <xref:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell'evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> in una classe derivata, chiamare il <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> metodo per la classe base affinché i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Ink.DrawingAttributes first, class System.Windows.Ink.DrawingAttributes second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As DrawingAttributes, second As DrawingAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Ink::DrawingAttributes ^ first, System::Windows::Ink::DrawingAttributes ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Windows.Ink.DrawingAttributes" />
        <Parameter Name="second" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="first">Primo oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" /> da confrontare.</param>
        <param name="second">Secondo oggetto da confrontare <see cref="T:System.Windows.Ink.DrawingAttributes" />.</param>
        <summary>Determina se gli oggetti <see cref="T:System.Windows.Ink.DrawingAttributes" /> specificati sono uguali.</summary>
        <returns>
          <see langword="true" /> se gli oggetti sono uguali. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Due <xref:System.Windows.Ink.DrawingAttributes> gli oggetti sono uguali se le proprietà seguenti:  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
> [!NOTE]
>  Il <xref:System.Windows.Ink.DrawingAttributes.op_Equality%2A> metodo non verifica le proprietà personalizzate per verificarne l'uguaglianza.  
  
 Il metodo equivalente per l'operatore è <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType>.  
  
## Examples  
 Nell'esempio seguente vengono confrontate due <xref:System.Windows.Ink.DrawingAttributes> oggetti per verificarne l'uguaglianza. Poiché il <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, e <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà `attributes1` e `attributes2` impostati per gli stessi valori, viene visualizzato il messaggio "Modifica dei DrawingAttributes è uguali".  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#11](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#11)]
[!code-vb[DrawingAttributes#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Ink.DrawingAttributes first, class System.Windows.Ink.DrawingAttributes second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As DrawingAttributes, second As DrawingAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Ink::DrawingAttributes ^ first, System::Windows::Ink::DrawingAttributes ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Windows.Ink.DrawingAttributes" />
        <Parameter Name="second" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="first">Primo oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" /> da confrontare.</param>
        <param name="second">Secondo oggetto da confrontare <see cref="T:System.Windows.Ink.DrawingAttributes" />.</param>
        <summary>Determina se gli oggetti <see cref="T:System.Windows.Ink.DrawingAttributes" /> specificati non sono uguali.</summary>
        <returns>
          <see langword="true" /> se gli oggetti non sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Due <xref:System.Windows.Ink.DrawingAttributes> oggetti non sono uguali se le proprietà seguenti non sono uguali:  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
> [!NOTE]
>  Il <xref:System.Windows.Ink.DrawingAttributes.op_Inequality%2A> metodo non verifica le proprietà personalizzate per verificarne l'uguaglianza.  
  
 Il metodo equivalente per l'operatore è la negazione del <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType>.  
  
## Examples  
 Nell'esempio seguente vengono confrontate due <xref:System.Windows.Ink.DrawingAttributes> oggetti per verificarne la disuguaglianza. Poiché il <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, e <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà `attributes1` e `attributes2` impostati per gli stessi valori, viene visualizzato il messaggio "Modifica dei DrawingAttributes è uguali".  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#13](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#13)]
[!code-vb[DrawingAttributes#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando i dati della proprietà vengono aggiunti o rimossi da <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente fa parte di un tratto di tipo personalizzato che è possibile disegnare un effetto tridimensionale. Il tratto definisce e archivia una proprietà personalizzata denominata `Shadowed`, che appartiene alla <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A>. Quando il `Shadowed` modifiche delle proprietà, il <xref:System.Windows.Ink.DrawingAttributes.PropertyDataChanged> chiamate del gestore dell'evento di <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> metodo che causa il tratto da ridisegnare.  
  
 [!code-csharp[StrokeCollectionShadow#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionShadow/CSharp/CustomRenderedStroke.cs#1)]
 [!code-vb[StrokeCollectionShadow#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionShadow/VisualBasic/CustomRenderedStroke.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Oggetto <see cref="T:System.Guid" /> associato alla proprietà personalizzata da rimuovere.</param>
        <summary>Rimuove la proprietà personalizzata associata all'oggetto <see cref="T:System.Guid" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come rimuovere una proprietà personalizzata da un <xref:System.Windows.Ink.DrawingAttributes> oggetto.  
  
 [!code-csharp[DrawingAttributes#9](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#9)]
 [!code-vb[DrawingAttributes#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          L'oggetto <paramref name="propertyDataId" /> non è associato a una proprietà personalizzata dell'oggetto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</exception>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StylusTip">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusTip StylusTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Ink.StylusTip StylusTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.StylusTip" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusTip As StylusTip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusTip StylusTip { System::Windows::Ink::StylusTip get(); void set(System::Windows::Ink::StylusTip value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusTip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la forma dello stilo utilizzato per disegnare l'oggetto <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Ink.StylusShape" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_StylusTip"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusTipTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Matrix StylusTipTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix StylusTipTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusTipTransform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Matrix StylusTipTransform { System::Windows::Media::Matrix get(); void set(System::Windows::Media::Matrix value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Media.Matrix" /> che specifica la trasformazione da eseguire sulla punta dello stilo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.Matrix" /> che specifica la trasformazione da eseguire sulla punta dello stilo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> proprietà da ruotare, inclinare o ridimensionare la punta dello stilo.  
  
<a name="xamlTextUsage_StylusTipTransform"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La matrice impostata su <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /> non è una matrice invertibile.  
  
 oppure  
  
 La proprietà <see cref="P:System.Windows.Media.Matrix.OffsetX" /> o quella <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della matrice non è nulla.</exception>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la larghezza dello stilo utilizzato per disegnare l'oggetto <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <value>Larghezza dello stilo utilizzato per disegnare l'oggetto <see cref="T:System.Windows.Ink.Stroke" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I seguenti fattori influenzano l'altezza e larghezza di un <xref:System.Windows.Ink.Stroke> quando ne viene eseguito il rendering, ma non il valore della <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà.  
  
-   La quantità di pressione applicata per lo stilo quando il <xref:System.Windows.Ink.Stroke> viene disegnato.  
  
-   Il valore della proprietà <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>.  
  
 Se si imposta la <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà per 0 device independent pixel (DIP), viene modificato a 2 DIP.  
  
<a name="xamlTextUsage_Width"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non è in genere utilizzata in XAML.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Ink.DrawingAttributes.Width%2A> proprietà. Nell'esempio si presuppone che l'applicazione abbia un <xref:System.Windows.Controls.InkCanvas> chiamato `inkCanvas1`e due <xref:System.Windows.Ink.DrawingAttributes> oggetti denominati `inkDA` e `highlighterDA`. Per un esempio completo, vedere il <xref:System.Windows.Ink.DrawingAttributes> Cenni preliminari sulla classe.  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> è minore di <see cref="F:System.Double.Epsilon" /> o di <see cref="F:System.Double.NaN" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>