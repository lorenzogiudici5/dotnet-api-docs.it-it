<Type Name="LogConverter" FullName="System.Diagnostics.Design.LogConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79ea903a1245f4de78ce87d55a18aba78c178019" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37666818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LogConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LogConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Design.LogConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class LogConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LogConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c7e93-101">Fornisce un convertitore di tipi per la proprietà <see cref="P:System.Diagnostics.EventLog.Log" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7e93-101">Provides the type converter for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e93-102"><xref:System.Diagnostics.Design.LogConverter> Converte i riferimenti agli oggetti da e verso altre rappresentazioni.</span><span class="sxs-lookup"><span data-stu-id="c7e93-102"><xref:System.Diagnostics.Design.LogConverter> converts object references to and from other representations.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="c7e93-103">il diritto di eseguire codice non gestito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7e93-103">for the right to execute unmanaged code.</span>
      </span>
      <span data-ttu-id="c7e93-104">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7e93-104">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      </span>
      <span data-ttu-id="c7e93-105">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="c7e93-105">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7e93-106">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Design.LogConverter" /> per il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-106">Initializes a new instance of the <see cref="T:System.Diagnostics.Design.LogConverter" /> class for the given type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c7e93-107">Per poter accedere a codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-107">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="c7e93-108">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-108">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="c7e93-109">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-109">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="logConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c7e93-110">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="c7e93-111">Oggetto T:System.Type che rappresenta il tipo dal quale si vuole effettuare la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-111">A T:System.Type  that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e93-112">Indica se questo convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore utilizzando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-112">Indicates whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7e93-113">
            <see langword="true" /> se è possibile eseguire la conversione, <see langword="false" /> in caso contrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-113">
              <see langword="true" /> if the conversion can be performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="logConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c7e93-114">Oggetto T:System.ComponentModel.ITypeDescriptorContext che specifica un contesto di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-114">An T:System.ComponentModel.ITypeDescriptorContext  that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="c7e93-115">Oggetto T:System.Globalization.CultureInfo da usare come impostazioni cultura correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-115">The T:System.Globalization.CultureInfo  to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c7e93-116">T:System.Object da convertire</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-116">The T:System.Object  to convert</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e93-117">Converte l'oggetto specificato in una stringa, utilizzando il contesto specificato e le informazioni sulle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-117">Converts the given object to a string, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7e93-118">Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-118">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="logConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c7e93-119">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-119">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e93-120">Ottiene un insieme di valori standard per il tipo di dati per cui è progettato questo validator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-120">Gets a collection of standard values for the data type this validator is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7e93-121">Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un set standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un set standard di valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-121">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e93-122">Il parametro `context` può essere utilizzato per ottenere ulteriori informazioni sull'ambiente dal quale viene richiamato il convertitore.</span><span class="sxs-lookup"><span data-stu-id="c7e93-122">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="c7e93-123">Dal momento che può essere `null`, è preferibile eseguire sempre un controllo.</span><span class="sxs-lookup"><span data-stu-id="c7e93-123">This can be `null`, so always check.</span></span> <span data-ttu-id="c7e93-124">Anche le proprietà dell'oggetto di contesto possono restituire `null`.</span><span class="sxs-lookup"><span data-stu-id="c7e93-124">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="logConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c7e93-125">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-125">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e93-126">Indica se il convertitore supporta un insieme di valori standard che possono essere selezionati da un elenco utilizzando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-126">Indicates whether this object supports a standard set of values that can be picked from a list using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7e93-127">
            <see langword="true" /> perché è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> per trovare un insieme comune di valori supportati dall'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-127">
              <see langword="true" /> because <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports.</span>
          </span>
          <span data-ttu-id="c7e93-128">Questo metodo non restituisce mai <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e93-128">This method never returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e93-129">Il parametro `context` può essere utilizzato per ottenere ulteriori informazioni sull'ambiente dal quale viene richiamato il convertitore.</span><span class="sxs-lookup"><span data-stu-id="c7e93-129">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="c7e93-130">Dal momento che può essere `null`, è preferibile eseguire sempre un controllo.</span><span class="sxs-lookup"><span data-stu-id="c7e93-130">This can be `null`, so always check.</span></span> <span data-ttu-id="c7e93-131">Anche le proprietà dell'oggetto di contesto possono restituire `null`.</span><span class="sxs-lookup"><span data-stu-id="c7e93-131">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>