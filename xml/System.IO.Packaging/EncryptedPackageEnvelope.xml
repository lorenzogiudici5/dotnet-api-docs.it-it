<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d13de0354f15e43fe6e836cca6df2e57f369e866" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bfea5-101">Rappresenta un file composto OLE che contiene un package crittografato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfea5-101">Represents an OLE compound file that contains an encrypted package.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> non ha costruttori pubblici.</span><span class="sxs-lookup"><span data-stu-id="bfea5-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> has no public constructors.</span></span>  <span data-ttu-id="bfea5-103">Un <xref:System.IO.Packaging.EncryptedPackageEnvelope> viene creato usando il metodo statico <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, o <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="bfea5-103">An <xref:System.IO.Packaging.EncryptedPackageEnvelope> is created by use of the static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, or <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-104">Chiude il package crittografato e il file composto OLE che lo contiene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-104">Closes the encrypted package and the OLE compound file that holds it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfea5-105">Nell'esempio seguente viene illustrato come utilizzare questo metodo per chiudere un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="bfea5-105">The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-106">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-106">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="bfea5-107">Flusso su cui creare il file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-107">The stream on which to create the file.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="bfea5-108">Licenza di pubblicazione incorporata nel file composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-108">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="bfea5-109">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-109">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-110">Creare e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> sul flusso specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-110">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> on the specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-111">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-111">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-112">L'utente corrente ha accesso in lettura/scrittura per il nuovo file.</span><span class="sxs-lookup"><span data-stu-id="bfea5-112">The current user has read/write access to the new file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfea5-113">
            <paramref name="envelopeStream" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-113">
              <paramref name="envelopeStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bfea5-114">
            <paramref name="envelopeStream" /> non fornisce accesso in lettura/scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-114">
              <paramref name="envelopeStream" /> does not provide read/write access.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="bfea5-115">Nome del file composto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-115">The name of the OLE compound file.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="bfea5-116">Licenza di pubblicazione incorporata nel file composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-116">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="bfea5-117">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-117">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-118">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e gli fornisce il nome file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-118">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and gives it the specified file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-119">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-119">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-120">Se un file con il nome specificato esiste già, viene sovrascritto.</span><span class="sxs-lookup"><span data-stu-id="bfea5-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="bfea5-121">L'utente corrente ha accesso in lettura/scrittura al file.</span><span class="sxs-lookup"><span data-stu-id="bfea5-121">The current user has read/write access to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfea5-122">
            <paramref name="envelopeFileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-122">
              <paramref name="envelopeFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-123">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> che utilizza un package non crittografato esistente come origine del proprio contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-123">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses an existing unencrypted package as the source of its content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfea5-124">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> metodo per creare un'istanza di un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="bfea5-124">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="bfea5-125">Flusso su cui creare il file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-125">The stream on which to create the file.</span>
          </span>
        </param>
        <param name="packageStream">
          <span data-ttu-id="bfea5-126">Il flusso che rappresenta il package non crittografato esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-126">The stream representing the existing unencrypted package.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="bfea5-127">Licenza di pubblicazione incorporata nel file composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-127">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="bfea5-128">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-128">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-129">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (sul flusso specificato) che utilizza il package non crittografato specificato come proprio contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-129">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (on the specified stream) that uses the specified unencrypted package as its content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-130">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-130">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-131">L'utente corrente ha accesso in lettura/scrittura per il nuovo file.</span><span class="sxs-lookup"><span data-stu-id="bfea5-131">The current user has read/write access to the new file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfea5-132">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> metodo per creare un'istanza di un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="bfea5-132">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfea5-133">
            <paramref name="envelopeStream" /> o <paramref name="packageStream" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-133">
              <paramref name="envelopeStream" /> or <paramref name="packageStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bfea5-134">
            <paramref name="envelopeStream" /> non fornisce accesso in lettura/scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-134">
              <paramref name="envelopeStream" /> does not provide read/write access.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="bfea5-135">Nome del file composto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-135">The name of the OLE compound file.</span>
          </span>
        </param>
        <param name="packageStream">
          <span data-ttu-id="bfea5-136">Il flusso che rappresenta il package non crittografato esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-136">The stream representing the existing unencrypted package.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="bfea5-137">Licenza di pubblicazione incorporata nel file composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-137">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="bfea5-138">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-138">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-139">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> che utilizza il package non crittografato specificato come proprio contenuto e gli attribuisce il nome file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-139">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses the specified unencrypted package as its content, and gives it the specified file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-140">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-140">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-141">Se un file con il nome specificato esiste già, viene sovrascritto.</span><span class="sxs-lookup"><span data-stu-id="bfea5-141">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="bfea5-142">L'utente corrente ha accesso in lettura/scrittura al file.</span><span class="sxs-lookup"><span data-stu-id="bfea5-142">The current user has read/write access to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfea5-143">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> metodo per creare un'istanza di un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="bfea5-143">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfea5-144">
            <paramref name="envelopeFileName" /> o <paramref name="packageStream" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-144">
              <paramref name="envelopeFileName" /> or <paramref name="packageStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-145">Rilascia le risorse usate da <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-145">Releases the resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-146">Rilascia tutte le risorse usate da <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-146">Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-147">Chiamare <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> al termine di un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="bfea5-147">Call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> when finished with a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="bfea5-148">Il metodo <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> lascia l'oggetto <xref:System.IO.Packaging.EncryptedPackageEnvelope> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="bfea5-148">The <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> method leaves the <xref:System.IO.Packaging.EncryptedPackageEnvelope> in an unusable state.</span></span> <span data-ttu-id="bfea5-149">Dopo la chiamata <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.IO.Packaging.EncryptedPackageEnvelope> in modo che il garbage collector può recuperare la memoria che di <xref:System.IO.Packaging.EncryptedPackageEnvelope> occupata.</span><span class="sxs-lookup"><span data-stu-id="bfea5-149">After calling <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, you must release all references to the <xref:System.IO.Packaging.EncryptedPackageEnvelope> so the garbage collector can reclaim the memory that the <xref:System.IO.Packaging.EncryptedPackageEnvelope> was occupying.</span></span> <span data-ttu-id="bfea5-150">Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="bfea5-150">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfea5-151">Chiamare sempre il metodo <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="bfea5-151">Always call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> before you release your last reference to the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="bfea5-152">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.IO.Packaging.EncryptedPackageEnvelope> dell'oggetto <xref:System.Object.Finalize%2A> non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="bfea5-152">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Packaging.EncryptedPackageEnvelope> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="bfea5-153">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-153">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-154">Rilascia le risorse non gestite usate da <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e, facoltativamente, le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-154">Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-155">Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="bfea5-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="bfea5-156">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="bfea5-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="bfea5-157"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="bfea5-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="bfea5-158">Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.IO.Packaging.EncryptedPackageEnvelope> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="bfea5-158">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.Packaging.EncryptedPackageEnvelope> references.</span></span> <span data-ttu-id="bfea5-159">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="bfea5-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bfea5-160">Il metodo <see langword="Dispose" /> può essere chiamato più volte da altri oggetti.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bfea5-160">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="bfea5-161">Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bfea5-161">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="bfea5-162">Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="bfea5-162">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="bfea5-163">Per ulteriori informazioni su <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [si esegue l'override del metodo Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="bfea5-163">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-164">Ottiene un valore che specifica se il file è stato aperto con accesso in lettura, scrittura o entrambe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-164">Gets a value that specifies whether the file was opened with access to read, write, or both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfea5-165">Il valore <see cref="T:System.IO.FileAccess" /> utilizzato per aprire il file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-165">The <see cref="T:System.IO.FileAccess" /> value that was used to open the file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-166">Cancellare il flusso sia per l'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> che per il contenuto del relativo package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-166">Flush the stream for both the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and its package content.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-167">Ottiene il package crittografato all'interno dell'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-167">Gets the encrypted package inside the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-168">
            <see cref="T:System.IO.Packaging.Package" /> all'interno della busta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-168">The <see cref="T:System.IO.Packaging.Package" /> in the envelope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-169">Ottiene un valore che specifica se il file è un file composto OLE con un flusso del pacchetto crittografato</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-169">Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bfea5-170">Flusso sottoposto a test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-170">The stream that is tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-171">Ottiene un valore che specifica se il flusso specificato è un file composto OLE con un flusso del package crittografato</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-171">Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-172">
            <see langword="true" /> se il flusso specificato è un file composto OLE con un flusso del package crittografato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-172">
              <see langword="true" /> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfea5-173">
            <paramref name="stream" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-173">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="bfea5-174">File sottoposto a test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-174">The file that is tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-175">Ottiene un valore che specifica se il file specificato è un file composto OLE con un flusso del package crittografato</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-175">Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-176">
            <see langword="true" /> se il file specificato è un file composto OLE con un flusso del package crittografato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-176">
              <see langword="true" /> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfea5-177">Nell'esempio seguente viene illustrato come utilizzare questo metodo per testare la crittografia.</span><span class="sxs-lookup"><span data-stu-id="bfea5-177">The following example shows how to use this method to test for encryption.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfea5-178">
            <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-178">
              <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-179">Apre il package crittografato in un file composto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-179">Opens the encrypted package in an OLE compound file.</span>
          </span>
        </summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="bfea5-180">Flusso che contiene il package crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-180">The stream containing the encrypted package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-181">Apre il package crittografato nel flusso specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-181">Open the encrypted package in the specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-182">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-182">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-183">Il flusso deve essere un pacchetto crittografato.</span><span class="sxs-lookup"><span data-stu-id="bfea5-183">The stream must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="bfea5-184">File che contiene il package crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-184">The file containing the encrypted package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-185">Apre il package crittografato nel file specificato come in sola lettura e non condiviso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-185">Open the encrypted package in the specified file as read only and unshared.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-186">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-186">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-187">Il file deve avere un pacchetto crittografato.</span><span class="sxs-lookup"><span data-stu-id="bfea5-187">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="bfea5-188">Il file aperto è in sola lettura e non condiviso.</span><span class="sxs-lookup"><span data-stu-id="bfea5-188">The opened file is read only and unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="bfea5-189">File che contiene il package crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-189">The file containing the encrypted package.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="bfea5-190">Tipo di accesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-190">The type of access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-191">Apre il package crittografato nel file specificato come in sola lettura e con l'accesso specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-191">Open the encrypted package in the specified file as unshared and with the specified access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-192">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-192">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-193">Il file deve avere un pacchetto crittografato.</span><span class="sxs-lookup"><span data-stu-id="bfea5-193">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="bfea5-194">Il file aperto viene annullato.</span><span class="sxs-lookup"><span data-stu-id="bfea5-194">The opened file is unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="bfea5-195">File che contiene il package crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-195">The file containing the encrypted package.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="bfea5-196">Tipo di accesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-196">The type of access.</span>
          </span>
        </param>
        <param name="sharing">
          <span data-ttu-id="bfea5-197">Tipo di condivisione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-197">The type of sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfea5-198">Apre il package crittografato nel file specificato e gli fornisce l'accesso e la condivisione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-198">Open the encrypted package in the specified file and gives it the specified access and sharing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfea5-199">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-199">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-200">Il file deve avere un pacchetto crittografato.</span><span class="sxs-lookup"><span data-stu-id="bfea5-200">The file must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-201">Ottiene le proprietà principali del package (ad esempio Titolo e Oggetto) del documento di Rights Management.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-201">Gets the core package properties (such as Title and Subject) of the rights managed document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfea5-202">
            <see cref="T:System.IO.Packaging.PackageProperties" /> del package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-202">The <see cref="T:System.IO.Packaging.PackageProperties" /> for the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfea5-203">Queste proprietà di base vengono archiviate nei flussi di proprietà OLE standard (\005SummaryInformation e \005DocumentSummaryInformation).</span><span class="sxs-lookup"><span data-stu-id="bfea5-203">These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</span></span> <span data-ttu-id="bfea5-204">Le proprietà principali vengono archiviate anche nel pacchetto stesso.</span><span class="sxs-lookup"><span data-stu-id="bfea5-204">The core properties are also stored in the package itself.</span></span> <span data-ttu-id="bfea5-205">È responsabilità dell'applicazione per mantenere i due set di proprietà sincronizzato.</span><span class="sxs-lookup"><span data-stu-id="bfea5-205">It is the responsibility of the application to keep the two sets of properties synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-206">Ottiene l'informazioni di Rights Management archiviata nell'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specificamente, l'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> e l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> archiviati nel file composto OLE che incorpora il package protetto da Rights Management.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-206">Gets the rights management information stored in the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specifically, the <see cref="T:System.Security.RightsManagement.PublishLicense" /> and the <see cref="T:System.Security.RightsManagement.UseLicense" />s stored in the OLE compound file that embodies the rights-management protected package</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfea5-207">
            <see cref="T:System.IO.Packaging.RightsManagementInformation" /> del package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-207">The <see cref="T:System.IO.Packaging.RightsManagementInformation" /> for the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfea5-208">Nell'esempio seguente viene illustrato come ottenere <xref:System.IO.Packaging.RightsManagementInformation> per un pacchetto crittografato usando la <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="bfea5-208">The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> property.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfea5-209">Ottiene un oggetto che fornisce accesso ai flussi del file composto all'esterno del package crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-209">Gets an object that provides access to the compound file streams outside the encrypted package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfea5-210">
            <see cref="T:System.IO.Packaging.StorageInfo" /> che rappresenta flussi nel file composto OLE che sono all'esterno del package crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfea5-210">A <see cref="T:System.IO.Packaging.StorageInfo" /> representing streams in the OLE compound file that are outside the encrypted package.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>