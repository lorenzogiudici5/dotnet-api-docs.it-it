<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76405508cd622725c1bbd78654581656493a3fed" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51870196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce metodi di utilità per comporre e analizzare gli oggetti URI di tipo pack.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" />
        <Parameter Name="secondPackUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">Il primo URI di tipo pack.</param>
        <param name="secondPackUri">Il secondo URI di tipo pack.</param>
        <summary>Restituisce un valore che indica se due URI di tipo pack sono uguali.</summary>
        <returns>Intero con segno che indica la relazione tra <paramref name="firstPackUri" /> e <paramref name="secondPackUri" />.  
  
 <list type="table"><listheader><term> Valore 
 </term><description> Significato 
 </description></listheader><item><term> Minore di 0 
 </term><description><paramref name="firstPackUri" /> è minore di <paramref name="secondPackUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> è equivalente a <paramref name="secondPackUri" />.  
  
 </description></item><item><term> Maggiore di 0 
 </term><description><paramref name="firstPackUri" /> è maggiore di <paramref name="secondPackUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se entrambe `firstPackUri` e `secondPackUri` vengono `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> restituisce 0. Quando si confrontano URI di tipo pack, un URI null è sempre minore di un URI diverso da null.    Per i casi in cui `firstPackUri` e `secondPackUri` sono entrambi assoluto pack URI, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> esegue il confronto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firstPackUri" /> o <paramref name="secondPackUri" /> non è un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] assoluto.  
  
oppure 
<paramref name="firstPackUri" /> o <paramref name="secondPackUri" /> non inizia con uno schema "pack://".</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del primo oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <param name="secondPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del secondo oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Restituisce un valore che indica se due [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] di parti del pacchetto sono equivalenti.</summary>
        <returns>Valore che indica la relazione tra <paramref name="firstPartUri" /> e <paramref name="secondPartUri" />.  
  
 <list type="table"><listheader><term> Valore 
 </term><description> Significato 
 </description></listheader><item><term> Minore di 0 
 </term><description><paramref name="firstPartUri" /> è minore di <paramref name="secondPartUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> è equivalente a <paramref name="secondPartUri" />.  
  
 </description></item><item><term> Maggiore di 0 
 </term><description><paramref name="firstPartUri" /> è maggiore di <paramref name="secondPartUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se entrambe `firstPartUri` e `secondPartUri` vengono `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> restituisce 0. Quando si confrontano <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)], un valore null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] è sempre minore di un valore non null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]. Per i casi in cui `firstPartUri` e `secondPartUri` sono entrambi relativo <xref:System.IO.Packaging.PackagePart> URI, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> esegue il confronto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firstPartUri" /> o <paramref name="secondPartUri" /> non è una sintassi dell'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] della parte valida.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un nuovo URI di tipo pack.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente vengono illustrati i casi di esempio per il <xref:System.IO.Packaging.PackUriHelper.Create%2A> (metodo).  
  
|`packageUri`|`partUri`|`fragment`|URI di tipo pack restituiti|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page1.Xaml|#intro|Pack://http:, www.proseware.com, mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/Page2.Xaml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.Xaml|#summary|Pack://http:, www.proseware.com, mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/Page1.Xaml|#intro|Pack://http:, www.proseware.com, packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|Pack://http:, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|Pack://FTP:, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.Xaml|#xref|Pack://file:, d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Composizione di un URI di tipo pack è un processo in più passaggi.  Ad esempio, un passaggio formare un URI di tipo pack consiste nel sostituire i caratteri di barra rovesciata (/) del `packageUri` con virgole (,).  
  
 Per altre informazioni sulla conversione di stringhe e come vengono formate URI di tipo pack, vedere Appendice A.4 "Esempi di conversione di stringhe" e l'appendice B.3 "Composizione di un URI di tipo Pack" nella specifica Open Packaging Conventions disponibile per il download all'indirizzo [specifiche e concedere in licenza download](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">URI dell'oggetto <see cref="T:System.IO.Packaging.Package" /> a cui si fa riferimento.</param>
        <summary>Crea un nuovo URI di tipo pack che punta a un pacchetto.</summary>
        <returns>URI di tipo pack per l'oggetto <see cref="T:System.IO.Packaging.Package" /> a cui fa riferimento l'oggetto <paramref name="packageUri" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` non può essere specificata come `null` o vuoto.  
  
 Nella tabella seguente vengono illustrati i casi di esempio per <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|URI di tipo pack restituiti|  
|------------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|Pack://http:, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|Pack://FTP:, ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/packages/mypackage2.pkg|Pack://file:, d:,packages,mypackage2.pkg|  
  
 Composizione di un URI di tipo pack è un processo in più passaggi.  Ad esempio, un passaggio formare un URI di tipo pack consiste nel sostituire i caratteri di barra rovesciata (/) del `packageUri` con virgole (,).  
  
 Per altre informazioni sulla conversione di stringhe e come vengono formate URI di tipo pack, vedere Appendice A.4 "Esempi di conversione di stringhe" e l'appendice B.3 "Composizione di un URI di tipo Pack" nella specifica Open Packaging Conventions disponibile per il download all'indirizzo [specifiche e concedere in licenza download](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Packaging.PackUriHelper.Create%2A> metodo per definire un URI che fa riferimento a un pacchetto di tipo pack.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> non è un URI assoluto.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">Oggetto [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">Oggetto [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> nel pacchetto.</param>
        <summary>Crea un URI di tipo pack, dato un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di <see cref="T:System.IO.Packaging.Package" /> e l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di una parte nel pacchetto.</summary>
        <returns>URI di tipo pack dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` non può essere specificato come null o vuoto.  
  
 Se `partUri` è `null`, l'URI di tipo pack restituito punta al pacchetto.  
  
 Nella tabella seguente vengono illustrati i casi di esempio per il <xref:System.IO.Packaging.PackUriHelper.Create%2A> (metodo).  
  
|`packageUri`|`partUri`|URI di tipo pack restituiti|  
|------------------|---------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page2.Xaml|Pack://http:, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|Pack://http:, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|Pack://http:, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|Pack://http:, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|**null**|Pack://http:, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|Pack://FTP:, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.Xaml|Pack://file:, d:,packages,mypackage2.pkg/a/bar.xaml|  
  
 Composizione di un URI di tipo pack è un processo in più passaggi.  Ad esempio, un passaggio formare un URI di tipo pack consiste nel sostituire i caratteri di barra rovesciata (/) del `packageUri` con virgole (,).  
  
 Per altre informazioni sulla conversione di stringhe e come vengono formate URI di tipo pack, vedere Appendice A.4 "Esempi di conversione di stringhe" e l'appendice B.3 "Composizione di un URI di tipo Pack" nella specifica Open Packaging Conventions disponibile per il download all'indirizzo [specifiche e concedere in licenza download](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> metodo per definire un URI che fa riferimento a un pacchetto di tipo pack.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> non è un URI assoluto.  
  
oppure 
 <paramref name="partUri" /> non è una sintassi URI valida per la parte.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="fragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageUri">Oggetto [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">Oggetto [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> nel pacchetto.</param>
        <param name="fragment">Riferimento "#" che identifica un elemento all'interno della parte del pacchetto.</param>
        <summary>Crea un URI di tipo pack dato un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di <see cref="T:System.IO.Packaging.Package" />, l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di una parte nel pacchetto e un frammento "#" da accodare.</summary>
        <returns>URI di tipo pack che identifica il pacchetto, la parte del pacchetto e il frammento specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` non può essere specificata come `null` o vuoto.  
  
 Se `partUri` è `null`, l'URI di tipo pack restituito punta al pacchetto.  
  
 `fragment` non può essere una stringa vuota, ma può essere specificato come `null`.  Quando non è specificato come `null`, il `fragment` stringa deve iniziare con un carattere '#'.  Per altre informazioni sulla sintassi dei `fragment` riferimenti, vedere la sezione 3.5 "Frammento" della [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 Nella tabella seguente vengono illustrati i casi di esempio per il <xref:System.IO.Packaging.PackUriHelper.Create%2A> (metodo).  
  
|`packageUri`|`partUri`|`fragment`|URI di tipo pack restituiti|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page1.Xaml|#intro|Pack://http:, www.proseware.com, mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/Page2.Xaml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|Pack://http:, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.Xaml|#summary|Pack://http:, www.proseware.com, mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/Page1.Xaml|#intro|Pack://http:, www.proseware.com, packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|Pack://http:, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|Pack://FTP:, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.Xaml|#xref|Pack://file:, d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Composizione di un URI di tipo pack è un processo in più passaggi.  Ad esempio, un passaggio formare un URI di tipo pack consiste nel sostituire i caratteri di barra rovesciata (/) del `packageUri` con virgole (,).  
  
 Per altre informazioni sulla conversione di stringhe e come vengono formate URI di tipo pack, vedere Appendice A.4 "Esempi di conversione di stringhe" e l'appendice B.3 "Composizione di un URI di tipo Pack" nella specifica Open Packaging Conventions disponibile per il download all'indirizzo [specifiche e concedere in licenza download](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> metodo per definire un URI che fa riferimento a un pacchetto di tipo pack.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> non è un URI assoluto.  
  
oppure 
 <paramref name="partUri" /> non è una sintassi URI valida per la parte.  
  
oppure 
 <paramref name="fragment" /> è vuoto o inizia con "#".</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> all'interno del package.</param>
        <summary>Crea un URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> formattato.</summary>
        <returns>URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> formattato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di un <xref:System.IO.Packaging.PackagePart> sempre viene fatto riferimento dal <xref:System.IO.Packaging.Package> radice.  
  
 L'oggetto restituito <xref:System.IO.Packaging.PackagePart> URI è un percorso assoluto inizia sempre con "/" ed è conforme alla sintassi definita nel [Open Packaging Conventions Specification](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Nella tabella seguente vengono illustrati i casi di esempio per <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>.  
  
|`partUri`|URI della parte restituito|  
|---------------|-----------------------|  
|Picture1|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/mydoc.xaml|/a/mydoc.xaml|  
|/b/bar.Xaml|/b/bar.Xaml|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> metodo per definire gli URI relativi per <xref:System.IO.Packaging.PackagePart> elementi.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">La scrittura di un pacchetto di esempio</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> da normalizzare.</param>
        <summary>Restituisce la forma normalizzata dell'URI di un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> specificato.</summary>
        <returns>Forma normalizzata del parametro <paramref name="partUri" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> Normalizza `partUri` per la riduzione maiuscole in lettere maiuscole (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) e la restituzione del risultato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">URI di tipo pack da cui restituire l'URI di <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Restituisce l'URI interno che punta all'intero pacchetto di un URI di tipo pack specificato.</summary>
        <returns>URI dell'oggetto <see cref="T:System.IO.Packaging.Package" /> dal parametro <paramref name="packUri" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente vengono illustrati i casi di esempio per <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>.  
  
|`packUri`|URI del pacchetto restituito|  
|---------------|--------------------------|  
|Pack://http:, www.proseware.com, mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  
|Pack://http:, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  
|Pack://http:, www.proseware.com, mypackage.pkg|http://www.proseware.com/mypackage.pkg|  
|Pack://FTP:, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  
|Pack://file:, d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">URI di tipo pack da cui restituire l'URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Restituisce l'URI di un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> all'interno di un URI di tipo pack specificato.</summary>
        <returns>L'URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> nel parametro <paramref name="packUri" /> specificato o <see langword="null" /> se <paramref name="packUri" /> punta a un pacchetto anziché un oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito <xref:System.IO.Packaging.PackagePart> URI è relativo alla radice del pacchetto e rappresenta un percorso assoluto che inizia sempre con "/" ed è conforme alla sintassi definita nel [Open Packaging Conventions Specification](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Nella tabella seguente vengono illustrati i casi di esempio per <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>.  
  
|`packUri`|URI della parte restituito|  
|---------------|-----------------------|  
|Pack://http:, www.proseware.com, mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  
|Pack://http:, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|/a/bar.Xaml|  
|Pack://http:, www.proseware.com, mypackage.pkg|Null|  
|Pack://FTP:, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/Picture.jpg|  
|Pack://file:, d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.Xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">Oggetto <see cref="P:System.IO.Packaging.PackagePart.Uri" /> dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> per restituire l'URI per l'oggetto <see cref="T:System.IO.Packaging.PackageRelationship" /> associato.</param>
        <summary>Restituisce l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] della parte di relazione associata a un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> specificato.</summary>
        <returns>URI della parte <see cref="T:System.IO.Packaging.PackageRelationship" /> associata all'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> identificato da <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` deve identificare l'il <xref:System.IO.Packaging.Package> ("/") o un <xref:System.IO.Packaging.PackagePart> che non è un <xref:System.IO.Packaging.PackageRelationship> parte.  
  
 Per altre informazioni sulle <xref:System.IO.Packaging.PackageRelationship> parti, vedere la sezione 9.3 "Relazioni" in Open Packaging Conventions Specification per il download all'indirizzo [specifiche e download di licenza](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 [URI di tipo pack in WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Specifica Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La sintassi <paramref name="partUri" /> non è valida per un URI della PackagePart.  
  
oppure 
 <paramref name="partUri" /> è un URI assoluto.  
  
oppure 
 <paramref name="partUri" /> fa riferimento a una parte di relazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] della parte di origine.</param>
        <param name="targetPartUri">Elemento [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] della parte di destinazione.</param>
        <summary>Restituisce l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] relativo tra due [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)]°di°<see cref="T:System.IO.Packaging.PackagePart" /> specificati.</summary>
        <returns>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] relativo da <paramref name="sourcePartUri" /> a <paramref name="targetPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente vengono illustrati i casi di esempio per <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>.  
  
|`sourcePartUri`|`targetPartUri`|URI relativo restituito|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|jpg ""|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|../picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourcePartUri" /> o <paramref name="targetPartUri" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] della parte di relazione da cui restituire l'oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
        <summary>Restituisce l'oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> dall'oggetto <see cref="T:System.IO.Packaging.PackageRelationship" /> con un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] specificato.</summary>
        <returns>Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> della relazione con il parametro <paramref name="relationshipPartUri" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> deve identificare una proprietà di una parte di relazione il <xref:System.IO.Packaging.PackagePart.Package%2A> ("/") o una <xref:System.IO.Packaging.PackagePart> che non è un <xref:System.IO.Packaging.PackageRelationship>.  
  
 Ad esempio, se la parte del pacchetto "/ /files/document.xaml" è il proprietario dell'origine della parte di relazione "/ files/_rels/document.xaml.rels", la chiamata <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> con il `relationshipPartUri` parametro del "/ files/_rels/document.xaml.rels" restituisce il <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>di "/ /files/document.xaml".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipPartUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipPartUri" /> è un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] assoluto.  
  
oppure 
 La sintassi <paramref name="relationshipPartUri" /> non è valida per un oggetto <see cref="T:System.IO.Packaging.PackagePart" />.  
  
oppure 
 <paramref name="relationshipPartUri" /> non fa riferimento a una parte di relazione.  
  
oppure 
L'oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> della parte di relazione fa riferimento a un'altra parte di relazione (non valida).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] per cui verificare la presenza di una parte <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
        <summary>Restituisce un valore che indica se un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] specificato è l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di una parte <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
        <returns>
          <see langword="true" /> se <paramref name="partUri" /> identifica una parte <see cref="T:System.IO.Packaging.PackageRelationship" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> è un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] assoluto.  
  
oppure 
 <paramref name="partUri" /> rappresenta una sintassi <see cref="T:System.IO.Packaging.PackagePart" /> non valida.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">URI della parte di origine o "/" per definire la radice di <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="targetUri">URI relativo della parte di destinazione.</param>
        <summary>Restituisce l'URI di una parte, dato un URI della parte di origine e un URI con un percorso relativo di una parte di destinazione.</summary>
        <returns>URI della parte di destinazione risolto tra i parametri <paramref name="SourcePartUri" /> e <paramref name="targetUri" /> specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente vengono illustrati i casi di esempio per <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  
  
|`sourcePartUri`|`targetUri`|URI restituito|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|jpg ""|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|../picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  Per l'esempio completo, vedere [lettura di un pacchetto di esempio](https://go.microsoft.com/fwlink/?LinkID=160034).  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourcePartUri" /> o <paramref name="targetUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourcePartUri" /> non è un URI della parte valido.  
  
oppure 
 <paramref name="targetUri" /> non è un URI relativo valido.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specifica Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definisce il nome di schema URI di tipo pack "pack".</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>