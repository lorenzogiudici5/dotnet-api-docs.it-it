<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="93cba3467c895b67f4a77cea665837530a382f08" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36629189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <TypeSignature Language="F#" Value="type ISerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente a un oggetto di controllare la propria serializzazione e deserializzazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi classe che può essere serializzato deve essere contrassegnati con il <xref:System.SerializableAttribute>. Se una classe deve controllare il processo di serializzazione, è possibile implementare il <xref:System.Runtime.Serialization.ISerializable> interfaccia. Il <xref:System.Runtime.Serialization.Formatter> chiama il <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> al momento della serializzazione e popola l'oggetto specificato <xref:System.Runtime.Serialization.SerializationInfo> con tutti i dati necessari per rappresentare l'oggetto. Il <xref:System.Runtime.Serialization.Formatter> crea un <xref:System.Runtime.Serialization.SerializationInfo> con il tipo dell'oggetto nel grafico. Gli oggetti che devono inviare proxy per se stessi possono utilizzare il <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> e <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> metodi su <xref:System.Runtime.Serialization.SerializationInfo> per modificare le informazioni trasmesse.  
  
 Nel caso di ereditarietà della classe, è possibile serializzare una classe che deriva da una classe base che implementa <xref:System.Runtime.Serialization.ISerializable>. In questo caso, la classe derivata deve chiamare l'implementazione della classe base <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> all'interno dell'implementazione di <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>. In caso contrario, i dati dalla classe di base non essere serializzati.  
  
 Il <xref:System.Runtime.Serialization.ISerializable> interfaccia ne implica un costruttore con la firma constructor (<xref:System.Runtime.Serialization.SerializationInfo> informazioni <xref:System.Runtime.Serialization.StreamingContext> contesto). In fase di deserializzazione viene chiamato il costruttore corrente solo dopo che i dati nel <xref:System.Runtime.Serialization.SerializationInfo> è stato deserializzato dal formattatore. In generale, questo costruttore deve essere protetto se la classe non sealed.  
  
 Non è possibile garantire l'ordine in cui gli oggetti vengono deserializzati. Ad esempio, se un tipo fa riferimento a un tipo che non è stato ancora deserializzato, verificherà un'eccezione. Se si creano tipi dotati di queste dipendenze, è possibile risolvere il problema mediante l'implementazione di `IDeserializationCallback` interfaccia e il `OnDeserialization` metodo.  
  
 Architettura di serializzazione gestisce i tipi di oggetti che estendono <xref:System.MarshalByRefObject> lo stesso come i tipi che estendono <xref:System.Object>. Questi tipi possono essere contrassegnati con il <xref:System.SerializableAttribute> e implementare il <xref:System.Runtime.Serialization.ISerializable> interfaccia come qualsiasi altro tipo di oggetto. Stato oggetto sarà acquisito e salvati in modo permanente nel flusso.  
  
 Quando questi tipi sono in uso tramite <xref:System.Runtime.Remoting>, l'infrastruttura remota fornisce un surrogato che ha la precedenza sulla serializzazione tipica e invece serializza un proxy per il <xref:System.MarshalByRefObject>. Un helper che sa come serializzare e deserializzare gli oggetti di un determinato tipo è un surrogato. Il proxy, invisibile all'utente nella maggior parte dei casi, sarà di tipo <xref:System.Runtime.Remoting.ObjRef>.  
  
 Come un modello di progettazione generali, potrebbe risultare insolito per una classe di essere contrassegnato con l'attributo serializable ed estendere <xref:System.MarshalByRefObject>. Gli sviluppatori devono considerare con attenzione i possibili scenari di serializzazione e la comunicazione remota quando si combinano queste due caratteristiche. È un esempio in cui potrebbe essere applicabile con un <xref:System.IO.MemoryStream>. Quando la classe di base <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) compreso tra <xref:System.MarshalByRefObject>, è possibile acquisire lo stato di un <xref:System.IO.MemoryStream> e ripristinarlo quando necessario. Potrebbe pertanto essere significativa per serializzare lo stato del flusso in un database e ripristinarlo in un momento successivo nel tempo. Tuttavia, quando utilizzato attraverso la comunicazione remota, un oggetto di questo tipo sarebbe elaborato.  
  
 Per ulteriori informazioni sulla serializzazione delle classi che estendono <xref:System.MarshalByRefObject>, vedere <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>. Per ulteriori informazioni sull'implementazione <xref:System.Runtime.Serialization.ISerializable>, vedere [serializzazione personalizzata](~/docs/standard/serialization/custom-serialization.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Runtime.Serialization.ISerializable> interfaccia per definire il comportamento di serializzazione personalizzata per una classe.  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implementare questa interfaccia per consentire a un oggetto prendere parte nella propria serializzazione e deserializzazione.</para>
    </block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="iSerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
        <param name="context">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare l'oggetto di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti gli oggetti che rientrano nel <xref:System.Runtime.Serialization.SerializationInfo> vengono automaticamente rilevati e serializzati dal formattatore.  
  
 Codice che chiama <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> richiede il <xref:System.Security.Permissions.SecurityPermission> per fornire servizi di serializzazione. Enumerazione associata: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Non è garantito che questo metodo verrà chiamato solo una volta per ogni istanza dell'oggetto durante la serializzazione. Pertanto, il metodo deve essere implementato in modo tale che il relativo comportamento sarà lo stesso indipendentemente dal numero di volte in cui che viene chiamato.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> metodo per impostare valori alternativi per un oggetto serializzato. Il codice Usa il <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> metodo la <xref:System.Runtime.Serialization.SerializationInfo> classe per archiviare i valori alternativi quando l'oggetto viene serializzato. Al contrario, quando il costruttore del `Person` classe viene chiamata durante la deserializzazione, i valori alternativi vengono recuperati utilizzando il <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> metodo e riassegnati ai campi dell'oggetto.  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
  </Members>
</Type>