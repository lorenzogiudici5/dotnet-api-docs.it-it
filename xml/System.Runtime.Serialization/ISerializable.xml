<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e472d101330ad3fe07ac415fe5b90af0a16de62b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1b00d-101">Consente a un oggetto di controllare la propria serializzazione e deserializzazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b00d-101">Allows an object to control its own serialization and deserialization.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b00d-102">Qualsiasi classe che può essere serializzato deve essere contrassegnati con il <xref:System.SerializableAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-102">Any class that might be serialized must be marked with the <xref:System.SerializableAttribute>.</span></span> <span data-ttu-id="1b00d-103">Se è necessario che una classe controllare il processo di serializzazione, è possibile implementare il <xref:System.Runtime.Serialization.ISerializable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="1b00d-103">If a class needs to control its serialization process, it can implement the <xref:System.Runtime.Serialization.ISerializable> interface.</span></span> <span data-ttu-id="1b00d-104">Il <xref:System.Runtime.Serialization.Formatter> chiamate di <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> in fase di serializzazione e popola l'oggetto specificato <xref:System.Runtime.Serialization.SerializationInfo> con tutti i dati necessari per rappresentare l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="1b00d-104">The <xref:System.Runtime.Serialization.Formatter> calls the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> at serialization time and populates the supplied <xref:System.Runtime.Serialization.SerializationInfo> with all the data required to represent the object.</span></span> <span data-ttu-id="1b00d-105">Il <xref:System.Runtime.Serialization.Formatter> crea un <xref:System.Runtime.Serialization.SerializationInfo> con il tipo dell'oggetto nel grafico.</span><span class="sxs-lookup"><span data-stu-id="1b00d-105">The <xref:System.Runtime.Serialization.Formatter> creates a <xref:System.Runtime.Serialization.SerializationInfo> with the type of the object in the graph.</span></span> <span data-ttu-id="1b00d-106">Gli oggetti che devono inviare proxy per se stessi possono utilizzare il <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> e <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> metodi su <xref:System.Runtime.Serialization.SerializationInfo> per modificare le informazioni trasmesse.</span><span class="sxs-lookup"><span data-stu-id="1b00d-106">Objects that need to send proxies for themselves can use the <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> and <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> methods on <xref:System.Runtime.Serialization.SerializationInfo> to change the transmitted information.</span></span>  
  
 <span data-ttu-id="1b00d-107">Nel caso di ereditarietà della classe, è possibile serializzare una classe che deriva da una classe di base che implementa <xref:System.Runtime.Serialization.ISerializable>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-107">In the case of class inheritance, it is possible to serialize a class that derives from a base class that implements <xref:System.Runtime.Serialization.ISerializable>.</span></span> <span data-ttu-id="1b00d-108">In questo caso, la classe derivata deve chiamare l'implementazione della classe di base di <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> all'interno dell'implementazione di <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-108">In this case, the derived class should call the base class implementation of <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> inside its implementation of <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</span></span> <span data-ttu-id="1b00d-109">In caso contrario, non essere serializzati i dati dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="1b00d-109">Otherwise, the data from the base class will not be serialized.</span></span>  
  
 <span data-ttu-id="1b00d-110">Il <xref:System.Runtime.Serialization.ISerializable> interfaccia implica un costruttore con la firma constructor (<xref:System.Runtime.Serialization.SerializationInfo> informazioni <xref:System.Runtime.Serialization.StreamingContext> contesto).</span><span class="sxs-lookup"><span data-stu-id="1b00d-110">The <xref:System.Runtime.Serialization.ISerializable> interface implies a constructor with the signature constructor (<xref:System.Runtime.Serialization.SerializationInfo> information, <xref:System.Runtime.Serialization.StreamingContext> context).</span></span> <span data-ttu-id="1b00d-111">In fase di deserializzazione viene chiamato il costruttore corrente solo dopo i dati di <xref:System.Runtime.Serialization.SerializationInfo> è stato deserializzato dal formattatore.</span><span class="sxs-lookup"><span data-stu-id="1b00d-111">At deserialization time, the current constructor is called only after the data in the <xref:System.Runtime.Serialization.SerializationInfo> has been deserialized by the formatter.</span></span> <span data-ttu-id="1b00d-112">In generale, questo costruttore deve essere protetto se la classe non sealed.</span><span class="sxs-lookup"><span data-stu-id="1b00d-112">In general, this constructor should be protected if the class is not sealed.</span></span>  
  
 <span data-ttu-id="1b00d-113">Non è possibile garantire l'ordine in cui gli oggetti vengono deserializzati.</span><span class="sxs-lookup"><span data-stu-id="1b00d-113">The order in which objects are deserialized cannot be guaranteed.</span></span> <span data-ttu-id="1b00d-114">Ad esempio, se un tipo fa riferimento a un tipo che non è ancora stato deserializzato, verificherà un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="1b00d-114">For example, if one type references a type that has not been deserialized yet, an exception will occur.</span></span> <span data-ttu-id="1b00d-115">Se si creano tipi che dispongono di tali dipendenze, è possibile risolvere il problema mediante l'implementazione di `IDeserializationCallback` interfaccia e `OnDeserialization` metodo.</span><span class="sxs-lookup"><span data-stu-id="1b00d-115">If you are creating types that have such dependencies, you can work around the problem by implementing the `IDeserializationCallback` interface and the `OnDeserialization` method.</span></span>  
  
 <span data-ttu-id="1b00d-116">Architettura di serializzazione gestisce i tipi di oggetti che estendono <xref:System.MarshalByRefObject> corrispondono a quelli che estendono <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-116">The serialization architecture handles object types that extend <xref:System.MarshalByRefObject> the same as types that extend <xref:System.Object>.</span></span> <span data-ttu-id="1b00d-117">Questi tipi possono essere contrassegnati con il <xref:System.SerializableAttribute> e implementare il <xref:System.Runtime.Serialization.ISerializable> interfaccia come qualsiasi altro tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="1b00d-117">These types can be marked with the <xref:System.SerializableAttribute> and implement the <xref:System.Runtime.Serialization.ISerializable> interface as any other object type.</span></span> <span data-ttu-id="1b00d-118">Lo stato dell'oggetto sarà acquisito e resa persistente nel flusso.</span><span class="sxs-lookup"><span data-stu-id="1b00d-118">Their object state will be captured and persisted onto the stream.</span></span>  
  
 <span data-ttu-id="1b00d-119">Quando vengono utilizzati questi tipi tramite <xref:System.Runtime.Remoting>, l'infrastruttura remota fornisce un surrogato che ha la precedenza sulla tipica serializzazione e serializza invece un proxy per il <xref:System.MarshalByRefObject>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-119">When these types are being used through <xref:System.Runtime.Remoting>, the remoting infrastructure provides a surrogate that preempts typical serialization and instead serializes a proxy to the <xref:System.MarshalByRefObject>.</span></span> <span data-ttu-id="1b00d-120">Un surrogato è un supporto in grado di serializzare e deserializzare gli oggetti di un determinato tipo.</span><span class="sxs-lookup"><span data-stu-id="1b00d-120">A surrogate is a helper that knows how to serialize and deserialize objects of a particular type.</span></span> <span data-ttu-id="1b00d-121">Il proxy, invisibile all'utente nella maggior parte dei casi, sarà di tipo <xref:System.Runtime.Remoting.ObjRef>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-121">The proxy, invisible to the user in most cases, will be of type <xref:System.Runtime.Remoting.ObjRef>.</span></span>  
  
 <span data-ttu-id="1b00d-122">Come un modello di progettazione generali, sarebbe insolito per una classe di essere contrassegnato con l'attributo serializable ed estendere <xref:System.MarshalByRefObject>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-122">As a general design pattern, it would be unusual for a class to be both marked with the serializable attribute and extend <xref:System.MarshalByRefObject>.</span></span> <span data-ttu-id="1b00d-123">Gli sviluppatori devono considerare con attenzione i possibili scenari di serializzazione e i servizi remoti durante la combinazione di queste due caratteristiche.</span><span class="sxs-lookup"><span data-stu-id="1b00d-123">Developers should think carefully about the possible serialization and remoting scenarios when combining these two characteristics.</span></span> <span data-ttu-id="1b00d-124">È un esempio in cui potrebbe essere applicabile con un <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-124">One example where this might be applicable is with a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="1b00d-125">Quando la classe di base di <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) si estende da <xref:System.MarshalByRefObject>, è possibile acquisire lo stato di un <xref:System.IO.MemoryStream> e ripristinarlo quando necessario.</span><span class="sxs-lookup"><span data-stu-id="1b00d-125">While the base class of <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) extends from <xref:System.MarshalByRefObject>, it is possible to capture the state of a <xref:System.IO.MemoryStream> and restore it at will.</span></span> <span data-ttu-id="1b00d-126">Potrebbe, pertanto, essere significativo per serializzare lo stato del flusso in un database e ripristinarlo in un momento successivo nel tempo.</span><span class="sxs-lookup"><span data-stu-id="1b00d-126">It might, therefore, be meaningful to serialize the state of this stream into a database and restore it at some later point in time.</span></span> <span data-ttu-id="1b00d-127">Tuttavia, quando utilizzato tramite i servizi remoti, un oggetto di questo tipo sarebbe elaborato.</span><span class="sxs-lookup"><span data-stu-id="1b00d-127">However, when used through remoting, an object of this type would be proxied.</span></span>  
  
 <span data-ttu-id="1b00d-128">Per ulteriori informazioni sulla serializzazione di classi che estendono <xref:System.MarshalByRefObject>, vedere <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-128">For more information about serialization of classes that extend <xref:System.MarshalByRefObject>, see <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>.</span></span> <span data-ttu-id="1b00d-129">Per ulteriori informazioni sull'implementazione <xref:System.Runtime.Serialization.ISerializable>, vedere [la serializzazione personalizzata](~/docs/standard/serialization/custom-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="1b00d-129">For more information about implementing <xref:System.Runtime.Serialization.ISerializable>, see [Custom Serialization](~/docs/standard/serialization/custom-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b00d-130">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Runtime.Serialization.ISerializable> interfaccia per definire il comportamento di serializzazione personalizzata per una classe.</span><span class="sxs-lookup"><span data-stu-id="1b00d-130">The following code example demonstrates the use of the <xref:System.Runtime.Serialization.ISerializable> interface to define custom serialization behavior for a class.</span></span>  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="1b00d-131">Implementare questa interfaccia per consentire a un oggetto di partecipare alla propria serializzazione e deserializzazione.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1b00d-131">Implement this interface to allow an object to take part in its own serialization and deserialization.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="1b00d-132">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b00d-132">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1b00d-133">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b00d-133">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b00d-134">Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare l'oggetto di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b00d-134">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b00d-135">Tutti gli oggetti inclusi nel <xref:System.Runtime.Serialization.SerializationInfo> vengono automaticamente rilevati e serializzati dal formattatore.</span><span class="sxs-lookup"><span data-stu-id="1b00d-135">Any objects that are included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 <span data-ttu-id="1b00d-136">Codice che chiama <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> richiede il <xref:System.Security.Permissions.SecurityPermission> per fornire servizi di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="1b00d-136">Code that calls <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> requires the <xref:System.Security.Permissions.SecurityPermission> for providing serialization services.</span></span> <span data-ttu-id="1b00d-137">Enumerazione associata: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1b00d-137">Associated enumeration: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b00d-138">Non è garantito che questo metodo verrà chiamato solo una volta per ogni istanza dell'oggetto durante la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="1b00d-138">It is not guaranteed that this method will be called only once per object instance during serialization.</span></span> <span data-ttu-id="1b00d-139">Pertanto, il metodo deve essere implementato in modo che il relativo comportamento sarà lo stesso indipendentemente dal numero di volte in cui che viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="1b00d-139">Therefore, the method should be implemented in such a way that its behavior will be the same regardless of the number of times it is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b00d-140">L'esempio seguente usa il <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> per impostare valori alternativi per un oggetto serializzato.</span><span class="sxs-lookup"><span data-stu-id="1b00d-140">The following example uses the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method to set alternate values for a serialized object.</span></span> <span data-ttu-id="1b00d-141">Il codice Usa il <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> metodo la <xref:System.Runtime.Serialization.SerializationInfo> classe per archiviare i valori alternativi quando l'oggetto viene serializzato.</span><span class="sxs-lookup"><span data-stu-id="1b00d-141">The code uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method of the <xref:System.Runtime.Serialization.SerializationInfo> class to store the alternate values when the object is serialized.</span></span> <span data-ttu-id="1b00d-142">Al contrario, quando il costruttore del `Person` classe viene chiamata durante la deserializzazione, i valori alternativi vengono recuperati utilizzando il <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> metodo e riassegnati ai campi dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="1b00d-142">Conversely, when the constructor of the `Person` class is called during deserialization, the alternatve values are retrieved using the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method and reassigned to the object's fields.</span></span>  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1b00d-143">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b00d-143">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
  </Members>
</Type>