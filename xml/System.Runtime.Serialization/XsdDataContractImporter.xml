<Type Name="XsdDataContractImporter" FullName="System.Runtime.Serialization.XsdDataContractImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c600d02a71598cc91bb93a6e0e0a1c10a38021ea" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46634677" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsdDataContractImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractImporter" />
  <TypeSignature Language="F#" Value="type XsdDataContractImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="25b1d-101">Consente la trasformazione di un set di file di XML Schema (estensione xsd) in tipi CLR (Common Language Runtime).</span>
      <span class="sxs-lookup">
        <span data-stu-id="25b1d-101">Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-102">Utilizzare la classe <xref:System.Runtime.Serialization.XsdDataContractImporter> se si crea un servizio Web che deve interoperare con un servizio Web esistente o per creare tipi di contratto dati da XML Schema.</span><span class="sxs-lookup"><span data-stu-id="25b1d-102">Use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas.</span></span> <span data-ttu-id="25b1d-103"><xref:System.Runtime.Serialization.XsdDataContractImporter> trasformerà un set di XML Schema e creerà i tipi [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] che rappresentano il contratto dati in un linguaggio di programmazione selezionato.</span><span class="sxs-lookup"><span data-stu-id="25b1d-103"><xref:System.Runtime.Serialization.XsdDataContractImporter> will transform a set of XML schemas and create the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types that represent the data contract in a selected programming language.</span></span> <span data-ttu-id="25b1d-104">Per creare il codice, utilizzare le classi dello spazio dei nomi <xref:System.CodeDom>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-104">To create the code, use the classes in the <xref:System.CodeDom> namespace.</span></span>  
  
 <span data-ttu-id="25b1d-105">Utilizzare invece la classe <xref:System.Runtime.Serialization.XsdDataContractExporter> quando è stato creato un servizio Web che incorpora dati rappresentati da tipi CLR (Common Language Runtime) e quando è necessario esportare XML Schema per ogni tipo di dati che deve essere utilizzato da altri servizi Web.</span><span class="sxs-lookup"><span data-stu-id="25b1d-105">Conversely, use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services.</span></span> <span data-ttu-id="25b1d-106">Ciò significa che la classe <xref:System.Runtime.Serialization.XsdDataContractExporter> trasforma un set di tipi CLR in un set di XML Schema.</span><span class="sxs-lookup"><span data-stu-id="25b1d-106">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into a set of XML schemas.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b1d-107">Per generare tipi CLR da XML schema in fase di progettazione, usare il [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span><span class="sxs-lookup"><span data-stu-id="25b1d-107">To generate CLR types from XML schemas at design time, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="25b1d-108">Per generare codice da file XSD, utilizzare il `/dataContractOnly` dello strumento.</span><span class="sxs-lookup"><span data-stu-id="25b1d-108">To generated code from XSD files, use the `/dataContractOnly` switch of the tool.</span></span> <span data-ttu-id="25b1d-109">È inoltre possibile utilizzare <xref:System.Runtime.Serialization.XsdDataContractImporter> se è necessario operare un maggiore controllo sul processo o se occorre impostare tale controllo a livello di programmazione.</span><span class="sxs-lookup"><span data-stu-id="25b1d-109">You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you need more control over the process or need to do it programmatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b1d-110">Nell'esempio seguente viene creata una classe <xref:System.Xml.Schema.XmlSchemaSet> e viene eseguita una chiamata al metodo <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> per creare una classe <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-110">The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="25b1d-111">La classe <xref:System.CodeDom.CodeCompileUnit> viene quindi utilizzata per creare sia file di codice Visual C# che Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="25b1d-111">The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#0)]
 [!code-vb[XsdDataContractImporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">
      <span data-ttu-id="25b1d-112">Uso di contratti dati</span>
      <span class="sxs-lookup">
        <span data-stu-id="25b1d-112">Using Data Contracts</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md">
      <span data-ttu-id="25b1d-113">Tipi supportati dal serializzatore dei contratti dati</span>
      <span class="sxs-lookup">
        <span data-stu-id="25b1d-113">Types Supported by the Data Contract Serializer</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25b1d-114">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-114">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25b1d-115">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-115">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractImporter (System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractImporter(System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.XsdDataContractImporter : System.CodeDom.CodeCompileUnit -&gt; System.Runtime.Serialization.XsdDataContractImporter" Usage="new System.Runtime.Serialization.XsdDataContractImporter codeCompileUnit" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">
          <span data-ttu-id="25b1d-116">Classe <see cref="T:System.CodeDom.CodeCompileUnit" /> che verrà utilizzata per archiviare il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-116">The <see cref="T:System.CodeDom.CodeCompileUnit" /> that will be used to store the code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-117">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> con la classe <see cref="T:System.CodeDom.CodeCompileUnit" /> che verrà utilizzata per generare codice CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-117">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class with the <see cref="T:System.CodeDom.CodeCompileUnit" /> that will be used to generate CLR code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-118">Utilizzare questo costruttore per aggiungere altro codice in una classe <xref:System.CodeDom.CodeCompileUnit> che è già stata generata.</span><span class="sxs-lookup"><span data-stu-id="25b1d-118">Use this constructor to add more code into a <xref:System.CodeDom.CodeCompileUnit> that has already been generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b1d-119">Nell'esempio seguente viene creata una classe <xref:System.Xml.Schema.XmlSchemaSet> e viene eseguita una chiamata al metodo <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> per creare una classe <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-119">The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="25b1d-120">La classe <xref:System.CodeDom.CodeCompileUnit> viene quindi utilizzata per creare sia file di codice Visual C# che Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="25b1d-120">The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#1)]
 [!code-vb[XsdDataContractImporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanImport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25b1d-121">Ottiene un valore che indica se gli schemi possono essere trasformati in una classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-121">Gets a value that indicates whether the schemas can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-122">Per altre informazioni sui tipi che può essere importato, vedere [tipi supportati dal serializzatore dei contratti dati](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="25b1d-122">For more information about types that can be imported, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.CanImport : System.Xml.Schema.XmlSchemaSet -&gt; bool" Usage="xsdDataContractImporter.CanImport schemas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-123">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene gli schemi da trasformare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-123">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-124">Ottiene un valore che indica se gli schemi contenuti in una <see cref="T:System.Xml.Schema.XmlSchemaSet" /> possono essere trasformati in una <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-124">Gets a value that indicates whether the schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-125">
            <see langword="true" /> se gli schemi possono essere trasformati in tipi di contratto dati. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-125">
              <see langword="true" /> if the schemas can be transformed to data contract types; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="25b1d-126">Nell'esempio seguente viene eseguita una chiamata al metodo <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> per determinare se è possibile generare la classe <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-126">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to determine whether the <xref:System.CodeDom.CodeCompileUnit> can be generated.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#2](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#2)]
 [!code-vb[XsdDataContractImporter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25b1d-127">Il valore del parametro <paramref name="schemas" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-127">The <paramref name="schemas" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="25b1d-128">Un contratto dati coinvolto nell'importazione è non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-128">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt; typeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas, class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlQualifiedName&gt; typeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet, typeNames As ICollection(Of XmlQualifiedName)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Collections::Generic::ICollection&lt;System::Xml::XmlQualifiedName ^&gt; ^ typeNames);" />
      <MemberSignature Language="F#" Value="member this.CanImport : System.Xml.Schema.XmlSchemaSet * System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt; -&gt; bool" Usage="xsdDataContractImporter.CanImport (schemas, typeNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeNames" Type="System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt;" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-129">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene gli schemi da trasformare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-129">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</span>
          </span>
        </param>
        <param name="typeNames">
          <span data-ttu-id="25b1d-130">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> di <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il set di tipi di schema da importare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-130">An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Xml.XmlQualifiedName" /> that represents the set of schema types to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-131">Ottiene un valore che indica se il set di tipi specificato contenuto in una classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> può essere trasformato in tipi CLR generati in una classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-131">Gets a value that indicates whether the specified set of types contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into CLR types generated into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-132">
            <see langword="true" /> se gli schemi possono essere trasformati. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-132">
              <see langword="true" /> if the schemas can be transformed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25b1d-133">Il parametro <paramref name="schemas" /> o il parametro <paramref name="typeNames" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-133">The <paramref name="schemas" /> or <paramref name="typeNames" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="25b1d-134">Un contratto dati coinvolto nell'importazione è non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-134">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.XmlSchemaElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet, element As XmlSchemaElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::Schema::XmlSchemaElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.CanImport : System.Xml.Schema.XmlSchemaSet * System.Xml.Schema.XmlSchemaElement -&gt; bool" Usage="xsdDataContractImporter.CanImport (schemas, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="element" Type="System.Xml.Schema.XmlSchemaElement" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-135">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> da importare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-135">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to import.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="25b1d-136">Classe <see cref="T:System.Xml.Schema.XmlSchemaElement" /> specifica in cui archiviare il set di schemi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-136">A specific <see cref="T:System.Xml.Schema.XmlSchemaElement" /> to check in the set of schemas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-137">Ottiene un valore che indica se è possibile importare un elemento di schema specifico contenuto in una classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-137">Gets a value that indicates whether a specific schema element contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be imported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-138">
            <see langword="true" /> se è possibile importare l'elemento. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-138">
              <see langword="true" /> if the element can be imported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-139">Questo metodo controlla il tipo e tutti i tipi di schema a cui viene fatto riferimento da esso.</span><span class="sxs-lookup"><span data-stu-id="25b1d-139">This method checks the type and all schema types referenced from it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25b1d-140">Il parametro <paramref name="schemas" /> o il parametro <paramref name="element" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-140">The <paramref name="schemas" /> or <paramref name="element" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="25b1d-141">Un contratto dati coinvolto nell'importazione è non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-141">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet, typeName As XmlQualifiedName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.CanImport : System.Xml.Schema.XmlSchemaSet * System.Xml.XmlQualifiedName -&gt; bool" Usage="xsdDataContractImporter.CanImport (schemas, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-142">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene le rappresentazioni di schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-142">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="25b1d-143">Interfaccia <see cref="T:System.Collections.IList" /> di tipo <see cref="T:System.Xml.XmlQualifiedName" /> che specifica i nomi dei tipi di schema che devono essere importati dalla classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-143">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the names of the schema types that need to be imported from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-144">Ottiene un valore che indica se gli schemi contenuti in una <see cref="T:System.Xml.Schema.XmlSchemaSet" /> possono essere trasformati in una <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-144">Gets a value that indicates whether the schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-145">
            <see langword="true" /> se gli schemi possono essere trasformati in tipi di contratto dati. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-145">
              <see langword="true" /> if the schemas can be transformed to data contract types; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-146">Per altre informazioni sui tipi che può essere importato, vedere [tipi supportati dal serializzatore dei contratti dati](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="25b1d-146">For more information about types that can be imported, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25b1d-147">Il parametro <paramref name="schemas" /> o il parametro <paramref name="typeName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-147">The <paramref name="schemas" /> or <paramref name="typeName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="25b1d-148">Un contratto dati coinvolto nell'importazione è non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-148">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit CodeCompileUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeCompileUnit CodeCompileUnit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeCompileUnit As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeCompileUnit ^ CodeCompileUnit { System::CodeDom::CodeCompileUnit ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompileUnit : System.CodeDom.CodeCompileUnit" Usage="System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25b1d-149">Ottiene una classe <see cref="T:System.CodeDom.CodeCompileUnit" /> utilizzata per archiviare i tipi CLR generati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-149">Gets a <see cref="T:System.CodeDom.CodeCompileUnit" /> used for storing the CLR types generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25b1d-150">Classe <see cref="T:System.CodeDom.CodeCompileUnit" /> utilizzata per archiviare i tipi CLR generati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-150">A <see cref="T:System.CodeDom.CodeCompileUnit" /> used to store the CLR types generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-151">Chiamare questa proprietà dopo avere importato gli schemi utilizzando <xref:System.Runtime.Serialization.XsdDataContractImporter> per accedere alla classe <xref:System.CodeDom.CodeCompileUnit> nella quale è archiviato tutto il codice generato.</span><span class="sxs-lookup"><span data-stu-id="25b1d-151">Call this property after importing schemas using the <xref:System.Runtime.Serialization.XsdDataContractImporter> to access the <xref:System.CodeDom.CodeCompileUnit> in which all the generated code is stored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b1d-152">Nel seguente esempio viene utilizzata una classe <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-152">The following example uses creates a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="25b1d-153">La classe <xref:System.CodeDom.CodeCompileUnit> viene quindi utilizzata per creare sia un file di codice Visual C# che un file di codice Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="25b1d-153">The <xref:System.CodeDom.CodeCompileUnit> is then used to create both a Visual C# and Visual Basic code file.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#1)]
 [!code-vb[XsdDataContractImporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCodeTypeReference">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25b1d-154">Restituisce una classe <see cref="T:System.CodeDom.CodeTypeReference" /> per l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-154">Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> for the specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCodeTypeReference">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeTypeReference GetCodeTypeReference(class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCodeTypeReference (typeName As XmlQualifiedName) As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeReference ^ GetCodeTypeReference(System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetCodeTypeReference : System.Xml.XmlQualifiedName -&gt; System.CodeDom.CodeTypeReference" Usage="xsdDataContractImporter.GetCodeTypeReference typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="25b1d-155">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il tipo di schema da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-155">The <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the schema type to look up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-156">Restituisce una classe <see cref="T:System.CodeDom.CodeTypeReference" /> al tipo CLR generato per il tipo di schema con la classe <see cref="T:System.Xml.XmlQualifiedName" /> specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-156">Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> to the CLR type generated for the schema type with the specified <see cref="T:System.Xml.XmlQualifiedName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-157">Riferimento <see cref="T:System.CodeDom.CodeTypeReference" /> al tipo CLR generato per il tipo di schema con la proprietà <paramref name="typeName" /> specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-157">A <see cref="T:System.CodeDom.CodeTypeReference" /> reference to the CLR type generated for the schema type with the <paramref name="typeName" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-158">Utilizzare questo metodo per cercare il riferimento a un tipo CLR generato dopo la chiamata al metodo <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-158">Use this method to look up the reference to a generated CLR type after calling the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method.</span></span> <span data-ttu-id="25b1d-159">La classe <xref:System.CodeDom.CodeTypeReference> contiene il nome del tipo generato e può essere utilizzata per cercare la classe <xref:System.CodeDom.CodeTypeDeclaration> corrispondente nella classe <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-159">The <xref:System.CodeDom.CodeTypeReference> contains the name of the generated type and can be used to look up the corresponding <xref:System.CodeDom.CodeTypeDeclaration> in the <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCodeTypeReference">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName, System.Xml.Schema.XmlSchemaElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeTypeReference GetCodeTypeReference(class System.Xml.XmlQualifiedName typeName, class System.Xml.Schema.XmlSchemaElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCodeTypeReference (typeName As XmlQualifiedName, element As XmlSchemaElement) As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeReference ^ GetCodeTypeReference(System::Xml::XmlQualifiedName ^ typeName, System::Xml::Schema::XmlSchemaElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetCodeTypeReference : System.Xml.XmlQualifiedName * System.Xml.Schema.XmlSchemaElement -&gt; System.CodeDom.CodeTypeReference" Usage="xsdDataContractImporter.GetCodeTypeReference (typeName, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="element" Type="System.Xml.Schema.XmlSchemaElement" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="25b1d-160">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il nome completo XML del tipo di schema da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-160">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the XML qualified name of the schema type to look up.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="25b1d-161">Classe <see cref="T:System.Xml.Schema.XmlSchemaElement" /> che specifica un elemento in un XML Schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-161">An <see cref="T:System.Xml.Schema.XmlSchemaElement" /> that specifies an element in an XML schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-162">Restituisce una classe <see cref="T:System.CodeDom.CodeTypeReference" /> per l'elemento qualificato XML e l'elemento dello schema specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-162">Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> for the specified XML qualified element and schema element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-163">Classe <see cref="T:System.CodeDom.CodeTypeReference" /> che rappresenta il tipo generato per il tipo di schema specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-163">A <see cref="T:System.CodeDom.CodeTypeReference" /> that represents the type that was generated for the specified schema type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-164">L'elemento dello schema è necessario per i dati relativi al tipo che viene specificato nell'ambito dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="25b1d-164">The schema element is needed for data about the type that is specified at the element scope.</span></span> <span data-ttu-id="25b1d-165">L'esempio principale è l'attributo `nillable`XSD.</span><span class="sxs-lookup"><span data-stu-id="25b1d-165">The main example of this is the XSD attribute `nillable`.</span></span> <span data-ttu-id="25b1d-166">Nello schema, l'impostazione di `nillable` su `true` viene specificata nell'elemento dello schema che lo contiene, mentre il concetto di null è espresso nel tipo CLR <xref:System.Nullable%601>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-166">In schema, setting `nillable` to `true` is specified on the containing schema element whereas the concept of null is expressed in the CLR type <xref:System.Nullable%601>.</span></span> <span data-ttu-id="25b1d-167">L'elemento viene passato in modo che l'utilità di importazione possa cercare le informazioni a livello di elemento e restituire il riferimento al tipo appropriato.</span><span class="sxs-lookup"><span data-stu-id="25b1d-167">The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.</span></span>  
  
 <span data-ttu-id="25b1d-168">Quando si importa un documento WSDL, ogni parametro viene importato separatamente. Gli elementi del parametro devono quindi essere passati separatamente.</span><span class="sxs-lookup"><span data-stu-id="25b1d-168">When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypeReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.CodeDom.CodeTypeReference&gt; GetKnownTypeReferences (System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.CodeDom.CodeTypeReference&gt; GetKnownTypeReferences(class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKnownTypeReferences (typeName As XmlQualifiedName) As ICollection(Of CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::CodeDom::CodeTypeReference ^&gt; ^ GetKnownTypeReferences(System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetKnownTypeReferences : System.Xml.XmlQualifiedName -&gt; System.Collections.Generic.ICollection&lt;System.CodeDom.CodeTypeReference&gt;" Usage="xsdDataContractImporter.GetKnownTypeReferences typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.CodeDom.CodeTypeReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="25b1d-169">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il tipo di schema per il quale cercare tipi noti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-169">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the schema type to look up known types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-170">Restituisce un elenco di oggetti <see cref="T:System.CodeDom.CodeTypeReference" /> che rappresentano i tipi noti generati durante la generazione di codice per il tipo di schema specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-170">Returns a list of <see cref="T:System.CodeDom.CodeTypeReference" /> objects that represents the known types generated when generating code for the specified schema type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-171">
            <see cref="T:System.Collections.Generic.IList`1" /> di tipo <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-171">A <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-172">Quando vengono generati tipi CLR per tipi di schema, i tipi noti vengono generati anche per tutti i tipi derivati presenti nello schema.</span><span class="sxs-lookup"><span data-stu-id="25b1d-172">When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema.</span></span> <span data-ttu-id="25b1d-173">In molti casi questi tipi noti vengono aggiunti utilizzando attributi nel codice generato.</span><span class="sxs-lookup"><span data-stu-id="25b1d-173">In many cases, these known types are added using attributes to the generated code.</span></span> <span data-ttu-id="25b1d-174">(Ad esempio, vedere il <xref:System.Runtime.Serialization.KnownTypeAttribute> classe.</span><span class="sxs-lookup"><span data-stu-id="25b1d-174">(For example, see the <xref:System.Runtime.Serialization.KnownTypeAttribute> class.</span></span> <span data-ttu-id="25b1d-175">), Tuttavia, per il tipo di livello superiore, si deve essere un modo per restituire il set di tipi noti generati.</span><span class="sxs-lookup"><span data-stu-id="25b1d-175">) However, for the top-level type, there needs to be a way to return the set of known types generated.</span></span> <span data-ttu-id="25b1d-176">Questo metodo restituisce <xref:System.CodeDom.CodeTypeReference> per i tipi noti generati per un tipo di schema specifico.</span><span class="sxs-lookup"><span data-stu-id="25b1d-176">This method returns the <xref:System.CodeDom.CodeTypeReference> for known types that were generated for a specific schema type.</span></span>  
  
 <span data-ttu-id="25b1d-177">Per altre informazioni, vedere [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md).</span><span class="sxs-lookup"><span data-stu-id="25b1d-177">For more information, see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <related type="Article" href="http://msdn.microsoft.com/library/1a0baea1-27b7-470d-9136-5bbad86c4337">
          <span data-ttu-id="25b1d-178">Tipi conosciuti di contratto dati</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-178">Data Contract Known Types</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25b1d-179">Trasforma un set di XML Schema in una classe <see cref="T:System.CodeDom.CodeCompileUnit" /> utilizzata per generare codice CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-179">Transforms a set of XML schemas into a <see cref="T:System.CodeDom.CodeCompileUnit" /> used to generate CLR code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.Import : System.Xml.Schema.XmlSchemaSet -&gt; unit" Usage="xsdDataContractImporter.Import schemas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-180">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene le rappresentazioni dello schema per le quali generare tipi CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-180">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations to generate CLR types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-181">Trasforma il set specificato di XML Schema contenuto in una classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> in una classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-181">Transforms the specified set of XML schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="25b1d-182">Nell'esempio seguente viene utilizzato il metodo <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> per verificare se è possibile importare un set di schemi.</span><span class="sxs-lookup"><span data-stu-id="25b1d-182">The following example uses the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to test whether a set of schemas can be imported.</span></span> <span data-ttu-id="25b1d-183">Se il metodo <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> restituisce `true`, il codice richiama il metodo <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A>.</span><span class="sxs-lookup"><span data-stu-id="25b1d-183">If the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method returns `true`, the code invokes the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#2](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#2)]
 [!code-vb[XsdDataContractImporter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25b1d-184">Il valore del parametro <paramref name="schemas" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-184">The <paramref name="schemas" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt; typeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(class System.Xml.Schema.XmlSchemaSet schemas, class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlQualifiedName&gt; typeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (schemas As XmlSchemaSet, typeNames As ICollection(Of XmlQualifiedName))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Collections::Generic::ICollection&lt;System::Xml::XmlQualifiedName ^&gt; ^ typeNames);" />
      <MemberSignature Language="F#" Value="member this.Import : System.Xml.Schema.XmlSchemaSet * System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt; -&gt; unit" Usage="xsdDataContractImporter.Import (schemas, typeNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeNames" Type="System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt;" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-185">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene le rappresentazioni di schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-185">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations.</span>
          </span>
        </param>
        <param name="typeNames">
          <span data-ttu-id="25b1d-186">Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> (di <see cref="T:System.Xml.XmlQualifiedName" />) che rappresenta il set di tipi di schema da importare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-186">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Xml.XmlQualifiedName" />) that represents the set of schema types to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-187">Trasforma il set di tipi di schema specificato contenuto in una classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> in tipi CLR generati in una classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-187">Transforms the specified set of schema types contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into CLR types generated into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName Import(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.XmlSchemaElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (schemas As XmlSchemaSet, element As XmlSchemaElement) As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ Import(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::Schema::XmlSchemaElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Import : System.Xml.Schema.XmlSchemaSet * System.Xml.Schema.XmlSchemaElement -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractImporter.Import (schemas, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="element" Type="System.Xml.Schema.XmlSchemaElement" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-188">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene gli schemi da trasformare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-188">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="25b1d-189">Classe <see cref="T:System.Xml.Schema.XmlSchemaElement" /> che rappresenta l'elemento dello schema specifico da trasformare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-189">An <see cref="T:System.Xml.Schema.XmlSchemaElement" /> that represents the specific schema element to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-190">Trasforma l'elemento dello schema specificato nel set di XML Schema specificati in una classe <see cref="T:System.CodeDom.CodeCompileUnit" /> e restituisce una classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il nome del contratto dati per l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-190">Transforms the specified schema element in the set of specified XML schemas into a <see cref="T:System.CodeDom.CodeCompileUnit" /> and returns an <see cref="T:System.Xml.XmlQualifiedName" /> that represents the data contract name for the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b1d-191">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-191">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the specified element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25b1d-192">Il parametro <paramref name="schemas" /> o il parametro <paramref name="element" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-192">The <paramref name="schemas" /> or <paramref name="element" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (schemas As XmlSchemaSet, typeName As XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.Import : System.Xml.Schema.XmlSchemaSet * System.Xml.XmlQualifiedName -&gt; unit" Usage="xsdDataContractImporter.Import (schemas, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="25b1d-193">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene le rappresentazioni di schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-193">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="25b1d-194">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta un tipo di schema specifico da importare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-194">A <see cref="T:System.Xml.XmlQualifiedName" /> that represents a specific schema type to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b1d-195">Trasforma il tipo di XML Schema specificato contenuto in una classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> in una classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-195">Transforms the specified XML schema type contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25b1d-196">Il parametro <paramref name="schemas" /> o il parametro <paramref name="typeName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-196">The <paramref name="schemas" /> or <paramref name="typeName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ImportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ImportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractImporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ImportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ImportOptions ^ Options { System::Runtime::Serialization::ImportOptions ^ get(); void set(System::Runtime::Serialization::ImportOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Runtime.Serialization.ImportOptions with get, set" Usage="System.Runtime.Serialization.XsdDataContractImporter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ImportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25b1d-197">Ottiene o imposta una classe <see cref="T:System.Runtime.Serialization.ImportOptions" /> che contiene opzioni impostabili per l'operazione di importazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-197">Gets or sets an <see cref="T:System.Runtime.Serialization.ImportOptions" /> that contains settable options for the import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25b1d-198">Classe <see cref="T:System.Runtime.Serialization.ImportOptions" /> che contiene opzioni impostabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b1d-198">A <see cref="T:System.Runtime.Serialization.ImportOptions" /> that contains settable options.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b1d-199">Utilizzare la classe <xref:System.Runtime.Serialization.ImportOptions> per personalizzare la modalità di generazione dei tipi CLR durante l'importazione dello schema.</span><span class="sxs-lookup"><span data-stu-id="25b1d-199">Use the <xref:System.Runtime.Serialization.ImportOptions> class to customize how the CLR types are generated during schema import.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
        <altmember cref="T:System.Runtime.Serialization.ImportOptions" />
      </Docs>
    </Member>
  </Members>
</Type>