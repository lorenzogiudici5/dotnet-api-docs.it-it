<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContractAttribute.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f9381053a785b7c23121ec86b709cd483651a437a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9381053a785b7c23121ec86b709cd483651a437a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">Specifica che il tipo definisce o implementa un contratto dati ed è serializzabile da un serializzatore, ad esempio la classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To make their type serializable, type authors must define a data contract for their type.</source>
          <target state="translated">Per rendere serializzabile il proprio tipo, gli autori del tipo devono definire un contratto dati per tale tipo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">Applicare l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a tipi (classi, strutture o enumerazioni) utilizzati in operazioni di serializzazione e deserializzazione da parte di <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you send or receive messages by using the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure, you should also apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to any classes that hold and manipulate data sent in messages.</source>
          <target state="translated">Se si inviano o si ricevono messaggi utilizzando l'infrastruttura <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, è necessario applicare <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> alle classi che contengono e utilizzano i dati inviati nei messaggi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> contratti dati, vedere <bpt id="p1">[</bpt>utilizzando i contratti dati<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You must also apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any field, property, or event that holds values you want to serialize.</source>
          <target state="translated">È inoltre necessario applicare l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> a qualsiasi campo, proprietà o evento che contiene valori che si desidera serializzare.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>, you explicitly enable the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to serialize and deserialize the data.</source>
          <target state="translated">Applicando l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> si consente in modo esplicito a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> di serializzare e deserializzare i dati.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to private fields.</source>
          <target state="translated">È possibile applicare l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> a campi privati.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</source>
          <target state="translated">Tenere presente che i dati restituiti dal campo (anche se privato) vengono serializzati e deserializzati e possono quindi essere visualizzati o intercettati da un utente o processo malintenzionato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see the topics listed in <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> contratti dati, vedere gli argomenti elencati <bpt id="p1">[</bpt>utilizzando i contratti dati<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Data Contracts</source>
          <target state="translated">Contratti dati</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A <bpt id="p1">*</bpt>data contract<ept id="p1">*</ept> is an abstract description of a set of fields with a name and data type for each field.</source>
          <target state="translated">Oggetto <bpt id="p1">*</bpt>contratto dati<ept id="p1">*</ept> è una descrizione astratta di un set di campi con un nome e tipo di dati per ogni campo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</source>
          <target state="translated">Il contratto dati esiste al di fuori di ogni singola implementazione per consentire l'interoperabilità tra i servizi in esecuzione su piattaforme diverse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>As long as the data passed between the services conforms to the same contract, all the services can process the data.</source>
          <target state="translated">Se i dati passati tra i servizi sono conformi allo stesso contratto, tutti i servizi possono elaborare i dati.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>This processing is also known as a <bpt id="p1">*</bpt>loosely coupled system<ept id="p1">*</ept>.</source>
          <target state="translated">Questa elaborazione è noto anche come un <bpt id="p1">*</bpt>ad accoppiamento debole sistema<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</source>
          <target state="translated">Un contratto dati è inoltre simile a un'interfaccia in quanto specifica la modalità di consegna dei dati affinché possano essere elaborati da un'applicazione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</source>
          <target state="translated">Il contratto dati può richiedere, ad esempio, un tipo di dati denominato "Persona" comprendente due campi di testo denominati "Nome" e "Cognome".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To create a data contract, apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to the class and apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any fields or properties that must be serialized.</source>
          <target state="translated">Per creare un contratto dati, applicare <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> alla classe e <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> a qualsiasi campo o proprietà che è necessario serializzare.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When serialized, the data conforms to the data contract that is implicitly built into the type.</source>
          <target state="translated">Quando vengono serializzati, i dati sono conformi al contratto dati implicitamente compilato nel tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract differs significantly from an actual interface in its inheritance behavior.</source>
          <target state="translated">Il comportamento di ereditarietà di un contratto dati differisce in modo significativo da quello di una vera e propria interfaccia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Interfaces are inherited by any derived types.</source>
          <target state="translated">Le interfacce vengono ereditate da qualsiasi tipo derivato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a base class, the derived types do not inherit the attribute or the behavior.</source>
          <target state="translated">Quando si applica l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a una classe di base, i tipi derivati non ereditano l'attributo o il comportamento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, if a derived type has a data contract, the data members of the base class are serialized.</source>
          <target state="translated">Se, tuttavia, a un tipo derivato è associato un contratto dati, i membri dati della classe base vengono serializzati.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, you must apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to new members in a derived class to make them serializable.</source>
          <target state="translated">Perché i nuovi membri di una classe derivata possano essere serializzati, è comunque necessario applicare a tali membri l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>XML Schema Documents and the SvcUtil Tool</source>
          <target state="translated">Documenti dello schema XML e lo strumento SvcUtil</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you are exchanging data with other services, you must describe the data contract.</source>
          <target state="translated">Se vengono scambiati dati con altri servizi, è necessario descrivere il contratto dati.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For the current version of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, an XML schema can be used to define data contracts.</source>
          <target state="translated">Per la versione corrente di <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, per definire contratti dati è possibile utilizzare uno schema XML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> with the <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept> command line option.</source>
          <target state="translated">Allo stesso scopo possono essere utilizzati altri formati di metadati/descrizione. Per creare uno schema XML dall'applicazione, utilizzare il <bpt id="p1">[</bpt>strumento ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> con il <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept> opzione della riga di comando.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</source>
          <target state="translated">Quando l'input allo strumento è un assembly, lo strumento genera per impostazione predefinita un set di schemi XML che definiscono tutti i tipi di contratto dati rilevati in tale assembly.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</source>
          <target state="translated">Al contrario, lo strumento Svcutil.exe può anche essere utilizzato per creare definizioni di classi Visual Basic o C# conformi ai requisiti degli schemi XML che utilizzano costrutti che è possibile esprimere tramite contratti dati.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In this case, the <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept> command line option is not required.</source>
          <target state="translated">In questo caso, il <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept> opzione della riga di comando non è necessario.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</source>
          <target state="translated">Se l'input dello strumento Svcutil.exe è uno schema XML, per impostazione predefinita lo strumento crea un set di classi.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you examine those classes, you find that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated">Se si esaminano queste classi, è possibile notare che è stato applicato l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can use those classes to create a new application to process data that must be exchanged with other services.</source>
          <target state="translated">È possibile utilizzare queste classi per creare una nuova applicazione per elaborare dati che devono essere scambiati con altri servizi.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client.</source>
          <target state="translated">È inoltre possibile eseguire lo strumento su un endpoint che restituisce un documento WSDL (Web Services Description Language) per generare automaticamente il codice e la configurazione per la creazione di un client <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The generated code includes types that are marked with the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">Il codice generato include tipi contrassegnati con l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Reusing Existing Types</source>
          <target state="translated">Riutilizzo di tipi esistenti</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract has two basic requirements: a stable name and a list of members.</source>
          <target state="translated">Un contratto dati ha due requisiti di base: un nome stabile e un elenco di membri.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</source>
          <target state="translated">Il nome stabile è costituito dall'URI (Uniform Resource Identifier) dello spazio dei nomi e dal nome locale del contratto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By default, when you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a class, it uses the class name as the local name and the class's namespace (prefixed with "<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>") as the namespace URI.</source>
          <target state="translated">Per impostazione predefinita, quando si applica il <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a una classe, viene utilizzato il nome della classe come il nome locale e spazio dei nomi della classe (preceduto da "<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>") come spazio dei nomi URI.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can override the defaults by setting the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> properties.</source>
          <target state="translated">È possibile eseguire l'override dei valori predefiniti impostando le proprietà <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also change the namespace by applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph> to the namespace.</source>
          <target state="translated">È inoltre possibile modificare lo spazio dei nomi applicandovi l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</source>
          <target state="translated">Utilizzare questa funzionalità quando si dispone di un tipo esistente che elabora i dati nel modo richiesto, ma che ha uno spazio dei nomi e un nome di classe differenti dal contratto dati.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</source>
          <target state="translated">L'override dei valori predefiniti consente di riutilizzare il tipo esistente e di rendere i dati serializzati conformi al contratto dati.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In any code, you can use the word <ph id="ph1">`DataContract`</ph> instead of the longer <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">In qualsiasi codice è possibile utilizzare <ph id="ph1">`DataContract`</ph> anziché la forma più estesa <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Versioning</source>
          <target state="translated">Controllo delle versioni</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract can also accommodate later versions of itself.</source>
          <target state="translated">Un contratto dati può anche contenere versioni successive dello stesso.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</source>
          <target state="translated">Ovvero, quando una versione più recente del contratto include dati aggiuntivi, tali dati vengono archiviati e restituiti a un mittente invariati.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To do this, implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated">A tal scopo, implementare l'interfaccia <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> versioning, see <bpt id="p1">[</bpt>Data Contract Versioning<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> controllo delle versioni, vedere <bpt id="p1">[</bpt>controllo delle versioni del contratto dati<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The following example serializes and deserializes a class named <ph id="ph1">`Person`</ph> to which the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated">Nell'esempio seguente vengono illustrate la serializzazione e la deserializzazione di una classe denominata <ph id="ph1">`Person`</ph> alla quale è stato applicato l'attributo <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> properties have been set to values that override the default settings.</source>
          <target state="translated">Le proprietà <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> sono state impostate su valori che eseguono l'override delle impostazioni predefinite.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> è stato impostato in modo esplicito.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il nome è stato esplicitamente impostato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> è stato impostato in modo esplicito.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the namespace has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se lo spazio dei nomi è stato esplicitamente impostato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Gets or sets a value that indicates whether to preserve object reference data.</source>
          <target state="translated">Ottiene o imposta un valore che indica se mantenere i dati del riferimento all'oggetto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep object reference data using standard XML; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per mantenere i dati di riferimento all'oggetto tramite XML standard. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Use the <ph id="ph1">`IsReference`</ph> property to instruct the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to insert XML constructs that preserve object reference information.</source>
          <target state="translated">Utilizzare la proprietà <ph id="ph1">`IsReference`</ph> per indicare a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> di inserire i costrutti XML che mantengono le informazioni sul riferimento all'oggetto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> è stato impostato in modo esplicito.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reference has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se il riferimento è stato impostato in modo esplicito. in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>Gets or sets the name of the data contract for the type.</source>
          <target state="translated">Ottiene o imposta il nome del contratto dati per il tipo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The local name of a data contract.</source>
          <target state="translated">Nome locale di un contratto dati.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The default is the name of the class that the attribute is applied to.</source>
          <target state="translated">Il valore predefinito è un nome della classe alla quale viene applicato l'attributo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property is used to give a name to a data contract, which is the name of the type in XML schema.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> viene utilizzata per assegnare un nome a un contratto dati. Tale nome corrisponde al nome del tipo nello schema XML.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For more information, see <bpt id="p1">[</bpt>Data Contract Names<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>nomi di contratto dati<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>By default, the name of a data contract is the name of the type that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> is applied to.</source>
          <target state="translated">Per impostazione predefinita, il nome di un contratto dati è il nome del tipo al quale viene applicato l'attributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>However, there may be reasons to change this default name.</source>
          <target state="translated">Il nome predefinito può comunque essere modificato.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>One reason is to allow an existing type to process data that must conform to an existing data contract.</source>
          <target state="translated">Uno dei motivi per cui modificare il nome predefinito è quello di consentire a un tipo esistente di elaborare dati che devono essere conformi a un contratto dati esistente.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, there exists a type named <ph id="ph1">`Person`</ph> but the data contract, embodied in an XML schema, requires that the name be <ph id="ph2">`Customer`</ph>.</source>
          <target state="translated">Se, ad esempio, si dispone di un tipo denominato <ph id="ph1">`Person`</ph>, ma il contratto dati incorporato in uno schema XML richiede invece che il nome sia <ph id="ph2">`Customer`</ph>,</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The contract can be satisfied by setting the property value to <ph id="ph1">`Customer`</ph>.</source>
          <target state="translated">per soddisfare i requisiti del contratto è necessario impostare il valore della proprietà su <ph id="ph1">`Customer`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>A second reason is to allow the generation of names that are invalid as type names.</source>
          <target state="translated">Un altro motivo per cui modificare il nome predefinito è quello di consentire la generazione di nomi che non sono validi come nomi di tipo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</source>
          <target state="translated">Se, ad esempio, un contratto dati richiede un nome che non è consentito come nome di tipo, impostare il valore della proprietà sul nome non consentito.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For instance, the string "$value" is disallowed as a type name but is allowed as a <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property value.</source>
          <target state="translated">Ad esempio, la stringa "$value" non è consentita come nome di tipo ma è consentita come valore della proprietà <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Gets or sets the namespace for the data contract for the type.</source>
          <target state="translated">Ottiene o imposta lo spazio dei nomi del contratto dati per il tipo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The namespace of the contract.</source>
          <target state="translated">Spazio dei nomi del contratto.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</source>
          <target state="translated">Utilizzare questa proprietà per specificare uno spazio dei nomi specifico se il tipo deve restituire dati che siano conformi a un contratto dati specifico.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</source>
          <target state="translated">Per una corretta trasmissione dei dati, il nome dei dati in un contratto dati deve essere lo stesso sia nel client sia nel server.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</source>
          <target state="translated">Per impostazione predefinita, i progetti di Visual Basic, aggiungono un prefisso allo spazio dei nomi definito in ogni file (denominati "nomi di primo livello," al nome del progetto).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Adding this prefix causes the client and server namespaces to be different for the same type.</source>
          <target state="translated">L'aggiunta di questo prefisso rende diversi gli spazi dei nomi del client e del server per lo stesso tipo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The solution is to set the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> property to "", or to explicitly set the data contract namespace in this property.</source>
          <target state="translated">La soluzione consiste nell'impostare il <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> proprietà su "", o impostare in modo esplicito lo spazio dei nomi di contratto dati in questa proprietà.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>