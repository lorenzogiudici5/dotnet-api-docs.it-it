<Type Name="ImportOptions" FullName="System.Runtime.Serialization.ImportOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2684b340d4bb06eed6d0d55b293bd43ec30585e3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37626551" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ImportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportOptions" />
  <TypeSignature Language="F#" Value="type ImportOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="211d7-101">Rappresenta le opzioni che possono essere impostate in una classe <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="211d7-101">Represents the options that can be set on an <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="211d7-102">La classe <xref:System.Runtime.Serialization.XsdDataContractImporter> viene utilizzata per generare codice da uno schema XML utilizzando il CodeDOM [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="211d7-102">The <xref:System.Runtime.Serialization.XsdDataContractImporter> is used to generate code from XML schema using the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span></span> <span data-ttu-id="211d7-103">Per generare uno schema XML da un assembly, utilizzare la classe <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="211d7-103">To generate an XML schema from an assembly, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
 <span data-ttu-id="211d7-104">Per altre informazioni sull'importazione ed esportazione di schemi, vedere [Schema di importazione / esportazione](~/docs/framework/wcf/feature-details/schema-import-and-export.md) e [importazione dello Schema per generare classi](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span><span class="sxs-lookup"><span data-stu-id="211d7-104">For more information about importing and exporting schemas, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md) and [Importing Schema to Generate Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="211d7-105">Nell'esempio seguente viene creata un'istanza della classe <xref:System.Runtime.Serialization.ImportOptions> e vengono impostate le proprietà <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> e <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A>.</span><span class="sxs-lookup"><span data-stu-id="211d7-105">The following example creates an instance of the <xref:System.Runtime.Serialization.ImportOptions> class and sets the <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> and <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> properties.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#3](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#3)]
 [!code-vb[XsdDataContractImporter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ImportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="211d7-106">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.ImportOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-106">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ImportOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CodeProvider : System.CodeDom.Compiler.CodeDomProvider with get, set" Usage="System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-107">Ottiene o imposta un'istanza <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> che fornisce i mezzi per controllare se sono supportate determinate opzioni per un linguaggio di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-107">Gets or sets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-108">Istanza <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> che fornisce i mezzi per controllare se sono supportate determinate opzioni per un linguaggio di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-108">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="211d7-109">Per supportare una migliore generazione di codice per linguaggi diversi, le informazioni su quanto supportato dal linguaggio di destinazione devono essere passate all'utilità di importazione dello schema.</span><span class="sxs-lookup"><span data-stu-id="211d7-109">To support better code generation for different languages, information about what is supported by the target language needs to be passed to the schema importer.</span></span> <span data-ttu-id="211d7-110">Questa operazione viene eseguita passando un'istanza della classe <xref:System.CodeDom.Compiler.CodeDomProvider>, che fornisce un metodo <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> specifico, per controllare se supporta una determinata classe <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span><span class="sxs-lookup"><span data-stu-id="211d7-110">This is done by passing an instance of the <xref:System.CodeDom.Compiler.CodeDomProvider> class, which provides a <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> method to check whether it supports particular <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContractSurrogate : System.Runtime.Serialization.IDataContractSurrogate with get, set" Usage="System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-111">Ottiene o imposta un surrogato di un contratto dati che può essere utilizzato per modificare il codice generato durante un'operazione di importazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-111">Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-112">Implementazione dell'interfaccia <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> che gestisce l'importazione dello schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-112">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that handles schema import.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataBinding">
      <MemberSignature Language="C#" Value="public bool EnableDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDataBinding : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-113">Ottiene o imposta un valore che specifica se i tipi nel codice generato devono implementare l'interfaccia <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-113">Gets or sets a value that specifies whether types in generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-114">
            <see langword="true" /> se il codice generato deve implementare l'interfaccia <see cref="T:System.ComponentModel.INotifyPropertyChanged" />. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-114">
              <see langword="true" /> if the generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="211d7-115">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-115">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="211d7-116">Questa interfaccia viene utilizzata da componenti di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], ad esempio Windows Forms o Windows Presentation Foundation, per acquisire modifiche di dati per gli aggiornamenti dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="211d7-116">This interface is used by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] components, such as Windows Forms or Windows Presentation Foundation, to capture data changes for user interface updates.</span></span> <span data-ttu-id="211d7-117">Le proprietà generate generano un evento modificato da proprietà quando il valore viene modificato, consentendo all'interfaccia utente di agire di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="211d7-117">The generated properties raise a property-changed event when the value changes, allowing UI hooks to act accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInternal">
      <MemberSignature Language="C#" Value="public bool GenerateInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInternal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInternal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInternal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateInternal : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-118">Ottiene o imposta un valore che specifica se il codice generato verrà contrassegnato come interno o pubblico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-118">Gets or sets a value that specifies whether generated code will be marked internal or public.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-119">
            <see langword="true" /> se il codice verrà contrassegnato <see langword="internal" />. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-119">
              <see langword="true" /> if the code will be marked <see langword="internal" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="211d7-120">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-120">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializable">
      <MemberSignature Language="C#" Value="public bool GenerateSerializable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateSerializable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateSerializable : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-121">Ottiene o imposta un valore che specifica se le classi del contratto dati generate verranno contrassegnate con l'attributo <see cref="T:System.SerializableAttribute" /> in aggiunta all'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-121">Gets or sets a value that specifies whether generated data contract classes will be marked with the <see cref="T:System.SerializableAttribute" /> attribute in addition to the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-122">Specificare <see langword="true" /> per generare classi con l'attributo <see cref="T:System.SerializableAttribute" /> applicato. In caso contrario, specificare <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-122">
              <see langword="true" /> to generate classes with the <see cref="T:System.SerializableAttribute" /> applied; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="211d7-123">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-123">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXmlType">
      <MemberSignature Language="C#" Value="public bool ImportXmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportXmlType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportXmlType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImportXmlType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ImportXmlType : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-124">Ottiene o imposta un valore che determina se verranno importati tutti i tipi di XML Schema, anche quelli non conformi a uno schema del contratto dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-124">Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-125">
            <see langword="true" /> per importare tutti i tipi di schema. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-125">
              <see langword="true" /> to import all schema types; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="211d7-126">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="211d7-127">In genere, l'importazione di un tipo non conforme a uno schema del contratto dati valido ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="211d7-127">Normally, importing a type that does not conform to a valid data contract schema will fail.</span></span> <span data-ttu-id="211d7-128">Tuttavia, quando la proprietà è impostata su `true`, tutti questi tipi verranno importati come tipi che implementano l'interfaccia <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="211d7-128">However, when this property is set to `true`, all such types will be imported as types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Namespaces { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-129">Ottiene un dizionario che contiene il mapping di spazi dei nomi del contratto dati agli spazi dei nomi CLR che devono essere utilizzati per generare codice durante un'operazione di importazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-129">Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-130">Interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> che contiene i mapping degli spazi dei nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-130">A <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the namespace mappings.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedCollectionTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedCollectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedCollectionTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedCollectionTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedCollectionTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedCollectionTypes : System.Collections.Generic.ICollection&lt;Type&gt;" Usage="System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-131">Ottiene una raccolta di tipi che rappresentano raccolte di contratti dati ai quali deve essere fatto riferimento durante la generazione di codice per le raccolte, ad esempio elenchi o dizionari di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-131">Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-132">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> che contiene i tipi di raccolte a cui viene fatto riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-132">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the referenced collection types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="211d7-133">Per impostazione predefinita, quando si importa uno schema di raccolta viene generata una matrice (a meno che lo schema non abbia un'annotazione speciale in cui è citato un tipo diverso).</span><span class="sxs-lookup"><span data-stu-id="211d7-133">By default, an array will be generated when importing a collection schema (unless the schema has a special annotation that mentions a different type).</span></span> <span data-ttu-id="211d7-134">Tuttavia, se nella raccolta <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> è presente un tipo corrispondente, verrà utilizzato tale tipo.</span><span class="sxs-lookup"><span data-stu-id="211d7-134">However, if there is a matching type in the <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> collection, that type will be used.</span></span> <span data-ttu-id="211d7-135">Ad esempio, quando si importa uno schema che contiene un elenco di numeri interi viene solitamente generata una matrice di numeri interi.</span><span class="sxs-lookup"><span data-stu-id="211d7-135">For example, when importing schema that contains a list of integers, an array of integers will normally be generated.</span></span> <span data-ttu-id="211d7-136">Se tuttavia la raccolta contiene la classe <xref:System.Collections.Generic.LinkedList%601> di tipo intero, al posto della matrice verrà utilizzato questo tipo.</span><span class="sxs-lookup"><span data-stu-id="211d7-136">However, if the collection contains the <xref:System.Collections.Generic.LinkedList%601> of type integer, that type will be used instead of the array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedTypes : System.Collections.Generic.ICollection&lt;Type&gt;" Usage="System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="211d7-137">Ottiene un'interfaccia <see cref="T:System.Collections.Generic.IList`1" /> contenente tipi a cui fa riferimento il codice generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-137">Gets a <see cref="T:System.Collections.Generic.IList`1" /> containing types referenced in generated code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="211d7-138">Interfaccia <see cref="T:System.Collections.Generic.IList`1" /> contenente i tipi a cui viene fatto riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="211d7-138">A <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>