<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6934b-101">Rappresenta i parametri di query come oggetti <see cref="T:System.Data.Objects.ObjectParameter" /> definiti in un oggetto <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6934b-102">Rappresenta i parametri di query come oggetti <xref:System.Data.Objects.ObjectParameter> definiti in un oggetto <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="6934b-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="6934b-103">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="6934b-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="6934b-104">I parametri passati ai metodi del generatore di query vengono aggregati dalle istanze successive di un oggetto <xref:System.Data.Objects.ObjectQuery%601> nella sequenza.</span><span class="sxs-lookup"><span data-stu-id="6934b-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="6934b-105">È possibile accedervi utilizzando la proprietà <xref:System.Data.Objects.ObjectQuery.Parameters%2A>, che restituisce l'oggetto <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="6934b-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="6934b-106">Dopo essere stati aggiunti, i parametri possono essere rimossi dalla raccolta e la raccolta può essere cancellata, a condizione che la query non sia stata compilata o eseguita.</span><span class="sxs-lookup"><span data-stu-id="6934b-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="6934b-107">I nomi dei parametri non possono essere modificati, ma è possibile cambiare i valori in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="6934b-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="6934b-108">I parametri devono essere univoci in <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="6934b-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="6934b-109">Nella raccolta non possono essere presenti due parametri con lo stesso nome.</span><span class="sxs-lookup"><span data-stu-id="6934b-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="6934b-110">Quando si utilizzano i metodi di composizione, ad esempio <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> e <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, i parametri vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="6934b-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="6934b-111">Quando i set di parametri sono incompatibili o incompleti, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="6934b-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="6934b-112">Per ulteriori informazioni, vedere [metodi del generatore di Query](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="6934b-112">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6934b-113">L'esempio in questo argomento è basato sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="6934b-113">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="6934b-114">Nell'esempio vengono aggiunti nuovi parametri alla raccolta e viene ottenuto il numero di parametri presenti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="6934b-115">Viene quindi scorso l'oggetto <xref:System.Data.Objects.ObjectParameterCollection> e vengono visualizzati il nome, il tipo e il valore di ogni parametro nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="6934b-116">Parametro da aggiungere alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-116">The parameter to add to the collection.</span></span></param>
        <summary><span data-ttu-id="6934b-117">Aggiunge l'oggetto <see cref="T:System.Data.Objects.ObjectParameter" /> specificato alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-117">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6934b-118">Dopo essere stati aggiunti, i parametri possono essere rimossi dalla raccolta e la raccolta può essere cancellata, a condizione che la query non sia stata compilata o eseguita.</span><span class="sxs-lookup"><span data-stu-id="6934b-118">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="6934b-119">I nomi dei parametri non possono essere modificati, ma è possibile cambiare i valori in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="6934b-119">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="6934b-120">I parametri devono essere univoci in <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="6934b-120">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="6934b-121">Nella raccolta non possono essere presenti due parametri con lo stesso nome.</span><span class="sxs-lookup"><span data-stu-id="6934b-121">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="6934b-122">Per ulteriori informazioni, vedere [metodi del generatore di Query](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="6934b-122">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6934b-123">L'esempio in questo argomento è basato sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="6934b-123">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="6934b-124">Nell'esempio vengono aggiunti nuovi parametri alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-124">The example adds new parameters to the collection.</span></span> <span data-ttu-id="6934b-125">Viene scorso l'oggetto <xref:System.Data.Objects.ObjectParameterCollection> e vengono visualizzati il nome, il tipo e il valore di ogni parametro nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-125">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6934b-126">Il valore dell'argomento <paramref name="parameter" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-126">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6934b-127">L'argomento <paramref name="parameter" /> esiste già nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="6934b-127">The <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="6934b-128">Questo comportamento è diverso da quello previsto per la maggior parte delle raccolte che consentono voci duplicate.</span><span class="sxs-lookup"><span data-stu-id="6934b-128">This behavior differs from that of most collections that allow duplicate entries.</span></span>  
  
 <span data-ttu-id="6934b-129">oppure</span><span class="sxs-lookup"><span data-stu-id="6934b-129">-or-</span></span>  
  
 <span data-ttu-id="6934b-130">Un altro parametro con lo stesso nome dell'argomento <paramref name="parameter" /> esiste già nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="6934b-130">Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="6934b-131">Notare che la ricerca viene eseguita senza distinzione tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="6934b-131">Note that the lookup is case-insensitive.</span></span> <span data-ttu-id="6934b-132">Questo comportamento è diverso da quello previsto per la maggior parte delle raccolte ed è più simile al comportamento di un oggetto <see cref="T:System.Collections.Generic.Dictionary" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-132">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6934b-133">Il tipo di <paramref name="parameter" /> non è valido.</span><span class="sxs-lookup"><span data-stu-id="6934b-133">The type of the <paramref name="parameter" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6934b-134">Elimina tutte le istanze di <see cref="T:System.Data.Objects.ObjectParameter" /> dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-134">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6934b-135">Verifica se nella raccolta è presente un oggetto <see cref="T:System.Data.Objects.ObjectParameter" /> specificato in base al riferimento.</span><span class="sxs-lookup"><span data-stu-id="6934b-135">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="6934b-136">Oggetto <see cref="T:System.Data.Objects.ObjectParameter" /> da trovare nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-136">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="6934b-137">Verifica se nella raccolta è presente un oggetto <see cref="T:System.Data.Objects.ObjectParameter" /> specificato in base al riferimento.</span><span class="sxs-lookup"><span data-stu-id="6934b-137">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
        <returns><span data-ttu-id="6934b-138">Restituisce <see langword="true" /> se l'oggetto parametro viene individuato nell'insieme. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-138">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6934b-139">È un controllo basato sul riferimento,</span><span class="sxs-lookup"><span data-stu-id="6934b-139">This is a reference-based check.</span></span> <span data-ttu-id="6934b-140">Ovvero, se un <xref:System.Data.Objects.ObjectParameter> viene specificato che contiene lo stesso nome di un oggetto parametro nella raccolta, questo metodo restituirà solo `true` se è lo stesso oggetto.</span><span class="sxs-lookup"><span data-stu-id="6934b-140">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6934b-141">Il valore dell'argomento <paramref name="parameter" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-141">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6934b-142">Nome del parametro da cercare nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-142">The name of the parameter to look for in the collection.</span></span> <span data-ttu-id="6934b-143">Questo nome non deve includere il marcatore di parametro "@" utilizzato nelle istruzioni [!INCLUDE[esql](~/includes/esql-md.md)], ma solo il nome effettivo.</span><span class="sxs-lookup"><span data-stu-id="6934b-143">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="6934b-144">Determina se un oggetto <see cref="T:System.Data.Objects.ObjectParameter" /> con il nome specificato è presente nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-144">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span></span></summary>
        <returns><span data-ttu-id="6934b-145">Restituisce <see langword="true" /> se un parametro con il nome specificato viene individuato nell'insieme. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-145">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6934b-146">L'esempio in questo argomento è basato sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="6934b-146">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="6934b-147">Nell'esempio viene utilizzato il metodo <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> per determinare se il parametro specificato è presente nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-147">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6934b-148">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-148">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="6934b-149">Matrice in cui copiare i parametri.</span><span class="sxs-lookup"><span data-stu-id="6934b-149">The array into which to copy the parameters.</span></span></param>
        <param name="index"><span data-ttu-id="6934b-150">Indice nella matrice in corrispondenza del quale iniziare la copia dei parametri.</span><span class="sxs-lookup"><span data-stu-id="6934b-150">The index in the array at which to start copying the parameters.</span></span></param>
        <summary><span data-ttu-id="6934b-151">Consente di copiare i parametri presenti nella raccolta in una matrice specificata, partendo dall'oggetto in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="6934b-151">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6934b-152">L'esempio in questo argomento è basato sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="6934b-152">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="6934b-153">Nell'esempio vengono copiati i parametri nella matrice specificata.</span><span class="sxs-lookup"><span data-stu-id="6934b-153">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6934b-154">Ottiene il numero di parametri attualmente presenti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-154">Gets the number of parameters currently in the collection.</span></span></summary>
        <value><span data-ttu-id="6934b-155">Numero di oggetti <see cref="T:System.Data.Objects.ObjectParameter" /> presenti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-155">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6934b-156">L'esempio in questo argomento è basato sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="6934b-156">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="6934b-157">Nell'esempio vengono aggiunti nuovi parametri alla raccolta e viene ottenuto il numero di parametri presenti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-157">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="6934b-158">Viene quindi scorso l'oggetto <xref:System.Data.Objects.ObjectParameterCollection> e vengono visualizzati il nome, il tipo e il valore di ogni parametro nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-158">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6934b-159">Nome del parametro da cercare.</span><span class="sxs-lookup"><span data-stu-id="6934b-159">The name of the parameter to find.</span></span> <span data-ttu-id="6934b-160">Questo nome non deve includere il marcatore di parametro "@" utilizzato nelle istruzioni [!INCLUDE[esql](~/includes/esql-md.md)], ma solo il nome effettivo.</span><span class="sxs-lookup"><span data-stu-id="6934b-160">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="6934b-161">Fornisce un indicizzatore che consente ai chiamanti di recuperare i parametri in base al nome.</span><span class="sxs-lookup"><span data-stu-id="6934b-161">Provides an indexer that allows callers to retrieve parameters by name.</span></span></summary>
        <value><span data-ttu-id="6934b-162">Istanza di <see cref="T:System.Data.Objects.ObjectParameter" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-162">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6934b-163">Non viene trovata nella raccolta alcun parametro con il nome specificato.</span><span class="sxs-lookup"><span data-stu-id="6934b-163">No parameter with the specified name is found in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="6934b-164">Oggetto da rimuovere dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-164">An object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="6934b-165">Rimuove un'istanza di un oggetto <see cref="T:System.Data.Objects.ObjectParameter" /> dalla raccolta in base al riferimento se presente nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-165">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="6934b-166">Restituisce <see langword="true" /> se l'oggetto parametro viene individuato e rimosso dall'insieme. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-166">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6934b-167">È un confronto basato sul riferimento,</span><span class="sxs-lookup"><span data-stu-id="6934b-167">This is a reference-based comparison.</span></span> <span data-ttu-id="6934b-168">ovvero, se viene specificato un oggetto parametro di query contenente lo stesso nome di un oggetto parametro nella raccolta, il parametro presente nella raccolta verrà rimosso solo se è lo stesso oggetto.</span><span class="sxs-lookup"><span data-stu-id="6934b-168">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="6934b-169">Per rimuovere un oggetto in base al nome, utilizzare innanzitutto l'indicizzatore per recuperare l'istanza del parametro, quindi effettuare la rimozione utilizzando questo metodo.</span><span class="sxs-lookup"><span data-stu-id="6934b-169">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6934b-170">L'esempio in questo argomento è basato sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="6934b-170">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="6934b-171">Nell'esempio vengono aggiunti due parametri alla raccolta, quindi vengono rimossi i parametri.</span><span class="sxs-lookup"><span data-stu-id="6934b-171">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6934b-172">Il valore dell'argomento <paramref name="parameter" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-172">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6934b-173">Ottiene un valore che indica se la raccolta è di sola lettura o se può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="6934b-173">Gets a value that indicates whether the collection is read-only or can be modified.</span></span></summary>
        <value><span data-ttu-id="6934b-174">Valore Boolean che è <see langword="true" /> se l'insieme è di sola lettura e <see langword="false" /> se l'insieme può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="6934b-174">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6934b-175">Questa raccolta è sempre di lettura/scrittura, per cui i parametri possono essere aggiunti, rimossi e modificati.</span><span class="sxs-lookup"><span data-stu-id="6934b-175">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6934b-176">Restituisce un enumeratore tipizzato della raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-176">Returns a typed enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="6934b-177">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> di tipo <see cref="T:System.Data.Objects.ObjectParameter" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-177">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6934b-178">Restituisce un'istanza di <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="6934b-178">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="6934b-179">Consente di scorrere e attraversare la raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-179">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6934b-180">Restituisce un enumeratore non tipizzato della raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-180">Returns an untyped enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="6934b-181">Istanza di <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="6934b-181">An <see cref="T:System.Collections.IEnumerator" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6934b-182">Restituisce un enumeratore non tipizzato della raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-182">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="6934b-183">Consente di scorrere e attraversare la raccolta.</span><span class="sxs-lookup"><span data-stu-id="6934b-183">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>