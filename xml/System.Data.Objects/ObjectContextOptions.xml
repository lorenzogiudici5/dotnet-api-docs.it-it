<Type Name="ObjectContextOptions" FullName="System.Data.Objects.ObjectContextOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb2212fa3dbde846b2eebf5dc4e4877fed4c6cc3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36686659" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectContextOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectContextOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectContextOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectContextOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectContextOptions sealed" />
  <TypeSignature Language="F#" Value="type ObjectContextOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b21a6-101">Definisce le opzioni che influiscono sul comportamento dell'oggetto <see cref="T:System.Data.Objects.ObjectContext" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b21a6-101">Defines options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21a6-102">Nessun contenuto verrà aggiornato qui. Non aggiungere materiale qui.</span><span class="sxs-lookup"><span data-stu-id="b21a6-102">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LazyLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool LazyLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LazyLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LazyLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LazyLoadingEnabled : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b21a6-103">Ottiene o imposta un valore booleano che determina se gli oggetti correlati vengono caricati automaticamente quando si accede a una proprietà di navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-103">Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b21a6-104">
            <see langword="true" /> se il caricamento differito è abilitato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-104">
              <see langword="true" /> if lazy loading is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCreationEnabled">
      <MemberSignature Language="C#" Value="public bool ProxyCreationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProxyCreationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCreationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProxyCreationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyCreationEnabled : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b21a6-105">Ottiene o imposta un valore booleano che determina se vengono create istanze proxy per classi di dati personalizzate che non riconoscono la persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-105">Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b21a6-106">
            <see langword="true" /> se vengono creati i proxy; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-106">
              <see langword="true" /> if proxies are created; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b21a6-107">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-107">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseConsistentNullReferenceBehavior">
      <MemberSignature Language="C#" Value="public bool UseConsistentNullReferenceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseConsistentNullReferenceBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseConsistentNullReferenceBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseConsistentNullReferenceBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b21a6-108">Ottiene o imposta un valore booleano che determina se utilizzare il comportamento NullReference coerente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-108">Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b21a6-109">
            <see langword="true" /> se deve essere utilizzato il comportamento coerente NullReference; in caso contrario, <see langword="false" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-109">
              <see langword="true" /> if the consistent NullReference behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21a6-110">Se questo flag è impostato su `false`, quindi imposta la proprietà Value del <xref:System.Data.Objects.DataClasses.EntityReference%601> per una relazione di chiave esterna su null quando è già null non ha alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="b21a6-110">If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect.</span></span> <span data-ttu-id="b21a6-111">Quando questo flag è impostato su `true`, quindi impostare il valore su null determinerà sempre la chiave esterna per essere reso nullo e la relazione deve essere eliminato anche se il valore è attualmente null.</span><span class="sxs-lookup"><span data-stu-id="b21a6-111">When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null.</span></span> <span data-ttu-id="b21a6-112">Il valore predefinito è `false` quando si utilizza ObjectContext e `true` quando si utilizza DbContext.</span><span class="sxs-lookup"><span data-stu-id="b21a6-112">The default value is `false` when using ObjectContext and `true` when using DbContext.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCSharpNullComparisonBehavior">
      <MemberSignature Language="C#" Value="public bool UseCSharpNullComparisonBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCSharpNullComparisonBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCSharpNullComparisonBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCSharpNullComparisonBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b21a6-113">Ottiene o imposta un valore booleano che determina se utilizzare il comportamento C# NullComparison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-113">Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b21a6-114">
            <see langword="true" /> se deve essere utilizzato il comportamento C# NullComparison; in caso contrario, <see langword="false" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-114">
              <see langword="true" /> if the C# NullComparison behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLegacyPreserveChangesBehavior">
      <MemberSignature Language="C#" Value="public bool UseLegacyPreserveChangesBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLegacyPreserveChangesBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLegacyPreserveChangesBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLegacyPreserveChangesBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b21a6-115">Ottiene o imposta un valore booleano che determina se utilizzare il comportamento legacy PreserveChanges.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-115">Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b21a6-116">
            <see langword="true" /> se deve essere utilizzato il comportamento PreserveChanges legacy; in caso contrario, <see langword="false" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a6-116">
              <see langword="true" /> if the legacy PreserveChanges behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>