<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e5343d026f21efaba63022c3d7fb7f7c2c9a880" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48612800" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable, System.Linq.IQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable, IQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable, System::Linq::IQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5707b-101">Implementa le funzionalità comuni per le query su un modello concettuale tramite LINQ to Entities e <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5707b-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-102"><xref:System.Data.Objects.ObjectQuery> è la classe base per le query su un modello concettuale.</span><span class="sxs-lookup"><span data-stu-id="5707b-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="5707b-103"><xref:System.Data.Objects.ObjectQuery> viene fornito per garantire che query LINQ to Entities abbiano la stessa funzionalità delle query eseguite utilizzando <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5707b-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="5707b-104">È necessario usare <xref:System.Data.Objects.ObjectQuery%601> con un tipo specificato in un modello concettuale di query.</span><span class="sxs-lookup"><span data-stu-id="5707b-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="5707b-105">Per altre informazioni, vedere [query di oggetto](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="5707b-105">For more information, see [Object Queries](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/641f9b68-9046-47a1-abb0-1c8eaeda0e2d">
      <span data-ttu-id="5707b-106">LINQ to Entities</span>
      <span class="sxs-lookup">
        <span data-stu-id="5707b-106">LINQ to Entities</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-107">Restituisce il testo del comando per la query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-107">Returns the command text for the query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-108">Valore <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-108">A <see langword="string" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-109">Ottiene il contesto dell'oggetto associato a questa query di oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-109">Gets the object context associated with this object query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-110">Oggetto <see cref="T:System.Data.Objects.ObjectContext" /> associato all'istanza di <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-110">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-111">Il contesto per la query include connessione, cache e metadati.</span><span class="sxs-lookup"><span data-stu-id="5707b-111">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="5707b-112">Per altre informazioni, vedere [Cenni preliminari su Object Services (Entity Framework)](http://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span><span class="sxs-lookup"><span data-stu-id="5707b-112">For more information, see [Object Services Overview (Entity Framework)](http://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span></span>  
  
 <span data-ttu-id="5707b-113">La proprietà di connessione è modificabile e deve essere impostata prima di potere eseguire una query.</span><span class="sxs-lookup"><span data-stu-id="5707b-113">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="5707b-114">Per altre informazioni, vedere [alla gestione delle connessioni in Object Services (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="5707b-114">For more information, see [Managing Connections in Object Services (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5707b-115">L'esempio in questo argomento si basa sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="5707b-115">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5707b-116">Nell'esempio viene ottenuto l'oggetto <xref:System.Data.Objects.ObjectContext> associato all'oggetto <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5707b-116">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="5707b-117">Eseguire query sui dati come oggetti e lo Shaping dei risultati (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-117">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-118">Ottiene o imposta un valore che indica se il piano di query deve essere memorizzato nella cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-118">Gets or sets a value that indicates whether the query plan should be cached.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-119">Valore che indica se il piano di query deve essere memorizzato nella cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-119">A value that indicates whether the query plan should be cached.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-120">Per altre informazioni, vedere [prevede la memorizzazione nella cache Query](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span><span class="sxs-lookup"><span data-stu-id="5707b-120">For more information, see [Query Plan Caching](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="5707b-121">Esecuzione di query sui dati come oggetti (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-121">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">
          <span data-ttu-id="5707b-122">Oggetto <see cref="T:System.Data.Objects.MergeOption" /> da utilizzare quando viene eseguita la query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-122">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span>
          </span>
          <span data-ttu-id="5707b-123">Il valore predefinito è <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-123">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5707b-124">Esegue la query di oggetto non tipizzata con l'opzione di merge specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-124">Executes the untyped object query with the specified merge option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5707b-125">Oggetto <see cref="T:System.Data.Objects.ObjectResult`1" /> contenente una raccolta di oggetti entità restituiti dalla query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-125">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-126">L'opzione di unione predefinita per le query di oggetto è <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="5707b-126">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="5707b-127">Per altre informazioni, vedere [risoluzione di identità, gestione dello stato e rilevamento modifiche](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="5707b-127">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="5707b-128">Chiamare il metodo <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> sull'oggetto <xref:System.Data.Objects.ObjectQuery%601> per le query di oggetto tipizzate.</span><span class="sxs-lookup"><span data-stu-id="5707b-128">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="5707b-129">Esecuzione di query sui dati come oggetti (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-129">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5707b-130">Restituisce le informazioni sul tipo di risultato della query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-130">Returns information about the result type of the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5707b-131">Valore di <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> contenente le informazioni sul tipo di risultato della query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-131">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5707b-132">Questo esempio è basato il [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="5707b-132">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5707b-133">Nell'esempio viene creato un oggetto <xref:System.Data.Objects.ObjectQuery%601> di tipo <xref:System.Data.Common.DbDataRecord> e viene utilizzato <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> per determinare se il tipo restituito rappresenta una riga.</span><span class="sxs-lookup"><span data-stu-id="5707b-133">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)">
          <span data-ttu-id="5707b-134">Gestione di connessioni in Object Services (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-134">Managing Connections in Object Services (Entity Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5">
          <span data-ttu-id="5707b-135">Metadati ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-135">ADO.NET Metadata</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-136">Ottiene o imposta il modo in cui gli oggetti restituiti da una query vengono aggiunti al contesto dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-136">Gets or sets how objects returned from a query are added to the object context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-137">Oggetto <see cref="T:System.Data.Objects.MergeOption" /> della query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-137">The query <see cref="T:System.Data.Objects.MergeOption" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-138">Se non viene specificato alcun oggetto <xref:System.Data.Objects.MergeOption>, il valore predefinito è <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="5707b-138">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="5707b-139">Per altre informazioni, vedere [risoluzione di identità, gestione dello stato e rilevamento modifiche](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="5707b-139">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="5707b-140">Eseguire query sui dati come oggetti e lo Shaping dei risultati (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-140">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-141">Ottiene la raccolta di parametri per questa query di oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-141">Gets the parameter collection for this object query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-142">Raccolta di parametri per l'oggetto <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-142">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-143">Utilizzare l'oggetto <xref:System.Data.Objects.ObjectParameterCollection> restituito per specificare i parametri passati alla query.</span><span class="sxs-lookup"><span data-stu-id="5707b-143">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="5707b-144">Per altre informazioni, vedere [metodi del generatore di Query](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="5707b-144">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5707b-145">Questo esempio è basato il [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="5707b-145">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5707b-146">Nell'esempio vengono aggiunti nuovi parametri alla raccolta e viene ottenuta la raccolta di parametri per l'oggetto <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5707b-146">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="5707b-147">Viene quindi scorso l'oggetto <xref:System.Data.Objects.ObjectParameterCollection> e vengono visualizzati il nome, il tipo e il valore di ogni parametro nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="5707b-147">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="5707b-148">Esecuzione di query sui dati come oggetti (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-148">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5707b-149">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-149">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5707b-150">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-151">La chiamata a <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> esegue la query con l'opzione di unione specificata dalla proprietà <xref:System.Data.Objects.ObjectQuery.MergeOption%2A>.</span><span class="sxs-lookup"><span data-stu-id="5707b-151">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>  
  
 <span data-ttu-id="5707b-152">L'istruzione `foreach` del linguaggio C# (`For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="5707b-152">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="5707b-153">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="5707b-153">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5707b-154">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="5707b-154">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="5707b-155">Esecuzione di query sui dati come oggetti (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-155">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-156">Ottiene un valore che indica se la raccolta restituita dalla query contiene oggetti raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-156">Gets a value that indicates whether the collection returned by the query contains collection objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-157">Valore booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-157">A Boolean value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-158">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="5707b-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5707b-159">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.Objects.ObjectQuery%601> a un'interfaccia <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="5707b-159">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="5707b-160">Questa proprietà restituisce sempre `false` perché la raccolta restituita dalla query contiene oggetti e non raccolte.</span><span class="sxs-lookup"><span data-stu-id="5707b-160">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5707b-161">Restituisce la raccolta come <see cref="T:System.Collections.IList" /> utilizzato per l'associazione dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-161">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5707b-162">Oggetto <see cref="T:System.Collections.IList" /> di oggetti entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-162">An <see cref="T:System.Collections.IList" /> of entity objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-163">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="5707b-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5707b-164">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.Objects.ObjectQuery%601> a un'interfaccia <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="5707b-164">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="5707b-165">Questo metodo consente l'associazione dati al risultato della query.</span><span class="sxs-lookup"><span data-stu-id="5707b-165">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="5707b-166">Viene chiamato dal controllo associato alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="5707b-166">It is called by the control bound to the collection.</span></span> <span data-ttu-id="5707b-167">Per altre informazioni, vedere [associazione di oggetti ai controlli](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span><span class="sxs-lookup"><span data-stu-id="5707b-167">For more information, see [Binding Objects to Controls](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-168">Ottiene il tipo di elemento del risultato per questa istanza della query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-168">Gets the result element type for this query instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-169">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di elemento del risultato per questa istanza della query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-169">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-170">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="5707b-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5707b-171">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.Objects.ObjectQuery%601> a un'interfaccia <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="5707b-171">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-172">Ottiene l'espressione che descrive questa query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-172">Gets the expression describing this query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-173">Oggetto <see cref="T:System.Linq.Expressions.Expression" /> LINQ che descrive questa query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-173">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-174">Per le query compilate usando i modelli del generatore LINQ, viene restituito un albero delle espressioni LINQ completo; in caso contrario, viene restituita un'espressione costante che esegue il wrapping di questa query.</span><span class="sxs-lookup"><span data-stu-id="5707b-174">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="5707b-175">Notare che l'espressione predefinita non viene memorizzata nella cache.</span><span class="sxs-lookup"><span data-stu-id="5707b-175">Note that the default expression is not cached.</span></span> <span data-ttu-id="5707b-176">In questo modo il framework può distinguere le query LINQ dalle query Entity SQL.</span><span class="sxs-lookup"><span data-stu-id="5707b-176">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>  
  
 <span data-ttu-id="5707b-177">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="5707b-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5707b-178">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.Objects.ObjectQuery%601> a un'interfaccia <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="5707b-178">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5707b-179">Ottiene l'oggetto <see cref="T:System.Linq.IQueryProvider" /> LINQ associato all'istanza della query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-179">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5707b-180">Oggetto <see cref="T:System.Linq.IQueryProvider" /> associato all'istanza della query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-180">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5707b-181">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="5707b-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5707b-182">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.Objects.ObjectQuery%601> a un'interfaccia <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="5707b-182">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5707b-183">Restituisce i comandi per l'esecuzione sull'origine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-183">Returns the commands to execute against the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5707b-184">Oggetto <see langword="string" /> che rappresenta i comandi che la query esegue sull'origine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-184">A <see langword="string" /> that represents the commands that the query executes against the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5707b-185">L'esempio in questo argomento si basa sul [modello Sales di AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="5707b-185">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="5707b-186">Eseguire query sui dati come oggetti e lo Shaping dei risultati (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5707b-186">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>