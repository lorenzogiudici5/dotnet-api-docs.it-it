<Type Name="ObjectStateManager" FullName="System.Data.Objects.ObjectStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bdee2d24e3c5ea23c60e96c276bddf89dd9de54" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51872367" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectStateManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateManager" />
  <TypeSignature Language="F#" Value="type ObjectStateManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Mantiene lo stato dell'oggetto e la gestione delle identità per le istanze del tipo di entità e le istanze della relazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager> rileva i risultati della query e fornisce la logica per unire più risultati della query sovrapposti. Esegue inoltre il rilevamento delle modifiche in memoria quando vengono inseriti, eliminati o modificati gli oggetti e fornisce il set di modifiche per gli aggiornamenti. Tale insieme viene utilizzato dal processore delle modifiche per rendere le modifiche persistenti.  
  
 Questa classe viene utilizzata in genere da <xref:System.Data.Objects.ObjectContext> e non direttamente nelle applicazioni.  
  
   
  
## Examples  
 Questi esempi si basano sulla [modello Sales di AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 Nell'esempio seguente viene recuperato l'oggetto <xref:System.Data.Objects.ObjectStateManager> da <xref:System.Data.Objects.ObjectContext> e viene utilizzato il gestore degli stati per accedere a un oggetto nel contesto.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 Nell'esempio seguente viene utilizzato il metodo <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> sull'oggetto <xref:System.Data.Objects.ObjectStateManager> restituito per ottenere un oggetto in base alla relativa chiave di entità.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateManager(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectStateManager : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Objects.ObjectStateManager" Usage="new System.Data.Objects.ObjectStateManager metadataWorkspace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">Oggetto <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> che fornisce le informazioni sul mapping e sui metadati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Objects.ObjectStateManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeObjectState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeObjectState(object entity, valuetype System.Data.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeObjectState(System::Object ^ entity, System::Data::EntityState entityState);" />
      <MemberSignature Language="F#" Value="member this.ChangeObjectState : obj * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeObjectState (entity, entityState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="entity">Oggetto di cui è necessario modificare lo stato.</param>
        <param name="entityState">Nuovo stato dell'oggetto.</param>
        <summary>Imposta lo stato dell'oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> di un oggetto specifico sul valore <paramref name="entityState" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> dell'oggetto <paramref name="entity" /> fornito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiama il <xref:System.Data.Objects.ObjectStateManager.ChangeObjectState%2A> metodo di modifica dello stato di un oggetto per <xref:System.Data.EntityState.Deleted> non determina gli oggetti correlati in una relazione vincolata da eliminare.  
  
 La modifica dello stato di un oggetto non influenza gli oggetti correlati nell'oggetto grafico.  
  
 Quando si modifica il <xref:System.Data.EntityState> di una voce dell'oggetto entità da <xref:System.Data.EntityState.Modified>, tutte le proprietà dell'oggetto vengono contrassegnate come modificata, indipendentemente dai valori originali o correnti.  
  
 Quando la <xref:System.Data.EntityState> di un oggetto entità voce viene modificata in <xref:System.Data.EntityState.Added>, <xref:System.Data.EntityState.Deleted>, o <xref:System.Data.EntityState.Detached>, vengono aggiornate anche le voci di relazione per l'oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="entity" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Quando l'oggetto non è disconnesso e non dispone di una voce nel gestore degli stati.  
  
oppure 
In caso di tentativo di impostare lo stato su <see cref="F:System.Data.EntityState.Detached" /> da qualsiasi altro <see cref="T:System.Data.EntityState" />  
  
oppure 
Quando il parametro <paramref name="state" /> non è un valore valido dell'oggetto <see cref="T:System.Data.EntityState" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeRelationshipState">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Modifica lo stato della relazione specificata tra due oggetti entità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non è supportato per relazioni basate su un'associazione di chiavi esterne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string navigationProperty, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, navigationProperty As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ navigationProperty, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationProperty, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationProperty" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Istanza dell'oggetto o <see cref="T:System.Data.EntityKey" /> dell'entità di origine a un'estremità della relazione.</param>
        <param name="targetEntity">Istanza dell'oggetto o <see cref="T:System.Data.EntityKey" /> dell'entità di destinazione all'altra estremità della relazione.</param>
        <param name="navigationProperty">Nome della proprietà di navigazione in <c>source</c> che restituisce l'oggetto <c>target</c> specificato.</param>
        <param name="relationshipState">Oggetto <see cref="T:System.Data.EntityState" /> richiesto della relazione specificata.</param>
        <summary>Modifica lo stato della relazione tra due oggetti entità specificata in base ai due oggetti correlati e al nome della proprietà di navigazione.</summary>
        <returns>Oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> della relazione modificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le voci per gli oggetti su entrambe le estremità della relazione specificata devono esistere nel <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Questo metodo non è supportato per relazioni basate su un'associazione di chiavi esterne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="source" /> o <paramref name="target" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">In caso di tentativo di impostare lo stato della relazione su uno stato diverso da <see cref="F:System.Data.EntityState.Deleted" /> o <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> o <paramref name="target" /> è in uno stato <see cref="F:System.Data.EntityState.Deleted" />.  
  
oppure 
In caso di tentativo di impostare lo stato della relazione su uno stato diverso da <see cref="F:System.Data.EntityState.Added" /> o <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> o <paramref name="target" /> è in uno stato <see cref="F:System.Data.EntityState.Added" />.  
  
oppure 
Quando il parametro <paramref name="state" /> non è un valore valido dell'oggetto <see cref="T:System.Data.EntityState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, relationshipName As String, targetRoleName As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, relationshipName, targetRoleName, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Istanza dell'oggetto o <see cref="T:System.Data.EntityKey" /> dell'entità di origine a un'estremità della relazione.</param>
        <param name="targetEntity">Istanza dell'oggetto o <see cref="T:System.Data.EntityKey" /> dell'entità di destinazione all'altra estremità della relazione.</param>
        <param name="relationshipName">Nome della relazione.</param>
        <param name="targetRoleName">Nome del ruolo nell'entità <c>target</c> finale della relazione.</param>
        <param name="relationshipState">Oggetto <see cref="T:System.Data.EntityState" /> richiesto della relazione specificata.</param>
        <summary>Modifica lo stato della relazione tra due oggetti entità specificata in base ai due oggetti correlati e alle proprietà della relazione.</summary>
        <returns>Oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> della relazione modificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le voci per gli oggetti su entrambe le estremità della relazione specificata devono esistere nel <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Questo metodo non è supportato per le relazioni basate su un'associazione di chiavi esterne. Per altre informazioni, vedere [definizione e la gestione delle relazioni](https://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="source" /> o <paramref name="target" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">In caso di tentativo di impostare lo stato della relazione su uno stato diverso da <see cref="F:System.Data.EntityState.Deleted" /> o <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> o <paramref name="target" /> è in uno stato <see cref="F:System.Data.EntityState.Deleted" />.  
  
oppure 
In caso di tentativo di impostare lo stato della relazione su uno stato diverso da <see cref="F:System.Data.EntityState.Added" /> o <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> o <paramref name="target" /> è in uno stato <see cref="F:System.Data.EntityState.Added" />.  
  
oppure 
Quando il parametro <paramref name="state" /> non è un valore valido dell'oggetto <see cref="T:System.Data.EntityState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;TEntity&gt; (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;class TEntity&gt;(!!TEntity sourceEntity, object targetEntity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; navigationPropertySelector, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState(Of TEntity As Class) (sourceEntity As TEntity, targetEntity As Object, navigationPropertySelector As Expression(Of Func(Of TEntity, Object)), relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(TEntity sourceEntity, System::Object ^ targetEntity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ navigationPropertySelector, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : 'Entity * obj * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry (requires 'Entity : null)" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationPropertySelector, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sourceEntity" Type="TEntity" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationPropertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Il tipo di entità del <c>origine</c> oggetto.</typeparam>
        <param name="sourceEntity">Istanza dell'oggetto o <see cref="T:System.Data.EntityKey" /> dell'entità di origine a un'estremità della relazione.</param>
        <param name="targetEntity">Istanza dell'oggetto o <see cref="T:System.Data.EntityKey" /> dell'entità di destinazione all'altra estremità della relazione.</param>
        <param name="navigationPropertySelector">Espressione LINQ che seleziona la proprietà di navigazione di <c>source</c> che restituisce l'oggetto <c>target</c> specificato.</param>
        <param name="relationshipState">Oggetto <see cref="T:System.Data.EntityState" /> richiesto della relazione specificata.</param>
        <summary>Modifica lo stato della relazione tra due oggetti entità specificata in base ai due oggetti correlati e a un'espressione LINQ che definisce la proprietà di navigazione.</summary>
        <returns>Oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> della relazione modificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le voci per gli oggetti su entrambe le estremità della relazione specificata devono esistere nel <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Questo metodo non è supportato per le relazioni basate su un'associazione di chiavi esterne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="source" />, <paramref name="target" /> o <paramref name="selector" /> sono <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="selector" /> è in un formato non valido o non può restituire una proprietà di navigazione.</exception>
        <exception cref="T:System.InvalidOperationException">In caso di tentativo di impostare lo stato della relazione su uno stato diverso da <see cref="F:System.Data.EntityState.Deleted" /> o <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> o <paramref name="target" /> è in uno stato <see cref="F:System.Data.EntityState.Deleted" />.  
  
oppure 
In caso di tentativo di impostare lo stato della relazione su uno stato diverso da <see cref="F:System.Data.EntityState.Added" /> o <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> o <paramref name="target" /> è in uno stato <see cref="F:System.Data.EntityState.Added" />.  
  
oppure 
Quando il parametro <paramref name="state" /> non è un valore valido dell'oggetto <see cref="T:System.Data.EntityState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries (System.Data.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries(valuetype System.Data.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntries (state As EntityState) As IEnumerable(Of ObjectStateEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectStateEntry ^&gt; ^ GetObjectStateEntries(System::Data::EntityState state);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntries : System.Data.EntityState -&gt; seq&lt;System.Data.Objects.ObjectStateEntry&gt;" Usage="objectStateManager.GetObjectStateEntries state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Data.EntityState" /> usato per filtrare gli oggetti <see cref="T:System.Data.Objects.ObjectStateEntry" /> restituiti.</param>
        <summary>Restituisce una raccolta di oggetti <see cref="T:System.Data.Objects.ObjectStateEntry" /> per oggetti o relazioni con lo stato specificato.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.Data.Objects.ObjectStateEntry" /> nell'oggetto <see cref="T:System.Data.EntityState" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.Data.EntityState> è un campo di bit, pertanto è possibile recuperare le voci di stato per più stati in un'unica chiamata eseguendo un'operazione con OR bit per bit su più valori di <xref:System.Data.EntityState>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Quando <paramref name="state" /> è <see cref="F:System.Data.EntityState.Detached" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> per una voce di oggetto o di relazione specifica.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (key As EntityKey) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : System.Data.EntityKey -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key">Oggetto <see cref="T:System.Data.EntityKey" />.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> per la voce di oggetto o di relazione con la chiave specificata.</summary>
        <returns>Oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Data.EntityKey" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> per restituire un' <xref:System.Data.Objects.ObjectStateEntry> oggetto senza dovere gestire il <xref:System.InvalidOperationException> generato dal <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> (metodo).  
  
   
  
## Examples  
 L'esempio in questo argomento si basa sul [modello Sales di AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Nell'esempio viene ottenuto l'oggetto <xref:System.Data.Objects.ObjectStateEntry> per l'oggetto <xref:System.Data.EntityKey> specificato dall'oggetto <xref:System.Data.Objects.ObjectStateManager>. Viene quindi ottenuto il valore corrente del `SalesOrderHeader.PurchaseOrderNumber` proprietà, il valore della proprietà viene modificato ed enumerata la raccolta delle proprietà modificate.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstateentry)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstateentry)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="key" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Quando il parametro <paramref name="key" /> specificato non può essere trovato nel gestore degli stati.</exception>
        <exception cref="T:System.InvalidOperationException">Nell'oggetto <see cref="T:System.Data.EntityKey" /> non è presente alcuna entità con l'oggetto <see cref="T:System.Data.Objects.ObjectStateManager" /> specificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (entity As Object) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : obj -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Oggetto <see cref="T:System.Object" /> a cui appartiene l'oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> recuperato.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> per l'oggetto specificato.</summary>
        <returns>Oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Object" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> per restituire un' <xref:System.Data.Objects.ObjectStateEntry> oggetto senza dovere gestire il <xref:System.InvalidOperationException> generato dal <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nell'oggetto <see cref="T:System.Object" /> non è presente alcuna entità per l'oggetto <see cref="T:System.Data.Objects.ObjectStateManager" /> specificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipManager (entity As Object) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::RelationshipManager ^ GetRelationshipManager(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipManager : obj -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="objectStateManager.GetRelationshipManager entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Oggetto per il quale restituire l'oggetto <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> usato dall'oggetto specificato.</summary>
        <returns>Oggetto <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> per l'oggetto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiama il <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> metodo è uguale alla chiamata al metodo il <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> metodo, ad eccezione del fatto che questo metodo genera un'eccezione anziché restituire `false`.  
  
 Chiamare il <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> metodo per evitare di gestire i <xref:System.InvalidOperationException> che si verifica quando un <xref:System.Data.Objects.DataClasses.RelationshipManager> non può essere restituito per l'entità fornita.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Quando <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> non può essere restituito per l'entità <paramref name="entity" /> specificata.</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associato a questo gestore degli stati.</summary>
        <value>Oggetto <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associato a questo oggetto <see cref="T:System.Data.Objects.ObjectStateManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Data.Metadata.Edm.MetadataWorkspace> è un'API centrale che è possibile utilizzare per interagire con i metadati Entity Data Model (EDM) in fase di esecuzione e nel contesto di un'applicazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManagerChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectStateManagerChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ ObjectStateManagerChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando le entità vengono aggiunte o rimosse dal gestore degli stati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tenta di restituire un oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> per una voce di oggetto o di relazione specifica.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(class System.Data.EntityKey key, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (key As EntityKey, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : System.Data.EntityKey *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (key, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Oggetto <see cref="T:System.Data.EntityKey" /> specificato.</param>
        <param name="entry">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> per l'oggetto <see cref="T:System.Data.EntityKey" /> specificato. Questo parametro viene passato senza inizializzazione.</param>
        <summary>Tenta di recuperare l'oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> corrispondente per l'oggetto o la relazione con l'oggetto <see cref="T:System.Data.EntityKey" /> specificato.</summary>
        <returns>Valore Boolean che è <see langword="true" /> se è presente un oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Data.EntityKey" /> specificato. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> per restituire un oggetto <xref:System.Data.Objects.ObjectStateEntry> senza dovere gestire l'eccezione <xref:System.InvalidOperationException> generata dal metodo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>.  
  
   
  
## Examples  
 Gli esempi in questo argomento sono basati sul [modello Sales di AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 Nell'esempio viene tentato il recupero dell'oggetto <xref:System.Data.Objects.ObjectStateEntry> corrispondente per l'oggetto <xref:System.Data.EntityKey> specificato.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 Nell'esempio seguente viene utilizzato il metodo <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> sull'oggetto <xref:System.Data.Objects.ObjectStateManager> restituito per ottenere un oggetto in base alla relativa chiave di entità.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Viene fornito un valore <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) per <paramref name="key" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(object entity, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (entity As Object, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : obj *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (entity, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Oggetto <see cref="T:System.Object" /> a cui appartiene l'oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> recuperato.</param>
        <param name="entry">Quando termina, questo metodo contiene l'oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> per l'oggetto <see cref="T:System.Data.EntityKey" /> specificato. Questo parametro viene passato senza inizializzazione.</param>
        <summary>Tenta di recuperare l'oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Object" /> specificato.</summary>
        <returns>Valore booleano che è <see langword="true" /> se è presente un oggetto <see cref="T:System.Data.Objects.ObjectStateEntry" /> corrispondente per l'oggetto specificato. In caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> per restituire un oggetto <xref:System.Data.Objects.ObjectStateEntry> senza dovere gestire l'eccezione <xref:System.InvalidOperationException> generata dal metodo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipManager">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipManager(object entity, [out] class System.Data.Objects.DataClasses.RelationshipManager&amp; relationshipManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipManager (entity As Object, ByRef relationshipManager As RelationshipManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipManager(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::DataClasses::RelationshipManager ^ % relationshipManager);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipManager : obj *  -&gt; bool" Usage="objectStateManager.TryGetRelationshipManager (entity, relationshipManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="relationshipManager" Type="System.Data.Objects.DataClasses.RelationshipManager" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Oggetto per il quale restituire l'oggetto <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <param name="relationshipManager">Quando termina, questo metodo contiene l'elemento <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> per <c>entity</c>.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> usato dall'oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se un'istanza di <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> è stata restituita per l'oggetto <paramref name="entity" /> fornito. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> metodo viene utilizzato per ottenere il <xref:System.Data.Objects.DataClasses.RelationshipManager> per gli oggetti che non riconoscono la persistenza. Quando gli oggetti implementano <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> o ereditare <xref:System.Data.Objects.DataClasses.EntityObject>, il <xref:System.Data.Objects.DataClasses.RelationshipManager> avviene dal <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> proprietà.  
  
 Il <xref:System.Data.Objects.DataClasses.RelationshipManager> non può essere restituito quando l'oggetto è incluso un <xref:System.Data.EntityState.Detached> dello stato.  
  
 Chiama il <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> metodo è uguale alla chiamata al metodo il <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> metodo, ad eccezione del fatto che questo metodo restituisce `false` anziché generare un'eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>