<Type Name="DeleteDirectoryOption" FullName="Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a430e76fbe91169a5d989762b89f81ee166a65ab" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30345035" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum DeleteDirectoryOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DeleteDirectoryOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum DeleteDirectoryOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class DeleteDirectoryOption" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifica le azioni da intraprendere quando si deve eliminare una directory contenente file o directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa enumerazione viene utilizzata con la <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> metodo.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
  </Docs>
  <Members>
    <Member MemberName="DeleteAllContents">
      <MemberSignature Language="C#" Value="DeleteAllContents" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption DeleteAllContents = int32(5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents" />
      <MemberSignature Language="VB.NET" Value="DeleteAllContents" />
      <MemberSignature Language="C++ CLI" Value="DeleteAllContents" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.DeleteDirectoryOption</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Elimina il contenuto della directory insieme alla directory. Predefinita.</summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfDirectoryNonEmpty">
      <MemberSignature Language="C#" Value="ThrowIfDirectoryNonEmpty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption ThrowIfDirectoryNonEmpty = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty" />
      <MemberSignature Language="VB.NET" Value="ThrowIfDirectoryNonEmpty" />
      <MemberSignature Language="C++ CLI" Value="ThrowIfDirectoryNonEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.DeleteDirectoryOption</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Se la directory non è vuota, genera un'eccezione <see cref="T:System.IO.IOException" />. La proprietà <see langword="Data" /> dell'eccezione elenca i file che non possono essere eliminati.</summary>
      </Docs>
    </Member>
  </Members>
</Type>