<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b3f0b0d839caa85bbe26af3561725579fa017283" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36604658" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClientFormsIdentity = class&#xA;    interface IIdentity&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un'identità utente autenticata per i servizi dell'applicazione client utilizzando l'autenticazione basata su form.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La funzionalità dei servizi dell'applicazione client utilizza questa classe per rappresentare un utente autenticato. Quando si configura l'applicazione per utilizzare l'autenticazione form e servizi dell'applicazione client, è possibile autenticare un utente chiamando il `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> metodo. Dopo l'autenticazione, è possibile recuperare un riferimento all'oggetto corrente <xref:System.Web.ClientServices.ClientFormsIdentity> dell'istanza tramite il <xref:System.Security.Principal.IPrincipal.Identity%2A> proprietà del <xref:System.Security.Principal.IPrincipal> recuperati tramite il `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> proprietà. Per altre informazioni, vedere [Servizi applicazioni client](~/docs/framework/common-client-technologies/client-application-services.md).  
  
 In genere l'accesso è necessario un <xref:System.Web.ClientServices.ClientFormsIdentity> dell'oggetto come un <xref:System.Security.Principal.IIdentity> riferimento per evitare una dipendenza diretta in questa classe. È possibile determinare se un utente è autenticato controllando il <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> proprietà dell'identità. Tuttavia, l'utente può essere autenticato per Windows, ma non per i servizi delle applicazioni client. Per determinare se l'utente viene autenticato per i servizi delle applicazioni client, è inoltre necessario verificare che il <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valore della proprietà è "ClientForms".  
  
 È necessario utilizzare esplicita <xref:System.Web.ClientServices.ClientFormsIdentity> riferimento a chiamare il <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> metodo, che non è definito dal <xref:System.Security.Principal.IIdentity> interfaccia.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questa classe per riconvalidare un utente quando l'applicazione lascia lo stato offline. In questo esempio, un <xref:System.Windows.Forms.CheckBox.CheckedChanged> gestore dell'evento aggiorna lo stato offline per corrispondere al valore di casella di controllo. Se l'utente imposta l'applicazione allo stato online, il gestore dell'evento tentativi di riconvalida l'utente chiamando il <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> metodo. Tuttavia, se il server di autenticazione non è disponibile, il gestore dell'evento restituisce all'applicazione di uno stato offline.  
  
> [!NOTE]
>  Il metodo <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> viene fornito solo per praticità e poiché non restituisce un valore non può indicare se la riconvalida non è riuscita. La riconvalida può non riuscire, ad esempio, se le credenziali utente sono state modificato nel server. In questo caso, è necessario includere il codice che convalida in modo esplicito gli utenti dopo l'esito negativo di una chiamata al servizio. Per altre informazioni, vedere la sezione accesso alle impostazioni Web in [procedura dettagliata: uso dei servizi dell'applicazione Client](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientFormsIdentity : string * string * System.Web.Security.MembershipProvider * string * bool * System.Net.CookieContainer -&gt; System.Web.ClientServices.ClientFormsIdentity" Usage="new System.Web.ClientServices.ClientFormsIdentity (name, password, provider, authenticationType, isAuthenticated, authenticationCookies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'utente autenticato.</param>
        <param name="password">Password dell'utente autenticato.</param>
        <param name="provider">Provider di appartenenze utilizzato per autenticare l'utente.</param>
        <param name="authenticationType">Tipo di autenticazione utilizzata.</param>
        <param name="isAuthenticated">
          <see langword="true" /> se l'utente è stato autenticato; in caso contrario <see langword="false" />.</param>
        <param name="authenticationCookies">Cookie recuperati dal servizio di autenticazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationCookies : System.Net.CookieContainer" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di cookie recuperati dal servizio di autenticazione.</summary>
        <value>Cookie recuperati dal servizio di autenticazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è destinata all'utilizzo nel codice dell'applicazione. Non è possibile modificare in modo significativo i cookie recuperati tramite questa proprietà, e non contengono informazioni utili.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di autenticazione utilizzata per autenticare l'utente.</summary>
        <value>Tipo di autenticazione utilizzata per autenticare l'utente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere l'accesso è necessario un <xref:System.Web.ClientServices.ClientFormsIdentity> dell'oggetto come un <xref:System.Security.Principal.IIdentity> riferimento per evitare una dipendenza diretta in questa classe. È possibile determinare se un utente è autenticato controllando il <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> proprietà dell'identità. Tuttavia, l'utente può essere autenticato per Windows, ma non per i servizi delle applicazioni client. Per determinare se l'utente viene autenticato per i servizi delle applicazioni client, è inoltre necessario verificare che il <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valore della proprietà è "ClientForms". Per altre informazioni, vedere il <xref:System.Web.ClientServices.ClientFormsIdentity> Cenni preliminari sulla classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questa proprietà tramite un <xref:System.Security.Principal.IIdentity> riferimento per determinare se un utente è attualmente autenticato per i servizi delle applicazioni client. Questo esempio si presuppone che l'applicazione sia nella configurazione predefinita in cui gli utenti non devono accedere nuovamente quando scade il cookie di autenticazione. In caso contrario, il <xref:System.Net.WebException> potrebbe indicare che l'account di accesso utente è scaduto. Per altre informazioni, vedere [Procedura: Configurare i servizi delle applicazioni client](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rilascia le risorse usate da <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="clientFormsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Web.ClientServices.ClientFormsIdentity>. Il metodo <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> lascia l'oggetto <xref:System.Web.ClientServices.ClientFormsIdentity> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, è necessario rilasciare tutti i riferimenti per il <xref:System.Web.ClientServices.ClientFormsIdentity> consentire al garbage collector di recuperare la memoria che il <xref:System.Web.ClientServices.ClientFormsIdentity> occupata. Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Web.ClientServices.ClientFormsIdentity>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Web.ClientServices.ClientFormsIdentity> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="clientFormsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal metodo pubblico `Dispose()` metodo e il <xref:System.Object.Finalize%2A> metodo. `Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.  
  
 Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Web.ClientServices.ClientFormsIdentity> riferimenti. Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento a oggetti già eliminati in una chiamata precedente a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Per ulteriori informazioni <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [pulizia backup Resources](~/docs/standard/garbage-collection/unmanaged.md) non gestito e [override del metodo Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'utente è stato autenticato.</summary>
        <value>
          <see langword="true" /> se l'utente è stato autenticato; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere l'accesso è necessario un <xref:System.Web.ClientServices.ClientFormsIdentity> dell'oggetto come un <xref:System.Security.Principal.IIdentity> riferimento per evitare una dipendenza diretta in questa classe. È possibile determinare se un utente è autenticato controllando il <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> proprietà dell'identità. Tuttavia, l'utente può essere autenticato per Windows, ma non per i servizi delle applicazioni client. Per determinare se l'utente viene autenticato per i servizi delle applicazioni client, è inoltre necessario verificare che il <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valore della proprietà è "ClientForms". Per altre informazioni, vedere il <xref:System.Web.ClientServices.ClientFormsIdentity> Cenni preliminari sulla classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questa proprietà tramite un <xref:System.Security.Principal.IIdentity> riferimento per determinare se un utente è attualmente autenticato per i servizi delle applicazioni client. Questo esempio si presuppone che l'applicazione sia nella configurazione predefinita in cui gli utenti non devono accedere nuovamente quando scade il cookie di autenticazione. In caso contrario, il <xref:System.Net.WebException> potrebbe indicare che l'account di accesso utente è scaduto. Per altre informazioni, vedere [Procedura: Configurare i servizi delle applicazioni client](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'utente.</summary>
        <value>Nome dell'utente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il provider di appartenenze utilizzato per autenticare l'utente.</summary>
        <value>Provider di appartenenze utilizzato per autenticare l'utente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberSignature Language="F#" Value="member this.RevalidateUser : unit -&gt; unit" Usage="clientFormsIdentity.RevalidateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Autentica automaticamente l'utente utilizzando le credenziali memorizzate nella cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si utilizza l'autenticazione basata su form per convalidare l'utente corrente, il <xref:System.Web.ClientServices.ClientFormsIdentity> classe archivia le credenziali dell'utente, purché l'applicazione è in esecuzione. Tuttavia, l'utente viene autenticato solo fino alla scadenza del cookie di autenticazione. Dopo che il cookie scade, l'utente deve essere riconvalidato per accedere ai ruoli remoti o servizi impostazioni Web. È possibile usare il **impostazioni avanzate per i servizi** finestra di dialogo per configurare l'applicazione per la riconvalida automatica dell'utente, come descritto in [procedura: configurare i servizi dell'applicazione Client](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md). Tuttavia, se si configura l'applicazione per rispettare la scadenza del cookie, è possibile a livello di programmazione riconvalidare l'utente chiamando il <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> metodo. Questo metodo è utile anche quando si passa dalla modalità non in linea alla modalità online, perché l'applicazione sia stata chiusa mentre verso il basso offline.  
  
> [!NOTE]
>  Il metodo <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> viene fornito solo per praticità e poiché non restituisce un valore non può indicare se la riconvalida non è riuscita. La riconvalida può non riuscire, ad esempio, se le credenziali utente sono state modificato nel server. In questo caso, è necessario includere il codice che convalida in modo esplicito gli utenti dopo l'esito negativo di una chiamata al servizio. Per altre informazioni, vedere la sezione accesso alle impostazioni Web in [procedura dettagliata: uso dei servizi dell'applicazione Client](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo metodo per riconvalidare un utente quando l'applicazione lascia lo stato offline. In questo esempio, un <xref:System.Windows.Forms.CheckBox.CheckedChanged> gestore dell'evento aggiorna lo stato offline per corrispondere al valore di casella di controllo. Se l'utente imposta l'applicazione allo stato online, il gestore dell'evento tenta di convalidare nuovamente l'utente. Tuttavia, se il server di autenticazione non è disponibile, il gestore dell'evento restituisce all'applicazione di uno stato offline.  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
  </Members>
</Type>