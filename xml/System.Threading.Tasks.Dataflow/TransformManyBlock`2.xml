<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransformManyBlock`2.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b19e560d8f6638898264ad71d7e960c4710cacd1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b19e560d8f6638898264ad71d7e960c4710cacd1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2">
          <source>Specifies the type of data received and operated on by this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Specifica il tipo di dati ricevuti ed elaborati da <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2">
          <source>Specifies the type of data output by this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Specifica il tipo di output di dati generato da <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2">
          <source>Provides a dataflow block that invokes a provided <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> delegate for every data element received.</source>
          <target state="translated">Fornisce un blocco del flusso di dati che richiama un delegato fornito da <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> per ogni elemento dati ricevuto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})">
          <source>The function to invoke with each data element received.</source>
          <target state="translated">La funzione da richiamare con ogni elemento dati ricevuto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})">
          <source>All of the data from the returned <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> will be made available as output from this <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Tutti i dati dal <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> restituito verranno resi disponibili come output da questo <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> with the specified function.</source>
          <target state="translated">Inizializza un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> con la funzione specificata.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})">
          <source>The <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})">
          <source>The function to invoke with each data element received.</source>
          <target state="translated">La funzione da richiamare con ogni elemento dati ricevuto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})">
          <source>All of the data asynchronously returned in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> will be made available as output from this  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Tutti i dati restituiti in modo asincrono in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> verranno resi disponibili come output da questo elemento <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> with the specified function.</source>
          <target state="translated">Inizializza un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> con la funzione specificata.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})">
          <source>The <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The function to invoke with each data element received.</source>
          <target state="translated">La funzione da richiamare con ogni elemento dati ricevuto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>All of the data from the returned in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> will be made available as output from this  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Tutti i dati restituiti in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> verranno resi disponibili come output da questo elemento <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The options with which to configure this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Opzioni con cui configurare questa classe <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> with the specified function and <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" /&gt;</ph>.</source>
          <target state="translated">Inizializza un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> con la funzione e <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" /&gt;</ph> specificati.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The function to invoke with each data element received.</source>
          <target state="translated">La funzione da richiamare con ogni elemento dati ricevuto.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>All of the data asynchronously returned in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> will be made available as output from this  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Tutti i dati restituiti in modo asincrono in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> verranno resi disponibili come output da questo elemento <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The options with which to configure this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</source>
          <target state="translated">Opzioni con cui configurare questa classe <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> with the specified function and <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" /&gt;</ph>.</source>
          <target state="translated">Inizializza un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /&gt;</ph> con la funzione e <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" /&gt;</ph> specificati.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="transform" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete">
          <source>Signals to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> that it should not accept nor produce any more messages nor consume any more postponed messages.</source>
          <target state="translated">Segnala al <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> che non deve accettare o produrre altri messaggi e non deve utilizzare altri messaggi posticipati.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A&gt;</ph> task will enter a final state after it has processed all previously available data.</source>
          <target state="translated">Dopo aver <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A&gt;</ph> è stato chiamato su un blocco di flussi di dati, verrà completata tale blocco e il relativo <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A&gt;</ph> attività verrà entrare in uno stato finale dopo avere elaborato tutti i dati disponibili in precedenza.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A&gt;</ph> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A&gt;</ph> task may be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A&gt;</ph> verrà non bloccata in attesa del completamento a verificarsi, ma piuttosto avvierà la richiesta. per attendere il completamento si verifica quando il <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A&gt;</ph> attività possono essere utilizzate.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation and completion of the dataflow block.</source>
          <target state="translated">Ottiene un <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> che rappresenta l'operazione asincrona e il completamento del blocco di flussi di dati.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
          <source>The task.</source>
          <target state="translated">Attività.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
          <source>A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</source>
          <target state="translated">Un blocco di flussi di dati viene considerato completata quando non viene attualmente elaborato un messaggio e quando è garantito che che non elaborerà altri messaggi.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> will transition to a completed state when the associated block has completed.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> verrà transizione a uno stato completato quando il blocco associato è stata completata.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</source>
          <target state="translated">Assume il <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> stato al completamento del blocco dell'elaborazione correttamente in base del blocco di flussi di dati definito semantica.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</source>
          <target state="translated">Assume il <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> stato quando il blocco di flussi di dati è stata completata l'elaborazione in modo anomalo a causa di un'eccezione non gestita e assume il <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> stato quando il blocco di flussi di dati è stata completata l'elaborazione in modo anomalo a causa della ricezione di una richiesta di annullamento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
          <source>If the task completes in the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state, its <ph id="ph2">`Exception`</ph> property will return an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> containing the one or more exceptions that caused the block to fail.</source>
          <target state="translated">Se l'attività viene completata la <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> stato, relativi <ph id="ph2">`Exception`</ph> proprietà restituirà un <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> contenente una o più eccezioni che ha causato l'esito negativo del blocco.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount">
          <source>Gets the number of input items waiting to be processed by this block.</source>
          <target state="translated">Ottiene il numero di elementi di input in attesa di essere elaborati da questo blocco.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount">
          <source>The number of input items.</source>
          <target state="translated">Numero di elementi di input.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.InputCount%2A&gt;</ph> does not include any items currently being processed by the block or any items that have already been processed by the block.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.InputCount%2A&gt;</ph> non include tutti gli elementi attualmente in elaborazione da parte del blocco o di tutti gli elementi che sono state già elaborati dal blocco.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect this source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> a cui connettere questa origine.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> instance that configures the link.</source>
          <target state="translated">Istanza <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> che configura il collegamento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> .</source>
          <target state="translated">Collega l'elemento <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> all'elemento <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>An IDisposable that, upon calling Dispose, will unlink the source from the target.</source>
          <target state="translated">IDisposable, che quando viene chiamato Dispose, scollegherà l'origine dalla destinazione.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is null (Nothing in Visual Basic) or  <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> è Null (Nothing in Visual Basic) o <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> è Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount">
          <source>Gets the number of output items available to be received from this block.</source>
          <target state="translated">Ottiene il numero di elemento di output disponibili alla ricezione da questo blocco.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount">
          <source>The number of output items.</source>
          <target state="translated">Numero di elementi di output.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the faulting.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>che ha causato l'errore.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> to complete in a  <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state.</source>
          <target state="translated">Determina il completamento di <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> nello stato <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A&gt;</ph> task will enter a final state.</source>
          <target state="translated">Dopo aver <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A&gt;</ph> è stato chiamato su un blocco di flussi di dati, verrà completata tale blocco e il relativo <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A&gt;</ph> attività verrà immesso uno stato finale.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</source>
          <target state="translated">Generare un errore di un blocco, come con l'annullamento di un blocco, fa sì che i messaggi memorizzati nel buffer (messaggi di input non elaborati, nonché i messaggi di output unoffered) andranno persi.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="exception" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="exception" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the message being consumed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> del messaggio utilizzato.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> consuming the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> che consuma il messaggio.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was successfully consumed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio è stato consumato con esito positivo, <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to accept and consume a <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> previously offered by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Chiamato da un <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> collegato per accettare e utilizzare <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> precedentemente offerto da questo <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>The value of the consumed message.</source>
          <target state="translated">Valore del messaggio utilizzato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>This may correspond to a different <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> instance than was previously reserved and passed as the <ph id="ph2">&lt;paramref name="messageHeader" /&gt;</ph> to <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph>.</source>
          <target state="translated">Questo valore può corrispondere a un'istanza diversa di <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> in precedenza riservata e passata come <ph id="ph2">&lt;paramref name="messageHeader" /&gt;</ph> a <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>The consuming <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> must use the returned value instead of the value passed as <ph id="ph2">&lt;paramref name="messageValue" /&gt;</ph> through OfferMessage <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph></source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> di consumo deve utilizzare il valore restituito anziché il valore passato come <ph id="ph2">&lt;paramref name="messageValue" /&gt;</ph> attraverso OfferMessage <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>If the message requested is not available, the return value will be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">se il messaggio richiesto non è disponibile, il valore restituito sarà <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph>, and it must only be used to consume <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously offered by this source to the target.</source>
          <target state="translated">Solo <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> istanze collegata a questo <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> istanza può utilizzare <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph>, e deve essere utilizzata solo per <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> istanze precedentemente offerto da questa origine alla destinazione.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> non è valido.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="target" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the reserved message being released.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> del messaggio prenotato riservato che viene rilasciato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> releasing the message it previously reserved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> che genera il messaggio prenotato in precedenza.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to release a previously reserved <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Chiamato da un <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> collegato per rilasciare un <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> precedentemente riservato da questo <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph>, and it must only be used to release <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously and successfully reserved by the target.</source>
          <target state="translated">Solo <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> istanze collegata a questo <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> istanza può utilizzare <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph>, e deve essere utilizzato solo per rilasciare <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> istanze in precedenza e correttamente riservate dalla destinazione.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> non è valido.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="target" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> did not have the message reserved.</source>
          <target state="translated">Il <ph id="ph1">&lt;paramref name="target" /&gt;</ph> non dispone del messaggio riservato.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the message being reserved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> del messaggio prenotato.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> reserving the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> che riserva il messaggio.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to reserve a previously offered <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> by this  <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Chiamato da un elemento <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> collegato per riservare un <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> offerto in precedenza da questo elemento <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was successfully reserved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio è stato riservato, <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph>, and it must only be used to reserve <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously offered by this source to the target.</source>
          <target state="translated">Solo <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> istanze collegata a questo <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> istanza può utilizzare <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph>, e deve essere utilizzato solo da riservare <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> istanze precedentemente offerto da questa origine alla destinazione.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>If <ph id="ph1">`true`</ph> is returned, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> must subsequently call either <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph> for this message.</source>
          <target state="translated">Se <ph id="ph1">`true`</ph> viene restituito, il <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> successivamente necessario chiamare <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph> per questo messaggio.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</source>
          <target state="translated">In caso contrario, può comportare l'origine non sarà in grado di propagare a questo o da altre destinazioni ulteriori messaggi.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph> must not be called while the target is holding any internal locks.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph> non deve essere chiamato quando la destinazione è presente alcun blocco interno.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</source>
          <target state="translated">In questo modo verrà violare la gerarchia di blocchi necessaria per evitare deadlock in una rete del flusso di dati.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> non è valido.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;TOutput&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="target" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> instance that represents the header of the message being offered.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> che rappresenta l'intestazione del messaggio che viene offerto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The value of the message being offered.</source>
          <target state="translated">Valore del messaggio offerto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> offering the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> che offre il messaggio.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>This may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Può assumere il valore <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the target must call <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph> synchronously during the call to <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, prior to returning <ph id="ph4">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>, in order to consume the message.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la destinazione deve chiamare <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph> in modo sincrono durante la chiamata a <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, prima di restituire <ph id="ph4">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> per eseguire il messaggio.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>Offers a message to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, giving the target the opportunity to consume or postpone the message.</source>
          <target state="translated">Offre un messaggio al <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> e fornisce alla destinazione la possibilità di utilizzare o posticipare il messaggio.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The status of the offered message.</source>
          <target state="translated">Stato del messaggio offerto.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was accepted by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> is returned, and the source should no longer use the offered message, as it is now owned by the target.</source>
          <target state="translated">Se il messaggio è stato accettato dalla destinazione, viene restituito <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> e l'origine non deve più utilizzare il messaggio inviato, in quanto è ora di proprietà della destinazione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was postponed by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</source>
          <target state="translated">Se il messaggio è stato posticipato dal database di destinazione, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph> viene restituito come notifica relativa alla destinazione che potrebbe successivamente tentare di utilizzare o prenotare il messaggio. Allo stesso tempo, l'origine ancora possiede ancora il messaggio e potrebbe offrirlo ad altri blocchi.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target would have otherwise postponed but source was <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is instead returned.</source>
          <target state="translated">Se la destinazione avesse posticipato diversamente l'elemento ma l'origine era <ph id="ph1">&lt;see langword="null" /&gt;</ph>, viene restituito <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph> is returned.</source>
          <target state="translated">Se la destinazione ha provato ad accettare il messaggio ma non ci è riuscito a causa della consegna di origine del messaggio a un'altra destinazione o semplicemente perché è stato eliminato, viene restituito <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is returned.</source>
          <target state="translated">Se il database di destinazione ha scelto di non accettare il messaggio, viene restituito <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message and will never accept another message from this source, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph> is returned.</source>
          <target state="translated">Se la destinazione ha scelto di non accettare il messaggio e non accetterà un altro messaggio da questa origine, viene restituito <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> non è valido.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph> may only be true if provided with a non-null <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph> può essere true se viene fornito con un <ph id="ph2">&lt;paramref name="source" /&gt;</ph> parametro diverso da null.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString">
          <source>Returns a string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Restituisce una stringa che rappresenta il nome formattato di questa istanza <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString">
          <source>A string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Stringa che rappresenta il nome formattato di questa istanza di <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString">
          <source>Inherited from  <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</source>
          <target state="translated">Ereditato da <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString">
          <source>Uses the  <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</source>
          <target state="translated">Usa il <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> opzione.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
          <source>The predicate value must successfully pass in order for it to be received.</source>
          <target state="translated">Il valore del predicato deve passare in modo corretto in modo da poter essere ricevuto.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
          <source><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, in which case all items will pass.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nel qual caso tutti gli elementi passeranno.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
          <source>The item received from the source.</source>
          <target state="translated">Elemento ricevuto dall'origine.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
          <source>Attempts to synchronously receive an available output item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Tenta di ricevere in modo sincrono un elemento di output disponibile da <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un elemento può essere ricevuto; altrimenti, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">Questo metodo non blocca in attesa per l'origine fornire un elemento.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
          <source>It will return after checking for an element, whether or not an element was available.</source>
          <target state="translated">Dopo avere selezionato un elemento, verrà restituito un elemento è disponibile o meno.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
          <source>The items received from the source.</source>
          <target state="translated">Elementi ricevuto dall'origine.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
          <source>Attempts to synchronously receive all available items from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Tenta di ricevere in modo sincrono tutti gli elementi disponibili dal <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more items could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se uno o più elementi possono essere ricevuti; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">Questo metodo non blocca in attesa per l'origine fornire un elemento.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
          <source>It will return after checking for elements, whether or not an element was available.</source>
          <target state="translated">Dopo aver controllato per gli elementi, verrà restituito un elemento è disponibile o meno.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>