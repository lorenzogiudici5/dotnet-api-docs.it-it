<Type Name="DataflowBlock" FullName="System.Threading.Tasks.Dataflow.DataflowBlock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="619c37dae0d34137464488ce19920259b14fa058" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39758898" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataflowBlock extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.DataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Module DataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataflowBlock abstract sealed" />
  <TypeSignature Language="F#" Value="type DataflowBlock = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4ca15-101">Fornisce un set di metodi statici (Shared in Visual Basic) per l'utilizzo di blocchi del flusso di dati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ca15-101">Provides a set of static (Shared in Visual Basic) methods for working with dataflow blocks.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsObservable&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IObservable&lt;TOutput&gt; AsObservable&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObservable`1&lt;!!TOutput&gt; AsObservable&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObservable(Of TOutput) (source As ISourceBlock(Of TOutput)) As IObservable(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObservable&lt;TOutput&gt; ^ AsObservable(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsObservable : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; IObservable&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObservable&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-102">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-102">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-103">Origine di cui eseguire il wrapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-103">The source to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-104">Crea una nuova astrazione <see cref="T:System.IObservable`1" /> rispetto a <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-104">Creates a new <see cref="T:System.IObservable`1" /> abstraction over the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-105">
            <see cref="T:System.IObservable`1" /> che consente agli osservatori di essere sottoscritti all'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-105">An <see cref="T:System.IObservable`1" /> that enables observers to be subscribed to the source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-106">L'elemento <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-106">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsObserver&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static IObserver&lt;TInput&gt; AsObserver&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObserver`1&lt;!!TInput&gt; AsObserver&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObserver(Of TInput) (target As ITargetBlock(Of TInput)) As IObserver(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObserver&lt;TInput&gt; ^ AsObserver(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="static member AsObserver : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; -&gt; IObserver&lt;'Input&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObserver&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="4ca15-107">Specifica il tipo di input accettato dal blocco di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-107">Specifies the type of input accepted by the target block.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="4ca15-108">Destinazione su cui eseguire il wrapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-108">The target to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-109">Crea una nuova astrazione <see cref="T:System.IObserver`1" /> rispetto a <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-109">Creates a new <see cref="T:System.IObserver`1" /> abstraction over the  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-110">Un osservatore che esegue l'incapsulamento del blocco di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-110">An observer that wraps the target block.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="4ca15-111">Specifica il tipo di dati contenuti nella prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-111">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="4ca15-112">Specifica il tipo di dati contenuti nella seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-112">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="4ca15-113">Prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-113">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="4ca15-114">Il gestore da eseguire sui dati dalla prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-114">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="4ca15-115">Seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-115">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="4ca15-116">Il gestore da eseguire sui dati dalla seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-116">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-117">Controlla due origini del flusso di dati, richiamando il gestore fornito per qualsiasi origine che per prima rende disponibili i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-117">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-118">Elemento <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta la scelta asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-118">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="4ca15-119">Se entrambe le origini vengono completate prima del completamento della scelta, l'attivitÃ  risultante verrÃ  annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-119">If both sources are completed prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="4ca15-120">Quando una delle origini dispone di dati disponibili e li propaga correttamente, l'attivitÃ  risultante verrÃ  completata al momento del completamento del gestore, se questo genera un'eccezione, l'attivitÃ  termina nello stato di <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterrÃ  un'eccezione non gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-120">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="4ca15-121">In caso contrario, l'attivitÃ  termina con la proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> impostata su 0 o 1 per rappresentare la prima o la seconda origine, rispettivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-121">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span>
          </span>
          <span data-ttu-id="4ca15-122">Questo metodo utilizzerÃ  sempre solo un elemento da una delle due origini dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-122">This method will only consume an element from one of the two data sources, never both.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-123">L'elemento <paramref name="source1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-123">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-124">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-124">-or-</span>
          </span>
          <span data-ttu-id="4ca15-125">L'elemento <paramref name="action1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-125">The  <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-126">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-126">-or-</span>
          </span>
          <span data-ttu-id="4ca15-127">L'elemento <paramref name="source2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-127">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-128">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-128">-or-</span>
          </span>
          <span data-ttu-id="4ca15-129">L'elemento <paramref name="action2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-129">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, dataflowBlockOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="4ca15-130">Specifica il tipo di dati contenuti nella prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-130">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="4ca15-131">Specifica il tipo di dati contenuti nella seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-131">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="4ca15-132">Prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-132">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="4ca15-133">Il gestore da eseguire sui dati dalla prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-133">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="4ca15-134">Seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-134">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="4ca15-135">Il gestore da eseguire sui dati dalla seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-135">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="4ca15-136">Opzioni con cui configurare questa scelta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-136">The options with which to configure this choice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-137">Controlla due origini del flusso di dati, richiamando il gestore fornito per qualsiasi origine che per prima rende disponibili i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-137">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-138">Elemento <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta la scelta asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-138">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="4ca15-139">Se entrambe le origini vengono completate prima del completamento della scelta, o se <see cref="T:System.Threading.CancellationToken" /> fornito come parte di <paramref name="dataflowBlockOptions" /> viene annullato prima del completamento della scelta, l'attivitÃ  risultante verrÃ  annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-139">If both sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="4ca15-140">Quando una delle origini dispone di dati disponibili e li propaga correttamente, l'attivitÃ  risultante verrÃ  completata al momento del completamento del gestore, se questo genera un'eccezione, l'attivitÃ  termina nello stato di <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterrÃ  un'eccezione non gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-140">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="4ca15-141">In caso contrario, l'attivitÃ  termina con la proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> impostata su 0 o 1 per rappresentare la prima o la seconda origine, rispettivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-141">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-142">L'elemento <paramref name="source1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-142">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-143">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-143">-or-</span>
          </span>
          <span data-ttu-id="4ca15-144">L'elemento <paramref name="action1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-144">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-145">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-145">-or-</span>
          </span>
          <span data-ttu-id="4ca15-146">L'elemento <paramref name="source2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-146">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-147">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-147">-or-</span>
          </span>
          <span data-ttu-id="4ca15-148">L'elemento <paramref name="action2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-148">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-149">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-149">-or-</span>
          </span>
          <span data-ttu-id="4ca15-150">L'elemento <paramref name="dataflowBlockOptions" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-150">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2, T3) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2), source3 As ISourceBlock(Of T3), action3 As Action(Of T3)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T3&gt; * Action&lt;'T3&gt; -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, source3, action3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="4ca15-151">Specifica il tipo di dati contenuti nella prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-151">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="4ca15-152">Specifica il tipo di dati contenuti nella seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-152">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <typeparam name="T3">
          <span data-ttu-id="4ca15-153">Specifica il tipo di dati contenuti nella terza origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-153">Specifies type of data contained in the third source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="4ca15-154">Prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-154">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="4ca15-155">Il gestore da eseguire sui dati dalla prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-155">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="4ca15-156">Seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-156">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="4ca15-157">Il gestore da eseguire sui dati dalla seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-157">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="source3">
          <span data-ttu-id="4ca15-158">Terza origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-158">The third source.</span>
          </span>
        </param>
        <param name="action3">
          <span data-ttu-id="4ca15-159">Il gestore da eseguire sui dati dalla terza origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-159">The handler to execute on data from the third source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-160">Controlla tre origini del flusso di dati, richiamando il gestore fornito per qualsiasi origine che per prima rende disponibili i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-160">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-161">Elemento <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta la scelta asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-161">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="4ca15-162">Se tutte le origini vengono completate prima del completamento della scelta, l'attivitÃ  risultante verrÃ  annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-162">If all sources are completed prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="4ca15-163">Quando una delle origini dispone di dati disponibili e li propaga correttamente, l'attivitÃ  risultante verrÃ  completata al momento del completamento del gestore, se questo genera un'eccezione, l'attivitÃ  termina nello stato di <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterrÃ  un'eccezione non gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-163">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="4ca15-164">In caso contrario, l'attivitÃ  termina con la proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> impostata sull'indice in base 0 dell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-164">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span>
          </span>
          <span data-ttu-id="4ca15-165">Questo metodo utilizzerÃ  sempre solo un elemento da una delle origini dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-165">This method will only consume an element from one of the data sources, never more than one.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-166">L'elemento <paramref name="source1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-166">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-167">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-167">-or-</span>
          </span>
          <span data-ttu-id="4ca15-168">L'elemento <paramref name="action1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-168">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-169">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-169">-or-</span>
          </span>
          <span data-ttu-id="4ca15-170">L'elemento <paramref name="source2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-170">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-171">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-171">-or-</span>
          </span>
          <span data-ttu-id="4ca15-172">L'elemento <paramref name="action2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-172">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-173">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-173">-or-</span>
          </span>
          <span data-ttu-id="4ca15-174">L'elemento <paramref name="source3" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-174">The <paramref name="source3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-175">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-175">-or-</span>
          </span>
          <span data-ttu-id="4ca15-176">L'elemento <paramref name="action3" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-176">The <paramref name="action3" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T3&gt; * Action&lt;'T3&gt; * System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, source3, action3, dataflowBlockOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="4ca15-177">Specifica il tipo di dati contenuti nella prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-177">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="4ca15-178">Specifica il tipo di dati contenuti nella seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-178">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <typeparam name="T3">
          <span data-ttu-id="4ca15-179">Specifica il tipo di dati contenuti nella terza origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-179">Specifies type of data contained in the third source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="4ca15-180">Prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-180">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="4ca15-181">Il gestore da eseguire sui dati dalla prima origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-181">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="4ca15-182">Seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-182">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="4ca15-183">Il gestore da eseguire sui dati dalla seconda origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-183">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="source3">
          <span data-ttu-id="4ca15-184">Terza origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-184">The third source.</span>
          </span>
        </param>
        <param name="action3">
          <span data-ttu-id="4ca15-185">Il gestore da eseguire sui dati dalla terza origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-185">The handler to execute on data from the third source.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="4ca15-186">Opzioni con cui configurare questa scelta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-186">The options with which to configure this choice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-187">Controlla tre origini del flusso di dati, richiamando il gestore fornito per qualsiasi origine che per prima rende disponibili i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-187">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-188">Elemento <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta la scelta asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-188">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="4ca15-189">Se tutte le origini vengono completate prima del completamento della scelta, o se <see cref="T:System.Threading.CancellationToken" /> fornito come parte di <paramref name="dataflowBlockOptions" /> viene annullato prima del completamento della scelta, l'attivitÃ  risultante verrÃ  annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-189">If all sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="4ca15-190">Quando una delle origini dispone di dati disponibili e li propaga correttamente, l'attivitÃ  risultante verrÃ  completata al momento del completamento del gestore, se questo genera un'eccezione, l'attivitÃ  termina nello stato di <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterrÃ  un'eccezione non gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-190">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="4ca15-191">In caso contrario, l'attivitÃ  termina con la proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> impostata sull'indice in base 0 dell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-191">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span>
          </span>
          <span data-ttu-id="4ca15-192">Questo metodo utilizzerÃ  sempre solo un elemento da una delle origini dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-192">This method will only consume an element from one of the data sources, never more than one.</span>
          </span>
          <span data-ttu-id="4ca15-193">Se viene richiesto l'annullamento dopo che un elemento Ã¨ stato ricevuto, la richiesta di annullamento viene ignorata e il gestore puÃ² procedere con l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-193">If cancellation is requested after an element has been received, the cancellation request will be ignored, and the relevant handler will be allowed to execute.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-194">L'elemento <paramref name="source1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-194">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-195">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-195">-or-</span>
          </span>
          <span data-ttu-id="4ca15-196">L'elemento <paramref name="action1" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-196">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-197">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-197">-or-</span>
          </span>
          <span data-ttu-id="4ca15-198">L'elemento <paramref name="source2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-198">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-199">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-199">-or-</span>
          </span>
          <span data-ttu-id="4ca15-200">L'elemento <paramref name="action2" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-200">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-201">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-201">-or-</span>
          </span>
          <span data-ttu-id="4ca15-202">L'elemento <paramref name="source3" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-202">The <paramref name="source3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-203">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-203">-or-</span>
          </span>
          <span data-ttu-id="4ca15-204">L'elemento <paramref name="action3" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-204">The <paramref name="action3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-205">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-205">-or-</span>
          </span>
          <span data-ttu-id="4ca15-206">L'elemento <paramref name="dataflowBlockOptions" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-206">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encapsulate&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt; Encapsulate&lt;TInput,TOutput&gt; (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!!TInput, !!TOutput&gt; Encapsulate&lt;TInput, TOutput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encapsulate(Of TInput, TOutput) (target As ITargetBlock(Of TInput), source As ISourceBlock(Of TOutput)) As IPropagatorBlock(Of TInput, TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt; ^ Encapsulate(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Encapsulate : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;'Input, 'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate (target, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="4ca15-207">Specifica il tipo di input previsto dal blocco di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-207">Specifies the type of input expected by the target.</span>
          </span>
        </typeparam>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-208">Specifica il tipo di output prodotto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-208">Specifies the type of output produced by the source.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="4ca15-209">Destinazione da incapsulare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-209">The target to encapsulate.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="4ca15-210">Origine da incapsulare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-210">The source to encapsulate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-211">Incapsula una destinazione e un'origine in un unico propagatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-211">Encapsulates a target and a source into a single propagator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-212">Destinazione e origine incapsulate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-212">The encapsulated target and source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca15-213">Il <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> metodo richiede due blocchi esistenti: un blocco di destinazione (un'istanza di una classe che implementa <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) e un blocco di origine (un'istanza di una classe che implementa <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>).</span><span class="sxs-lookup"><span data-stu-id="4ca15-213">The <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> method requires two existing blocks: a target block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) and a source block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>).</span></span> <span data-ttu-id="4ca15-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> Crea una nuova istanza della classe interna che si connette il <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> ai membri di interfaccia il `target` parametro e il <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> ai membri di interfaccia di `source` parametro.</span><span class="sxs-lookup"><span data-stu-id="4ca15-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> creates a new instance of an internal class that connects the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> interface members to the `target` parameter and the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> interface members to the `source` parameter.</span></span>  <span data-ttu-id="4ca15-215">Entrambe <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> e <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> derivano da <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span><span class="sxs-lookup"><span data-stu-id="4ca15-215">Both <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> and <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> derive from <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span></span> <span data-ttu-id="4ca15-216">Completamento dei blocchi Ã¨ passato in modo esplicito dalle origini alle destinazioni.</span><span class="sxs-lookup"><span data-stu-id="4ca15-216">Block completion is explicitly passed from sources to targets.</span></span> <span data-ttu-id="4ca15-217">Pertanto, il <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> e <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> metodi sono connesso alla destinazione durante il <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> proprietÃ  Ã¨ connesso all'origine.</span><span class="sxs-lookup"><span data-stu-id="4ca15-217">Therefore, the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> and <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> methods are connected to the target while the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> property is connected to the source.</span></span>  <span data-ttu-id="4ca15-218">Ã necessario assicurarsi che quando la destinazione metÃ  viene completato, l'origine della metÃ  Ottiene completata in modo piÃ¹ appropriato. Per esempio:</span><span class="sxs-lookup"><span data-stu-id="4ca15-218">You must ensure that when the target half  completes, the source half gets completed in the most appropriate manner; for example:</span></span>  
  
 `target.Completion.ContinueWith(completion => source.Complete());`  
  
 <span data-ttu-id="4ca15-219">In alternativa, se si desidera propagare il tipo di completamento, Ã¨ possibile usare questo codice piÃ¹ sofisticato:</span><span class="sxs-lookup"><span data-stu-id="4ca15-219">Or, if you want to propagate the completion type, you can use this more sophisticated code:</span></span>  
  
```  
target.Completion.ContinueWith(completion => { if (completion.IsFaulted)    
  
((IDataflowBlock)batchBlock).Fault(completion.Exception);   
else   
batchBlock.Complete();   
});  
  
```  
  
 <span data-ttu-id="4ca15-220">Ã necessario fornire anche in modo esplicito la propagazione del messaggio dalla destinazione all'origine.</span><span class="sxs-lookup"><span data-stu-id="4ca15-220">You must also explicitly provide the message propagation from target to source.</span></span> <span data-ttu-id="4ca15-221">Il vantaggio di questa connessione esplicita Ã¨ che offre la libertÃ  di eseguire l'elaborazione senza vincolato tra i due blocchi incapsulati.</span><span class="sxs-lookup"><span data-stu-id="4ca15-221">The benefit of this explicit connection is that it gives you the freedom to perform any unconstrained processing between the two encapsulated blocks.</span></span> <span data-ttu-id="4ca15-222">Ã possibile eseguire che codifica l'elaborazione necessaria in delegati dei blocchi (se i blocchi accettano delegati) oppure incorporando una rete secondaria dei blocchi tra di essi.</span><span class="sxs-lookup"><span data-stu-id="4ca15-222">You may do that either by encoding the necessary processing into the blocks' delegates (if the blocks take delegates), or by embedding a sub-network of blocks between them.</span></span> <span data-ttu-id="4ca15-223">Il modo piÃ¹ semplice consiste nell'usare un blocco che accetta i delegati; ad esempio, usare <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (se applicabile), o un blocco personalizzato.</span><span class="sxs-lookup"><span data-stu-id="4ca15-223">The easier way is to use a block that takes delegates; for example, use <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (if applicable), or a custom block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-224">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-224">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-225">Origine da cui effettuare il collegamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-225">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="4ca15-226">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> nel quale connettere l'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-226">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-227">Collega l'elemento <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> all'elemento <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-227">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-228">
            <see cref="T:System.IDisposable" /> che, quando viene chiamato <see langword="Dispose" />, scollegherÃ  l'origine dalla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-228">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-229">L'elemento <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-229">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-230">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-230">-or-</span>
          </span>
          <span data-ttu-id="4ca15-231">L'elemento <paramref name="target" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-231">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * Predicate&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-232">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-232">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-233">Origine da cui effettuare il collegamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-233">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="4ca15-234">Elemento <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> al quale connettere l'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-234">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="4ca15-235">Il filtro che un messaggio deve passare per propagarlo dall'origine alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-235">The filter a message must pass in order for it to propagate from the source to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-236">Collega l'elemento <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> all'elemento <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> specificato usando il filtro impostato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-236">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-237">
            <see cref="T:System.IDisposable" /> che, quando viene chiamato <see langword="Dispose" />, scollegherÃ  l'origine dalla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-237">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-238">L'elemento <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-238">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-239">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-239">-or-</span>
          </span>
          <span data-ttu-id="4ca15-240">L'elemento <paramref name="target" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-240">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4ca15-241">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-241">-or-</span>
          </span>
          <span data-ttu-id="4ca15-242">L'elemento <paramref name="predicate" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-242">The <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions, predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions * Predicate&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target, linkOptions, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-243">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-243">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-244">Origine da cui effettuare il collegamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-244">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="4ca15-245">Elemento <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> al quale connettere l'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-245">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="4ca15-246">Uno dei valori di enumerazione che specifica come configurare un collegamento tra blocchi di flusso di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-246">One of the enumeration values that specifies how to configure a link between dataflow blocks.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="4ca15-247">Il filtro che un messaggio deve passare per propagarlo dall'origine alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-247">The filter a message must pass in order for it to propagate from the source to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-248">Collega l'elemento <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> all'elemento <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> specificato usando il filtro impostato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-248">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-249">
            <see cref="T:System.IDisposable" /> che, quando viene chiamato <see langword="Dispose" />, scollegherÃ  l'origine dalla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-249">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-250">
            <paramref name="source" /> Ã¨ null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-250">The  <paramref name="source" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="4ca15-251">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-251">-or-</span>
          </span>
          <span data-ttu-id="4ca15-252">
            <paramref name="target" /> Ã¨ null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-252">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="4ca15-253">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-253">-or-</span>
          </span>
          <span data-ttu-id="4ca15-254">
            <paramref name="linkOptions" /> Ã¨ null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-254">The  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="4ca15-255">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-255">-or-</span>
          </span>
          <span data-ttu-id="4ca15-256">
            <paramref name="predicate" /> Ã¨ null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-256">The  <paramref name="predicate" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NullTarget&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; NullTarget&lt;TInput&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; NullTarget&lt;TInput&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1" />
      <MemberSignature Language="VB.NET" Value="Public Function NullTarget(Of TInput) () As ITargetBlock(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA; static System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ NullTarget();" />
      <MemberSignature Language="F#" Value="static member NullTarget : unit -&gt; System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="4ca15-257">Tipo di messaggi che questo blocco puÃ² accettare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-257">The type of the messages this block can accept.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="4ca15-258">Ottiene un blocco di destinazione che accetta in modo sincrono tutti i messaggi offerti e li rilascia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-258">Gets a target block that synchronously accepts all messages offered to it and drops them.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-259">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> che accetta e successivamente rilascia tutti i messaggi presenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-259">A <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> that accepts and subsequently drops all offered messages.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OutputAvailableAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member OutputAvailableAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-260">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-260">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-261">Origine da monitorare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-261">The source to monitor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-262">Fornisce un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che monitora in modo asincrono l'origine per l'output disponibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-262">Provides a <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-263">
            <see cref="T:System.Threading.Tasks.Task`1" /> che informa se e quando Ã¨ disponibile altro output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-263">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span>
          </span>
          <span data-ttu-id="4ca15-264">Se al completamento dell'attivitÃ  la relativa proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> Ã¨ <see langword="true" />, Ã¨ disponibile piÃ¹ output nell'origine (anche se un altro utente dell'origine puÃ² recuperare i dati).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-264">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span>
          </span>
          <span data-ttu-id="4ca15-265">Se restituisce <see langword="false" />, non Ã¨ e non sarÃ  mai disponibile piÃ¹ output, in quanto l'attivitÃ  sull'origine Ã¨ stata completata prima che l'output fosse disponibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-265">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member OutputAvailableAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-266">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-266">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-267">Origine da monitorare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-267">The source to monitor.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4ca15-268">Il token di annullamento con cui annullare l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-268">The cancellation token with which to cancel the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-269">Specifica un elemento <see cref="T:System.Threading.Tasks.Task`1" /> che monitora in modo asincrono l'origine per l'output disponibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-269">Provides a  <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-270">
            <see cref="T:System.Threading.Tasks.Task`1" /> che informa se e quando Ã¨ disponibile altro output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-270">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span>
          </span>
          <span data-ttu-id="4ca15-271">Se al completamento dell'attivitÃ  la relativa proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> Ã¨ <see langword="true" />, Ã¨ disponibile piÃ¹ output nell'origine (anche se un altro utente dell'origine puÃ² recuperare i dati).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-271">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span>
          </span>
          <span data-ttu-id="4ca15-272">Se restituisce <see langword="false" />, non Ã¨ e non sarÃ  mai disponibile piÃ¹ output, in quanto l'attivitÃ  sull'origine Ã¨ stata completata prima che l'output fosse disponibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-272">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static bool Post&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Post&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Post(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Post(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberSignature Language="F#" Value="static member Post : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input -&gt; bool" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Post (target, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="4ca15-273">Specifica il tipo di dati accettati dal blocco di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-273">Specifies the type of data accepted by the target block.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="4ca15-274">Blocco di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-274">The target block.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="4ca15-275">L'elemento che viene offerto alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-275">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-276">Inserisce un elemento nell'oggetto <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-276">Posts an item to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-277">
            <see langword="true" /> se l'elemento Ã¨ stato accettato dal blocco di destinazione; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-277">
              <see langword="true" /> if the item was accepted by the target block; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca15-278">Questo metodo restituirÃ  una volta che il blocco di destinazione ha deciso di accettare o rifiutare l'elemento, ma, a meno che in caso contrario, dipende dalla semantica speciale del blocco di destinazione, non attende per l'elemento effettivamente da elaborare.</span><span class="sxs-lookup"><span data-stu-id="4ca15-278">This method will return once the target block has decided to accept or decline the item, but unless otherwise dictated by special semantics of the target block, it does not wait for the item to actually be processed.</span></span> <span data-ttu-id="4ca15-279">Ad esempio, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> verrÃ  restituito da <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> , non appena viene memorizzato l'elemento inserito nella coda di input).</span><span class="sxs-lookup"><span data-stu-id="4ca15-279">For example, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> will return from <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> as soon as it has stored the posted item into its input queue).</span></span> <span data-ttu-id="4ca15-280">Dal punto di vista dell'elaborazione del blocco, `Post` Ã¨ asincrona.</span><span class="sxs-lookup"><span data-stu-id="4ca15-280">From the perspective of the block's processing, `Post` is asynchronous.</span></span> <span data-ttu-id="4ca15-281">Tale supporto posticipare i messaggi offerti blocchi di destinazione oppure, per i blocchi che possono eseguire un'elaborazione piÃ¹ complessa nel loro `Post` implementazione, Ã¨ consigliabile usare <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, che verrÃ  restituito immediatamente e si consentirÃ  alla destinazione di posticipare il messaggio inviato e il relativo utilizzo in un secondo momento dopo `SendAsync` restituisce.</span><span class="sxs-lookup"><span data-stu-id="4ca15-281">For target blocks that support postponing offered messages, or for blocks that may do more processing in their `Post` implementation, consider using <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, which will return immediately and will enable the target to postpone the posted message and later consume it after `SendAsync` returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput)) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-282">Tipo di dati contenuto nellâorigine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-282">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-283">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-283">The source from which to receive the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-284">Riceve un valore in modo sincrono da un'origine specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-284">Synchronously receives a value from a specified source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-285">Valore ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-285">The received value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-286">
            <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-286">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4ca15-287">Nessun elemento puÃ² essere ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-287">No item could be received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-288">Tipo di dati contenuto nellâorigine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-288">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-289">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-289">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4ca15-290">Token da utilizzare per annullare l'operazione di ricezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-290">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-291">Riceve in modo sincrono un valore da un'origine specificata e fornisce un token per annullare l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-291">Synchronously receives a value from a specified source and provides a token to cancel the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-292">Valore ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-292">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca15-293">Se l'origine Ã¨ stato offerto un elemento che Ã¨ stato ricevuto da questa operazione, tale elemento viene restituito anche se si verifica una richiesta di annullamento simultanee.</span><span class="sxs-lookup"><span data-stu-id="4ca15-293">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-294">
            <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-294">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4ca15-295">Nessun elemento puÃ² essere ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-295">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="4ca15-296">L'operazione Ã¨ stata annullata prima che un elemento sia stato ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-296">The operation was canceled before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-297">Tipo di dati contenuto nellâorigine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-297">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-298">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-298">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4ca15-299">Intervallo di tempo massimo, in millisecondi, in cui attendere il completamento dell'operazione sincrona, o un intervallo che rappresenta -1 millisecondi di attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-299">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-300">Riceve in modo sincrono un valore da un'origine specificata, osservando un periodo di timeout facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-300">Synchronously receives a value from a specified source, observing an optional time-out period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-301">Valore ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-301">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca15-302">Se l'origine Ã¨ stato offerto un elemento che Ã¨ stato ricevuto da questa operazione, tale elemento viene restituito anche se si verifica un timeout simultaneo.</span><span class="sxs-lookup"><span data-stu-id="4ca15-302">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4ca15-303">
            <paramref name="timeout" /> Ã¨ un numero negativo diverso da -1 millisecondi che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-303">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="4ca15-304">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-304">-or-</span>
          </span>
          <span data-ttu-id="4ca15-305">
            <paramref name="timeout" /> Ã¨ maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-305">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-306">
            <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-306">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4ca15-307">Nessun elemento puÃ² essere ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-307">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="4ca15-308">Il timeout specificato Ã¨ scaduto prima che un elemento venga ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-308">The specified time-out expired before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan * System.Threading.CancellationToken -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-309">Tipo di dati contenuto nellâorigine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-309">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-310">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-310">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4ca15-311">Intervallo di tempo massimo, in millisecondi, in cui attendere il completamento dell'operazione sincrona, o un intervallo che rappresenta -1 millisecondi di attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-311">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4ca15-312">Token da utilizzare per annullare l'operazione di ricezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-312">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-313">Riceve in modo sincrono un valore da un'origine specificata, fornendo un token per annullare l'operazione e osservando un intervallo di timeout facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-313">Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-314">Valore ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-314">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca15-315">Se l'origine Ã¨ stato offerto un valore dell'elemento che Ã¨ stato ricevuto da questa operazione, tale valore viene restituito anche se si verifica un timeout o l'annullamento di richieste simultanee.</span><span class="sxs-lookup"><span data-stu-id="4ca15-315">If the source successfully offered an item value that was received by this operation, that value is returned even if a concurrent time-out or cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-316">L'elemento <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-316">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4ca15-317">
            <paramref name="timeout" /> Ã¨ un numero negativo diverso da -1 millisecondi che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-317">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="4ca15-318">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-318">-or-</span>
          </span>
          <span data-ttu-id="4ca15-319">
            <paramref name="timeout" /> Ã¨ maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-319">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4ca15-320">Nessun elemento puÃ² essere ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-320">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="4ca15-321">Il timeout specificato Ã¨ scaduto prima che un elemento venga ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-321">The specified time-out expired before an item was received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="4ca15-322">L'operazione Ã¨ stata annullata prima che un elemento sia stato ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-322">The operation was canceled before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-323">Tipo di dati contenuto nellâorigine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-323">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-324">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-324">The source from which to receive the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-325">Riceve un valore in modo asincrono da un'origine specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-325">Asynchronously receives a value from a specified source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-326">AttivitÃ  che rappresenta l'operazione di ricezione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-326">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="4ca15-327">Quando il valore di un elemento viene ricevuto correttamente dal database di origine, l'attivitÃ  restituita viene completata e la relativa <see cref="P:System.Threading.Tasks.Task`1.Result" /> restituisce il valore ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-327">When an item value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the received value.</span>
          </span>
          <span data-ttu-id="4ca15-328">Se un valore di elemento non puÃ² essere recuperato perchÃ© l'origine Ã¨ vuota o completata, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> nell'attivitÃ  restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-328">If an item value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-329">
            <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-329">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-330">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-330">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-331">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-331">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4ca15-332">Token da utilizzare per annullare l'operazione di ricezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-332">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-333">Riceve in modo asincrono un valore da un'origine specificata e fornisce un token per annullare l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-333">Asynchronously receives a value from a specified source and provides a token to cancel the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-334">AttivitÃ  che rappresenta l'operazione di ricezione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-334">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="4ca15-335">Quando un valore viene ricevuto correttamente dal database di origine, l'attivitÃ  restituita viene completata e la relativa <see cref="P:System.Threading.Tasks.Task`1.Result" /> restituisce il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-335">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="4ca15-336">Se un valore non puÃ² essere recuperato perchÃ© Ã¨ stato richiesto l'annullamento, l'attivitÃ  restituita viene annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-336">If a value cannot be retrieved because cancellation was requested, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="4ca15-337">Se il valore non puÃ² essere recuperato perchÃ© l'origine Ã¨ vuota e completata, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> nell'attivitÃ  restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-337">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-338">
            <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-338">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-339">Tipo di dati contenuto nellâorigine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-339">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-340">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-340">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4ca15-341">Intervallo di tempo massimo, in millisecondi, in cui attendere il completamento dell'operazione sincrona, o un intervallo che rappresenta -1 millisecondi di attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-341">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-342">Riceve in modo asincrono un valore da un'origine specificata, osservando un periodo di timeout facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-342">Asynchronously receives a value from a specified source, observing an optional time-out period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-343">AttivitÃ  che rappresenta l'operazione di ricezione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-343">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="4ca15-344">Quando un valore viene ricevuto correttamente dal database di origine, l'attivitÃ  restituita viene completata e la relativa <see cref="P:System.Threading.Tasks.Task`1.Result" /> restituisce il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-344">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="4ca15-345">Se un valore non puÃ² essere recuperato perchÃ© il timeout Ã¨ scaduto, l'attivitÃ  restituita viene annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-345">If a value cannot be retrieved because the time-out expired, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="4ca15-346">Se il valore non puÃ² essere recuperato perchÃ© l'origine Ã¨ vuota e completata, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> nell'attivitÃ  restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-346">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-347">
            <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-347">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4ca15-348">
            <paramref name="timeout" /> Ã¨ un numero negativo diverso da -1 millisecondi che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-348">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="4ca15-349">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-349">-or-</span>
          </span>
          <span data-ttu-id="4ca15-350">
            <paramref name="timeout" /> Ã¨ maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-350">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-351">Tipo di dati contenuto nellâorigine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-351">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-352">Origine dalla quale ricevere il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-352">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4ca15-353">Intervallo di tempo massimo, in millisecondi, in cui attendere il completamento dell'operazione sincrona, o un intervallo che rappresenta -1 millisecondi di attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-353">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4ca15-354">Token che puÃ² essere utilizzato per annullare l'operazione di ricezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-354">The token which may be used to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-355">Riceve in modo asincrono un valore da un'origine specificata, fornendo un token per annullare l'operazione e osservando un intervallo di timeout facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-355">Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-356">AttivitÃ  che rappresenta l'operazione di ricezione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-356">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="4ca15-357">Quando un valore viene ricevuto correttamente dal database di origine, l'attivitÃ  restituita viene completata e la relativa <see cref="P:System.Threading.Tasks.Task`1.Result" /> restituisce il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-357">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="4ca15-358">Se un valore non puÃ² essere recuperato perchÃ© Ã¨ scaduto il timeout o Ã¨ stato richiesto l'annullamento, l'attivitÃ  restituita viene annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-358">If a value cannot be retrieved because the time-out expired or cancellation was requested, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="4ca15-359">Se il valore non puÃ² essere recuperato perchÃ© l'origine Ã¨ vuota o completata, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> nell'attivitÃ  restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-359">If the value cannot be retrieved because the source is empty and completed, an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-360">
            <paramref name="source" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-360">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4ca15-361">
            <paramref name="timeout" /> Ã¨ un numero negativo diverso da -1 millisecondi che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-361">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="4ca15-362">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-362">-or-</span>
          </span>
          <span data-ttu-id="4ca15-363">
            <paramref name="timeout" /> Ã¨ maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-363">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberSignature Language="F#" Value="static member SendAsync : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync (target, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="4ca15-364">Specifica il tipo di dati da inviare alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-364">Specifies the type of the data to post to the target.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="4ca15-365">Destinazione in cui inserire i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-365">The target to which to post the data.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="4ca15-366">L'elemento che viene offerto alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-366">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-367">In modo asincrono offre un messaggio al blocco di messaggi di destinazione, consentendo il rinvio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-367">Asynchronously offers a message to the target message block, allowing for postponement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-368">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'invio asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-368">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span>
          </span>
          <span data-ttu-id="4ca15-369">Se la destinazione accetta e utilizza l'elemento fornito durante la chiamata a <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, in risposta alla chiamata l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> risultante viene completato e la relativa proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> restituisce <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-369">If the target accepts and consumes the offered element during the call to <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="true" />.</span>
          </span>
          <span data-ttu-id="4ca15-370">Se la destinazione rifiuta l'elemento fornito durante la chiamata, in risposta alla chiamata l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> risultante viene completato e la relativa proprietÃ  <see cref="P:System.Threading.Tasks.Task`1.Result" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-370">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4ca15-371">Se la destinazione posticipa l'elemento fornito, l'elemento verrÃ  memorizzato nel buffer fino a quando la destinazione lo utilizzerÃ  o lo rilascerÃ . A quel punto l'attivitÃ  sarÃ  completata e il relativo oggetto <see cref="P:System.Threading.Tasks.Task`1.Result" /> indicherÃ  che il messaggio Ã¨ stato utilizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-371">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the task will complete, with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> indicating whether the message was consumed.</span>
          </span>
          <span data-ttu-id="4ca15-372">Se la destinazione non tenta di utilizzare o rilasciare il messaggio, l'attivitÃ  restituita non sarÃ  mai completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-372">If the target never attempts to consume or release the message, the returned task will never complete.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-373">L'elemento <paramref name="target" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-373">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member SendAsync : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync (target, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="4ca15-374">Specifica il tipo di dati da inviare alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-374">Specifies the type of the data to post to the target.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="4ca15-375">Destinazione in cui inserire i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-375">The target to which to post the data.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="4ca15-376">L'elemento che viene offerto alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-376">The item being offered to the target.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4ca15-377">Il token di annullamento con cui richiedere l'annullamento dell'operazione di invio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-377">The cancellation token with which to request cancellation of the send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-378">In modo asincrono offre un messaggio al blocco di messaggi di destinazione, consentendo il rinvio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-378">Asynchronously offers a message to the target message block, allowing for postponement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-379">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'invio asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-379">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span>
          </span>
          <span data-ttu-id="4ca15-380">Se la destinazione accetta e usa l'elemento specificato durante la chiamata a SendAsync, in risposta alla chiamata l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> risultante viene completato e la relativa proprietÃ  <c>Result</c> restituisce true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-380">If the target accepts and consumes the offered element during the call to SendAsync, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return true.</span>
          </span>
          <span data-ttu-id="4ca15-381">Se la destinazione rifiuta l'elemento specificato durante la chiamata, in risposta alla chiamata l'elemento <see cref="T:System.Threading.Tasks.Task`1" /> risultante viene completato e la relativa proprietÃ  <c>Result</c> restituisce false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-381">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return false.</span>
          </span>
          <span data-ttu-id="4ca15-382">Se la destinazione posticipa l'elemento specificato, l'elemento verrÃ  memorizzato nel buffer fino a quando la destinazione lo userÃ  o lo rilascerÃ . A quel punto l'attivitÃ  sarÃ  completata e il relativo elemento <c>Result</c> indicherÃ  che il messaggio Ã¨ stato usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-382">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the Task will complete, with its <c>Result</c> indicating whether the message was consumed.</span>
          </span>
          <span data-ttu-id="4ca15-383">Se la destinazione non tenta di utilizzare o rilasciare il messaggio, l'attivitÃ  restituita non sarÃ  mai completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-383">If the target never attempts to consume or release the message, the returned task will never complete.</span>
          </span>
          <span data-ttu-id="4ca15-384">Se viene richiesto l'annullamento prima che la destinazione abbia finito di utilizzare i dati inviati, l'attivitÃ  restituita viene completata nello stato di annullamento e i dati e non sono piÃ¹ disponibili alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-384">If cancellation is requested before the target has successfully consumed the sent data, the returned task will complete in the Canceled state and the data will no longer be available to the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ca15-385">
            <paramref name="target" /> Ã¨ null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-385">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryReceive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static bool TryReceive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt; source, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReceive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!!TOutput&gt; source, [out] !!TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReceive(Of TOutput) (source As IReceivableSourceBlock(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReceive(System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt; ^ source, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberSignature Language="F#" Value="static member TryReceive : System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;'Output&gt; *  -&gt; bool" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive (source, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="item" Type="TOutput" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="4ca15-386">Specifica il tipo di dati contenuti nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-386">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4ca15-387">Origine dalla quale ricevere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-387">The source from which to receive.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="4ca15-388">Elemento ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-388">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ca15-389">Tenta di ricevere in modo sincrono un elemento da <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-389">Attempts to synchronously receive an item from the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ca15-390">
            <see langword="true" /> se un elemento puÃ² essere ricevuto; altrimenti, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ca15-390">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca15-391">Questo metodo non aspetta fino a quando l'origine ha un elemento per fornire.</span><span class="sxs-lookup"><span data-stu-id="4ca15-391">This method does not wait until the source has an item to provide.</span></span>  
  
 <span data-ttu-id="4ca15-392">VerrÃ  restituito un elemento era disponibile o meno.</span><span class="sxs-lookup"><span data-stu-id="4ca15-392">It will return whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>