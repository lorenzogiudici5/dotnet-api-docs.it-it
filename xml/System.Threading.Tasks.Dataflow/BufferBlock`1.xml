<Type Name="BufferBlock&lt;T&gt;" FullName="System.Threading.Tasks.Dataflow.BufferBlock&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9522deb00bd76f7a8b2c32516feb0b93a3183c1d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39778359" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferBlock&lt;T&gt; : System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T&gt;, System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T&gt;, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferBlock`1&lt;T&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!T, !T&gt;, class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!T&gt;, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T&gt;, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferBlock(Of T)&#xA;Implements IPropagatorBlock(Of T, T), IReceivableSourceBlock(Of T), ISourceBlock(Of T), ITargetBlock(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BufferBlock sealed : System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;T, T&gt;, System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;T&gt;, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type BufferBlock&lt;'T&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface IPropagatorBlock&lt;'T, 'T&gt;&#xA;    interface ISourceBlock&lt;'T&gt;&#xA;    interface ITargetBlock&lt;'T&gt;&#xA;    interface IReceivableSourceBlock&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.BufferBlock`1/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ff571-101">Specifica il tipo di dati memorizzati nel buffer da questo blocco del flusso di dati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff571-101">Specifies the type of the data buffered by this dataflow block.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ff571-102">Fornisce un buffer per l'archiviazione dei dati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff571-102">Provides a buffer for storing data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferBlock();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff571-103">Inizializza un nuovo oggetto <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-103">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferBlock (System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferBlock(System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.BufferBlock&lt;'T&gt; : System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.BufferBlock&lt;'T&gt;" Usage="new System.Threading.Tasks.Dataflow.BufferBlock&lt;'T&gt; dataflowBlockOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="ff571-104">Opzioni con cui configurare questo elemento <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-104">The options with which to configure this  <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-105">Inizializza un nuovo elemento <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /> con l'elemento <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-105">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /> with the specified  <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff571-106">L'elemento <paramref name="dataflowBlockOptions" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-106">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="bufferBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff571-107">Segnala al <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> che non deve accettare o produrre altri messaggi e non deve utilizzare altri messaggi posticipati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-107">Signals to the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> that it should not accept nor produce any more messages nor consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-108">Dopo aver <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A> Ã¨ stato chiamato su un blocco di flussi di dati, verrÃ  completata tale blocco e il relativo <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A> attivitÃ  passerÃ  uno stato finale dopo avere elaborato tutti i dati disponibili in precedenza.</span><span class="sxs-lookup"><span data-stu-id="ff571-108">After <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A> task will enter a final state after it has processed all previously available data.</span></span> <span data-ttu-id="ff571-109"><xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A> verrÃ  non bloccata in attesa del completamento a verificarsi, ma piuttosto avvierÃ  la richiesta. per attendere il completamento si verifica quando il <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A> attivitÃ  puÃ² essere utilizzata.</span><span class="sxs-lookup"><span data-stu-id="ff571-109"><xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A> task may be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.BufferBlock&lt;'T&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff571-110">Ottiene un <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione asincrona e il completamento del blocco di flussi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-110">Gets a <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff571-111">AttivitÃ .</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-111">The task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-112">Un blocco di flussi di dati viene considerato completata quando non viene attualmente elaborato un messaggio e quando ha garantito che non vengono elaborate altri messaggi.</span><span class="sxs-lookup"><span data-stu-id="ff571-112">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="ff571-113">L'oggetto restituito <xref:System.Threading.Tasks.Task> verrÃ  transizione allo stato completato quando il blocco associato Ã¨ stata completata.</span><span class="sxs-lookup"><span data-stu-id="ff571-113">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed.</span></span> <span data-ttu-id="ff571-114">Assume il <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> lo stato quando il blocco al completamento dell'elaborazione correttamente in base al blocco di flussi di dati definito semantica.</span><span class="sxs-lookup"><span data-stu-id="ff571-114">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow blockâs defined semantics.</span></span> <span data-ttu-id="ff571-115">Assume il <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Faulted> lo stato quando il blocco di flussi di dati Ã¨ stata completata l'elaborazione in modo anomalo a causa di un'eccezione non gestita e assume il <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled> lo stato quando il blocco di flussi di dati Ã¨ stata completata l'elaborazione in modo anomalo a causa della ricezione di una richiesta di annullamento.</span><span class="sxs-lookup"><span data-stu-id="ff571-115">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</span></span> <span data-ttu-id="ff571-116">Se l'attivitÃ  viene completata nel <xref:System.Threading.Tasks.TaskStatus.Faulted> lo stato, relativi `Exception` proprietÃ  restituirÃ  un <xref:System.AggregateException> contenente una o piÃ¹ eccezioni che ha causato l'esito negativo del blocco.</span><span class="sxs-lookup"><span data-stu-id="ff571-116">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Threading.Tasks.Dataflow.BufferBlock&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff571-117">Ottiene il numero di elementi attualmente memorizzati nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-117">Gets the number of items currently stored in the buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff571-118">Numero di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-118">The number of items.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of T), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberSignature Language="F#" Value="abstract member LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'T&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable&#xA;override this.LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'T&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable" Usage="bufferBlock.LinkTo (target, linkOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ff571-119">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> nel quale connettere questa origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-119">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="ff571-120">Istanza <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> che configura il collegamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-120">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-121">Collega l'elemento <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> all'elemento <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-121">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff571-122">IDisposable, che quando viene chiamato Dispose, scollegherÃ  l'origine dalla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-122">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff571-123">
            <paramref name="target" /> Ã¨ Null (Nothing in Visual Basic) o <paramref name="linkOptions" /> Ã¨ Null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-123">
              <paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="ff571-124">L'oggetto <see cref="T:System.Exception" /> che ha causato l'errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-124">The  <see cref="T:System.Exception" /> that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-125">Determina il completamento dell'elemento <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> nello stato <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-125">Causes the  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> to complete in a <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-126">Dopo aver <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> Ã¨ stato chiamato su un blocco di flussi di dati, verrÃ  completata tale blocco e il relativo <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A> attivitÃ  entrerÃ  in uno stato finale.</span><span class="sxs-lookup"><span data-stu-id="ff571-126">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete, and its  <xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="ff571-127">Generare un errore per un blocco, come con annullamento di un blocco, fa sÃ¬ che i messaggi memorizzati nel buffer (messaggi di input non elaborati, nonchÃ© i messaggi di output unoffered) andrÃ  persa.</span><span class="sxs-lookup"><span data-stu-id="ff571-127">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff571-128">L'elemento <paramref name="exception" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-128">The <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ConsumeMessage">
      <MemberSignature Language="C#" Value="T ISourceBlock&lt;T&gt;.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !T System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T), ByRef messageConsumed As Boolean) As T Implements ISourceBlock(Of T).ConsumeMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual T System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ConsumeMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target, [Runtime::InteropServices::Out] bool % messageConsumed) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;::ConsumeMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="ff571-129">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> del messaggio utilizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-129">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ff571-130">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> che consuma il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-130">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span>
          </span>
        </param>
        <param name="messageConsumed">
          <span data-ttu-id="ff571-131">
            <see langword="true" /> se il messaggio Ã¨ stato consumato con esito positivo, <see langword="false" /> in caso contrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-131">
              <see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-132">Chiamato da un <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> collegato per accettare e utilizzare <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> precedentemente offerto da questo <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-132">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff571-133">Valore del messaggio utilizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-133">The value of the consumed message.</span>
          </span>
          <span data-ttu-id="ff571-134">Questo valore puÃ² corrispondere a un'istanza diversa di <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> in precedenza riservata e passata come <paramref name="messageHeader" /> a <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-134">This may correspond to a different  <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to  <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span>
          </span>
          <span data-ttu-id="ff571-135">L'oggetto <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> che usa le risorse deve utilizzare il valore restituito al posto del valore passato come <paramref name="messageValue" /> con <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-135">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as <paramref name="messageValue" /> through <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span>
          </span>
          <span data-ttu-id="ff571-136">se il messaggio richiesto non Ã¨ disponibile, il valore restituito sarÃ  <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-136">If the message requested is not available, the return value will be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-137">Solo <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> istanze collegate a questo <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> istanza potrebbe utilizzare <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, e deve essere usato solo per utilizzare <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> istanze offerto in precedenza da questa origine alla destinazione.</span><span class="sxs-lookup"><span data-stu-id="ff571-137">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, and it must only be used to consume <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff571-138">L'elemento <paramref name="messageHeader" /> non Ã¨ valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-138">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff571-139">L'elemento <paramref name="target" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-139">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReleaseReservation">
      <MemberSignature Language="C#" Value="void ISourceBlock&lt;T&gt;.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T)) Implements ISourceBlock(Of T).ReleaseReservation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;::ReleaseReservation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="ff571-140">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> del messaggio prenotato riservato che viene rilasciato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-140">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ff571-141">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> che genera il messaggio prenotato in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-141">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-142">Chiamato da un <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> collegato per rilasciare un <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> precedentemente riservato da questo <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-142">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-143">Solo <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> istanze collegate a questo <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> istanza potrebbe utilizzare `ReleaseReservation`, e deve essere usato solo per rilasciare <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> istanze riservate correttamente e in precedenza dalla destinazione.</span><span class="sxs-lookup"><span data-stu-id="ff571-143">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use `ReleaseReservation`, and it must only be used to release <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff571-144">L'elemento <paramref name="messageHeader" /> non Ã¨ valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-144">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff571-145">L'elemento <paramref name="target" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-145">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ff571-146">Il <paramref name="target" /> non dispone del messaggio riservato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-146">The <paramref name="target" /> did not have the message reserved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReserveMessage">
      <MemberSignature Language="C#" Value="bool ISourceBlock&lt;T&gt;.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T)) As Boolean Implements ISourceBlock(Of T).ReserveMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;::ReserveMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="ff571-147">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> del messaggio prenotato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-147">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ff571-148">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> che riserva il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-148">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-149">Chiamato da un <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> collegato per conservare un <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> precedentemente offerto da questo <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-149">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff571-150">
            <see langword="true" /> se il messaggio Ã¨ stato riservato, <see langword="false" /> in caso contrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-150">
              <see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-151">Solo <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> istanze collegate a questo <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> istanza potrebbe utilizzare <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, e deve essere usato solo per prenotare <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> istanze offerto in precedenza da questa origine alla destinazione.</span><span class="sxs-lookup"><span data-stu-id="ff571-151">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="ff571-152">Se `true` viene restituito, il <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> necessario successivamente chiamare <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> o <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> per questo messaggio.</span><span class="sxs-lookup"><span data-stu-id="ff571-152">If `true` is returned, the  <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either  <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or  <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="ff571-153">In caso contrario, puÃ² comportare l'origine sia in grado di propagare a questo o altri obiettivi di ulteriori messaggi.</span><span class="sxs-lookup"><span data-stu-id="ff571-153">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="ff571-154"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> non deve essere chiamato quando la destinazione Ã¨ presente alcun blocco interno.</span><span class="sxs-lookup"><span data-stu-id="ff571-154"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="ff571-155">In questo modo verrÃ  violare la gerarchia di blocchi necessaria per evitare i deadlock in una rete del flusso di dati.</span><span class="sxs-lookup"><span data-stu-id="ff571-155">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff571-156">L'elemento <paramref name="messageHeader" /> non Ã¨ valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-156">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff571-157">L'elemento <paramref name="target" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-157">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;T&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, T messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !T messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As T, source As ISourceBlock(Of T), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of T).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, T messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="T" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="ff571-158">Un'istanza <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> che rappresenta l'intestazione del messaggio che viene offerto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-158">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="ff571-159">Valore del messaggio offerto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-159">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ff571-160">
            <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> che offre il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-160">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span>
          </span>
          <span data-ttu-id="ff571-161">PuÃ² assumere il valore <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-161">This may be <see langword="null" />.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="ff571-162">Impostare su true per indicare alla destinazione di chiamare <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> in modo sincrono durante la chiamata a <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prima di restituire <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> per eseguire il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-162">Set to true to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-163">Offre un messaggio al <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> e fornisce alla destinazione la possibilitÃ  di utilizzare o posticipare il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-163">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff571-164">Stato del messaggio offerto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-164">The status of the offered message.</span>
          </span>
          <span data-ttu-id="ff571-165">Se il messaggio Ã¨ stato accettato dalla destinazione, viene restituito <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> e l'origine non deve piÃ¹ utilizzare il messaggio offerto, in quanto Ã¨ ora di proprietÃ  della destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-165">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span>
          </span>
          <span data-ttu-id="ff571-166">Se il messaggio Ã¨ stato posticipato dal database di destinazione, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> viene restituito come notifica relativa alla destinazione che potrebbe successivamente tentare di utilizzare o prenotare il messaggio. Allo stesso tempo, l'origine ancora possiede ancora il messaggio e potrebbe offrirlo ad altri blocchi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-166">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="ff571-167">Se la destinazione avesse posticipato il messaggio ma <paramref name="source" /> era <see langword="null" />, viene restituito <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-167">If the target would have otherwise postponed message, but <paramref name="source" /> was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span>
          </span>
          <span data-ttu-id="ff571-168">Se la destinazione ha provato ad accettare il messaggio ma non ci Ã¨ riuscito a causa della consegna di origine del messaggio a un'altra destinazione o semplicemente perchÃ© Ã¨ stato eliminato, viene restituito <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-168">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="ff571-169">Se il database di destinazione ha scelto di non accettare il messaggio, viene restituito <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-169">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="ff571-170">Se la destinazione ha scelto di non accettare il messaggio e non accetterÃ  un altro messaggio da questa origine, viene restituito <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-170">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff571-171">L'elemento <paramref name="messageHeader" /> non Ã¨ valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-171">The  <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="ff571-172">- oppure - <paramref name="consumeToAccept" /> puÃ² essere true solo se viene specificato con un elemento <paramref name="source" /> diverso da Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-172">-or- <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bufferBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff571-173">Restituisce una stringa che rappresenta il nome formattato di questa istanza <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-173">Returns a string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff571-174">Stringa che rappresenta il nome formattato di questa istanza di <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-174">A string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-175">Ereditato da <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="ff571-175">Inherited from  <xref:System.Object> .</span></span> <span data-ttu-id="ff571-176">Usa il <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> opzione.</span><span class="sxs-lookup"><span data-stu-id="ff571-176">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (Predicate&lt;T&gt; filter, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(class System.Predicate`1&lt;!T&gt; filter, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (filter As Predicate(Of T), ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(Predicate&lt;T&gt; ^ filter, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="abstract member TryReceive : Predicate&lt;'T&gt; *  -&gt; bool&#xA;override this.TryReceive : Predicate&lt;'T&gt; *  -&gt; bool" Usage="bufferBlock.TryReceive (filter, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Predicate&lt;T&gt;" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="ff571-177">Il valore del predicato deve passare in modo corretto in modo da poter essere ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-177">The predicate value must successfully pass in order for it to be received.</span>
          </span>
          <span data-ttu-id="ff571-178">
            <c>filter</c> puÃ² essere <see langword="null" />, nel qual caso tutti gli elementi passeranno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-178">
              <c>filter</c> may be <see langword="null" />, in which case all items will pass.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ff571-179">Elemento ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-179">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-180">Tenta di ricevere in modo sincrono un elemento di output disponibile da <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-180">Attempts to synchronously receive an available output item from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff571-181">
            <see langword="true" /> se un elemento puÃ² essere ricevuto; altrimenti, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-181">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-182">Questo metodo non blocca in attesa per l'origine fornire un elemento.</span><span class="sxs-lookup"><span data-stu-id="ff571-182">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="ff571-183">VerrÃ  restituito dopo il controllo per un elemento, se un elemento era disponibile.</span><span class="sxs-lookup"><span data-stu-id="ff571-183">It will return after checking for an element, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveAll">
      <MemberSignature Language="C#" Value="public bool TryReceiveAll (out System.Collections.Generic.IList&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveAll([out] class System.Collections.Generic.IList`1&lt;!T&gt;&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveAll (ByRef items As IList(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceiveAll([Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;T&gt; ^ % items);" />
      <MemberSignature Language="F#" Value="abstract member TryReceiveAll :  -&gt; bool&#xA;override this.TryReceiveAll :  -&gt; bool" Usage="bufferBlock.TryReceiveAll items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;T&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="ff571-184">Elementi ricevuto dall'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-184">The items received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff571-185">Tenta di ricevere in modo sincrono tutti gli elementi disponibili dal <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-185">Attempts to synchronously receive all available items from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff571-186">
            <see langword="true" /> se uno o piÃ¹ elementi possono essere ricevuti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff571-186">
              <see langword="true" /> if one or more items could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff571-187">Questo metodo non blocca in attesa per l'origine fornire un elemento.</span><span class="sxs-lookup"><span data-stu-id="ff571-187">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="ff571-188">VerrÃ  restituito dopo il controllo per gli elementi, se un elemento era disponibile.</span><span class="sxs-lookup"><span data-stu-id="ff571-188">It will return after checking for elements, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>