<Type Name="EventProviderTraceListener" FullName="System.Diagnostics.Eventing.EventProviderTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc8711f50989e145ce20c419447d37c2c3145e5b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37665890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventProviderTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProviderTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProviderTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProviderTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type EventProviderTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a1fe2-101">Listener per <see cref="T:System.Diagnostics.TraceSource" /> che scrive eventi nel sottosistema ETW.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1fe2-101">A listener for <see cref="T:System.Diagnostics.TraceSource" /> that writes events to the ETW subsytem.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1fe2-102">Tutti i dati (trace o debug) dall'evento di origine vengono scritti nel sottosistema ETW sotto forma di stringa.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-102">All event data (trace or debug) from the source event is written to the ETW subsystem as a string.</span></span> <span data-ttu-id="a1fe2-103">Gli elementi dati sono delimitati con una virgola.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-103">The data elements are delimited using a comma.</span></span> <span data-ttu-id="a1fe2-104">Per specificare un delimitatore diverso, usare il <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-104">To specify a different delimiter, use the <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> property.</span></span>  
  
 <span data-ttu-id="a1fe2-105">Aggiunta del listener a <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registra il provider con il sottosistema ETW.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-105">Adding the listener to <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registers the provider with the ETW subsystem.</span></span> <span data-ttu-id="a1fe2-106">È necessario creare una sessione di traccia ETW tramite il programma eseguibile Logman.exe (o simile) per scrivere gli eventi in un file di log.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-106">You must create an ETW trace session using the Logman.exe executable program (or something similar) to write the events to a log file.</span></span>  
  
 <span data-ttu-id="a1fe2-107">Non è necessario un manifesto da utilizzare gli eventi dal listener in quanto i dati dell'evento sono una singola stringa.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-107">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="a1fe2-108">Quando si chiama il <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> i metodi per scrivere eventi, si passa un <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valore di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-108">When you call the <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> methods to write events, you pass a <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration value.</span></span> <span data-ttu-id="a1fe2-109">L'enumerazione contiene i valori sia a livello e parola chiave.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-109">The enumeration contains both level and keyword values.</span></span> <span data-ttu-id="a1fe2-110">Quando si abilita un provider di listener di traccia da una sessione ETW, il valore del livello specificato può essere il valore associato a uno dei seguenti <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valori di enumerazione:</span><span class="sxs-lookup"><span data-stu-id="a1fe2-110">When you enable a trace listener provider from an ETW session, the level value that you specify can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="a1fe2-111">Critiche (valore è 1)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-111">Critical (value is 1)</span></span>  
  
-   <span data-ttu-id="a1fe2-112">Errore (valore è 2)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-112">Error (value is 2)</span></span>  
  
-   <span data-ttu-id="a1fe2-113">Informazioni (valore è 8)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-113">Information (value is 8)</span></span>  
  
-   <span data-ttu-id="a1fe2-114">Verbose (valore è 16)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-114">Verbose (value is 16)</span></span>  
  
-   <span data-ttu-id="a1fe2-115">Avviso (valore è 4)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-115">Warning (value is 4)</span></span>  
  
 <span data-ttu-id="a1fe2-116">Il valore di parola chiave specificata per la sessione può essere il valore associato a uno dei seguenti <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valori di enumerazione:</span><span class="sxs-lookup"><span data-stu-id="a1fe2-116">The keyword value that you specify for the session can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="a1fe2-117">Resume (il valore è 2.048)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-117">Resume (value is 2,048)</span></span>  
  
-   <span data-ttu-id="a1fe2-118">Avvia (valore è 256)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-118">Start (value is 256)</span></span>  
  
-   <span data-ttu-id="a1fe2-119">Arrestare (valore è 512)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-119">Stop (value is 512)</span></span>  
  
-   <span data-ttu-id="a1fe2-120">Sospendi (il valore è 1.024)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-120">Suspend (value is 1,024)</span></span>  
  
-   <span data-ttu-id="a1fe2-121">Trasferisci (valore è 4.096)</span><span class="sxs-lookup"><span data-stu-id="a1fe2-121">Transfer (value is 4,096)</span></span>  
  
   
  
## Examples  
  
```  
private static Guid providerId = new Guid("{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}");  
  
    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), "Test Listener", "::");  
  
    // You should use the All default level and control the level using the  
    // ETW session; otherwise, you may not log all the events requested by the  
    // session.  
    TraceSource source = new TraceSource("MyProvider", SourceLevels.All);  
  
    source.Listeners.Add(listener);  
  
    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { "abc", "def", true, 123 });  
  
    source.TraceEvent(TraceEventType.Warning, 12, "Provider guid: {0}", new object[] { providerId });  
  
    source.TraceInformation("string {0}, bool {1}, int {2}, ushort {3}", new object[] { "abc", false, 123, (UInt32)5 });  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1fe2-122">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-122">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener providerId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="a1fe2-123">Stringa univoca <see cref="T:System.Guid" /> che identifica il provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-123">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-124">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> con l'identificatore del provider specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-124">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="a1fe2-125">Stringa univoca <see cref="T:System.Guid" /> che identifica il provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-125">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="a1fe2-126">Nome del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-126">Name of the listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-127">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> utilizzando l'identificatore del provider specificato e il nome del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-127">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier and name of the listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String, delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name, delimiter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="a1fe2-128">Stringa univoca <see cref="T:System.Guid" /> che identifica il provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-128">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="a1fe2-129">Nome del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-129">Name of the listener.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="a1fe2-130">Delimitatore utilizzato per delimitare i dati degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-130">Delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="a1fe2-131">Per ulteriori dettagli, vedere la proprietà <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-131">(For more details, see the <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> property.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-132">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> utilizzando l'identificatore del provider specificato, il nome del listener e il delimitatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier, name of the listener, and delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="eventProviderTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1fe2-133">Chiude il flusso di output in modo da bloccare la ricezione dell'output di tracciatura o di debug.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-133">Closes the output stream so it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1fe2-134">Ottiene e imposta il delimitatore utilizzato per delimitare i dati dell'evento scritti nel sottosistema ETW.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-134">Gets and sets the delimiter used to delimit the event data that is written to the ETW subsystem.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a1fe2-135">Delimitatore utilizzato per delimitare i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-135">The delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="a1fe2-136">Il delimitatore predefinito è la virgola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-136">The default delimiter is a comma.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1fe2-137">Il listener converte gli elementi dati in stringhe e quindi concatena le stringhe, usando il delimitatore specificato per delimitare ciascun elemento dei dati nella stringa.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-137">The listener converts the data elements to strings and then concatenates the strings together, using the specified delimiter to delimit each data element in the string.</span></span> <span data-ttu-id="a1fe2-138">La stringa viene quindi scritto come i dati dell'evento nel sottosistema ETW.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-138">The string is then written as the event data in the ETW subsystem.</span></span>  
  
 <span data-ttu-id="a1fe2-139">Per analizzare correttamente la stringa, il consumer deve conoscere il delimitatore che è stato usato.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-139">To successfully parse the string, the consumer must know the delimiter that was used.</span></span>  
  
 <span data-ttu-id="a1fe2-140">Se i dati contengono una stringa che può contenere una virgola, specificare un delimitatore appropriato, in modo che i dati dell'evento possono essere analizzati correttamente.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-140">If the data contains a string that may contain a comma, specify an appropriate delimiter, so that the event data can be correctly parsed.</span></span>  
  
 <span data-ttu-id="a1fe2-141">Non è necessario un manifesto da utilizzare gli eventi dal listener in quanto i dati dell'evento sono una singola stringa.</span><span class="sxs-lookup"><span data-stu-id="a1fe2-141">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="a1fe2-142">Il delimitatore viene applicato ai dati dell'evento scritti usando il <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a1fe2-142">The delimiter applies to event data written using the <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string * string -&gt; unit&#xA;override this.Fail : string * string -&gt; unit" Usage="eventProviderTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a1fe2-143">Messaggio da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-143">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="a1fe2-144">Messaggio dettagliato da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-144">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-145">Genera un messaggio di errore e un messaggio di errore dettagliato nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-145">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override sealed void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="eventProviderTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1fe2-146">Scarica il buffer di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-146">Flushes the output buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="eventProviderTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1fe2-147">Ottiene gli attributi personalizzati supportati dal listener di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-147">Gets the custom attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1fe2-148">Matrice di stringhe che nomina gli attributi personalizzati supportati dal listener di traccia oppure <see langword="null" /> in assenza di attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-148">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override sealed bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1fe2-149">Ottiene un valore che indica se il listener di traccia è thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-149">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a1fe2-150">
            <see langword="true" /> se il listener di traccia è thread-safe; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-150">
              <see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a1fe2-151">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a1fe2-152">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-152">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a1fe2-153">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-153">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a1fe2-154">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-154">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a1fe2-155">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-155">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a1fe2-156">I dati di traccia da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-156">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-157">Scrive le informazioni di traccia, un oggetto dati e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-157">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a1fe2-158">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-158">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a1fe2-159">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-159">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a1fe2-160">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-160">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a1fe2-161">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-161">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a1fe2-162">Matrice di oggetti dati da creare come dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-162">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-163">Scrive le informazioni di traccia, un oggetto dati e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-163">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a1fe2-164">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-164">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a1fe2-165">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-165">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a1fe2-166">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-166">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a1fe2-167">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-167">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-168">Scrive le informazioni di traccia e di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-168">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a1fe2-169">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-169">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a1fe2-170">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-170">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a1fe2-171">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-171">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a1fe2-172">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-172">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="a1fe2-173">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-173">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-174">Scrive le informazioni di traccia, un messaggio e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-174">Writes trace information, a message, and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a1fe2-175">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-175">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a1fe2-176">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-176">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a1fe2-177">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-177">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a1fe2-178">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-178">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="a1fe2-179">Stringa di formato che contiene zero o più elementi di formato, corrispondenti a oggetti nella matrice <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-179">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="a1fe2-180">Matrice <see langword="object" /> che contiene zero o più oggetti da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-180">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-181">Scrive le informazioni di traccia, una matrice di oggetti formattata e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-181">Writes trace information, a formatted array of objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="abstract member TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit&#xA;override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="eventProviderTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a1fe2-182">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-182">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a1fe2-183">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-183">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a1fe2-184">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-184">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="a1fe2-185">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-185">A message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="a1fe2-186">Oggetto <see cref="T:System.Guid" /> che identifica un'attività correlata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-186">A <see cref="T:System.Guid" /> object identifying a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-187">Scrive le informazioni di traccia, un messaggio, l'identità di un'attività correlata e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-187">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override sealed void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="eventProviderTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a1fe2-188">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-188">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-189">Quando se ne esegue l'override in una classe derivata, scrive il messaggio specificato nel listener creato nella classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-189">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override sealed void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="eventProviderTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a1fe2-190">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-190">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fe2-191">Quando se ne esegue l'override in una classe derivata, scrive un messaggio nel listener creato nella classe derivata, seguito da un terminatore di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fe2-191">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>