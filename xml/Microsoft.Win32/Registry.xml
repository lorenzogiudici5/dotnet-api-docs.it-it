<Type Name="Registry" FullName="Microsoft.Win32.Registry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99c62b7a1323a992dfece9bd4e11b7dbe0c43bb1" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52210062" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Registry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Registry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.Registry" />
  <TypeSignature Language="VB.NET" Value="Public Class Registry" />
  <TypeSignature Language="C++ CLI" Value="public ref class Registry abstract sealed" />
  <TypeSignature Language="F#" Value="type Registry = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce oggetti <see cref="T:Microsoft.Win32.RegistryKey" /> che rappresentano le chiavi di primo livello del Registro di sistema di Windows, nonché i metodi <see langword="static" /> per l'accesso alle coppie chiave/valore.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe fornisce il set di chiavi radice standard trovato nel Registro di sistema nei computer che eseguono Windows. Il Registro di sistema è una funzionalità di archiviazione per informazioni sulle applicazioni, gli utenti e impostazioni predefinite di sistema. Ad esempio, le applicazioni possono usare il Registro di sistema per archiviare le informazioni che devono essere preservate dopo la chiusura dell'applicazione e accedere a queste informazioni quando l'applicazione viene ricaricata. Ad esempio, è possibile archiviare le preferenze di colore, posizione sullo schermo o le dimensioni della finestra. È possibile controllare i dati per ogni utente archiviando le informazioni in una posizione diversa nel Registro di sistema.  
  
 La base o radice <xref:Microsoft.Win32.RegistryKey> istanze esposte dal `Registry` classe delineare il meccanismo di archiviazione basic per sottochiavi e valori del Registro di sistema. Tutte le chiavi sono di sola lettura perché il Registro di sistema dipende dalla loro esistenza. Le chiavi esposte dalla `Registry` sono:  
  
 <xref:Microsoft.Win32.Registry.CurrentUser>  
 Archivia le informazioni sulle preferenze degli utenti.  
  
 <xref:Microsoft.Win32.Registry.LocalMachine>  
 Archivia le informazioni di configurazione per il computer locale.  
  
 <xref:Microsoft.Win32.Registry.ClassesRoot>  
 Archivia informazioni sui tipi (e classi) e le relative proprietà.  
  
 <xref:Microsoft.Win32.Registry.Users>  
 Archivia le informazioni relative alla configurazione utente predefinita.  
  
 <xref:Microsoft.Win32.Registry.PerformanceData>  
 Archivia informazioni sulle prestazioni per i componenti software.  
  
 <xref:Microsoft.Win32.Registry.CurrentConfig>  
 Archivia le informazioni hardware non specifiche dell'utente.  
  
 <xref:Microsoft.Win32.Registry.DynData>  
 Archivia i dati dinamici.  
  
 Dopo aver identificato la chiave radice in cui si desidera archiviare/recuperare informazioni dal Registro di sistema, è possibile usare il <xref:Microsoft.Win32.RegistryKey> classe per aggiungere o rimuovere le sottochiavi e modificare i valori per una determinata chiave.  
  
 I dispositivi hardware possono inserire informazioni nel Registro di sistema automaticamente tramite l'interfaccia Plug and Play. Software per installare i driver di dispositivo può inserire informazioni nel Registro di sistema da operazioni di scrittura API standard.  
  
## <a name="static-methods-for-getting-and-setting-values"></a>Metodi statici per ottenere e impostare i valori  
 In .NET Framework versione 2.0, il <xref:Microsoft.Win32.Registry> classe contiene inoltre `static` <xref:Microsoft.Win32.Registry.GetValue%2A> e <xref:Microsoft.Win32.Registry.SetValue%2A> metodi per l'impostazione e il recupero dei valori delle chiavi del Registro di sistema. Questi metodi di aprono e chiavi del registro chiude ogni volta che vengono utilizzate, in modo che non viene eseguita, nonché metodi analoghi di <xref:Microsoft.Win32.RegistryKey> (classe), quando si accede a un numero elevato di valori.  
  
 Il <xref:Microsoft.Win32.RegistryKey> classe fornisce inoltre metodi che consentono di impostare del controllo di accesso di Windows per le chiavi del Registro di sistema, per testare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
   
  
## Examples  
 In questa sezione sono riportati due esempi di codice. Nel primo esempio illustra le chiavi principali e il secondo esempio viene illustrato il `static` <xref:Microsoft.Win32.Registry.GetValue%2A> e <xref:Microsoft.Win32.Registry.SetValue%2A> metodi.  
  
 Esempio 1  
  
 Esempio di codice seguente viene illustrato come recuperare le sottochiavi della chiave HKEY_USERS e visualizzarne i nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti `RegistryKey` per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 Esempio 2  
  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la chiave viene creata come scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinito e l'uso di `defaultValue` quando una coppia nome/valore non esiste.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
    <altmember cref="T:Microsoft.Win32.RegistryKey" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey ClassesRoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassesRoot As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ ClassesRoot;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.ClassesRoot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definisce i tipi o le classi di documenti, nonché le proprietà associate a questi tipi. Questo campo legge la chiave base HKEY_CLASSES_ROOT del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le applicazioni convenzionali e le applicazioni OLE usano i dati archiviati in questa chiave. Questa chiave offre anche garantire la compatibilità con il database di registrazione Windows 3.1 archiviando le informazioni per il supporto DDE e OLE. Visualizzatori file e le estensioni dell'interfaccia utente archiviano i relativi identificatori di classe OLE in questa chiave e i server di elaborazione vengono registrati in questa chiave.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e stampa i relativi nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.ClassesRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentConfig;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentConfig As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentConfig;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentConfig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene le informazioni di configurazione relative all'hardware non specifiche dell'utente. Questo campo legge la chiave base HKEY_CURRENT_CONFIG del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro viene mappato a una sottochiave in <xref:Microsoft.Win32.Registry.LocalMachine>.  
  
 Un esempio dell'uso di questo membro è un'applicazione che archivia un nome di server diverso per i propri dati a seconda del fatto che il sistema è collegato a una rete.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e stampa i relativi nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentConfig Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentUser;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentUser As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentUser;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentUser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene le informazioni relative alle preferenze dell'utente corrente. Questo campo legge la chiave base HKEY_CURRENT_USER del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le informazioni archiviate in questa chiave sono le impostazioni delle variabili di ambiente e i dati sui gruppi di programmi, colori, stampanti, le connessioni di rete e le preferenze dell'applicazione. Questa chiave rende più semplice definire le impostazioni dell'utente corrente. In questa chiave, i fornitori di software archiviano le preferenze specifiche dell'utente corrente da usare nelle proprie applicazioni. Microsoft, ad esempio, crea la chiave HKEY_CURRENT_USER\Software\Microsoft. per le applicazioni da usare, con ogni applicazione che crea la propria sottochiave della chiave di Microsoft.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e stampa i relativi nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.CurrentUser Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentUser Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentUser Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey DynData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.DynData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DynData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ DynData;" />
      <MemberSignature Language="F#" Value=" staticval mutable DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.DynData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use PerformanceData instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key only works on Win9x, which is no longer supported by the CLR.  On NT-based operating systems, use the PerformanceData registry key instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene i dati dinamici del Registro di sistema. Questo campo legge la chiave base HKEY_DYN_DATA del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il registro Windows 98 o Windows Me supporta sia i dati statici (che viene archiviati su disco nel Registro di sistema) e i dati dinamici (che vengono modificati di frequente, ad esempio le statistiche sulle prestazioni). Quest'area dati dinamica è il meccanismo che consente i driver di dispositivo virtuali (VxDs) per fornire i dati in tempo reale alle applicazioni Win32 che possono eseguire in remoto e in locale. Consente inoltre il monitoraggio di sistema fornire statistiche sulle prestazioni in Windows 98 o Windows Me sistemi remoti.  
  
 VxDs non sono limitati ai dati sulle prestazioni. Questo può fornire tutti i dati che desiderano passare dal Ring 0 al Ring 3 in modo efficiente senza vengano monopolizzate CPU. Il Registro di sistema supporta dati dinamici per archiviare un puntatore a una funzione che restituisce un valore (o numero di valori). Quando un valori di query di chiamata del Registro di sistema associati con una chiave dynamic, che funzione viene chiamata per restituire i valori desiderati.  
  
> [!NOTE]
>  Le chiavi dinamiche sono state introdotte in Microsoft Windows 95 per gestire i dati dinamici del Registro di sistema. Sono supportati solo in Windows 98 o Windows Me.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e stampa i relativi nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave. Si noti che questo esempio non può restituire alcun risultato, poiché potrebbe non esserci dati dinamica disponibile o è Windows 98 potrebbe non essere in esecuzione / Me. Usando questa chiave può causare un errore in altri sistemi.  
  
 [!code-cpp[Classic Registry.DynData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.DynData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.DynData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.DynData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Il sistema operativo non supporta i dati dinamici, ossia non è Windows 98, Windows 98 Second Edition o Windows Millennium Edition (Windows Me).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValue : string * string * obj -&gt; obj" Usage="Microsoft.Win32.Registry.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">Percorso completo della chiave del Registro di sistema, che inizia con una chiave di primo livello valida, ad esempio "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nome della coppia nome/valore.</param>
        <param name="defaultValue">Valore da restituire se <paramref name="valueName" /> non esiste.</param>
        <summary>Recupera il valore associato al nome specificato, nella chiave specificata del Registro di sistema. Se il nome non viene trovato nella chiave specificata, restituisce un valore predefinito fornito dall'utente oppure <see langword="null" /> se la chiave specificata non esiste.</summary>
        <returns>
          <see langword="null" /> se la sottochiave specificata da <paramref name="keyName" /> non esiste; in caso contrario il valore associato a <paramref name="valueName" /> o <paramref name="defaultValue" /> se <paramref name="valueName" /> non viene trovato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa `valueName` non distinzione maiuscole/minuscole.  
  
> [!NOTE]
>  Una chiave del Registro di sistema può contenere un valore che non è associato ad alcun nome. Quando il valore senza nome viene visualizzato nell'editor del Registro di sistema, viene visualizzata la stringa "(predefinito)" anziché un nome. Per recuperare il valore senza nome, specificare `null` o una stringa vuota ("") per `valuName`.  
  
 I nomi principali valide sono HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG e HKEY_DYN_DATA. In Visual Basic, ad esempio, la stringa "HKEY_CURRENT_USER\MyTestKey" accede coppie chiave/valore per la sottochiave "MyTestKey" nella radice HKEY_CURRENT_USER.  
  
 Quando la <xref:Microsoft.Win32.RegistryKey.GetValue%2A> metodo recupera i valori stringa espandibile (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), questa si espande stringhe dell'ambiente usando i dati dall'ambiente locale. Se un valore che contiene riferimenti espandibili alle variabili di ambiente è stato archiviato sotto forma di stringa (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), anziché come stringa espandibile (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> non viene espanso. È possibile espandere tale stringa dopo che sono stati recuperati chiamando il <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> (metodo).  
  
> [!NOTE]
>  Il metodo consigliato per recuperare i dati da HKEY_PERFORMANCE_DATA è usare il <xref:System.Diagnostics.PerformanceCounter> classe anziché <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> (metodo).  
  
 Il <xref:Microsoft.Win32.Registry.GetValue%2A> e <xref:Microsoft.Win32.Registry.SetValue%2A> metodi aprono e chiavi del registro chiude ogni volta che vengono utilizzate, in modo che non viene eseguita, nonché i metodi del <xref:Microsoft.Win32.RegistryKey> classe se si accede a un numero elevato di valori.  
  
 <xref:Microsoft.Win32.RegistryKey> fornisce inoltre metodi che consentono di aggiungere un elenco di controllo di accesso (ACL) a una chiave del Registro di sistema, per testare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la chiave viene creata come scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinito e l'uso di `defaultValue` quando una coppia nome/valore non esiste.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta per la lettura dalla chiave del Registro di sistema.</exception>
        <exception cref="T:System.IO.IOException">L'oggetto <see cref="T:Microsoft.Win32.RegistryKey" /> che contiene il valore specificato è stato contrassegnato per l'eliminazione.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> non inizia con una chiave di primo livello valida del Registro di sistema.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">per leggere dal Registro di sistema. Enumerazione associata: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">per leggere una chiave del Registro di sistema di tipo REG_EXPAND_SZ. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey LocalMachine;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalMachine As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ LocalMachine;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.LocalMachine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene i dati relativi alla configurazione del computer locale. Questo campo legge la chiave base HKEY_LOCAL_MACHINE del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `LocalMachine` contiene cinque codici:  
  
 Hardware  
 Descrive l'hardware fisico del computer, il modo in cui i driver di dispositivo usano tale hardware e i mapping e i dati correlati che si collegano i driver in modalità kernel con codice in modalità utente. Tutti i dati in questa chiave viene ricreato ogni volta che viene avviato il sistema. La sottochiave descrizione descrive l'hardware del computer effettivo. La sottochiave DeviceMap contiene i dati esterni in formati specifici alle classi particolare dei driver. La sottochiave ResourceMap descrive dei driver di dispositivo quali risorse hardware. Il programma di diagnostica di Windows NT (Winmsdp.exe) può segnalare i contenuti in un modulo semplice da leggere.  
  
 SAM  
 Il database di servizi di directory di informazioni di sicurezza per l'account utente e gruppo e per i domini Windows 2000 Server (SAM è Security Account Manager, noto come database di servizi di directory).  
  
 Sicurezza  
 Contiene i criteri di sicurezza locali, ad esempio i diritti utente specifico. Questa chiave viene usata solo dal sottosistema di sicurezza di Windows 2000.  
  
 Software  
 Il database di software per computer. Questa chiave contiene dati relativi al software installato nel computer locale, insieme ai vari elementi di dati di configurazione esterni.  
  
 System  
 Controlla l'avvio del sistema, il caricamento di driver di dispositivo, i servizi di Windows 2000 e comportamento del sistema operativo.  
  
 Per convenzione, se sono presenti dati simili in <xref:Microsoft.Win32.Registry.CurrentUser> e nella <xref:Microsoft.Win32.Registry.LocalMachine>, i dati in <xref:Microsoft.Win32.Registry.CurrentUser> ha la precedenza. Tuttavia, i valori in questa chiave possono inoltre estendere (anziché sostituire) i dati in LocalMachine. Inoltre, alcuni elementi (ad esempio voci di caricamento del driver di dispositivo) sono inutili se si verificano all'esterno di LocalMachine.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e stampa i relativi nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.LocalMachine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.LocalMachine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.LocalMachine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey PerformanceData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PerformanceData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ PerformanceData;" />
      <MemberSignature Language="F#" Value=" staticval mutable PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.PerformanceData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene informazioni sulle prestazioni per i componenti software. Questo campo legge la chiave base HKEY_PERFORMANCE_DATA del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni componente software crea le chiavi per gli oggetti e contatori quando viene installato e scrive i dati dei contatori mentre è in esecuzione. È possibile accedere a questi dati quando si accede a tutti gli altri dati del Registro di sistema, utilizzando il <xref:Microsoft.Win32.RegistryKey> funzioni.  
  
 Anche se si usa il Registro di sistema per raccogliere dati sulle prestazioni, i dati non vengono archiviati nel database del Registro di sistema. Al contrario, l'accesso del Registro di sistema con questa chiave, il sistema raccogliere i dati dai gestori di oggetti di sistema appropriati.  
  
 Per ottenere i dati sulle prestazioni di sistema locale, utilizzare il <xref:Microsoft.Win32.RegistryKey.GetValue%2A> (metodo), con la chiave PerformanceData. La prima chiamata apre la chiave (non è necessario aprire in modo esplicito la chiave prima di tutto). Tuttavia, assicurarsi di usare il <xref:Microsoft.Win32.RegistryKey.Close%2A> metodo per chiudere l'handle per la chiave dopo aver ottenuto i dati sulle prestazioni. L'utente non è possibile installare o rimuovere un componente software, mentre i dati sulle prestazioni sono in uso.  
  
 Per ottenere i dati sulle prestazioni da un sistema remoto, è necessario usare il <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> metodo, con il nome del computer del sistema remoto e la chiave PerformanceData. Questa chiamata recupera una chiave che rappresenta i dati sulle prestazioni per il sistema remoto. Per recuperare i dati, chiamare <xref:Microsoft.Win32.RegistryKey.GetValue%2A> usando questa chiave, anziché la chiave PerformanceData.  
  
> [!NOTE]
>  Per accedere alle sottochiavi della chiave di base su Windows Server 2003, un utente deve appartenere almeno al gruppo Performance Monitor Users.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e stampa i relativi nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave. Si noti che in questo esempio viene spesso non può restituire alcun risultato, perché non potrebbero esserci alcun i dati sulle prestazioni.  
  
 [!code-cpp[Classic Registry.PerformanceData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.PerformanceData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.PerformanceData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il valore di una coppia nome/valore in una chiave del Registro di sistema.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la chiave viene creata come scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinito e l'uso di `defaultValue` quando una coppia nome/valore non esiste.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">Percorso completo della chiave del Registro di sistema, che inizia con una chiave di primo livello valida, ad esempio "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nome della coppia nome/valore.</param>
        <param name="value">Valore da archiviare.</param>
        <summary>Imposta la coppia nome/valore specificata nella chiave del Registro di sistema specificata. Se la chiave specificata non esiste, verrà creata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inizia con il [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], il `valueName` parametro non è più limitato a un massimo di 255 caratteri; tuttavia, il `keyName` parametro continua ad avere la restrizione di 255 caratteri.  
  
 Poiché molti valori possono essere archiviati in ogni chiave nel Registro di sistema, è necessario usare il `valueName` parametro per specificare il valore particolare, si desidera impostare.  
  
> [!NOTE]
>  Una chiave del Registro di sistema può contenere un valore che non è associato ad alcun nome. Quando il valore senza nome viene visualizzato nell'editor del Registro di sistema, viene visualizzata la stringa "(predefinito)" anziché un nome. Per impostare il valore senza nome, specificare `null` o una stringa vuota ("") per `valueName`.  
  
 Se `valueName` non esiste nella chiave, viene creato e il valore associato viene impostato su `value`.  
  
 Se `keyName` specifica una sottochiave che non esiste, viene creata la sottochiave nella directory radice specificata. In Visual Basic, ad esempio, la stringa "HKEY_CURRENT_USER\MyTestKey" crea la sottochiave "MyTestKey" nella radice HKEY_CURRENT_USER. La stringa "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" Crea le sottochiavi annidate "MyTestKey", "MyTestKey\Key2" e "MyTestKey\Key2\Key3".  
  
 I nomi principali valide includono HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG e HKEY_DYN_DATA.  
  
> [!NOTE]
>  Il <xref:Microsoft.Win32.Registry.SetValue%2A> metodo consente di aprire una chiave del Registro di sistema, imposta il valore e chiude la chiave ogni volta che viene chiamato. Se è necessario modificare un numero elevato di valori, il <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> metodo potrebbe offrire prestazioni migliorate. Il <xref:Microsoft.Win32.RegistryKey> classe fornisce inoltre metodi che consentono di aggiungere un elenco di controllo di accesso (ACL) a una chiave del Registro di sistema, per testare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
 Questo overload del metodo <xref:Microsoft.Win32.Registry.SetValue%2A> archivia numeri interi a 64 bit sotto forma di stringhe (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>). Per archiviare i numeri a 64 bit come <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> valori, usare il <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload del metodo.  
  
 Questo overload del metodo <xref:Microsoft.Win32.Registry.SetValue%2A> archivia tutti i valori stringa come <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> oggetti, anche se contengono espandibili riferimenti a variabili di ambiente. Per salvare i valori stringa come stringhe espandibili (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), usare il <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload del metodo.  
  
 Questo overload equivale a chiamare le <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload del metodo con <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>.  
  
> [!NOTE]
>  In Windows 98 e Windows Millennium Edition (Windows Me), il Registro di sistema non è in formato Unicode e non tutti i caratteri Unicode sono validi per tutte le tabelle codici. Un carattere Unicode non valido per la tabella codici corrente viene sostituito dalla migliore corrispondenza. Non viene generata alcuna eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la chiave viene creata come scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinito e l'uso di `defaultValue` quando una coppia nome/valore non esiste.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> non inizia con una chiave di primo livello valida del Registro di sistema.  
  
oppure 
 <paramref name="keyName" /> è maggiore della lunghezza massima consentita (255 caratteri).</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'oggetto <see cref="T:Microsoft.Win32.RegistryKey" /> è di sola lettura e non può essere modificato. Si tratta, ad esempio, di un nodo di primo livello.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni richieste per la creazione o la modifica delle chiavi del Registro di sistema.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Per modificare la chiave del Registro di sistema, se presente, o per creare la chiave del Registro di sistema se non esiste già. Enumerazioni associate: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">Percorso completo della chiave del Registro di sistema, che inizia con una chiave di primo livello valida, ad esempio "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nome della coppia nome/valore.</param>
        <param name="value">Valore da archiviare.</param>
        <param name="valueKind">Tipo di dati del Registro di sistema da usare per l'archiviazione dei dati.</param>
        <summary>Imposta la coppia nome/valore nella chiave specificata del Registro di sistema, utilizzando il tipo di dati del Registro di sistema specificato. Se la chiave specificata non esiste, verrà creata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inizia con il [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], il `valueName` parametro non è più limitato a un massimo di 255 caratteri; tuttavia, il `keyName` parametro continua presentano la limitazione a 255 caratteri.  
  
 Poiché molti valori possono essere archiviati in ogni chiave nel Registro di sistema, è necessario usare il `valueName` parametro per specificare il valore particolare, si desidera impostare.  
  
> [!NOTE]
>  Una chiave del Registro di sistema può contenere un valore che non è associato ad alcun nome. Quando il valore senza nome viene visualizzato nell'editor del Registro di sistema, viene visualizzata la stringa "(predefinito)" anziché un nome. Per impostare il valore senza nome, specificare `null` o una stringa vuota ("") per `valueName`.  
  
 Se `valueName` non esiste nella chiave, viene creato e il valore associato viene impostato su `value`.  
  
 Se `keyName` specifica una sottochiave che non esiste, viene creata la sottochiave nella directory radice specificata. In Visual Basic, ad esempio, la stringa "HKEY_CURRENT_USER\MyTestKey" crea la sottochiave "MyTestKey" nella radice HKEY_CURRENT_USER. La stringa "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" Crea le sottochiavi annidate "MyTestKey", "MyTestKey\Key2" e "MyTestKey\Key2\Key3".  
  
 I nomi principali valide includono HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG e HKEY_DYN_DATA.  
  
> [!NOTE]
>  Il <xref:Microsoft.Win32.Registry.SetValue%2A> metodo consente di aprire una chiave del Registro di sistema, imposta il valore e chiude la chiave ogni volta che viene chiamato. Se è necessario modificare un numero elevato di valori, il <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> metodo potrebbe offrire prestazioni migliorate. Il <xref:Microsoft.Win32.RegistryKey> classe fornisce inoltre metodi che consentono di aggiungere un elenco di controllo di accesso (ACL) a una chiave del Registro di sistema, per testare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
 Se il tipo dell'oggetto specificato `value` non corrisponde l'oggetto specificato `valueKind`, e i dati non possono essere convertito, <xref:System.ArgumentException> viene generata un'eccezione. Ad esempio, è possibile archiviare un <xref:System.Int64?displayProperty=nameWithType> come un <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, ma solo se il valore è minore del valore massimo di un <xref:System.Int32?displayProperty=nameWithType>. Non è possibile archiviare un valore stringa singolo come un <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se vengono passati valori boxed <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> o <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, la conversione viene eseguita usando la lingua inglese.  
  
> [!NOTE]
>  In Windows 98 e Windows Millennium Edition (Windows Me), il Registro di sistema non è in formato Unicode e non tutti i caratteri Unicode sono validi per tutte le tabelle codici. Un carattere Unicode non valido per la tabella codici corrente viene sostituito dalla migliore corrispondenza. Non viene generata alcuna eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la chiave viene creata come scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinito e l'uso di `defaultValue` quando una coppia nome/valore non esiste.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> non inizia con una chiave di primo livello valida del Registro di sistema.  
  
oppure 
 <paramref name="keyName" /> è maggiore della lunghezza massima consentita (255 caratteri).  
  
oppure 
Il tipo di <paramref name="value" /> non corrisponde al tipo di dati del Registro di sistema specificato da <paramref name="valueKind" />, pertanto non è stato possibile convertire i dati in modo corretto.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'oggetto <see cref="T:Microsoft.Win32.RegistryKey" /> è di sola lettura e non può essere modificata. Si tratta, ad esempio di un nodo di primo livello oppure la chiave non è stata aperta con accesso in scrittura.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni richieste per la creazione o la modifica delle chiavi del Registro di sistema.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Per modificare la chiave del Registro di sistema, se presente, o per creare la chiave del Registro di sistema se non esiste già. Enumerazioni associate: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey Users;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.Users" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Users As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ Users;" />
      <MemberSignature Language="F#" Value=" staticval mutable Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.Users" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene le informazioni relative alla configurazione utente predefinita. Questo campo legge la chiave base HKEY_USERS del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa chiave contiene un ramo per ogni utente del computer. La configurazione predefinita viene fornita per i nuovi utenti nel computer locale e per l'utente corrente predefinita se l'utente non è stato modificato preferenze. Poiché Windows 98 / ME supporta inoltre Registry, le applicazioni possono accedere le informazioni specifiche dell'utente di esattamente come in Windows 2000. Informazioni di ogni utente vengono archiviate in un file separato, che può essere archiviato in locale o in un server di rete. Windows 98 / mi posso copiare questo file system corrente dell'utente in modo che le impostazioni possono spostare da un computer a un altro con l'utente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e stampa i relativi nomi sullo schermo. Usare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile usare altre operazioni presenti <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>