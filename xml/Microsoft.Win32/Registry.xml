<Type Name="Registry" FullName="Microsoft.Win32.Registry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fb289e3db8f78e3c0d8ab3e407138cd550b88bd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30351175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Registry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Registry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.Registry" />
  <TypeSignature Language="VB.NET" Value="Public Class Registry" />
  <TypeSignature Language="C++ CLI" Value="public ref class Registry abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce oggetti <see cref="T:Microsoft.Win32.RegistryKey" /> che rappresentano le chiavi di primo livello del Registro di sistema di Windows, nonché i metodi <see langword="static" /> per l'accesso alle coppie chiave/valore.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe fornisce il set di chiavi radice standard trovato nel Registro di sistema nei computer che eseguono Windows. Il Registro di sistema è una funzionalità di archiviazione per informazioni sulle impostazioni predefinite di sistema, utenti e applicazioni. Ad esempio, applicazioni possono utilizzare il Registro di sistema per l'archiviazione di informazioni che devono essere mantenute dopo l'applicazione viene chiusa e accedere a queste informazioni quando l'applicazione viene ricaricato. Ad esempio, è possibile archiviare le preferenze di colore, posizioni dello schermo o le dimensioni della finestra. È possibile controllare questi dati per ogni utente archiviando le informazioni in una posizione diversa nel Registro di sistema.  
  
 La base o radice <xref:Microsoft.Win32.RegistryKey> istanze esposti dalla `Registry` classe delineano il meccanismo di archiviazione di base per il sottochiavi e i valori del Registro di sistema. Tutte le chiavi sono di sola lettura perché il Registro di sistema dipende dall'esistenza. Le chiavi esposte da `Registry` sono:  
  
 <xref:Microsoft.Win32.Registry.CurrentUser>  
 Archivia le informazioni relative alle preferenze utente.  
  
 <xref:Microsoft.Win32.Registry.LocalMachine>  
 Archivia le informazioni di configurazione per il computer locale.  
  
 <xref:Microsoft.Win32.Registry.ClassesRoot>  
 Archivia informazioni sui tipi (classi) e le relative proprietà.  
  
 <xref:Microsoft.Win32.Registry.Users>  
 Archivia le informazioni relative alla configurazione utente predefinito.  
  
 <xref:Microsoft.Win32.Registry.PerformanceData>  
 Archivia informazioni sulle prestazioni per i componenti software.  
  
 <xref:Microsoft.Win32.Registry.CurrentConfig>  
 Archivia le informazioni hardware non specifico dell'utente.  
  
 <xref:Microsoft.Win32.Registry.DynData>  
 Archivia i dati dinamici.  
  
 Dopo aver identificato la chiave radice in cui si desidera archiviare/recuperare le informazioni dal Registro di sistema, è possibile utilizzare la <xref:Microsoft.Win32.RegistryKey> classe per aggiungere o rimuovere le sottochiavi e modificare i valori di una chiave specificata.  
  
 Dispositivi hardware è possono inserire informazioni nel Registro di sistema automaticamente tramite l'interfaccia Plug and Play. Software per installare i driver di dispositivo è possibile inserire informazioni nel Registro di sistema per la scrittura in API standard.  
  
## <a name="static-methods-for-getting-and-setting-values"></a>Metodi statici per il recupero e impostazione dei valori  
 In .NET Framework versione 2.0, il <xref:Microsoft.Win32.Registry> classe contiene inoltre `static` <xref:Microsoft.Win32.Registry.GetValue%2A> e <xref:Microsoft.Win32.Registry.SetValue%2A> metodi per l'impostazione e recupero di valori da chiavi del Registro di sistema. Aprono questi metodi e chiavi del registro chiude ogni volta che vengono utilizzate in modo non viene eseguita, nonché metodi analoghi il <xref:Microsoft.Win32.RegistryKey> (classe), quando si accede a un numero elevato di valori.  
  
 La <xref:Microsoft.Win32.RegistryKey> classe fornisce anche metodi che consentono di impostare del controllo di accesso di Windows per le chiavi del Registro di sistema, per verificare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio viene chiavi di primo livello e il secondo esempio viene illustrato il `static` <xref:Microsoft.Win32.Registry.GetValue%2A> e <xref:Microsoft.Win32.Registry.SetValue%2A> metodi.  
  
 Esempio 1  
  
 Esempio di codice riportato di seguito viene illustrato come recuperare le sottochiavi della chiave HKEY_USERS e visualizzarne i nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in `RegistryKey` per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 Esempio 2  
  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la creazione della chiave come a tale scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinita e l'utilizzo di `defaultValue` se non esiste una coppia nome/valore.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
    <altmember cref="T:Microsoft.Win32.RegistryKey" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey ClassesRoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassesRoot As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ ClassesRoot;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definisce i tipi o le classi di documenti, nonché le proprietà associate a questi tipi. Questo campo legge la chiave base HKEY_CLASSES_ROOT del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sia le applicazioni tradizionali che applicazioni OLE utilizzano i dati archiviati in questa chiave. Questa chiave fornisce anche la compatibilità con il database di registrazione Windows 3.1 archiviando le informazioni per il supporto DDE e OLE. Visualizzatori di file ed estensioni dell'interfaccia utente archiviano gli identificatori di classe OLE in questa chiave e il server di elaborazione sono registrati in questa chiave.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e vengono stampati i relativi nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.ClassesRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentConfig;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentConfig As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentConfig;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene le informazioni di configurazione relative all'hardware non specifiche dell'utente. Questo campo legge la chiave base HKEY_CURRENT_CONFIG del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è mappato a una sottochiave all'interno di <xref:Microsoft.Win32.Registry.LocalMachine>.  
  
 Un esempio di utilizzo di questo membro è un'applicazione che viene archiviato un nome server diverso per i dati a seconda se il sistema è collegato a una rete.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e vengono stampati i relativi nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentConfig Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentUser;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentUser As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentUser;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene le informazioni relative alle preferenze dell'utente corrente. Questo campo legge la chiave base HKEY_CURRENT_USER del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le informazioni archiviate in questa chiave includono le impostazioni delle variabili di ambiente e i dati sui gruppi di programmi, colori, stampanti, le connessioni di rete e preferenze per l'applicazione. Questa chiave, è facile stabilire le impostazioni dell'utente corrente. In questa chiave, i fornitori di software archiviano le preferenze specifiche dell'utente corrente da utilizzare all'interno delle applicazioni. Microsoft, ad esempio, crea la chiave HKEY_CURRENT_USER\Software\Microsoft. per le proprie applicazioni da usare, con ogni applicazione creando una proprio sottochiave della chiave di Microsoft.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e vengono stampati i relativi nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.CurrentUser Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentUser Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentUser Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey DynData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.DynData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DynData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ DynData;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PerformanceData instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene i dati dinamici del Registro di sistema. Questo campo legge la chiave base HKEY_DYN_DATA del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 98 o Windows Me Registro di sistema supporta dati statici (che viene archiviati su disco nel Registro di sistema) e i dati dinamici (che vengono modificati di frequente, ad esempio le statistiche sulle prestazioni). Questa area dati dinamici è il meccanismo che consente di driver di dispositivo virtuali (VxDs) per fornire i dati in tempo reale per le applicazioni Win32 che è possono eseguire in remoto anche nel sistema locale. Consente inoltre il monitoraggio di sistema fornire le statistiche sulle prestazioni in Windows 98 o Windows Me sistemi remoti.  
  
 VxDs non sono limitati ai dati sulle prestazioni. Forniscono i dati che devono essere passati da Ring 0 a 3 anello in modo efficiente senza impegnare eccessivamente la CPU. Il Registro di sistema supporta dynamic data per l'archiviazione di un puntatore a una funzione che restituisce un valore (o numero di valori). Quando un valori di query di chiamata del Registro di sistema associato a una chiave dinamica, che funzione viene chiamata per restituire il valore desiderato o i valori.  
  
> [!NOTE]
>  Le chiavi dinamiche sono state introdotte in Microsoft Windows 95 a gestione dinamica dei dati del Registro di sistema. Sono supportate solo in Windows 98 o Windows Me.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e vengono stampati i relativi nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave. Si noti che in questo esempio non può restituire alcun risultato, poiché potrebbe non esserci dati dinamici disponibili o non è eseguito Windows 98 / Me. Utilizzo di questa chiave può causare un errore in altri sistemi.  
  
 [!code-cpp[Classic Registry.DynData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.DynData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.DynData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.DynData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Il sistema operativo non supporta i dati dinamici, ossia non è Windows 98, Windows 98 Second Edition o Windows Millennium Edition (Windows Me).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">Percorso completo della chiave del Registro di sistema, che inizia con una chiave di primo livello valida, ad esempio "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nome della coppia nome/valore.</param>
        <param name="defaultValue">Valore da restituire se <c>valueName</c> non esiste.</param>
        <summary>Recupera il valore associato al nome specificato, nella chiave specificata del Registro di sistema. Se il nome non viene trovato nella chiave specificata, restituisce un valore predefinito fornito dall'utente oppure <see langword="null" /> se la chiave specificata non esiste.</summary>
        <returns>
          <see langword="null" /> se la sottochiave specificata da <paramref name="keyName" /> non esiste; in caso contrario il valore associato a <paramref name="valueName" /> o <paramref name="defaultValue" /> se <paramref name="valueName" /> non viene trovato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa `valueName` non è tra maiuscole e minuscole.  
  
> [!NOTE]
>  Una chiave del Registro di sistema può contenere un valore che non è associato ad alcun nome. Quando il valore senza nome viene visualizzato nell'editor del Registro di sistema, viene visualizzata la stringa "(impostazione predefinita)" anziché un nome. Per recuperare il valore senza nome, specificare `null` o una stringa vuota ("") per `valuName`.  
  
 I nomi validi radice sono HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG e HKEY_DYN_DATA. In Visual Basic, ad esempio, la stringa "HKEY_CURRENT_USER\MyTestKey" accede coppie chiave/valore per la sottochiave "MyTestKey" nella radice HKEY_CURRENT_USER.  
  
 Quando il <xref:Microsoft.Win32.RegistryKey.GetValue%2A> metodo recupera i valori stringa espandibile (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), espande le stringhe di ambiente utilizzando i dati dall'ambiente locale. Se un valore contenente riferimenti espandibili a variabili di ambiente è stato archiviato sotto forma di stringa (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), anziché come stringa espandibile (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> non si espande. È possibile espandere tale stringa dopo che sono stati recuperati chiamando il <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> metodo.  
  
> [!NOTE]
>  Il metodo consigliato per recuperare dati da HKEY_PERFORMANCE_DATA consiste nell'utilizzare il <xref:System.Diagnostics.PerformanceCounter> classe anziché <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> metodo.  
  
 Il <xref:Microsoft.Win32.Registry.GetValue%2A> e <xref:Microsoft.Win32.Registry.SetValue%2A> metodi aprono e chiavi del registro chiude ogni volta che vengono utilizzate, in modo non viene eseguita, nonché i metodi del <xref:Microsoft.Win32.RegistryKey> classe se si accede a un numero elevato di valori.  
  
 <xref:Microsoft.Win32.RegistryKey> fornisce inoltre metodi che consentono di aggiungere un elenco di controllo di accesso (ACL) a una chiave del Registro di sistema, per verificare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la creazione della chiave come a tale scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinita e l'utilizzo di `defaultValue` se non esiste una coppia nome/valore.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta per la lettura dalla chiave del Registro di sistema.</exception>
        <exception cref="T:System.IO.IOException">L'oggetto <see cref="T:Microsoft.Win32.RegistryKey" /> che contiene il valore specificato è stato contrassegnato per l'eliminazione.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> non inizia con una chiave di primo livello valida del Registro di sistema.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">per leggere dal Registro di sistema. Enumerazione associata: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">per leggere una chiave del Registro di sistema di tipo REG_EXPAND_SZ. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey LocalMachine;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalMachine As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ LocalMachine;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene i dati relativi alla configurazione del computer locale. Questo campo legge la chiave base HKEY_LOCAL_MACHINE del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `LocalMachine` contiene cinque chiavi:  
  
 Hardware  
 Viene descritto l'hardware fisico del computer, le modalità di driver di dispositivo che hardware e i mapping e i dati correlati che collegano i driver in modalità kernel al codice in modalità utente. Tutti i dati in questa chiave viene ricreato ogni volta che viene avviato il sistema. La sottochiave Description descrive l'hardware effettivo del computer. La sottochiave DeviceMap contiene dati esterni in formati specifici delle classi particolare dei driver. La sottochiave ResourceMap descrive driver di dispositivo le risorse hardware. Il programma di diagnostica di Windows NT (Winmsdp.exe) può segnalare al relativo contenuto in un formato di facile lettura.  
  
 SAM  
 Il database di servizi di directory delle informazioni di sicurezza per l'account utente e gruppo e per i domini in Windows 2000 Server (SAM è la gestione di Account di protezione, noto come database di servizi di directory).  
  
 Sicurezza  
 Contiene i criteri di sicurezza locale, ad esempio i diritti utente specifico. Questa chiave viene utilizzata solo dal sottosistema di sicurezza di Windows 2000.  
  
 Software  
 Il database di software per computer. Questa chiave contiene dati relativi al software installato nel computer locale, insieme ai vari elementi di dati di configurazione esterni.  
  
 System  
 Controlla l'avvio del sistema, il caricamento del driver di dispositivo, servizi di Windows 2000 e funzionamento del sistema operativo.  
  
 Per convenzione, se sono presenti dati simili in <xref:Microsoft.Win32.Registry.CurrentUser> e in <xref:Microsoft.Win32.Registry.LocalMachine>, i dati in <xref:Microsoft.Win32.Registry.CurrentUser> ha la precedenza. Tuttavia, i valori in questa chiave possono inoltre estendere (anziché sostituire) dati in LocalMachine. Inoltre, alcuni elementi (ad esempio driver di dispositivo, il caricamento delle voci) sono prive di significato se si verificano di fuori di LocalMachine.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e vengono stampati i relativi nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.LocalMachine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.LocalMachine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.LocalMachine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey PerformanceData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PerformanceData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ PerformanceData;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene informazioni sulle prestazioni per i componenti software. Questo campo legge la chiave base HKEY_PERFORMANCE_DATA del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni componente software crea chiavi per gli oggetti e contatori quando viene installato e scrive i dati del contatore durante l'esecuzione. È possibile accedere a questi dati con cui si accede a tutti gli altri dati del Registro di sistema, utilizzando il <xref:Microsoft.Win32.RegistryKey> funzioni.  
  
 Anche se si utilizza il Registro di sistema per raccogliere dati sulle prestazioni, i dati non vengono archiviati nel database del Registro di sistema. Invece, l'accesso a Registro di sistema con questa chiave, il sistema raccogliere i dati dai gestori di oggetti di sistema appropriati.  
  
 Per ottenere dati sulle prestazioni di sistema locale, utilizzare il <xref:Microsoft.Win32.RegistryKey.GetValue%2A> (metodo), con la chiave PerformanceData. La prima chiamata apre la chiave (non è necessario aprire innanzitutto la chiave in modo esplicito). Tuttavia, assicurarsi di utilizzare il <xref:Microsoft.Win32.RegistryKey.Close%2A> metodo per chiudere l'handle per la chiave di una volta ottenuti i dati sulle prestazioni. L'utente non è possibile installare o rimuovere un componente software, mentre i dati delle prestazioni sono in uso.  
  
 Per ottenere dati sulle prestazioni da un sistema remoto, è necessario utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> (metodo), con il nome del computer del sistema remoto e la chiave PerformanceData. Questa chiamata recupera una chiave che rappresenta i dati sulle prestazioni per il sistema remoto. Per recuperare i dati, chiamare <xref:Microsoft.Win32.RegistryKey.GetValue%2A> questa chiave, anziché la chiave PerformanceData.  
  
> [!NOTE]
>  In Windows Server 2003, un utente deve appartenere almeno al gruppo Performance Monitor Users per accedere a sottochiavi della chiave base.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e vengono stampati i relativi nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave. Si noti che in questo esempio viene spesso può non restituire alcun risultato, poiché non potrebbe essere dati sulle prestazioni.  
  
 [!code-cpp[Classic Registry.PerformanceData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.PerformanceData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.PerformanceData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il valore di una coppia nome/valore in una chiave del Registro di sistema.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la creazione della chiave come a tale scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinita e l'utilizzo di `defaultValue` se non esiste una coppia nome/valore.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">Percorso completo della chiave del Registro di sistema, che inizia con una chiave di primo livello valida, ad esempio "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nome della coppia nome/valore.</param>
        <param name="value">Valore da archiviare.</param>
        <summary>Imposta la coppia nome/valore specificata nella chiave del Registro di sistema specificata. Se la chiave specificata non esiste, verrà creata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `valueName` parametro non è più limitato a un massimo di 255 caratteri; tuttavia, il `keyName` parametro continua ad avere la restrizione di 255 caratteri.  
  
 Poiché in ogni chiave del Registro di sistema possono essere archiviati molti valori, è necessario utilizzare il `valueName` parametro per specificare il valore da impostare.  
  
> [!NOTE]
>  Una chiave del Registro di sistema può contenere un valore che non è associato ad alcun nome. Quando il valore senza nome viene visualizzato nell'editor del Registro di sistema, viene visualizzata la stringa "(impostazione predefinita)" anziché un nome. Per impostare il valore senza nome, specificare `null` o una stringa vuota ("") per `valueName`.  
  
 Se `valueName` non esiste nella chiave, viene creato e il valore associato è impostato su `value`.  
  
 Se `keyName` specifica una sottochiave che non esiste, viene creata la sottochiave nella radice specificata. In Visual Basic, ad esempio, la stringa "HKEY_CURRENT_USER\MyTestKey" crea la sottochiave "MyTestKey" nella radice HKEY_CURRENT_USER. La stringa "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" crea il sottochiavi nidificate "MyTestKey", "MyTestKey\Key2" e "MyTestKey\Key2\Key3".  
  
 I nomi radice valido includono HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG e HKEY_DYN_DATA.  
  
> [!NOTE]
>  Il <xref:Microsoft.Win32.Registry.SetValue%2A> metodo apre una chiave del Registro di sistema, imposta il valore e chiude la chiave ogni volta che viene chiamato. Se è necessario modificare un numero elevato di valori, il <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> metodo può fornire prestazioni migliori. La <xref:Microsoft.Win32.RegistryKey> classe fornisce anche metodi che consentono di aggiungere un elenco di controllo di accesso (ACL) a una chiave del Registro di sistema, per verificare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
 Questo overload di <xref:Microsoft.Win32.Registry.SetValue%2A> archivia valori integer a 64 bit come stringhe (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>). Per archiviare numeri a 64 bit come <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> valori, utilizzare il <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload del metodo.  
  
 Questo overload di <xref:Microsoft.Win32.Registry.SetValue%2A> archivia tutti i valori stringa come <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> oggetti, anche se contengono riferimenti espandibili a variabili di ambiente. Per salvare i valori stringa come stringhe espandibili (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), utilizzare il <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload del metodo.  
  
 Questo overload equivale alla chiamata di <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload del metodo con <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>.  
  
> [!NOTE]
>  In Windows 98 e Windows Millennium Edition (Windows Me), il Registro di sistema non è un file Unicode e non tutti i caratteri Unicode sono validi per tutte le tabelle codici. Un carattere Unicode non valido per la tabella codici corrente viene sostituito dalla migliore corrispondenza disponibile. Non viene generata alcuna eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la creazione della chiave come a tale scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinita e l'utilizzo di `defaultValue` se non esiste una coppia nome/valore.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> non inizia con una chiave di primo livello valida del Registro di sistema.  
  
 oppure  
  
 <paramref name="keyName" /> è maggiore della lunghezza massima consentita (255 caratteri).</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'oggetto <see cref="T:Microsoft.Win32.RegistryKey" /> è di sola lettura e non può essere modificato. Si tratta, ad esempio, di un nodo di primo livello.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni richieste per la creazione o la modifica delle chiavi del Registro di sistema.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Per modificare la chiave del Registro di sistema, se presente, o per creare la chiave del Registro di sistema se non esiste già. Enumerazioni associate: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">Percorso completo della chiave del Registro di sistema, che inizia con una chiave di primo livello valida, ad esempio "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nome della coppia nome/valore.</param>
        <param name="value">Valore da archiviare.</param>
        <param name="valueKind">Tipo di dati del Registro di sistema da usare per l'archiviazione dei dati.</param>
        <summary>Imposta la coppia nome/valore nella chiave specificata del Registro di sistema, utilizzando il tipo di dati del Registro di sistema specificato. Se la chiave specificata non esiste, verrà creata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `valueName` parametro non è più limitato a un massimo di 255 caratteri; tuttavia, il `keyName` parametro continua a 255 caratteri.  
  
 Poiché in ogni chiave del Registro di sistema possono essere archiviati molti valori, è necessario utilizzare il `valueName` parametro per specificare il valore da impostare.  
  
> [!NOTE]
>  Una chiave del Registro di sistema può contenere un valore che non è associato ad alcun nome. Quando il valore senza nome viene visualizzato nell'editor del Registro di sistema, viene visualizzata la stringa "(impostazione predefinita)" anziché un nome. Per impostare il valore senza nome, specificare `null` o una stringa vuota ("") per `valueName`.  
  
 Se `valueName` non esiste nella chiave, viene creato e il valore associato è impostato su `value`.  
  
 Se `keyName` specifica una sottochiave che non esiste, viene creata la sottochiave nella radice specificata. In Visual Basic, ad esempio, la stringa "HKEY_CURRENT_USER\MyTestKey" crea la sottochiave "MyTestKey" nella radice HKEY_CURRENT_USER. La stringa "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" crea il sottochiavi nidificate "MyTestKey", "MyTestKey\Key2" e "MyTestKey\Key2\Key3".  
  
 I nomi radice valido includono HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG e HKEY_DYN_DATA.  
  
> [!NOTE]
>  Il <xref:Microsoft.Win32.Registry.SetValue%2A> metodo apre una chiave del Registro di sistema, imposta il valore e chiude la chiave ogni volta che viene chiamato. Se è necessario modificare un numero elevato di valori, il <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> metodo può fornire prestazioni migliori. La <xref:Microsoft.Win32.RegistryKey> classe fornisce anche metodi che consentono di aggiungere un elenco di controllo di accesso (ACL) a una chiave del Registro di sistema, per verificare il tipo di dati di un valore prima di tentarne il recupero e per eliminare le chiavi.  
  
 Se il tipo dell'oggetto specificato `value` non corrispondono alla stringa `valueKind`, e i dati non possono essere convertito, <xref:System.ArgumentException> viene generata un'eccezione. Ad esempio, è possibile archiviare un <xref:System.Int64?displayProperty=nameWithType> come un <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, ma solo se il valore è minore del valore massimo di un <xref:System.Int32?displayProperty=nameWithType>. Non è possibile archiviare un valore stringa singolo come un <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se vengono passati valori boxed <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> o <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, la conversione viene eseguita utilizzando le impostazioni cultura invarianti.  
  
> [!NOTE]
>  In Windows 98 e Windows Millennium Edition (Windows Me), il Registro di sistema non è un file Unicode e non tutti i caratteri Unicode sono validi per tutte le tabelle codici. Un carattere Unicode non valido per la tabella codici corrente viene sostituito dalla migliore corrispondenza disponibile. Non viene generata alcuna eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i valori dei diversi tipi di dati in una chiave di esempio, la creazione della chiave come a tale scopo e quindi recupera e visualizza i valori. Nell'esempio di seguito viene illustrato come archiviare e recuperare la coppia nome/valore (senza nome) predefinita e l'utilizzo di `defaultValue` se non esiste una coppia nome/valore.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> non inizia con una chiave di primo livello valida del Registro di sistema.  
  
 oppure  
  
 <paramref name="keyName" /> è maggiore della lunghezza massima consentita (255 caratteri).  
  
 oppure  
  
 Il tipo di <paramref name="value" /> non corrisponde al tipo di dati del Registro di sistema specificato da <paramref name="valueKind" />, pertanto non è stato possibile convertire i dati in modo corretto.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'oggetto <see cref="T:Microsoft.Win32.RegistryKey" /> è di sola lettura e non può essere modificata. Si tratta, ad esempio di un nodo di primo livello oppure la chiave non è stata aperta con accesso in scrittura.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni richieste per la creazione o la modifica delle chiavi del Registro di sistema.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Per modificare la chiave del Registro di sistema, se presente, o per creare la chiave del Registro di sistema se non esiste già. Enumerazioni associate: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey Users;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.Users" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Users As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ Users;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene le informazioni relative alla configurazione utente predefinita. Questo campo legge la chiave base HKEY_USERS del Registro di sistema di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa chiave contiene un ramo per ogni utente del computer. La configurazione predefinita viene fornita per i nuovi utenti del computer locale e per l'utente corrente predefinito se l'utente non ha modificato le preferenze. Poiché Windows 98 / ME supporta anche Registry, le applicazioni possono accedere alle informazioni specifiche dell'utente esattamente come in Windows 2000. Informazioni di ogni utente vengono archiviate in un file separato, che può essere archiviato in locale o in un server di rete. Windows 98 / ME è possibile copiare questo file per il sistema dell'utente corrente in modo che le impostazioni è possono spostare da un computer a un altro con l'utente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare le sottochiavi della chiave e vengono stampati i relativi nomi sullo schermo. Utilizzare il <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodo per creare un'istanza della sottochiave specifica di interesse. È quindi possibile utilizzare altre operazioni in <xref:Microsoft.Win32.RegistryKey> per modificare tale chiave.  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>