<Type Name="FileDialog" FullName="Microsoft.Win32.FileDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4eabe03ef3f3c9a305c0773d23555225ed44eff" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30350995" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileDialog : Microsoft.Win32.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileDialog extends Microsoft.Win32.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.FileDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileDialog abstract : Microsoft::Win32::CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Win32.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe base astratta che incapsula funzionalità comuni alle finestre di dialogo dei file, incluse <see cref="T:Microsoft.Win32.OpenFileDialog" /> e <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.FileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.Win32.FileDialog" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public bool AddExtension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.AddExtension" />
      <MemberSignature Language="VB.NET" Value="Public Property AddExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddExtension { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un'estensione viene automaticamente aggiunta a un nome file da parte della finestra di dialogo file quando l'utente non la specifica.</summary>
        <value>
          <see langword="true" /> se le estensioni vengono aggiunte, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare il comportamento dell'estensione. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public virtual bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se nella finestra di dialogo file viene visualizzato un avviso quando l'utente specifica un nome file inesistente.</summary>
        <value>
          <see langword="true" /> se gli avvisi vengono visualizzati; in caso contrario <see langword="false" />. L'impostazione predefinita della classe base è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:Microsoft.Win32.OpenFileDialog> classe imposta questa proprietà su `true` nel relativo costruttore.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per reimpostare l'interfaccia utente di finestra di dialogo. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CheckPathExists">
      <MemberSignature Language="C#" Value="public bool CheckPathExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPathExists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.CheckPathExists" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckPathExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPathExists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se vengono visualizzati avvisi quando l'utente digita percorsi e nomi file non validi.</summary>
        <value>
          <see langword="true" /> se gli avvisi vengono visualizzati; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare questa proprietà. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CustomPlaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Win32.FileDialogCustomPlace&gt; CustomPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Win32.FileDialogCustomPlace&gt; CustomPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.CustomPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPlaces As IList(Of FileDialogCustomPlace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Win32::FileDialogCustomPlace ^&gt; ^ CustomPlaces { System::Collections::Generic::IList&lt;Microsoft::Win32::FileDialogCustomPlace ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Win32::FileDialogCustomPlace ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Win32.FileDialogCustomPlace&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elenco di posizioni personalizzate delle finestre di dialogo dei file.</summary>
        <value>Elenco di posizioni personalizzate.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A partire da [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], aprire e salvare le finestre di dialogo file hanno un **collegamenti Preferiti** pannello sul lato sinistro della finestra di dialogo che consente all'utente di spostarsi rapidamente in un percorso diverso. Questi collegamenti sono detti posizioni personalizzate. Questa proprietà consente di modificare l'elenco visualizzato quando l'applicazione utilizza una finestra di dialogo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultExt">
      <MemberSignature Language="C#" Value="public string DefaultExt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultExt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.DefaultExt" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultExt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultExt { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica la stringa dell'estensione predefinita da usare per filtrare l'elenco di file visualizzati.</summary>
        <value>Stringa dell'estensione predefinita. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa dell'estensione deve contenere il punto iniziale. Ad esempio, impostare il <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> proprietà su "txt" per selezionare tutti i file di testo.  
  
 Per impostazione predefinita, il <xref:Microsoft.Win32.FileDialog.AddExtension%2A> proprietà tenta di determinare l'estensione per filtrare l'elenco di file visualizzati dal <xref:Microsoft.Win32.FileDialog.Filter%2A> proprietà. Se non è possibile determinare l'estensione dal <xref:Microsoft.Win32.FileDialog.Filter%2A> proprietà <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> verrà utilizzato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:Microsoft.Win32.OpenFileDialog> che contiene un tipo di nome e l'estensione di file predefinito.  
  
 [!code-csharp[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]
 [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/VisualBasic/window1.xaml.vb#openfiledialogboxcodebehind)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DereferenceLinks">
      <MemberSignature Language="C#" Value="public bool DereferenceLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DereferenceLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.DereferenceLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property DereferenceLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DereferenceLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se una finestra di dialogo file restituisce il percorso del file a cui fa riferimento il collegamento o il percorso del file del collegamento (lnk).</summary>
        <value>
          <see langword="true" /> per restituire il percorso a cui fa riferimento, <see langword="false" /> per restituire il percorso del collegamento. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare il comportamento di dereferenziazione. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa che contiene il percorso completo del file selezionato in una finestra di dialogo file.</summary>
        <value>Oggetto <see cref="T:System.String" /> che è il percorso completo del file selezionato nella finestra di dialogo file. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si seleziona più di un nome di file (lunghezza <xref:Microsoft.Win32.FileDialog.FileNames%2A> è maggiore di uno) quindi <xref:Microsoft.Win32.FileDialog.FileName%2A> contiene il primo nome file selezionato. Se è selezionato alcun nome file, questa proprietà contiene <xref:System.String.Empty> anziché `null`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per ottenere o impostare il percorso nella finestra di dialogo. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.Win32.FileDialog.SafeFileName" />
      </Docs>
    </Member>
    <Member MemberName="FileNames">
      <MemberSignature Language="C#" Value="public string[] FileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] FileNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.FileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ FileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una matrice che contiene un nome file per ogni file selezionato.</summary>
        <value>Matrice di <see cref="T:System.String" /> che contiene un nome file per ogni file selezionato. Il valore predefinito è una matrice con un solo elemento il cui valore è <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per ottenere la raccolta di percorso dalla finestra di dialogo. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.Win32.FileDialog.SafeFileNames" />
      </Docs>
    </Member>
    <Member MemberName="FileOk">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler FileOk;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler FileOk" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.FileDialog.FileOk" />
      <MemberSignature Language="VB.NET" Value="Public Event FileOk As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ FileOk;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente seleziona un nome file facendo clic sul pulsante **Apri** dell'oggetto <see cref="T:Microsoft.Win32.OpenFileDialog" /> o sul pulsante **Salva** dell'oggetto <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.FileDialog.FileOk> viene generato dopo che l'utente seleziona un nome di file, ma prima che venga chiuso la finestra di dialogo, che consente di elaborare la selezione. Se necessario, è possibile annullare la selezione dell'utente impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.ComponentModel.CancelEventArgs> argomento `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa di filtro che determina i tipi di file visualizzati da <see cref="T:Microsoft.Win32.OpenFileDialog" /> o <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente il filtro. Il valore predefinito è <see cref="F:System.String.Empty" />, che indica che non viene applicato alcun filtro e vengono visualizzati tutti i tipi di file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:Microsoft.Win32.FileDialog.Filter%2A> è `null` o <xref:System.String.Empty>, vengono visualizzati tutti i file e cartelle vengono sempre visualizzate.  
  
 È possibile specificare un subset di tipi di file da visualizzare, impostando il <xref:Microsoft.Win32.FileDialog.Filter%2A> proprietà. Ogni tipo di file può rappresentare un tipo specifico di file, ad esempio le operazioni seguenti:  
  
-   Documenti di Word (*. doc)  
  
-   Fogli di lavoro di Excel (xls)  
  
-   Presentazioni di PowerPoint (*. ppt)  
  
 In alternativa, un tipo di file può rappresentare un gruppo di tipi di file correlati, ad esempio le operazioni seguenti:  
  
-   I file di Office (*. doc, xls, * ppt)  
  
-   Tutti i file (*.\*)  
  
 Per specificare un subset dei tipi di file che vengono visualizzati, impostare il <xref:Microsoft.Win32.FileDialog.Filter%2A> proprietà con un valore stringa (il *stringa filtro*) che specifica uno o più tipi di file da filtrare. Di seguito viene illustrato il formato previsto della stringa di filtro:  
  
 `FileType1[[|FileType2]...[|FileTypeN]]`  
  
 Utilizzare il formato seguente per descrivere ogni tipo di file:  
  
 `Label|Extension1[[;Extension2]...[;ExtensionN]]`  
  
 Il *etichetta* parte è un valore di stringa leggibile che descrive il tipo di file, come illustrato di seguito:  
  
-   "Documenti di Word"  
  
-   "Fogli di lavoro di excel"  
  
-   "Presentazioni di PowerPoint"  
  
-   "File di office"  
  
-   "Tutti i file"  
  
 Ogni tipo di file deve essere descritti da almeno un *estensione*. Se più oggetti *estensione* viene utilizzato ogni *estensione* devono essere separati da un punto e virgola (";"). Ad esempio:  
  
-   "*.doc"  
  
-   "*.xls;"  
  
-   "*.ppt"  
  
-   "*.doc;\*.xls;\*.ppt"  
  
-   "*.\*"  
  
 Di seguito sono forniti esempi completi di valido <xref:Microsoft.Win32.FileDialog.Filter%2A> valori stringa:  
  
-   `Word Documents|*.doc`  
  
-   `Excel Worksheets|*.xls`  
  
-   `PowerPoint Presentations|*.ppt`  
  
-   `Office Files|*.doc;*.xls;*.ppt`  
  
-   `All Files|*.*`  
  
-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  
  
 Ogni tipo di file è incluso nel filtro viene aggiunto come elemento separato per il **i file di tipo:** elenco a discesa nel <xref:Microsoft.Win32.OpenFileDialog> o <xref:Microsoft.Win32.SaveFileDialog>, come illustrato nella figura seguente.  
  
 ![Uso del filtro FileDialog nella finestra di dialogo Apri](~/add/media/filedialogfilterfigure1.png "uso del filtro FileDialog nella finestra di dialogo Apri")  
  
 L'utente può scegliere un tipo di file da questo elenco per filtrare in base. Per impostazione predefinita, viene selezionato il primo elemento nell'elenco (ad esempio, il primo tipo di file) quando il <xref:Microsoft.Win32.OpenFileDialog> o <xref:Microsoft.Win32.SaveFileDialog> viene visualizzato. Per specificare che un altro tipo di file da selezionare, impostare il <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> proprietà prima di visualizzare il <xref:Microsoft.Win32.OpenFileDialog> o <xref:Microsoft.Win32.SaveFileDialog> (chiamando <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>).  
  
   
  
## Examples  
 Gli esempi seguenti illustrano diversi tipi di stringhe di filtro che possono essere impostate utilizzando il <xref:Microsoft.Win32.FileDialog.Filter%2A> proprietà.  
  
[!code-csharp[FileDialogFilterSnippets#FilterString1](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring1)] 
[!code-vb[FileDialogFilterSnippets#FilterString1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring1)]  
  
[!code-csharp[FileDialogFilterSnippets#FilterString2](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring2)] 
[!code-vb[FileDialogFilterSnippets#FilterString2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring2)]  
  
[!code-csharp[FileDialogFilterSnippets#FilterString3](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring3)] 
[!code-vb[FileDialogFilterSnippets#FilterString3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring3)]  
  
[!code-csharp[FileDialogFilterSnippets#FilterString4](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring4)] 
[!code-vb[FileDialogFilterSnippets#FilterString4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring4)]  
  
[!code-csharp[FileDialogFilterSnippets#FilterString5](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring5)] 
[!code-vb[FileDialogFilterSnippets#FilterString5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring5)]  
  
[!code-csharp[FileDialogFilterSnippets#FilterString6](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring6)] 
[!code-vb[FileDialogFilterSnippets#FilterString6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring6)]  
  
[!code-csharp[FileDialogFilterSnippets#FilterString7](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring7)] 
[!code-vb[FileDialogFilterSnippets#FilterString7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring7)]  
  
[!code-csharp[FileDialogFilterSnippets#FilterString8](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring8)] 
[!code-vb[FileDialogFilterSnippets#FilterString8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La stringa di filtro non è valida.</exception>
        <altmember cref="P:Microsoft.Win32.FileDialog.FileName" />
        <altmember cref="P:Microsoft.Win32.FileDialog.FilterIndex" />
      </Docs>
    </Member>
    <Member MemberName="FilterIndex">
      <MemberSignature Language="C#" Value="public int FilterIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.FilterIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indice del filtro attualmente selezionato in una finestra di dialogo file.</summary>
        <value>Oggetto <see cref="T:System.Int32" /> che è l'indice del filtro selezionato. Il valore predefinito è 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo indice è basato su 1, non a base 0, a causa dei requisiti di compatibilità con sottostante [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int HookProc(native int hwnd, int32 msg, native int wParam, native int lParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HookProc (hwnd As IntPtr, msg As Integer, wParam As IntPtr, lParam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IntPtr HookProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">Handle della finestra per la finestra di dialogo [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)].</param>
        <param name="msg">Messaggio che deve essere elaborato dalla finestra di dialogo [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)].</param>
        <param name="wParam">Parametri per le azioni della finestra di dialogo.</param>
        <param name="lParam">Parametri per le azioni della finestra di dialogo.</param>
        <summary>Definisce la procedura hook della finestra di dialogo file comune di cui viene eseguito l'override per aggiungere funzionalità comuni a una finestra di dialogo file.</summary>
        <returns>Restituisce <see cref="F:System.IntPtr.Zero" /> per indicare l'esito positivo; in caso contrario viene restituito un valore diverso da zero per indicare un errore.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialDirectory">
      <MemberSignature Language="C#" Value="public string InitialDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.InitialDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InitialDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la directory iniziale visualizzata da una finestra di dialogo file.</summary>
        <value>Oggetto <see cref="T:System.String" /> che contiene la directory iniziale. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è presente alcun set di directory iniziale, questa proprietà conterrà <xref:System.String.Empty> anziché una stringa null.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare il valore di directory iniziale. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="OnFileOk">
      <MemberSignature Language="C#" Value="protected void OnFileOk (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFileOk(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFileOk (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFileOk(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.CancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:Microsoft.Win32.FileDialog.FileOk" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> genera l'evento <xref:Microsoft.Win32.FileDialog.FileOk>.  
  
 Un tipo che deriva da <xref:Microsoft.Win32.FileDialog> può eseguire l'override <xref:Microsoft.Win32.FileDialog.OnFileOk%2A>. Il metodo sottoposto a override deve chiamare <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> sulla classe di base se <xref:Microsoft.Win32.FileDialog.FileOk> deve essere generato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected int Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Options { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i flag della finestra di dialogo file comune di [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] usati dalle finestre di dialogo file per l'inizializzazione.</summary>
        <value>Oggetto <see cref="T:System.Int32" /> che contiene i flag della finestra di dialogo file comune di [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] usati dalle finestre di dialogo file per l'inizializzazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene utilizzato per visualizzare una finestra di dialogo file con il set corrente di valori di proprietà. Le opzioni sono esposte come proprietà nelle finestre di dialogo specifiche, ma non sono documentate come valori di flag pubblici a questo livello, pertanto gli utilizzi di questa proprietà sono principalmente interni, da utilizzare quando si implementa le classi derivate <xref:Microsoft.Win32.OpenFileDialog> e <xref:Microsoft.Win32.SaveFileDialog>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.FileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta tutte le proprietà di una finestra di dialogo file sui valori iniziali.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per reimpostare l'interfaccia utente di finestra di dialogo. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <block subset="none" type="overrides">
          <para>Le classi che derivano da <see cref="T:Microsoft.Win32.FileDialog" /> dovrà chiamare <see cref="M:Microsoft.Win32.FileDialog.Reset" /> per dare <see cref="T:Microsoft.Win32.FileDialog" /> l'opportunità di reimpostazione.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RestoreDirectory">
      <MemberSignature Language="C#" Value="public bool RestoreDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RestoreDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.RestoreDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoreDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RestoreDirectory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è implementata.</summary>
        <value>Non implementato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hwndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hwndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hwndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hwndOwner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwndOwner">Handle per la finestra proprietaria della finestra di dialogo.</param>
        <summary>
          Il metodo <see cref="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)" /> viene chiamato per visualizzare una finestra di dialogo file in una classe derivata, ad esempio <see cref="T:Microsoft.Win32.OpenFileDialog" /> e <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
        <returns>
          <see langword="true" /> se l'utente fa clic sul pulsante **OK** della finestra di dialogo visualizzata, ad esempio, <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La finestra di dialogo visualizzata viene assegnata una finestra, specificata dal `hwndOwner` parametro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa che contiene solo il nome del file selezionato.</summary>
        <value>Oggetto <see cref="T:System.String" /> che contiene solo il nome del file selezionato. Il valore predefinito è <see cref="F:System.String.Empty" />, che è anche il valore impostato quando non viene selezionato alcun file o quando viene selezionata una directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore è il <xref:Microsoft.Win32.FileDialog.FileName%2A> con tutte le informazioni di percorso rimosse. Rimozione di percorsi rende il valore appropriato per l'utilizzo in applicazioni parzialmente attendibili, in quanto impedisce l'individuazione di informazioni nel file system locale di applicazioni.  
  
 Se si seleziona più di un nome di file (lunghezza <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> è maggiore di uno), questa proprietà contiene solo il primo nome file selezionato.  
  
 Vedere [caricamento File sicuro da un campione XBAP](http://msdn.microsoft.com/library/01206dd3-acc7-45ff-aeb9-502c20aaad2c).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una matrice che contiene un nome file sicuro per ogni file selezionato.</summary>
        <value>Matrice di <see cref="T:System.String" /> che contiene un nome file sicuro per ogni file selezionato. Il valore predefinito è una matrice con un solo elemento il cui valore è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vedere <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo visualizzato nella barra del titolo di una finestra di dialogo file.</summary>
        <value>Oggetto <see cref="T:System.String" /> che è il testo visualizzato nella barra del titolo di una finestra di dialogo file. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:Microsoft.Win32.FileDialog.Title%2A> è null o <xref:System.String.Empty>, viene utilizzato un valore localizzato predefinito, ad esempio "Salva con nome" o "Apri".  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare il titolo della finestra di dialogo. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.FileDialog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa che rappresenta una finestra di dialogo file.</summary>
        <returns>Rappresentazione <see cref="T:System.String" /> di <see cref="T:Microsoft.Win32.FileDialog" /> che contiene il nome del percorso completo per qualsiasi file selezionato da <see cref="T:Microsoft.Win32.OpenFileDialog" /> o <see cref="T:Microsoft.Win32.SaveFileDialog" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateNames">
      <MemberSignature Language="C#" Value="public bool ValidateNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.FileDialog.ValidateNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la finestra di dialogo accetta solo nomi file [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] validi.</summary>
        <value>
          <see langword="true" /> se gli avvisi vengono visualizzati quando viene fornito un nome file non valido, In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare il comportamento di convalida. Enumerazione associata:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>