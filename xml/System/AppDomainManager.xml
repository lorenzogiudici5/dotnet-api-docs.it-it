<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42122049eeed0f6c1a39fa6ec6a2b24af684ada3" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48712653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce un equivalente gestito di un host non gestito.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Non usare <xref:System.AppDomainManager> per configurare un dominio dell'applicazione in ASP.NET. In ASP.NET, configurazione deve essere gestita dall'host.  
  
 Implementazione di <xref:System.AppDomainManager> classe consente a un'applicazione host di partecipare alla creazione di nuovi domini applicazione. Per sostituire il valore predefinito <xref:System.AppDomainManager>, identificare l'assembly e tipo di sostituzione <xref:System.AppDomainManager> APPDOMAIN_MANAGER_ASM e APPDOMAIN_MANAGER_TYPE variabili di ambiente oppure utilizzare il [ \<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) e [ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elementi nel file di configurazione. L'assembly deve essere completamente attendibile e trovarsi nella global assembly cache o nella directory dell'applicazione di avvio. Il tipo e assembly devono essere completamente qualificati nelle variabili di ambiente. Ad esempio:  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  Se l'assembly che contiene una sottoclasse di <xref:System.AppDomainManager> dipende dagli assembly contrassegnati con il parametro condizionale <xref:System.Security.AllowPartiallyTrustedCallersAttribute> attributo (APTCA), è necessario includere gli assembly nell'elenco passato al <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> proprietà il <xref:System.AppDomainSetup>è possibile creare domini dell'applicazione. In caso contrario, gli assembly contrassegnati con l'attributo APTCA conditional verranno disabilitati.  
  
 Il <xref:System.AppDomainManager> è l'equivalente gestito dell'host non gestito. Un' <xref:System.AppDomainManager> oggetto partecipa alla creazione di nuovi domini applicazione in un processo e può personalizzare il nuovo <xref:System.AppDomain> prima dell'esecuzione di altro codice gestito. Il <xref:System.AppDomainManager> può inoltre fornire gestori host che fanno parte di altri aspetti dell'esecuzione di common language runtime. Ad esempio, un' <xref:System.AppDomainManager> può identificare un <xref:System.Security.HostSecurityManager> oggetto che partecipa al processo decisionale del dominio dell'applicazione.  
  
> [!NOTE]
>  Solo gli assembly concesso `FullTrust`, ad esempio gli assembly nella global assembly cache o identificato come `fullTrustAssemblies` nel <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> metodo può essere caricato nel <xref:System.AppDomainManager.%23ctor%2A> costruttore e il <xref:System.AppDomainManager.InitializeNewDomain%2A> (metodo).  
  
> [!NOTE]
>  Questa classe contiene una richiesta di collegamento e una richiesta di ereditarietà a livello di classe. Oggetto <xref:System.Security.SecurityException> viene generata quando il chiamante immediato o la classe derivata non dispone dell'autorizzazione di infrastruttura. Per informazioni dettagliate sui requisiti di sicurezza, vedere [linking](~/docs/framework/misc/link-demands.md) e [richieste di ereditarietà](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione molto semplice di <xref:System.AppDomainManager>.  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">Il chiamante non ha le autorizzazioni corrette. Vedere la sezione Requisiti.</exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per classi derivate per inserire il codice eseguibile nell'infrastruttura che ospita common language runtime. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.AppDomainManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Solo gli assembly concesso `FullTrust`, ad esempio gli assembly nella global assembly cache o identificato come `fullTrustAssemblies` nel <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> metodo può essere caricato nel <xref:System.AppDomainManager.%23ctor%2A> costruttore e il <xref:System.AppDomainManager.InitializeNewDomain%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'attivatore di applicazione che gestisce l'attivazione di componenti aggiuntivi e applicazioni basate su manifesto per il dominio.</summary>
        <value>Attivatore di applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È una singola istanza designata del <xref:System.Runtime.Hosting.ApplicationActivator> in ogni classe <xref:System.AppDomain> a un'applicazione componente aggiuntivo e basata su manifesto tutte le chiamate di attivazione vengono indirizzate. Il <xref:System.AppDomainManager> per l'oggetto corrente <xref:System.AppDomain> può fornire il proprio personalizzata <xref:System.Runtime.Hosting.ApplicationActivator>, o un'istanza dell'oggetto default <xref:System.Runtime.Hosting.ApplicationActivator> viene creato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">Sottoclasse di <see cref="T:System.Security.SecurityState" /> che identifica l'operazione di cui è richiesto lo stato di sicurezza.</param>
        <summary>Indica se l'operazione specificata è consentita nel dominio applicazione.</summary>
        <returns>
          <see langword="true" /> se l'host consente di eseguire nel dominio applicazione l'operazione specificata da <paramref name="state" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo restituisce `false`.  
  
 Questo metodo viene chiamato quando il <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> chiamata al metodo per aumentare la quota di spazio di memorizzazione isolato. Un'applicazione che ospita common language runtime (CLR) può eseguire l'override di <xref:System.AppDomainManager.CheckSecuritySettings%2A> metodo per prendere decisioni relative ai criteri in base un <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> oggetto (che eredita <xref:System.Security.SecurityState>) e possono quindi consentire o impedire l'aumento. Ad esempio, un host potrebbe richiedere all'utente finale di approvare o negare la richiesta per aumentare la quota. Implementazione dell'host di <xref:System.AppDomainManager.CheckSecuritySettings%2A> deve prendere in considerazione la possibilità di attacchi denial of service. Ad esempio, deve richiedere all'utente solo se il metodo viene chiamato da un evento avviato dall'utente, ad esempio un pulsante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Nome descrittivo del dominio.</param>
        <param name="securityInfo">Oggetto contenente un'evidenza mappata tramite i criteri di sicurezza per stabilire un set di autorizzazioni di inizio dello stack.</param>
        <param name="appDomainInfo">Oggetto contenente informazioni relative all'inizializzazione del dominio applicazione.</param>
        <summary>Restituisce un dominio applicazione nuovo o esistente.</summary>
        <returns>Dominio applicazione nuovo o esistente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nome descrittivo, specificato da di `friendlyName` parametro, può essere visualizzato nelle interfacce utente per identificare il dominio. Per altre informazioni, vedere la proprietà <xref:System.AppDomain.FriendlyName%2A>.  
  
 Il valore predefinito <xref:System.AppDomainManager.CreateDomain%2A> metodo chiama il metodo protetto <xref:System.AppDomainManager.CreateDomainHelper%2A> metodo per creare il <xref:System.AppDomain>. Esegue l'override di questo metodo non sono necessario chiamare il <xref:System.AppDomainManager.CreateDomainHelper%2A> (metodo), ma può restituire un dominio esistente.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.AppDomainManager" /> classe ed eseguire l'override di <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> metodo, è possibile eseguire attività di inizializzazione di dominio di applicazione personalizzata prima di chiamare il <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> metodo, o non chiamare il metodo helper affatto.  Ad esempio, è possibile modificare l'evidenza passato come <paramref name="securityInfo" />, aggiornare i campi dell'oggetto associato <see cref="T:System.AppDomainSetup" />, oppure riutilizzare un dominio esistente.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Nome descrittivo del dominio.</param>
        <param name="securityInfo">Oggetto contenente un'evidenza mappata tramite i criteri di sicurezza per stabilire un set di autorizzazioni di inizio dello stack.</param>
        <param name="appDomainInfo">Oggetto contenente informazioni relative all'inizializzazione del dominio applicazione.</param>
        <summary>Fornisce un metodo di supporto per creare un dominio applicazione.</summary>
        <returns>Dominio applicazione appena creato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo di supporto protetti gestisce la creazione di un nuovo dominio applicazione.  
  
 Il nome descrittivo, specificato da di `friendlyName` parametro, può essere visualizzato nelle interfacce utente per identificare il dominio. Per altre informazioni, vedere la proprietà <xref:System.AppDomain.FriendlyName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="friendlyName" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per il controllo dell'evidenza. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'assembly di ingresso per un'applicazione.</summary>
        <value>Assembly di ingresso per l'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'applicazione è un'applicazione attivata mediante manifesto, l'assembly di ingresso è determinato dal manifesto dell'applicazione. Se l'applicazione non manifesto attivato, l'assembly di ingresso è eseguibile del processo nel dominio applicazione predefinito. In altri domini applicazione, l'assembly di ingresso è il primo eseguibile eseguito dal <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il gestore di contesto di esecuzione host per il flusso del contesto di esecuzione.</summary>
        <value>Gestore di contesto di esecuzione host.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente a un host fornire un <xref:System.Threading.HostExecutionContextManager> che possono partecipare al flusso del contesto di esecuzione tra le chiamate asincrone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il gestore della sicurezza host che partecipa al processo decisionale sulla sicurezza per il dominio applicazione.</summary>
        <value>Gestore della sicurezza host.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente a un host fornire un <xref:System.Security.HostSecurityManager> per intervenire nelle decisioni di sicurezza per il dominio applicazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un override del <xref:System.AppDomainManager.HostSecurityManager%2A> proprietà per un gestore di dominio dell'applicazione personalizzata. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.AppDomainManager> classe.  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i flag di inizializzazione per i gestori di dominio applicazione personalizzati.</summary>
        <value>Combinazione bit per bit dei valori di enumerazione che descrivono l'azione di inizializzazione da eseguire. Il valore predefinito è <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">Oggetto contenente informazioni relative all'inizializzazione del dominio applicazione.</param>
        <summary>Inizializza il nuovo dominio applicazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Non utilizzare questo metodo per inizializzare un dominio dell'applicazione in ASP.NET. In ASP.NET, configurazione deve essere gestita dall'host. Se si usa questo metodo per inizializzare il dominio dell'applicazione, l'host genera <xref:System.InvalidOperationException> quando tenta di inizializzare il dominio dell'applicazione. Il messaggio di eccezione indica che l'inizializzazione è già verificato.  
  
 Questo metodo viene chiamato immediatamente dopo il costruttore. Il valore predefinito <xref:System.AppDomainManager.InitializeNewDomain%2A> implementazione non esegue alcuna operazione.  Un'implementazione personalizzata può configurare i delegati e classi interne, configurare un'interfaccia con l'interfaccia dell'host non gestiti o configurare i gestori eventi per il nuovo <xref:System.AppDomain>.  
  
 Per l'attivazione di componenti aggiuntivi, inoltre, un'implementazione personalizzata può identificare corrente <xref:System.AppDomain> come dominio di applicazione di destinazione.  
  
 A partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], è possibile usare questo metodo per eseguire il dominio applicazione predefinito all'avvio dell'applicazione o per modificare l'ambiente sandbox di un nuovo dominio applicazione. A tale scopo, modificare il <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> e <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> delle proprietà nel <xref:System.Security.Policy.ApplicationTrust> oggetto a cui è assegnato il <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> proprietà di `appDomainInfo`, prima di inizializzare il dominio dell'applicazione.  
  
> [!NOTE]
>  Solo gli assembly concesso `FullTrust`, ad esempio gli assembly nella global assembly cache o identificato come `fullTrustAssemblies` nel <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> metodo può essere caricato nel <xref:System.AppDomainManager.%23ctor%2A> costruttore e il <xref:System.AppDomainManager.InitializeNewDomain%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un override del <xref:System.AppDomainManager.InitializeNewDomain%2A> metodo per un gestore di dominio dell'applicazione personalizzata. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.AppDomainManager> classe.  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>