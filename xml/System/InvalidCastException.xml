<Type Name="InvalidCastException" FullName="System.InvalidCastException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7906f31b11cbf95ef8c0899681cd7c2ecc491667" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InvalidCastException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InvalidCastException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.InvalidCastException" />
  <TypeSignature Language="VB.NET" Value="Public Class InvalidCastException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvalidCastException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Eccezione generata per una conversione esplicita o un cast non valido.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework supporta la conversione automatica da tipi derivati per i tipi di base e al tipo derivato, oltre che da tipi che presentano le interfacce per oggetti dell'interfaccia e il backup. Include inoltre una varietà di meccanismi che supportano le conversioni personalizzate. Per ulteriori informazioni, vedere [conversione di tipi in .NET Framework](~/docs/standard/base-types/type-conversion.md).  
  
 Viene generata un'eccezione <xref:System.InvalidCastException> quando la conversione di un'istanza di un tipo in un altro non è supportata. Ad esempio, il tentativo di convertire un <xref:System.Char> valore un <xref:System.DateTime> valore genera un <xref:System.InvalidCastException> eccezione. Differisce da un'eccezione <xref:System.OverflowException>, che viene generata quando la conversione di un tipo in un altro è supportata, ma il valore del tipo di origine non è compreso nell'intervallo del tipo di destinazione.  Un <xref:System.InvalidCastException> eccezione è causata da errore developer e non deve essere gestito un `try/catch` blocco, invece, occorre eliminare la causa dell'eccezione.  
  
 Per informazioni sulle conversioni supportate dal sistema, vedere la classe <xref:System.Convert>. Per gli errori che si verificano quando il tipo di destinazione è in grado di archiviare i valori del tipo di origine, ma non è sufficientemente grande per archiviare un valore di origine specifico, vedere l'eccezione <xref:System.OverflowException>.  
  
> [!NOTE]
>  In molti casi, il compilatore di linguaggio rileva che non è possibile alcuna conversione tra il tipo di origine e il tipo di destinazione e genera un errore del compilatore.  
  
 Alcune delle condizioni in cui una conversione tentata genera un <xref:System.InvalidCastException> eccezione sono descritti nelle sezioni seguenti:  
  
 [Tipi primitivi e IConvertible](#Primitive)   
 [Il metodo Convert. ChangeType](#ChangeType)   
 [Conversioni di restrizione e implementazioni IConvertible](#Narrowing)   
 [Downcast](#Downcasting)   
 [Conversione da un oggetto di interfaccia](#Interface)   
 [Conversioni di stringhe](#String)   
 [Migrazione di Visual Basic 6.0](#Migration)  
  
 Per una conversione esplicita di riferimento abbia esito positivo, il valore di origine deve essere `null`, oppure il tipo di oggetto a cui fa riferimento l'argomento di origine sia convertibile nel tipo di destinazione tramite una conversione implicita del riferimento.  
  
 Le seguenti istruzioni del linguaggio intermedio (IL) generano un'eccezione <xref:System.InvalidCastException>:  
  
-   `castclass`  
  
-   `refanyval`  
  
-   `unbox`  
  
 <xref:System.InvalidCastException> utilizza HRESULT COR_E_INVALIDCAST, con valore 0x80004002.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.InvalidCastException>, vedere il <xref:System.InvalidCastException.%23ctor%2A> costruttori.  
  
<a name="Primitive"></a>   
## <a name="primitive-types-and-iconvertible"></a>Tipi primitivi e IConvertible  
 Viene chiamata direttamente o indirettamente l'implementazione <xref:System.IConvertible> di un tipo primitivo che non supporta una determinata conversione. Ad esempio, il tentativo di convertire un valore <xref:System.Boolean> in <xref:System.Char> o un valore <xref:System.DateTime> in <xref:System.Int32> genera un'eccezione <xref:System.InvalidCastException>. Nell'esempio seguente vengono chiamati i metodi <xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType> e <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> per convertire un valore <xref:System.Boolean> in <xref:System.Char>. In entrambi i casi, la chiamata al metodo genera un'eccezione <xref:System.InvalidCastException>.  
  
 [!code-csharp[System.InvalidCastException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/iconvertible1.cs#2)]
 [!code-vb[System.InvalidCastException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/iconvertible1.vb#2)]  
  
 Perché non è supportata la conversione, è disponibile alcuna soluzione.  
  
<a name="ChangeType"></a>   
## <a name="the-convertchangetype-method"></a>Il metodo Convert. ChangeType  
 È stato chiamato il metodo <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> per convertire un oggetto da un tipo in un altro, ma uno o entrambi i tipi non implementano l'interfaccia <xref:System.IConvertible>.  
  
 Nella maggior parte dei casi, perché non è supportata la conversione, vi è alcuna soluzione. In alcuni casi, una possibile soluzione alternativa consiste nell'assegnare manualmente i valori delle proprietà dal tipo di origine per la proprietà simili di un tipo di destinazione.  
  
<a name="Narrowing"></a>   
## <a name="narrowing-conversions-and-iconvertible-implementations"></a>Conversioni di restrizione e implementazioni IConvertible  
 Gli operatori di restrizione definiscono le conversioni esplicite supportate da un tipo.  Un operatore di cast in c# o `CType` il metodo di conversione in Visual Basic (se `Option Strict` è) richiesto per eseguire la conversione.  
  
 Tuttavia, se il tipo di origine né il tipo di destinazione definisce esplicita o la conversione tra i due tipi di restrizione e <xref:System.IConvertible> implementazione di uno o entrambi i tipi non supporta una conversione dal tipo di origine al tipo di destinazione, un <xref:System.InvalidCastException>viene generata un'eccezione.  
  
 Nella maggior parte dei casi, perché non è supportata la conversione, vi è alcuna soluzione.  
  
<a name="Downcasting"></a>   
## <a name="downcasting"></a>Downcast  
 Si sta eseguendo un downcast, ovvero si sta provando a convertire un'istanza di un tipo di base in una dei relativi tipi derivati. Nell'esempio seguente, il tentativo di convertire un oggetto `Person` in un oggetto `PersonWithID` ha esito negativo.  
  
 [!code-csharp[System.InvalidCastException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/basetoderived1.cs#1)]
 [!code-vb[System.InvalidCastException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/basetoderived1.vb#1)]  
  
 Come illustrato nell'esempio, il downcast ha esito positivo solo se l'oggetto `Person` è stato creato da un upcast di un oggetto `PersonWithId` in un oggetto `Person` o se l'oggetto `Person` è `null`.  
  
<a name="Interface"></a>   
## <a name="conversion-from-an-interface-object"></a>Conversione da un oggetto di interfaccia  
 Si sta tentando di convertire un oggetto di interfaccia in un tipo che implementa tale interfaccia, ma il tipo di destinazione non è dello stesso tipo o una classe di base del tipo da cui è stato originariamente derivato l'oggetto di interfaccia. Nell'esempio seguente genera un <xref:System.InvalidCastException> eccezione durante il tentativo di convertire un <xref:System.IFormatProvider> l'oggetto in un <xref:System.Globalization.DateTimeFormatInfo> oggetto. La conversione non riesce perché anche se il <xref:System.Globalization.DateTimeFormatInfo> classe implementa il <xref:System.IFormatProvider> interfaccia, il <xref:System.Globalization.DateTimeFormatInfo> oggetto non è correlato alla <xref:System.Globalization.CultureInfo> classe da cui è stata derivata l'oggetto di interfaccia.  
  
 [!code-csharp[System.InvalidCastException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/Interface1.cs#3)]
 [!code-vb[System.InvalidCastException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/Interface1.vb#3)]  
  
 Indica come eccezione messaggio, la conversione potrebbe avere esito positivo solo se l'oggetto di interfaccia viene riconvertita in un'istanza del tipo originale, in questo caso un <xref:System.Globalization.CultureInfo>. La conversione viene completata anche se l'oggetto di interfaccia viene convertita in un'istanza di un tipo di base del tipo originale.  
  
<a name="String"></a>   
## <a name="string-conversions"></a>Conversioni di stringhe  
 Si sta tentando di convertire un valore o un oggetto nella relativa rappresentazione di stringa usando un operatore di cast in c#. Nell'esempio seguente, entrambi il tentativo di eseguire il cast di un <xref:System.Char> valore in una stringa e il tentativo di eseguire il cast di un numero intero e genera una stringa un <xref:System.InvalidCastException> eccezione.  
  
 [!code-csharp[System.InvalidCastException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString1.cs#4)]  
  
> [!NOTE]
>  In Visual Basic `CStr` ha esito positivo per convertire un valore di un tipo primitivo in una stringa. L'operazione non genera un <xref:System.InvalidCastException> eccezione.  
  
 Per convertire correttamente un'istanza di qualsiasi tipo nella relativa rappresentazione di stringa, chiamare il relativo `ToString` metodo, come nell'esempio seguente esegue.  Il `ToString` metodo è sempre presente, dopo il <xref:System.Object.ToString%2A> metodo definito dalla <xref:System.Object> classe e pertanto viene ereditata o sottoposto a override da tutti i tipi gestiti.  
  
 [!code-csharp[System.InvalidCastException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString2.cs#5)]  
  
<a name="Migration"></a>   
## <a name="visual-basic-60-migration"></a>Migrazione di Visual Basic 6.0  
 Si esegue l'aggiornamento di un'applicazione Visual Basic 6.0 con una chiamata a un evento personalizzato in un controllo utente a Visual Basic .NET e un <xref:System.InvalidCastException> con il messaggio di eccezione, "cast specificato non è valido." Per eliminare questa eccezione, modificare la riga di codice del modulo (ad esempio `Form1`)  
  
```  
Call UserControl11_MyCustomEvent(UserControl11, New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 e sostituirlo con la riga di codice seguente:  
  
```  
Call UserControl11_MyCustomEvent(UserControl11(0), New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Exception.Message%2A> proprietà della nuova istanza di un messaggio fornito dal sistema che descrive l'errore, ad esempio "Impossibile eseguire il cast dal tipo di origine al tipo di destinazione." Questo messaggio prende in considerazione le impostazioni cultura correnti del sistema.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.InvalidCastException>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Riferimento null (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore localizzato.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio in cui viene descritto l'errore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" /> con un messaggio di errore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Exception.Message%2A?displayProperty=nameWithType> proprietà della nuova eccezione utilizzando il `message` parametro. Il contenuto di `message` deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.InvalidCastException>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Riferimento null (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InvalidCastException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InvalidCastException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
        <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" /> con dati serializzati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto eccezione trasmesso su un flusso. Per ulteriori informazioni, vedere [serializzazione XML e SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
        <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <c>innerException</c> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'eccezione generata come risultato diretto di un'eccezione precedente deve includere un riferimento all'eccezione precedente nella proprietà <xref:System.Exception.InnerException%2A>. Il <xref:System.Exception.InnerException%2A> proprietà restituisce lo stesso valore passato al costruttore oppure restituisce `null` se il <xref:System.Exception.InnerException%2A> proprietà non fornisce il valore di eccezione interna al costruttore.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.InvalidCastException>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Riferimento all'eccezione interna.|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, int errorCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio che indica il motivo per il quale è stata generata l'eccezione.</param>
        <param name="errorCode">Valore del codice di errore (HRESULT) associato all'eccezione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" /> con un messaggio e il codice di errore specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Exception.Message%2A?displayProperty=nameWithType> proprietà della nuova eccezione utilizzando il `message` parametro. Il contenuto di `message` deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.  
  
 Questo costruttore fornisce un valore HRESULT che è accessibile per gli eredi di <xref:System.InvalidCastException> (classe), tramite il metodo protetto <xref:System.Exception.HResult%2A> proprietà del <xref:System.Exception> classe.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.InvalidCastException>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Riferimento null (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>