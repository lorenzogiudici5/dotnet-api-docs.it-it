<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`3.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a892a759931a6c8c1129221f72863b69f099d998.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a892a759931a6c8c1129221f72863b69f099d998</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's first component.</source>
          <target state="translated">Tipo del primo componente della tupla.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's second component.</source>
          <target state="translated">Tipo del secondo componente della tupla.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's third component.</source>
          <target state="translated">Tipo del terzo componente della tupla.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Tuple`3">
          <source>Represents a 3-tuple, or triple.</source>
          <target state="translated">Rappresenta una tupla con 3 elementi, ovvero una terna.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Una tupla è una struttura di dati con un numero specifico e la sequenza di valori.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> class represents a 3-tuple, or triple, which is a tuple that has three components.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> classe rappresenta una tupla con 3 elementi o triple, ovvero una tupla che include tre componenti.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">È possibile creare un'istanza di un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetto chiamando il <ph id="ph2">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> costruttore o statico <ph id="ph3">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>You can retrieve the values of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> instance properties.</source>
          <target state="translated">È possibile recuperare i valori dei componenti della tupla utilizzando la proprietà di sola lettura <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> delle proprietà dell'istanza.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">Le tuple sono comunemente utilizzate in quattro modi diversi:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To represent a single set of data.</source>
          <target state="translated">Per rappresentare un singolo set di dati.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">Ad esempio, una tupla può rappresentare un record di database e i componenti possono rappresentare i singoli campi del record.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">Per fornire facile accesso e la manipolazione di un set di dati.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L'esempio seguente definisce una matrice di <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> gli oggetti che contengono i nomi di studenti, i punteggi medi e il numero di test eseguiti.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean and standard deviation of the test scores.</source>
          <target state="translated">La matrice viene passata per il <ph id="ph1">`ComputeStatistics`</ph> metodo, che calcola la deviazione media e standard dei punteggi del test.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">Per restituire più valori da un metodo senza l'utilizzo di <ph id="ph1">`out`</ph> parametri (c#) o <ph id="ph2">`ByRef`</ph> parametri (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, the previous example returns its summary test score statistics in a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object.</source>
          <target state="translated">Ad esempio, l'esempio precedente restituisce le statistiche di punteggio riepilogo test in un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">Per passare più valori a un metodo tramite un singolo parametro.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">Ad esempio, il <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> dispone di un singolo parametro che consente di fornire un valore al metodo eseguito dal thread all'avvio.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object as the method argument, you can supply the thread’s startup routine with three items of data.</source>
          <target state="translated">Se si fornisce un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> dell'oggetto come argomento del metodo, è possibile fornire la routine di avvio del thread con tre elementi di dati.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">Valore del primo componente della tupla.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">Valore del secondo componente della tupla.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">Valore del terzo componente della tupla.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 3-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">È inoltre possibile utilizzare il metodo statico <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> metodo per creare un'istanza di un oggetto tupla con 3 elementi senza dover specificare in modo esplicito i tipi dei relativi componenti.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 3-tuple whose components are of type <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, and <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> metodo per creare un'istanza di una tupla con 3 elementi i cui componenti sono di tipo <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, e <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">Ciò equivale alla chiamata seguente al <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> costruttore della classe.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Oggetto da confrontare con questa istanza.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente è uguale a un oggetto specificato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'istanza corrente è uguale all'oggetto specificato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">Il <ph id="ph1">`obj`</ph> parametro viene considerato uguale all'istanza corrente nelle condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object.</source>
          <target state="translated">Si tratta di un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Its three components are of the same types as the current instance.</source>
          <target state="translated">I tre componenti sono dello stesso tipo dell'istanza corrente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Its three components are equal to those of the current instance.</source>
          <target state="translated">I tre componenti sono uguali a quelli dell'istanza corrente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">L'uguaglianza è determinata dall'operatore di uguaglianza predefinito dell'oggetto per ogni componente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method to determine whether any of the objects in an array of <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> objects are equal to one another.</source>
          <target state="translated">L'esempio seguente chiama il <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> metodo per determinare se uno degli oggetti in una matrice di <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> oggetti sono uguali tra loro.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The output reflects the fact that the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29&gt;</ph> method returns <ph id="ph2">`true`</ph> when comparing <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects whose components have equal values.</source>
          <target state="translated">L'output è dovuto al fatto che il <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29&gt;</ph> restituisce <ph id="ph2">`true`</ph> quando si confrontano <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> oggetti i cui componenti hanno valori uguali.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Restituisce il codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Codice hash di un intero con segno a 32 bit.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's first component.</source>
          <target state="translated">Ottiene il valore del primo componente dell'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's first component.</source>
          <target state="translated">Valore del primo componente dell'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">È possibile determinare in modo dinamico il tipo di <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> componente in uno dei due modi:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property.</source>
          <target state="translated">Chiamando il <ph id="ph1">`GetType`</ph> il valore restituito dal metodo di <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Recuperando il <ph id="ph1">&lt;xref:System.Type&gt;</ph> oggetto che rappresenta il <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> dell'oggetto e recuperando il primo elemento della matrice restituita dal relativo <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L'esempio seguente definisce una matrice di <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> gli oggetti che contengono i nomi di studenti, i punteggi medi e il numero di test eseguiti.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">La matrice viene passata per il <ph id="ph1">`ComputeStatistics`</ph> metodo, che viene calcolato il punteggio medio, deviazione standard e numero di case con cui vengono calcolate le statistiche.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Questi valori vengono archiviati nel <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetto restituito dal <ph id="ph2">`ComputeStatistics`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property contains the number of cases.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> proprietà contiene il numero di case.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's second component.</source>
          <target state="translated">Ottiene il valore del secondo componente dell'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's second component.</source>
          <target state="translated">Valore del secondo componente dell'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">È possibile determinare in modo dinamico il tipo di <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> componente in uno dei due modi:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Chiamando il <ph id="ph1">`GetType`</ph> il valore restituito dal metodo di <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Recuperando il <ph id="ph1">&lt;xref:System.Type&gt;</ph> oggetto che rappresenta il <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> dell'oggetto e il recupero del secondo elemento della matrice restituita dal relativo <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L'esempio seguente definisce una matrice di <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> gli oggetti che contengono i nomi di studenti, i punteggi medi e il numero di test eseguiti.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">La matrice viene passata per il <ph id="ph1">`ComputeStatistics`</ph> metodo, che viene calcolato il punteggio medio, deviazione standard e numero di case con cui vengono calcolate le statistiche.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Questi valori vengono archiviati nel <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetto restituito dal <ph id="ph2">`ComputeStatistics`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property contains the mean test score.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> proprietà contiene il punteggio medio del test.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's third component.</source>
          <target state="translated">Ottiene il valore del terzo componente dell'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's third component.</source>
          <target state="translated">Valore del terzo componente dell'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">È possibile determinare in modo dinamico il tipo di <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> componente in uno dei due modi:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property.</source>
          <target state="translated">Chiamando il <ph id="ph1">`GetType`</ph> il valore restituito dal metodo di <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the third element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Recuperando il <ph id="ph1">&lt;xref:System.Type&gt;</ph> oggetto che rappresenta il <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> dell'oggetto e recuperando il terzo elemento della matrice restituita dal relativo <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L'esempio seguente definisce una matrice di <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> gli oggetti che contengono i nomi di studenti, i punteggi medi e il numero di test eseguiti.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">La matrice viene passata per il <ph id="ph1">`ComputeStatistics`</ph> metodo, che viene calcolato il punteggio medio, deviazione standard e numero di case con cui vengono calcolate le statistiche.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Questi valori vengono archiviati nel <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetto restituito dal <ph id="ph2">`ComputeStatistics`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property contains the standard deviation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> proprietà contiene la deviazione standard.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Oggetto da confrontare con l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Oggetto che fornisce regole personalizzate per il confronto.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Confronta l'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Intero con segno che indica la posizione relativa di questa istanza e di <ph id="ph1">&lt;paramref name="other" /&gt;</ph> nell'ordinamento, come illustrato nella tabella seguente.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valore</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descrizione</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Numero intero negativo</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza precede <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza si trova nella stessa posizione di <ph id="ph3">&lt;paramref name="other" /&gt;</ph> nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Intero positivo</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'istanza segue <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">Anche se questo metodo può essere chiamato direttamente, viene chiamato più di frequente dall'insieme di metodi che includono di ordinamento <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parametri per ordinare i membri di una raccolta.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Ad esempio, viene chiamato <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> (metodo) e <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> metodo di un <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> oggetto che viene creata un'istanza utilizzando il <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> metodo è destinato all'utilizzo nelle operazioni di ordinamento.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">E non deve essere utilizzato quando lo scopo principale di un confronto per determinare se due oggetti sono uguali.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Per determinare se due oggetti sono uguali, chiamare il <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that consist of a student's name, mean test score, and number of tests.</source>
          <target state="translated">L'esempio seguente crea una matrice di <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetti costituiti da uno studente nome punteggio medio e numero di test.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> to display the value of each tuple in sorted order.</source>
          <target state="translated">Consente di visualizzare il componente di ogni tupla nella matrice in ordine casuale, Ordina la matrice e quindi chiama <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> per visualizzare il valore di ogni tupla in base all'ordinamento.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`ScoreComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects in ascending order by the value of their second component rather than their first component.</source>
          <target state="translated">Per ordinare la matrice, l'esempio definisce un oggetto generico <ph id="ph1">`ScoreComparer`</ph> classe che implementa il <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interfaccia e gli ordinamenti di <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> gli oggetti in ordine crescente per il valore del secondo componente anziché del primo componente.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si noti che nell'esempio viene chiamato direttamente il <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">Questo metodo viene chiamato in modo implicito dal <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> metodo per ogni elemento nella matrice.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> non è un oggetto <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Oggetto da confrontare con questa istanza.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Oggetto che definisce il metodo da usare per valutare se i due oggetti sono uguali.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'istanza corrente è uguale all'oggetto specificato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%603&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementazione viene chiamata solo se <ph id="ph2">`other`</ph> non <ph id="ph3">`null`</ph>, e se può essere correttamente il cast (in c#) o convertire (in Visual Basic) per un <ph id="ph4">&lt;xref:System.Tuple%603&gt;</ph> oggetto i cui componenti sono dello stesso tipo dell'istanza corrente.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> passa primo metodo di <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> valori del <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> oggetti da confrontare con il <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects.</source>
          <target state="translated">Se questo metodo restituisce <ph id="ph1">`true`</ph>, il metodo viene chiamato nuovamente e passato il <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> i valori dei due <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph> again, the method is called a third time and passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects.</source>
          <target state="translated">Se questo metodo restituisce <ph id="ph1">`true`</ph> nuovamente, il metodo viene chiamato una terza volta e vengono passati il <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> i valori dei due <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines an <ph id="ph1">`Item2Comparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface and changes the way in which <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects are evaluated for equality.</source>
          <target state="translated">L'esempio seguente definisce un <ph id="ph1">`Item2Comparer`</ph> classe che implementa il <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> l'interfaccia e cambia il modo in cui <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> gli oggetti vengono valutati per verificarne l'uguaglianza.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The method always returns <ph id="ph1">`true`</ph> when it is passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property values of two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects, and it calls the <ph id="ph4">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method to evaluate their <ph id="ph5">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property values.</source>
          <target state="translated">Il metodo restituisce sempre <ph id="ph1">`true`</ph> quando viene passato il <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> i valori delle proprietà di due <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> oggetti e chiama il <ph id="ph4">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> metodo per valutare i <ph id="ph5">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> i valori delle proprietà.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, their <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property values are passed to the method, which always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Se questo metodo restituisce <ph id="ph1">`true`</ph>relativo <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> i valori delle proprietà vengono passati al metodo, che restituisce sempre <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As a result, the method tests for equality based only on the value of the <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Di conseguenza, il metodo di test per verificarne l'uguaglianza solo in base al valore del <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The output illustrates the result for a data set of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that record the names, mean test score, and number of tests of students in a class.</source>
          <target state="translated">L'output mostra il risultato per un set di dati di <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetti che registrano i nomi, punteggio medio e numero di test di studenti in una classe.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Oggetto il cui metodo <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> calcola il codice hash dell'oggetto <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">Calcola il codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente tramite un metodo di calcolo specificato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Codice hash di un intero con segno a 32 bit.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Il metodo esegue semplicemente il wrapping di una chiamata al <ph id="ph1">`comparer`</ph> dell'oggetto <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">L'algoritmo utilizzato per calcolare il codice hash deve restituire lo stesso codice hash per due <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> gli oggetti che sono considerati uguali.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Oggetto da confrontare con l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Confronta l'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> corrente con un oggetto specificato e restituisce un intero che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Intero con segno che indica la posizione relativa di questa istanza e di <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> nell'ordinamento, come illustrato nella tabella seguente.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valore</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descrizione</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Numero intero negativo</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza precede <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza si trova nella stessa posizione di <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Intero positivo</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'istanza segue <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> class.</source>
          <target state="translated">Questo metodo fornisce il <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementazione per il <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">Anche se il metodo può essere chiamato direttamente, viene chiamato più di frequente dagli overload predefinito dell'insieme di metodi, di ordinamento, ad esempio <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, per ordinare i membri di una raccolta.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> metodo è destinato all'utilizzo nelle operazioni di ordinamento.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">E non deve essere utilizzato quando lo scopo principale di un confronto per determinare se due oggetti sono uguali.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Per determinare se due oggetti sono uguali, chiamare il <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method uses the default object comparer to compare each component.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> metodo Usa l'operatore predefinito dell'oggetto per confrontare ogni componente.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects whose components consist of a student's name, mean test score, and number of tests.</source>
          <target state="translated">L'esempio seguente crea una matrice di <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> oggetti i cui componenti è costituito da uno studente nome punteggio medio e numero di test.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">Visualizza i componenti di ogni tupla nella matrice in ordine casuale, Ordina la matrice e quindi chiama <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> per visualizzare ogni tupla in base all'ordinamento.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by its first component.</source>
          <target state="translated">L'output mostra che la matrice è ordinata per il primo componente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si noti che nell'esempio viene chiamato direttamente il <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">Questo metodo viene chiamato in modo implicito dal <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> metodo per ogni elemento nella matrice.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> non è un oggetto <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Indice dell'elemento <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 2.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> può variare da 0 a 2.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Ottiene il valore dell'elemento <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Valore dell'elemento <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> nella posizione specificata.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> proprietà è un'implementazione esplicita dell'interfaccia.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Per chiamarlo, è necessario eseguire il cast o convertire il <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> l'oggetto in un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> oggetto di interfaccia.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 2.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di 0 o maggiore di 2.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated">Ottiene il numero di elementi in <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>3, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">3, il numero di elementi in un oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> proprietà è un'implementazione esplicita dell'interfaccia.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Per chiamarlo, è necessario eseguire il cast o convertire il <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> l'oggetto in un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> oggetto di interfaccia.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> instance.</source>
          <target state="translated">Restituisce una stringa che rappresenta il valore di questa istanza di <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Rappresentazione di stringa dell'oggetto <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>), where <bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>, and <bpt id="p6">*</bpt>Item3<ept id="p6">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">La stringa restituita da questo metodo assume il formato (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>), dove <bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>, e <bpt id="p6">*</bpt>Item3<ept id="p6">*</ept> rappresentano i valori del <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> proprietà, rispettivamente.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se si verifica uno dei valori di proprietà <ph id="ph1">`null`</ph>, essa viene rappresentata come <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato il <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> metodo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>