<Type Name="Tuple&lt;T1,T2,T3&gt;" FullName="System.Tuple&lt;T1,T2,T3&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0256d83a26fc74125d0972e616f3032de8a8daf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39822013" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`3&lt;T1, T2, T3&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`3" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
    <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
    <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
    <summary>Rappresenta una tupla con 3 elementi, ovvero una terna.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una tupla è una struttura di dati con un numero e una sequenza di valori. Il <xref:System.Tuple%603> classe rappresenta una tupla con 3 elementi, o triplicata, che è una tupla che include tre componenti.  
  
 È possibile creare un'istanza di un <xref:System.Tuple%603> oggetto chiamando il <xref:System.Tuple%603.%23ctor%2A> costruttore o al metodo statico <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> (metodo). È possibile recuperare i valori dei componenti della tupla di valori usando le proprietà di sola lettura <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, e <xref:System.Tuple%603.Item3%2A> delle proprietà dell'istanza.  
  
 Le tuple sono comunemente usate in quattro modi diversi:  
  
-   Per rappresentare un singolo set di dati. Ad esempio, una tupla può rappresentare un record di database e i relativi componenti possono rappresentare i singoli campi del record.  
  
-   Per fornire accesso semplificato alle e la manipolazione di, un set di dati. L'esempio seguente definisce una matrice di <xref:System.Tuple%603> gli oggetti che contengono i nomi degli studenti, i punteggi dei test medio e il numero di test eseguito. La matrice viene passata al `ComputeStatistics` metodo che calcola la deviazione media e standard dei punteggi del test.  
  
     [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
-   Per restituire più valori da un metodo senza usare `out` parametri (in c#) o `ByRef` parametri (in Visual Basic). Ad esempio, nell'esempio precedente restituisce le statistiche di punteggio riepilogo test in un <xref:System.Tuple%603> oggetto.  
  
-   Per passare più valori a un metodo tramite un singolo parametro. Ad esempio, il <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> metodo ha un singolo parametro che consente di fornire un valore al metodo eseguito dal thread all'avvio. Se si fornisce un <xref:System.Tuple%603> dell'oggetto come argomento del metodo, è possibile fornire routine di avvio del thread con tre elementi di dati.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.#ctor(`0,`1,`2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3&gt; : 'T1 * 'T2 * 'T3 -&gt; Tuple&lt;'T1, 'T2, 'T3&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3&gt; (item1, item2, item3)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
      </Parameters>
      <Docs>
        <param name="item1">Valore del primo componente della tupla.</param>
        <param name="item2">Valore del secondo componente della tupla.</param>
        <param name="item3">Valore del terzo componente della tupla.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`3" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È anche possibile usare il metodo statico <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> metodo per creare un'istanza di un oggetto tupla con 3 elementi senza dover specificare in modo esplicito i tipi dei relativi componenti. L'esempio seguente usa il <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> metodo per creare un'istanza di una tupla con 3 elementi i cui componenti sono di tipo <xref:System.String>, <xref:System.Double>, e <xref:System.Double>.  
  
 [!code-csharp[System.Tuple.Create#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#5)]
 [!code-vb[System.Tuple.Create#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#5)]  
  
 Ciò equivale alla chiamata seguente al <xref:System.Tuple%603.%23ctor%2A> costruttore della classe.  
  
 [!code-csharp[System.Tuple.Create#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#6)]
 [!code-vb[System.Tuple.Create#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con questa istanza.</param>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`3" /> corrente è uguale a un oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se l'istanza corrente è uguale all'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `obj` parametro viene considerato uguale all'istanza corrente nelle condizioni seguenti:  
  
-   Si tratta di un <xref:System.Tuple%603> oggetto.  
  
-   I tre componenti sono dello stesso tipo dell'istanza corrente.  
  
-   I tre componenti sono uguali a quelli dell'istanza corrente. L'uguaglianza è determinata dall'operatore di uguaglianza predefinito dell'oggetto per ogni componente.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType> metodo per determinare se uno qualsiasi degli oggetti in una matrice di <xref:System.Tuple%603> oggetti sono uguali tra loro. L'output riflette il fatto che il <xref:System.Tuple%603.Equals%28System.Object%29> restituzione del metodo `true` quando si confrontano <xref:System.Tuple%603> oggetti i cui componenti hanno valori uguali.  
  
 [!code-csharp[System.Tuple\`3.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`3.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
        <returns>Codice hash di un intero con segno a 32 bit.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
        <value>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile determinare in modo dinamico il tipo del <xref:System.Tuple%603.Item1%2A> componente in uno dei due modi:  
  
-   Chiamando il `GetType` sul valore restituito dal metodo di <xref:System.Tuple%603.Item1%2A> proprietà.  
  
-   Recuperando il <xref:System.Type> oggetto che rappresenta il <xref:System.Tuple%603> dell'oggetto e il recupero del primo elemento dalla matrice restituita dal relativo <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 L'esempio seguente definisce una matrice di <xref:System.Tuple%603> gli oggetti che contengono i nomi degli studenti, i punteggi dei test medio e il numero di test eseguito. La matrice viene passata al `ComputeStatistics` metodo che calcola il punteggio medio, deviazione standard e numero di case da cui vengono calcolate le statistiche. Questi valori vengono archiviati nel <xref:System.Tuple%603> oggetto restituito dal `ComputeStatistics` (metodo). Il <xref:System.Tuple%603.Item1%2A> proprietà contiene il numero di case.  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
        <value>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile determinare in modo dinamico il tipo del <xref:System.Tuple%603.Item2%2A> componente in uno dei due modi:  
  
-   Chiamando il `GetType` sul valore restituito dal metodo di <xref:System.Tuple%603.Item2%2A> proprietà.  
  
-   Recuperando il <xref:System.Type> oggetto che rappresenta il <xref:System.Tuple%603> dell'oggetto e il recupero del secondo elemento dalla matrice restituita dal relativo <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 L'esempio seguente definisce una matrice di <xref:System.Tuple%603> gli oggetti che contengono i nomi degli studenti, i punteggi dei test medio e il numero di test eseguito. La matrice viene passata al `ComputeStatistics` metodo che calcola il punteggio medio, deviazione standard e numero di case da cui vengono calcolate le statistiche. Questi valori vengono archiviati nel <xref:System.Tuple%603> oggetto restituito dal `ComputeStatistics` (metodo). Il <xref:System.Tuple%603.Item2%2A> proprietà contiene il punteggio medio del test.  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore del terzo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
        <value>Valore del terzo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile determinare in modo dinamico il tipo del <xref:System.Tuple%603.Item3%2A> componente in uno dei due modi:  
  
-   Chiamando il `GetType` sul valore restituito dal metodo di <xref:System.Tuple%603.Item3%2A> proprietà.  
  
-   Recuperando il <xref:System.Type> oggetto che rappresenta il <xref:System.Tuple%603> dell'oggetto e il recupero del terzo elemento dalla matrice restituita dal relativo <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 L'esempio seguente definisce una matrice di <xref:System.Tuple%603> gli oggetti che contengono i nomi degli studenti, i punteggi dei test medio e il numero di test eseguito. La matrice viene passata al `ComputeStatistics` metodo che calcola il punteggio medio, deviazione standard e numero di case da cui vengono calcolate le statistiche. Questi valori vengono archiviati nel <xref:System.Tuple%603> oggetto restituito dal `ComputeStatistics` (metodo). Il <xref:System.Tuple%603.Item3%2A> proprietà contiene la deviazione standard.  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
        <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
        <summary>Confronta l'oggetto <see cref="T:System.Tuple`3" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
        <returns>Intero con segno che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore  </term><description> Descrizione  </description></listheader><item><term> Un numero intero negativo  </term><description> Questa istanza precede <paramref name="other" />.  </description></item><item><term> Zero  </term><description> Questa istanza si trova nella stessa posizione di <paramref name="other" /> nell'ordinamento.  </description></item><item><term> Un numero intero positivo </term><description> Questa istanza segue <paramref name="other" />.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Tuple%603> a un'interfaccia <xref:System.Collections.IStructuralComparable>.  
  
 Sebbene questo metodo può essere chiamato direttamente, viene chiamato più di frequente dall'insieme l'ordinamento di metodi che includono <xref:System.Collections.IComparer> parametri per ordinare i membri di una raccolta. Ad esempio, viene chiamato <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> (metodo) e il <xref:System.Collections.SortedList.Add%2A> metodo di un <xref:System.Collections.SortedList> oggetto che viene creata un'istanza usando il <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> costruttore.  
  
> [!CAUTION]
>  Il <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> metodo è destinato all'utilizzo nelle operazioni di ordinamento. Consigliabile non usarla quando lo scopo principale di un confronto per determinare se due oggetti sono uguali. Per determinare se due oggetti sono uguali, chiamare il <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 L'esempio seguente crea una matrice di <xref:System.Tuple%603> oggetti costituiti da nome di uno studente, punteggio medio e numero di test. Consente di visualizzare il componente di ogni tupla nella matrice in ordine casuale, Ordina la matrice e quindi chiama <xref:System.Tuple%603.ToString%2A> per visualizzare il valore di ogni tupla in base all'ordinamento. Per ordinare una matrice, l'esempio definisce un oggetto generico `ScoreComparer` classe che implementa le <xref:System.Collections.IComparer> interfaccia e gli ordinamenti di <xref:System.Tuple%603> gli oggetti in ordine crescente per il valore del secondo componente anziché del primo componente. Si noti che l'esempio non viene chiamato direttamente il <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> (metodo). Questo metodo viene chiamato in modo implicito dal <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> metodo per ogni elemento nella matrice.  
  
 [!code-csharp[System.Tuple\`3.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`3.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`3" />.</exception>
        <altmember cref="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con questa istanza.</param>
        <param name="comparer">Oggetto che definisce il metodo da usare per valutare se i due oggetti sono uguali.</param>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`3" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
        <returns>
          <see langword="true" /> se l'istanza corrente è uguale all'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Tuple%603> a un'interfaccia <xref:System.Collections.IStructuralEquatable>.  
  
 Il <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementazione viene chiamata solo se `other` non è `null`, e se è possibile eseguirne correttamente il cast (in c#) o convertire (in Visual Basic) per un <xref:System.Tuple%603> oggetto i cui componenti sono dello stesso tipo dell'istanza corrente. Il <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> metodo passa prima il <xref:System.Tuple%603.Item1%2A> i valori del <xref:System.Tuple%603> oggetti da confrontare con il <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementazione. Se questa chiamata al metodo restituisce `true`, il metodo viene chiamato nuovamente e passare il <xref:System.Tuple%603.Item2%2A> i valori dei due <xref:System.Tuple%603> oggetti. Se questa chiamata al metodo restituisce `true` anche in questo caso, il metodo viene chiamato una terza volta e vengono passati il <xref:System.Tuple%603.Item3%2A> i valori dei due <xref:System.Tuple%603> oggetti.  
  
   
  
## Examples  
 L'esempio seguente definisce un `Item2Comparer` classe che implementa le <xref:System.Collections.IEqualityComparer> l'interfaccia e il modo in cui viene modificato <xref:System.Tuple%603> gli oggetti vengono valutati per verificarne l'uguaglianza. Il metodo restituisce sempre `true` quando viene passato il <xref:System.Tuple%603.Item1%2A> valori delle proprietà di due <xref:System.Tuple%603> oggetti che chiama il <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> metodo per valutare i <xref:System.Tuple%603.Item2%2A> i valori delle proprietà. Se questa chiamata al metodo restituisce `true`, con i <xref:System.Tuple%603.Item3%2A> i valori delle proprietà vengono passati al metodo, che restituisce sempre `true`. Di conseguenza, il metodo di test per verificarne l'uguaglianza solo in base al valore della <xref:System.Tuple%603.Item2%2A> proprietà. Viene illustrato il risultato per un set di dati di output <xref:System.Tuple%603> gli oggetti che registrano i nomi, punteggio medio e numero di test di studenti in una classe.  
  
 [!code-csharp[System.Tuple\`3.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`3.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</param>
        <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`3" /> corrente tramite un metodo di calcolo specificato.</summary>
        <returns>Codice hash di un intero con segno a 32 bit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Tuple%603> a un'interfaccia <xref:System.Collections.IStructuralEquatable>.  
  
 Il metodo esegue semplicemente il wrapping di una chiamata ai `comparer` dell'oggetto <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementazione.  
  
 L'algoritmo utilizzato per calcolare il codice hash deve restituire lo stesso codice hash per due <xref:System.Tuple%603> gli oggetti che sono considerati uguali.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
        <summary>Confronta l'oggetto <see cref="T:System.Tuple`3" /> corrente con un oggetto specificato e restituisce un intero che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato nell'ordinamento.</summary>
        <returns>Intero con segno che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore  </term><description> Descrizione  </description></listheader><item><term> Un numero intero negativo  </term><description> Questa istanza precede <paramref name="obj" />.  </description></item><item><term> Zero  </term><description> Questa istanza si trova nella stessa posizione di <paramref name="obj" /> nell'ordinamento.  </description></item><item><term> Un numero intero positivo </term><description> Questa istanza segue <paramref name="obj" />.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Tuple%603> a un'interfaccia <xref:System.IComparable>.  
  
 Questo metodo fornisce il <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementazione per il <xref:System.Tuple%603> classe. Anche se il metodo può essere chiamato direttamente, viene chiamato più di frequente dagli overload predefiniti, ad esempio, i metodi di ordinamento della raccolta <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> e <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, ordinare i membri di una raccolta.  
  
> [!CAUTION]
>  Il <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> metodo è destinato all'utilizzo nelle operazioni di ordinamento. Consigliabile non usarla quando lo scopo principale di un confronto per determinare se due oggetti sono uguali. Per determinare se due oggetti sono uguali, chiamare il <xref:System.Tuple%603.Equals%2A> (metodo).  
  
 Il <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> metodo Usa l'operatore di confronto di oggetto predefinito per confrontare ogni componente.  
  
   
  
## Examples  
 L'esempio seguente crea una matrice di <xref:System.Tuple%603> oggetti i cui componenti sono costituiti name, punteggio medio e numero di test di uno studente. Consente di visualizzare i componenti di ogni tupla nella matrice in ordine casuale, Ordina la matrice e quindi chiama <xref:System.Tuple%603.ToString%2A> per visualizzare ogni tupla in base all'ordinamento. L'output mostra che la matrice siano stata ordinata, il primo componente. Si noti che l'esempio non viene chiamato direttamente il <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> (metodo). Questo metodo viene chiamato in modo implicito dal <xref:System.Array.Sort%28System.Array%29> metodo per ogni elemento nella matrice.  
  
 [!code-csharp[System.Tuple\`3.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`3.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`3" />.</exception>
        <altmember cref="M:System.Tuple`3.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'elemento <see langword="Tuple" /> specificato. <c>index</c> può variare da 0 a 2.</param>
        <summary>Ottiene il valore dell'elemento <see langword="Tuple" /> specificato.</summary>
        <value>Valore dell'elemento <see langword="Tuple" /> nella posizione specificata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> proprietà è un'implementazione esplicita dell'interfaccia. Per la chiamata, è necessario eseguire il cast o convertire le <xref:System.Tuple%603> dell'oggetto a un <xref:System.Runtime.CompilerServices.ITuple> oggetto interfaccia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" /> è minore di 0 o maggiore di 2.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di elementi in <see langword="Tuple" />.</summary>
        <value>3, il numero di elementi in un oggetto <see cref="T:System.Tuple`3" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> proprietà è un'implementazione esplicita dell'interfaccia. Per la chiamata, è necessario eseguire il cast o convertire le <xref:System.Tuple%603> dell'oggetto a un <xref:System.Runtime.CompilerServices.ITuple> oggetto interfaccia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`3" />.</summary>
        <returns>Rappresentazione di stringa dell'oggetto <see cref="T:System.Tuple`3" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa restituita da questo metodo accetta il form (*Item1*, *Item2*, *Item3*), dove *Item1*, *Item2*, e *Item3* rappresentano i valori del <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, e <xref:System.Tuple%603.Item3%2A> proprietà, rispettivamente. Se uno dei valori della proprietà è `null`, essa viene rappresentata come <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il <xref:System.Tuple%603.ToString%2A> (metodo).  
  
 [!code-csharp[System.Tuple\`3.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`3.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>