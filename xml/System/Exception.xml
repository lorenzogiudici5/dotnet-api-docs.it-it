<Type Name="Exception" FullName="System.Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="849d30aa85e6c854b68c1ba21c0d2b2f5b5886ce" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52385602" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Exception = class&#xA;    interface ISerializable&#xA;    interface _Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e631d-101">Rappresenta gli errori che si verificano durante l'esecuzione dell'applicazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e631d-101">Represents errors that occur during application execution.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-102">Questa classe è la classe base per tutte le eccezioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="e631d-103">Quando si verifica un errore, il sistema o l'applicazione attualmente in esecuzione segnala generando un'eccezione che contiene informazioni sull'errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="e631d-104">Dopo che viene generata un'eccezione, viene gestita dall'applicazione o dal gestore eccezioni predefinito.</span><span class="sxs-lookup"><span data-stu-id="e631d-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="e631d-105">Contenuto della sezione:</span><span class="sxs-lookup"><span data-stu-id="e631d-105">In this section:</span></span>  
  
 <span data-ttu-id="e631d-106">[Errori ed eccezioni](#Errors) </span><span class="sxs-lookup"><span data-stu-id="e631d-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="e631d-107">[Blocchi try/catch](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="e631d-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="e631d-108">[Funzionalità di tipo di eccezione](#Features) </span><span class="sxs-lookup"><span data-stu-id="e631d-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="e631d-109">[Proprietà di classe di eccezione](#Properties) </span><span class="sxs-lookup"><span data-stu-id="e631d-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="e631d-110">[Considerazioni sulle prestazioni](#Performance) </span><span class="sxs-lookup"><span data-stu-id="e631d-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="e631d-111">[Generare nuovamente un'eccezione](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="e631d-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="e631d-112">[Scelta di eccezioni standard](#Standard) </span><span class="sxs-lookup"><span data-stu-id="e631d-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="e631d-113">Implementazione di eccezioni personalizzate</span><span class="sxs-lookup"><span data-stu-id="e631d-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="e631d-114">Errori ed eccezioni</span><span class="sxs-lookup"><span data-stu-id="e631d-114">Errors and exceptions</span></span>  
 <span data-ttu-id="e631d-115">Errori di run-time possono verificarsi per diversi motivi.</span><span class="sxs-lookup"><span data-stu-id="e631d-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="e631d-116">Tuttavia, non tutti gli errori devono essere gestiti come eccezioni nel codice.</span><span class="sxs-lookup"><span data-stu-id="e631d-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="e631d-117">Ecco alcune categorie di errori che possono verificarsi in fase di esecuzione e le modalità appropriate per rispondere ad essi.</span><span class="sxs-lookup"><span data-stu-id="e631d-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="e631d-118">**Errori di utilizzo.**</span><span class="sxs-lookup"><span data-stu-id="e631d-118">**Usage errors.**</span></span> <span data-ttu-id="e631d-119">Un errore di utilizzo rappresenta un errore nella logica di programma che può generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="e631d-120">Tuttavia, l'errore deve essere risolto, ma non tramite la gestione delle eccezioni modificando il codice non corretto.</span><span class="sxs-lookup"><span data-stu-id="e631d-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="e631d-121">Ad esempio, l'override del <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metodo nell'esempio seguente si presuppone che il `obj` argomento deve sempre essere non null.</span><span class="sxs-lookup"><span data-stu-id="e631d-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="e631d-122">Il <xref:System.NullReferenceException> eccezione risultante quando `obj` viene `null` può essere eliminata, modificando il codice sorgente per verificare in modo esplicito i valori null prima di chiamare il <xref:System.Object.Equals%2A?displayProperty=nameWithType> override e quindi nuovamente la compilazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="e631d-123">Nell'esempio seguente contiene il codice sorgente corretto che gestisce un `null` argomento.</span><span class="sxs-lookup"><span data-stu-id="e631d-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="e631d-124">Anziché utilizzare Gestione delle eccezioni per gli errori di utilizzo, è possibile usare il <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metodo per identificare gli errori di sintassi nelle build di debug e il <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> compilazioni di metodo per identificare gli errori di sintassi nel debug e rilascio.</span><span class="sxs-lookup"><span data-stu-id="e631d-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="e631d-125">Per altre informazioni, vedere [asserzioni nel codice gestito](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="e631d-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="e631d-126">**Errori del programma.**</span><span class="sxs-lookup"><span data-stu-id="e631d-126">**Program errors.**</span></span> <span data-ttu-id="e631d-127">Un errore del programma è un errore di runtime che non è possibile evitare necessariamente scrivendo codice privo di errori.</span><span class="sxs-lookup"><span data-stu-id="e631d-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="e631d-128">In alcuni casi, un errore del programma può riflettere una condizione di errore previsto o routine.</span><span class="sxs-lookup"><span data-stu-id="e631d-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="e631d-129">In questo caso, è consigliabile evitare di usare la gestione delle eccezioni per gestire l'errore di programma e invece di ripetere l'operazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="e631d-130">Ad esempio, se è previsto che l'utente di immettere una data in un formato specifico, è possibile analizzare la stringa di data chiamando il <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> metodo, che restituisce un <xref:System.Boolean> valore che indica se l'operazione di analisi è riuscita, anziché utilizzare il <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>metodo che genera una <xref:System.FormatException> eccezione se la stringa di data non può essere convertita in un <xref:System.DateTime> valore.</span><span class="sxs-lookup"><span data-stu-id="e631d-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="e631d-131">Analogamente, se un utente tenta di aprire un file che non esiste, è possibile chiamare innanzitutto il <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> metodo per verificare se il file esiste e, in caso contrario, richiesta all'utente se vuole crearlo.</span><span class="sxs-lookup"><span data-stu-id="e631d-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="e631d-132">In altri casi, un errore del programma riflette una condizione di errore imprevisto che può essere gestita nel codice.</span><span class="sxs-lookup"><span data-stu-id="e631d-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="e631d-133">Ad esempio, anche se è stata selezionata l'opzione per assicurarsi che esista un file, potrebbero essere eliminata prima che è possibile aprirla, oppure potrebbe essere danneggiato.</span><span class="sxs-lookup"><span data-stu-id="e631d-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="e631d-134">In tal caso, il tentativo di aprire il file creando un <xref:System.IO.StreamReader> oggetto o chiamare il <xref:System.IO.File.Open%2A> metodo potrebbe generare un <xref:System.IO.FileNotFoundException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="e631d-135">In questi casi, è necessario utilizzare per risolvere l'errore di gestione delle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="e631d-136">**Errori di sistema.**</span><span class="sxs-lookup"><span data-stu-id="e631d-136">**System failures.**</span></span> <span data-ttu-id="e631d-137">Un errore di sistema è un errore di run-time che non può essere gestito a livello di codice in modo significativo.</span><span class="sxs-lookup"><span data-stu-id="e631d-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="e631d-138">Ad esempio, qualsiasi metodo può generare un <xref:System.OutOfMemoryException> eccezione se common language runtime non riesce ad allocare memoria aggiuntiva.</span><span class="sxs-lookup"><span data-stu-id="e631d-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="e631d-139">In genere, gli errori di sistema non vengono gestiti tramite la gestione delle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="e631d-140">In alternativa, è possibile usare un evento, ad esempio <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> e chiamare il <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> metodo per registrare le informazioni sull'eccezione e notifica all'utente dell'errore prima che l'applicazione viene terminata.</span><span class="sxs-lookup"><span data-stu-id="e631d-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="e631d-141">Blocchi try/catch</span><span class="sxs-lookup"><span data-stu-id="e631d-141">Try/catch blocks</span></span>  
 <span data-ttu-id="e631d-142">Common language runtime fornisce un modello di gestione delle eccezioni che si basa sulla rappresentazione delle eccezioni come oggetti e la separazione del codice del programma e codice nella gestione delle eccezioni `try` blocchi e `catch` blocchi.</span><span class="sxs-lookup"><span data-stu-id="e631d-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="e631d-143">Possono essere presenti uno o più `catch` si blocca, ognuna progettata per gestire un particolare tipo di eccezione o un blocco progettato per rilevare un'eccezione più specifica rispetto a un altro blocco.</span><span class="sxs-lookup"><span data-stu-id="e631d-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="e631d-144">Se un'applicazione gestisce le eccezioni che si verificano durante l'esecuzione di un blocco di codice dell'applicazione, il codice deve essere inserito all'interno di un `try` istruzione e viene chiamato un `try` blocco.</span><span class="sxs-lookup"><span data-stu-id="e631d-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="e631d-145">Il codice dell'applicazione che gestisce le eccezioni generate da un `try` blocco viene posizionato all'interno di un `catch` istruzione e viene chiamato un `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="e631d-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="e631d-146">Zero o più `catch` blocchi sono associati un `try` blocchi e ogni `catch` blocco include un filtro di tipo che determina i tipi di eccezioni gestisce.</span><span class="sxs-lookup"><span data-stu-id="e631d-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="e631d-147">Quando si verifica un'eccezione in un `try` blocco, il sistema cerca associato `catch` blocchi in ordine vengono visualizzati nel codice dell'applicazione, fino a quando non viene individuato un `catch` blocco che gestisce l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="e631d-148">Oggetto `catch` blocco gestisce un'eccezione di tipo `T` se il filtro del tipo del blocco catch specifica `T` o qualsiasi altro tipo che `T` deriva da.</span><span class="sxs-lookup"><span data-stu-id="e631d-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="e631d-149">Il sistema si arresta la ricerca dopo che trova il primo `catch` blocco che gestisce l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="e631d-150">Per questo motivo, nel codice dell'applicazione, un `catch` blocco che gestisce un tipo deve essere specificato prima un `catch` blocco che gestisce i tipi di base, come illustrato nell'esempio illustrato di seguito in questa sezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="e631d-151">Un blocco catch che gestisce `System.Exception` è specificato per ultimo.</span><span class="sxs-lookup"><span data-stu-id="e631d-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="e631d-152">Se nessuna delle `catch` blocchi associati all'oggetto corrente `try` blocco di gestire l'eccezione e corrente `try` blocco è annidato all'interno di altri `try` Blocca nella chiamata corrente, il `catch` blocchi associati alla successiva inclusione `try` blocco vengono cercati.</span><span class="sxs-lookup"><span data-stu-id="e631d-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="e631d-153">Se nessun `catch` blocco per l'eccezione viene trovato, il sistema di ricerca precedenti livelli di annidamento nella chiamata corrente.</span><span class="sxs-lookup"><span data-stu-id="e631d-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="e631d-154">Se nessun `catch` bloccare per l'eccezione viene trovato nella chiamata corrente, l'eccezione viene passata nello stack di chiamate e stack frame precedente viene cercato un `catch` blocco che gestisce l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="e631d-155">La ricerca dello stack di chiamate prosegue fino a quando non viene gestita l'eccezione oppure fino a quando non esistono alcun più frame nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="e631d-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="e631d-156">Se si raggiunge l'inizio dello stack di chiamate senza trovare una `catch` questa viene gestita dal blocco che gestisce l'eccezione, il gestore eccezioni predefinito e l'applicazione viene terminata.</span><span class="sxs-lookup"><span data-stu-id="e631d-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="e631d-157">Funzionalità di tipo di eccezione</span><span class="sxs-lookup"><span data-stu-id="e631d-157">Exception type features</span></span>  
 <span data-ttu-id="e631d-158">Tipi di eccezione supportano le funzionalità seguenti:</span><span class="sxs-lookup"><span data-stu-id="e631d-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="e631d-159">Testo leggibile che descrive l'errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="e631d-160">Quando si verifica un'eccezione, il runtime effettua un messaggio di testo disponibile per informare l'utente relativa alla natura dell'errore e di suggerire azioni per risolvere il problema.</span><span class="sxs-lookup"><span data-stu-id="e631d-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="e631d-161">Questo messaggio di testo viene mantenuto nella <xref:System.Exception.Message%2A> proprietà dell'oggetto eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="e631d-162">Durante la creazione dell'oggetto eccezione, è possibile passare una stringa di testo al costruttore per descrivere i dettagli di tale particolare eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="e631d-163">Se al costruttore viene fornito alcun argomento di messaggio di errore, viene utilizzato il messaggio di errore predefinito.</span><span class="sxs-lookup"><span data-stu-id="e631d-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="e631d-164">Per altre informazioni, vedere la proprietà <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="e631d-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="e631d-165">Lo stato dello stack di chiamate quando è stata generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="e631d-166">Il <xref:System.Exception.StackTrace%2A> proprietà contiene un'analisi dello stack che può essere utilizzata per determinare dove si verifica l'errore nel codice.</span><span class="sxs-lookup"><span data-stu-id="e631d-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="e631d-167">L'analisi dello stack vengono elencati tutti i metodi chiamati e i numeri di riga nel file di origine in cui vengono effettuate le chiamate.</span><span class="sxs-lookup"><span data-stu-id="e631d-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="e631d-168">Proprietà di classe di eccezione</span><span class="sxs-lookup"><span data-stu-id="e631d-168">Exception class properties</span></span>  
 <span data-ttu-id="e631d-169">Il <xref:System.Exception> classe include numerose proprietà che consentono di identificare la posizione del codice, il tipo, il file della Guida e il motivo dell'eccezione: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, e <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="e631d-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="e631d-170">Quando tra due o più eccezioni, esiste una relazione causale con il <xref:System.Exception.InnerException%2A> proprietà gestisce queste informazioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="e631d-171">Eccezione esterna generata in risposta a questa eccezione interna.</span><span class="sxs-lookup"><span data-stu-id="e631d-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="e631d-172">Il codice che gestisce l'eccezione esterna può usare le informazioni relative all'eccezione interna precedente per gestire l'errore in modo più appropriato.</span><span class="sxs-lookup"><span data-stu-id="e631d-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="e631d-173">Informazioni supplementari relative all'eccezione possono essere archiviate come una raccolta di coppie chiave/valore nel <xref:System.Exception.Data%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e631d-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="e631d-174">La stringa di messaggio di errore che viene passata al costruttore durante la creazione dell'oggetto eccezione deve essere localizzata e può essere fornita da un file di risorse usando il <xref:System.Resources.ResourceManager> classe.</span><span class="sxs-lookup"><span data-stu-id="e631d-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="e631d-175">Per altre informazioni sulle risorse localizzate, vedere la [creazione di assembly Satellite](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) e [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) argomenti.</span><span class="sxs-lookup"><span data-stu-id="e631d-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="e631d-176">Per fornire all'utente con informazioni approfondite sulla causa dell'eccezione, il <xref:System.Exception.HelpLink%2A> proprietà può contenere un URL (o URN) a un file della Guida.</span><span class="sxs-lookup"><span data-stu-id="e631d-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="e631d-177">Il <xref:System.Exception> classe utilizza COR_E_EXCEPTION HRESULT, che ha il valore 0x80131500.</span><span class="sxs-lookup"><span data-stu-id="e631d-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="e631d-178">Per un elenco di valori di proprietà iniziali per un'istanza del <xref:System.Exception> classe, vedere il <xref:System.Exception.%23ctor%2A> costruttori.</span><span class="sxs-lookup"><span data-stu-id="e631d-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="e631d-179">Considerazioni sulle prestazioni</span><span class="sxs-lookup"><span data-stu-id="e631d-179">Performance considerations</span></span>  
 <span data-ttu-id="e631d-180">La generazione o gestendo un'eccezione consuma una quantità significativa di tempo di esecuzione e le risorse di sistema.</span><span class="sxs-lookup"><span data-stu-id="e631d-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="e631d-181">Generare eccezioni solo per gestire condizioni davvero straordinarie, non per la gestione degli eventi stimabili o controllo di flusso.</span><span class="sxs-lookup"><span data-stu-id="e631d-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="e631d-182">Ad esempio, in alcuni casi, ad esempio quando si sviluppa una libreria di classi, è ragionevole generare un'eccezione se un argomento del metodo non è valido, poiché si prevede che il metodo da chiamare con i parametri validi.</span><span class="sxs-lookup"><span data-stu-id="e631d-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="e631d-183">Un argomento del metodo non è valido, se non è il risultato di un errore di utilizzo, significa che si è verificato qualcosa di straordinario.</span><span class="sxs-lookup"><span data-stu-id="e631d-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="e631d-184">Al contrario, non generare un'eccezione se l'input dell'utente non valido. è possibile prevedere che gli utenti immettano occasionalmente i dati non validi.</span><span class="sxs-lookup"><span data-stu-id="e631d-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="e631d-185">Invece, offrono un meccanismo di ripetizione dei tentativi in modo che gli utenti possono immettere un input valido.</span><span class="sxs-lookup"><span data-stu-id="e631d-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="e631d-186">Né è opportuno utilizzare eccezioni per gestire gli errori di utilizzo.</span><span class="sxs-lookup"><span data-stu-id="e631d-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="e631d-187">Usare invece [asserzioni](/visualstudio/debugger/assertions-in-managed-code) per identificare e correggere gli errori di utilizzo.</span><span class="sxs-lookup"><span data-stu-id="e631d-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="e631d-188">Inoltre, non generano un'eccezione quando un codice restituito è sufficiente. non convertire un codice restituito per un'eccezione. eseguire operazioni non regolarmente catch un'eccezione, ignorarlo e quindi continuare l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="e631d-189">Nuova generazione di un'eccezione</span><span class="sxs-lookup"><span data-stu-id="e631d-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="e631d-190">In molti casi, un gestore di eccezioni deve semplicemente passare l'eccezione al chiamante.</span><span class="sxs-lookup"><span data-stu-id="e631d-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="e631d-191">Questa situazione si verifica spesso:</span><span class="sxs-lookup"><span data-stu-id="e631d-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="e631d-192">Una libreria di classi che a sua volta esegue il wrapping di chiamate ai metodi nella libreria di classi .NET Framework o altre librerie di classi.</span><span class="sxs-lookup"><span data-stu-id="e631d-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="e631d-193">Un'applicazione o una libreria che si verifica un'eccezione irreversibile.</span><span class="sxs-lookup"><span data-stu-id="e631d-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="e631d-194">Il gestore di eccezioni è possibile registrare l'eccezione e quindi generare nuovamente l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="e631d-195">Il metodo consigliato per generare nuovamente un'eccezione è sufficiente utilizzare il [throw](~/docs/csharp/language-reference/keywords/throw.md) istruzione in c# e il [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) istruzione in Visual Basic senza includere un'espressione.</span><span class="sxs-lookup"><span data-stu-id="e631d-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="e631d-196">Ciò garantisce che tutte le informazioni sullo stack di chiamate viene mantenute quando l'eccezione viene propagata al chiamante.</span><span class="sxs-lookup"><span data-stu-id="e631d-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="e631d-197">Questa condizione è illustrata nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="e631d-197">The following example illustrates this.</span></span> <span data-ttu-id="e631d-198">Un metodo di estensione, stringa `FindOccurrences`, esegue il wrapping di uno o più chiamate a <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> senza convalidare gli argomenti in anticipo.</span><span class="sxs-lookup"><span data-stu-id="e631d-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="e631d-199">Un chiamante chiama quindi `FindOccurrences` due volte.</span><span class="sxs-lookup"><span data-stu-id="e631d-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="e631d-200">Nella seconda chiamata a `FindOccurrences`, il chiamante passa una `null` come stringa di ricerca, quali casi il <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> metodo consente di generare un <xref:System.ArgumentNullException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="e631d-201">Questa eccezione viene gestita mediante il `FindOccurrences` (metodo) e passato di nuovo al chiamante.</span><span class="sxs-lookup"><span data-stu-id="e631d-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="e631d-202">Poiché l'istruzione throw viene usato senza un'espressione, l'output dell'esempio mostra che viene mantenuto lo stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="e631d-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="e631d-203">Al contrario, se l'eccezione viene generata nuovamente tramite il</span><span class="sxs-lookup"><span data-stu-id="e631d-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp  
throw e  
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="e631d-204">istruzione, lo stack di chiamate completo non viene mantenuto e l'esempio genera l'output seguente:</span><span class="sxs-lookup"><span data-stu-id="e631d-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="e631d-205">Un'alternativa leggermente più complessa è generare una nuova eccezione e conservare informazioni sullo stack di chiamate dell'eccezione originale in un'eccezione interna.</span><span class="sxs-lookup"><span data-stu-id="e631d-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="e631d-206">Il chiamante può quindi utilizzare la nuova eccezione <xref:System.Exception.InnerException%2A> proprietà per recuperare il frame dello stack e altre informazioni sull'eccezione originale.</span><span class="sxs-lookup"><span data-stu-id="e631d-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="e631d-207">In questo caso, l'istruzione throw è:</span><span class="sxs-lookup"><span data-stu-id="e631d-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="e631d-208">Il codice utente che gestisce l'eccezione è necessario indicare che il <xref:System.Exception.InnerException%2A> proprietà contiene informazioni sull'eccezione originale, come illustrato di seguito il seguente gestore di eccezioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="e631d-209">Scelta di eccezioni standard</span><span class="sxs-lookup"><span data-stu-id="e631d-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="e631d-210">Quando è necessario generare un'eccezione, è spesso possibile utilizzare un tipo di eccezione esistente in .NET Framework anziché implementare un'eccezione personalizzata.</span><span class="sxs-lookup"><span data-stu-id="e631d-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="e631d-211">È consigliabile usare un tipo di eccezione standard in queste due condizioni:</span><span class="sxs-lookup"><span data-stu-id="e631d-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="e631d-212">Si sta generando un'eccezione causata da un errore di utilizzo (vale a dire, da un errore nella logica di programma effettuata dallo sviluppatore che chiama il metodo).</span><span class="sxs-lookup"><span data-stu-id="e631d-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="e631d-213">In genere, si genera un'eccezione, ad esempio <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, o <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="e631d-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e631d-214">La stringa fornita al costruttore dell'oggetto eccezione quando creare un'istanza dell'oggetto eccezione deve descrivere l'errore, in modo che gli sviluppatori intervenire per correggerla.</span><span class="sxs-lookup"><span data-stu-id="e631d-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="e631d-215">Per altre informazioni, vedere la proprietà <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="e631d-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="e631d-216">Si sta gestendo un errore che può essere comunicato al chiamante con un'eccezione di .NET Framework esistente.</span><span class="sxs-lookup"><span data-stu-id="e631d-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="e631d-217">È necessario generare l'eccezione più derivata possibili.</span><span class="sxs-lookup"><span data-stu-id="e631d-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="e631d-218">Ad esempio, se un metodo richiede un argomento sia un membro valido di un tipo di enumerazione, è necessario generare una <xref:System.ComponentModel.InvalidEnumArgumentException> (più di classe derivata) anziché un oggetto <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="e631d-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="e631d-219">La tabella seguente elenca i tipi di eccezioni comuni e le condizioni in cui si sarebbe generarle.</span><span class="sxs-lookup"><span data-stu-id="e631d-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="e631d-220">Eccezione</span><span class="sxs-lookup"><span data-stu-id="e631d-220">Exception</span></span>|<span data-ttu-id="e631d-221">Condizione</span><span class="sxs-lookup"><span data-stu-id="e631d-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="e631d-222">Un argomento non null che viene passato a un metodo non è valido.</span><span class="sxs-lookup"><span data-stu-id="e631d-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="e631d-223">Un argomento passato a un metodo è `null`.</span><span class="sxs-lookup"><span data-stu-id="e631d-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="e631d-224">Un argomento è compreso nell'intervallo di valori validi.</span><span class="sxs-lookup"><span data-stu-id="e631d-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="e631d-225">Parte di un percorso di directory non è valida.</span><span class="sxs-lookup"><span data-stu-id="e631d-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="e631d-226">Il denominatore in un numero intero o <xref:System.Decimal> operazione di divisione è zero.</span><span class="sxs-lookup"><span data-stu-id="e631d-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="e631d-227">Un'unità non è disponibile o non esiste.</span><span class="sxs-lookup"><span data-stu-id="e631d-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="e631d-228">Un file non esiste.</span><span class="sxs-lookup"><span data-stu-id="e631d-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="e631d-229">Un valore non è presente in un formato appropriato da convertire da una stringa da un metodo di conversione, ad esempio `Parse`.</span><span class="sxs-lookup"><span data-stu-id="e631d-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="e631d-230">Un indice è esterno ai limiti di una matrice o raccolta.</span><span class="sxs-lookup"><span data-stu-id="e631d-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="e631d-231">Una chiamata al metodo è valida nello stato corrente dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="e631d-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="e631d-232">Impossibile trovare la chiave specificata per l'accesso a un membro in una raccolta.</span><span class="sxs-lookup"><span data-stu-id="e631d-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="e631d-233">Un metodo od operazione non è implementata.</span><span class="sxs-lookup"><span data-stu-id="e631d-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="e631d-234">Un metodo od operazione non è supportato.</span><span class="sxs-lookup"><span data-stu-id="e631d-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="e631d-235">Viene eseguita un'operazione su un oggetto che è stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="e631d-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="e631d-236">Un'operazione aritmetica di cast o conversione produce un overflow.</span><span class="sxs-lookup"><span data-stu-id="e631d-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="e631d-237">Un nome file o percorso supera la lunghezza massima definita dal sistema.</span><span class="sxs-lookup"><span data-stu-id="e631d-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="e631d-238">L'operazione non è supportata sulla piattaforma corrente.</span><span class="sxs-lookup"><span data-stu-id="e631d-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="e631d-239">Una matrice con un numero errato di dimensioni viene passata a un metodo.</span><span class="sxs-lookup"><span data-stu-id="e631d-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="e631d-240">L'intervallo di tempo allocato a un'operazione è scaduta.</span><span class="sxs-lookup"><span data-stu-id="e631d-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="e631d-241">Viene utilizzato un valido identificatore URI (Uniform Resource).</span><span class="sxs-lookup"><span data-stu-id="e631d-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="e631d-242">Implementazione di eccezioni personalizzate</span><span class="sxs-lookup"><span data-stu-id="e631d-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="e631d-243">Nei casi seguenti, l'uso di un'eccezione di .NET Framework esistente per gestire una condizione di errore non è adeguato:</span><span class="sxs-lookup"><span data-stu-id="e631d-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="e631d-244">Quando l'eccezione riflette un errore univoco del programma che non può essere mappato a un'eccezione di .NET Framework esistente.</span><span class="sxs-lookup"><span data-stu-id="e631d-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="e631d-245">Quando l'eccezione richiede la gestione di che è diversa dalla gestione appropriato per un'eccezione di .NET Framework esistente, o l'eccezione deve eliminare le ambiguità da un'eccezione simile.</span><span class="sxs-lookup"><span data-stu-id="e631d-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="e631d-246">Ad esempio, se genera un <xref:System.ArgumentOutOfRangeException> eccezione durante l'analisi alla rappresentazione numerica di una stringa che rientra nell'intervallo del tipo integrale di destinazione, non si usa la stessa eccezione per un errore che risulta dal chiamante non viene fornito il valori vincolati appropriati quando si chiama il metodo.</span><span class="sxs-lookup"><span data-stu-id="e631d-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="e631d-247">Il <xref:System.Exception> classe è la classe di base di tutte le eccezioni in .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="e631d-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="e631d-248">Diverse classi derivate basano sul comportamento ereditato dei membri del <xref:System.Exception> classe; non eseguono l'override di membri di <xref:System.Exception>, né si definiscono tutti i membri univoci.</span><span class="sxs-lookup"><span data-stu-id="e631d-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="e631d-249">Per definire la propria classe di eccezione:</span><span class="sxs-lookup"><span data-stu-id="e631d-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="e631d-250">Definire una classe che eredita da <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="e631d-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="e631d-251">Se necessario, definire i membri univoci necessari per la classe per fornire informazioni aggiuntive sull'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="e631d-252">Ad esempio, il <xref:System.ArgumentException> classe include una <xref:System.ArgumentException.ParamName%2A> proprietà che specifica il nome del parametro il cui argomento che ha causato l'eccezione, e il <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> proprietà include un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> proprietà che indica l'intervallo di timeout.</span><span class="sxs-lookup"><span data-stu-id="e631d-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="e631d-253">Se necessario, eseguire l'override di qualsiasi cui funzionalità che si desidera modificare o modificare i membri ereditati.</span><span class="sxs-lookup"><span data-stu-id="e631d-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="e631d-254">Si noti che la maggior parte delle classi derivate esistenti di <xref:System.Exception> non l'override del comportamento dei membri ereditati.</span><span class="sxs-lookup"><span data-stu-id="e631d-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="e631d-255">Determinare se l'oggetto eccezione personalizzata è serializzabile.</span><span class="sxs-lookup"><span data-stu-id="e631d-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="e631d-256">Serializzazione consente di salvare le informazioni sull'eccezione e consente le informazioni sull'eccezione deve essere condiviso da un server e un proxy client in un contesto di .NET remoting.</span><span class="sxs-lookup"><span data-stu-id="e631d-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="e631d-257">Per rendere l'oggetto eccezione serializzabile, contrassegnarla con il <xref:System.SerializableAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="e631d-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="e631d-258">Definire i costruttori della propria classe di eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="e631d-259">In genere, le classi di eccezione presentano uno o più dei seguenti costruttori:</span><span class="sxs-lookup"><span data-stu-id="e631d-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="e631d-260"><xref:System.Exception.%23ctor>, che Usa valori predefiniti per inizializzare le proprietà di un nuovo oggetto eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="e631d-261"><xref:System.Exception.%23ctor%28System.String%29>, che inizializza un nuovo oggetto eccezione con messaggio di errore specificato.</span><span class="sxs-lookup"><span data-stu-id="e631d-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="e631d-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, che inizializza un nuovo oggetto eccezione con un'eccezione interna e il messaggio di errore specificato.</span><span class="sxs-lookup"><span data-stu-id="e631d-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="e631d-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, ovvero un `protected` costruttore che inizializza un nuovo oggetto di eccezione da dati serializzati.</span><span class="sxs-lookup"><span data-stu-id="e631d-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="e631d-264">Se si è scelto di rendere l'oggetto eccezione serializzabile, è necessario implementare questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="e631d-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="e631d-265">Nell'esempio seguente viene illustrato l'utilizzo di una classe di eccezione personalizzata.</span><span class="sxs-lookup"><span data-stu-id="e631d-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="e631d-266">Definisce un `NotPrimeException` eccezione generata quando un client tenta di recuperare una sequenza di numeri primi, specificando un numero iniziale non è un numero primo.</span><span class="sxs-lookup"><span data-stu-id="e631d-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="e631d-267">L'eccezione definisce una nuova proprietà, `NonPrime`, che restituisce il numero di primo-non che ha causato l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="e631d-268">Oltre all'implementazione di un costruttore senza parametri protetto e un costruttore con <xref:System.Runtime.Serialization.SerializationInfo> e <xref:System.Runtime.Serialization.StreamingContext> parametri per la serializzazione, il `NotPrimeException` classe definisce tre costruttori aggiuntivi per supportare il `NonPrime` proprietà.</span><span class="sxs-lookup"><span data-stu-id="e631d-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="e631d-269">Ogni costruttore chiama un costruttore di classe di base oltre a mantenere il valore del non-numero primo.</span><span class="sxs-lookup"><span data-stu-id="e631d-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="e631d-270">Il `NotPrimeException` classe è contrassegnata anche con il <xref:System.SerializableAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="e631d-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="e631d-271">Il `PrimeNumberGenerator` classe illustrata nell'esempio seguente usa il crivello di Eratostene per calcolare la sequenza di numeri primi da 2 a un limite specificato dal client nella chiamata al costruttore della classe.</span><span class="sxs-lookup"><span data-stu-id="e631d-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="e631d-272">Il `GetPrimesFrom` metodo restituisce tutti i numeri primi che sono maggiori o uguali al limite inferiore specificato, ma genera un `NotPrimeException` se tale limite inferiore non è un numero primo.</span><span class="sxs-lookup"><span data-stu-id="e631d-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="e631d-273">Nell'esempio seguente effettua due chiamate al `GetPrimesFrom` metodo con numeri non primi, uno dei quali supera i limiti del dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="e631d-274">In entrambi i casi, l'eccezione viene generata un'eccezione e correttamente gestita nel codice client.</span><span class="sxs-lookup"><span data-stu-id="e631d-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="e631d-275">Windows Runtime e [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e631d-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="e631d-276">Nelle [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] per [!INCLUDE[win8](~/includes/win8-md.md)], alcune informazioni sull'eccezione viene perse in genere quando un'eccezione viene propagata attraverso gli stack frame non .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="e631d-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="e631d-277">Inizia con la [!INCLUDE[net_v451](~/includes/net-v451-md.md)] e [!INCLUDE[win81](~/includes/win81-md.md)], common language runtime continua a usare originale <xref:System.Exception> oggetto che è stata generata un'eccezione, a meno che tale eccezione è stata modificata in uno stack frame non .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="e631d-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-278">L'esempio seguente illustra un `catch` blocco definito per la gestione <xref:System.ArithmeticException> errori.</span><span class="sxs-lookup"><span data-stu-id="e631d-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="e631d-279">Ciò `catch` bloccare anche le catture <xref:System.DivideByZeroException> errori, perché <xref:System.DivideByZeroException> deriva da <xref:System.ArithmeticException> ed è presente alcun `catch` blocco definito in modo esplicito per <xref:System.DivideByZeroException> errori.</span><span class="sxs-lookup"><span data-stu-id="e631d-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/exceptions/index.md">
      <span data-ttu-id="e631d-280">Gestione e generazione di eccezioni</span>
      <span class="sxs-lookup">
        <span data-stu-id="e631d-280">Handling and Throwing Exceptions</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">
      <span data-ttu-id="e631d-281">Creazione del pacchetto e distribuzione delle risorse in applicazioni desktop</span>
      <span class="sxs-lookup">
        <span data-stu-id="e631d-281">Packaging and Deploying Resources in Desktop Apps</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1">
      <span data-ttu-id="e631d-282">Asserzioni nel codice gestito</span>
      <span class="sxs-lookup">
        <span data-stu-id="e631d-282">Assertions in Managed Code</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-283">Inizializza una nuova istanza della classe <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-283">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e631d-284">Inizializza una nuova istanza della classe <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-284">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-285">Questo costruttore inizializza la proprietà <xref:System.Exception.Message%2A> della nuova istanza in un messaggio  di sistema in cui viene descritto l'errore e che utilizza le impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="e631d-285">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="e631d-286">Tutte le classi derivate devono specificare questo costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="e631d-286">All the derived classes should provide this default constructor.</span></span> <span data-ttu-id="e631d-287">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="e631d-287">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="e631d-288">Proprietà</span><span class="sxs-lookup"><span data-stu-id="e631d-288">Property</span></span>|<span data-ttu-id="e631d-289">Valore</span><span class="sxs-lookup"><span data-stu-id="e631d-289">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e631d-290">Riferimento null (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e631d-290">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e631d-291">Descrizione localizzata fornita dal sistema.</span><span class="sxs-lookup"><span data-stu-id="e631d-291">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e631d-292">Esempio di codice seguente deriva un `Exception` che utilizza un messaggio predefinito.</span><span class="sxs-lookup"><span data-stu-id="e631d-292">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="e631d-293">Il codice viene illustrato l'utilizzo del costruttore senza parametri per la classe derivata e la base `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="e631d-293">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Exception : string -&gt; Exception" Usage="new System.Exception message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e631d-294">Messaggio in cui viene descritto l'errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-294">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e631d-295">Inizializza una nuova istanza della classe <see cref="T:System.Exception" /> con un messaggio di errore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-295">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-296">Questo costruttore inizializza la <xref:System.Exception.Message%2A> proprietà della nuova istanza utilizzando il `message` parametro.</span><span class="sxs-lookup"><span data-stu-id="e631d-296">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="e631d-297">Se il `message` parametro è `null`, equivale alla chiamata al metodo il <xref:System.Exception.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="e631d-297">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="e631d-298">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="e631d-298">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="e631d-299">Proprietà</span><span class="sxs-lookup"><span data-stu-id="e631d-299">Property</span></span>|<span data-ttu-id="e631d-300">Valore</span><span class="sxs-lookup"><span data-stu-id="e631d-300">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e631d-301">Riferimento null (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e631d-301">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e631d-302">Stringa del messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-302">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e631d-303">Esempio di codice seguente deriva un `Exception` una condizione specifica.</span><span class="sxs-lookup"><span data-stu-id="e631d-303">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="e631d-304">Il codice viene illustrato l'utilizzo del costruttore che accetta un messaggio specificato dal chiamante come parametro, per la classe derivata e la base `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="e631d-304">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new Exception : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Exception" Usage="new System.Exception (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="e631d-305">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-305">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="e631d-306">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-306">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e631d-307">Inizializza una nuova istanza della classe <see cref="T:System.Exception" /> con dati serializzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-307">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-308">Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto eccezione trasmesso su un flusso.</span><span class="sxs-lookup"><span data-stu-id="e631d-308">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="e631d-309">Per altre informazioni, vedere [serializzazione SOAP e XML](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="e631d-309">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-310">Esempio di codice seguente definisce una classe serializzabile `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="e631d-310">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="e631d-311">Il codice forza un errore di divisione-da-0 e quindi crea un'istanza dell'eccezione derivata utilizzando i (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) costruttore.</span><span class="sxs-lookup"><span data-stu-id="e631d-311">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="e631d-312">Il codice di serializzazione dell'istanza in un file, deserializza il file in una nuova eccezione, viene generata, quindi rileva e visualizza i dati dell'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-312">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e631d-313">Il valore del parametro <paramref name="info" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-313">The <paramref name="info" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="e631d-314">Il nome della classe è <see langword="null" /> oppure <see cref="P:System.Exception.HResult" /> è zero (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-314">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">
          <span data-ttu-id="e631d-315">Serializzazione SOAP e XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-315">XML and SOAP Serialization</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Exception : string * Exception -&gt; Exception" Usage="new System.Exception (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e631d-316">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-316">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="e631d-317">Eccezione causa dell'eccezione corrente o riferimento Null (<see langword="Nothing" /> in Visual Basic) se non viene specificata alcuna eccezione interna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-317">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e631d-318">Inizializza una nuova istanza della classe <see cref="T:System.Exception" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-318">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-319">Un'eccezione generata come risultato diretto di un'eccezione precedente deve includere un riferimento all'eccezione precedente nella proprietà <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="e631d-319">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="e631d-320">La proprietà <xref:System.Exception.InnerException%2A> restituisce lo stesso valore che viene passato al costruttore o un riferimento null (`Nothing` in Visual Basic), se la proprietà <xref:System.Exception.InnerException%2A> non fornisce al costruttore il valore dell'eccezione interna.</span><span class="sxs-lookup"><span data-stu-id="e631d-320">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="e631d-321">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="e631d-321">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="e631d-322">Proprietà</span><span class="sxs-lookup"><span data-stu-id="e631d-322">Property</span></span>|<span data-ttu-id="e631d-323">Valore</span><span class="sxs-lookup"><span data-stu-id="e631d-323">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e631d-324">Riferimento all'eccezione interna.</span><span class="sxs-lookup"><span data-stu-id="e631d-324">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e631d-325">Stringa del messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-325">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e631d-326">Esempio di codice seguente deriva un `Exception` una condizione specifica.</span><span class="sxs-lookup"><span data-stu-id="e631d-326">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="e631d-327">Il codice viene illustrato l'utilizzo del costruttore che accetta un messaggio e l'eccezione interna come parametri, per la classe derivata e la base `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="e631d-327">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Collections.IDictionary" Usage="System.Exception.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-328">Ottiene una raccolta di coppie chiave-valore che fornisce informazioni aggiuntive definite dall'utente relative all'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-328">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-329">Oggetto che implementa l'interfaccia <see cref="T:System.Collections.IDictionary" /> e contiene una raccolta di coppie chiave/valore definite dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-329">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span>
          </span>
          <span data-ttu-id="e631d-330">Il valore predefinito è una raccolta vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-330">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-331">Usare la <xref:System.Collections.IDictionary?displayProperty=nameWithType> oggetto restituito dal <xref:System.Exception.Data%2A> proprietà per archiviare e recuperare informazioni supplementari relative all'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-331">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="e631d-332">Le informazioni sono sotto forma di un numero arbitrario di coppie chiave/valore definite dall'utente.</span><span class="sxs-lookup"><span data-stu-id="e631d-332">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="e631d-333">Il componente principale di ogni coppia chiave/valore è in genere una stringa di identificazione, mentre il componente valore della coppia può essere qualsiasi tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="e631d-333">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="e631d-334">Sicurezza della coppia chiave/valore</span><span class="sxs-lookup"><span data-stu-id="e631d-334">Key/Value Pair Security</span></span>  
 <span data-ttu-id="e631d-335">Le coppie chiave/valore archiviate nella raccolta restituita dal <xref:System.Exception.Data%2A> proprietà non sono sicure.</span><span class="sxs-lookup"><span data-stu-id="e631d-335">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="e631d-336">Se l'applicazione chiama una serie di routine annidata e ogni routine contiene i gestori di eccezioni, lo stack di chiamate risultante contiene una gerarchia di tali gestori di eccezioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-336">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="e631d-337">Se una routine di basso livello genera un'eccezione, qualsiasi gestore di eccezioni di livello superiore nella gerarchia di stack di chiamate possa leggere e/o modificare le coppie chiave/valore archiviate nella raccolta da qualsiasi altro gestore di eccezioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-337">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="e631d-338">Ciò significa che è necessario garantire che le informazioni contenute in coppie chiave/valore non sono riservate e che l'applicazione funzionerà correttamente se le informazioni nelle coppie chiave/valore sono danneggiate.</span><span class="sxs-lookup"><span data-stu-id="e631d-338">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="e631d-339">Conflitti di chiave</span><span class="sxs-lookup"><span data-stu-id="e631d-339">Key Conflicts</span></span>  
 <span data-ttu-id="e631d-340">Quando i gestori di eccezioni diverse specificano la stessa chiave per accedere a una coppia chiave/valore, si verifica un conflitto di chiave.</span><span class="sxs-lookup"><span data-stu-id="e631d-340">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="e631d-341">Prestare attenzione quando si sviluppa l'applicazione perché la conseguenza di un conflitto di chiave è che i gestori di eccezioni di livello inferiore inavvertitamente possono comunicare con gestori di eccezioni di livello superiore, mentre questa comunicazione può causare errori di programma sottili.</span><span class="sxs-lookup"><span data-stu-id="e631d-341">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="e631d-342">Tuttavia, se si ha la massima attenzione è possibile utilizzare i conflitti di chiave per migliorare l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-342">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="e631d-343">Come evitare conflitti di chiavi</span><span class="sxs-lookup"><span data-stu-id="e631d-343">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="e631d-344">Per evitare conflitti principali, adottare una convenzione di denominazione per generare le chiavi univoche per le coppie chiave/valore.</span><span class="sxs-lookup"><span data-stu-id="e631d-344">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="e631d-345">Ad esempio, una convenzione di denominazione potrebbe generare una chiave costituita dal nome separati da punti dell'applicazione, il metodo che fornisce informazioni aggiuntive per la coppia e un identificatore univoco.</span><span class="sxs-lookup"><span data-stu-id="e631d-345">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="e631d-346">Si supponga che due applicazioni, denominate prodotti e fornitori, ognuno ha un metodo denominato Sales.</span><span class="sxs-lookup"><span data-stu-id="e631d-346">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="e631d-347">Il metodo di vendite nell'applicazione prodotti fornisce il numero di identificazione (stock keeping unit o SKU) di un prodotto.</span><span class="sxs-lookup"><span data-stu-id="e631d-347">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="e631d-348">Il metodo di vendite nell'applicazione Suppliers fornisce il numero di identificazione o SID, di un fornitore.</span><span class="sxs-lookup"><span data-stu-id="e631d-348">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="e631d-349">Di conseguenza, la convenzione di denominazione per questo esempio restituisce le chiavi, "Prodotti.vendite.SKU" e "Fornitori.vendite.SID".</span><span class="sxs-lookup"><span data-stu-id="e631d-349">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="e631d-350">Sfruttamento delle chiavi è in conflitto</span><span class="sxs-lookup"><span data-stu-id="e631d-350">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="e631d-351">Sfruttare i conflitti di chiave utilizzando la presenza di uno o più tasti speciali, preordinate per controllare l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-351">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="e631d-352">Si supponga che, in uno scenario, il gestore di eccezioni di livello più alto nella gerarchia di stack di chiamate intercetta tutte le eccezioni generate da gestori di eccezioni di livello inferiore.</span><span class="sxs-lookup"><span data-stu-id="e631d-352">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="e631d-353">Se è presente una coppia chiave/valore con una chiave speciale, il gestore di eccezioni di alto livello formatta le coppie chiave/valore rimanenti nel <xref:System.Collections.IDictionary> oggetto in qualche modo conforme allo standard; in caso contrario, le coppie chiave/valore rimanenti vengono formattate in modo normale.</span><span class="sxs-lookup"><span data-stu-id="e631d-353">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="e631d-354">Ora si supponga che, in un altro scenario, il gestore di eccezioni a ogni livello della gerarchia dello stack di chiamate intercetta l'eccezione generata dal gestore di eccezioni di livello inferiore successivo.</span><span class="sxs-lookup"><span data-stu-id="e631d-354">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="e631d-355">Inoltre, ogni gestore eccezioni conosce la raccolta restituita dal <xref:System.Exception.Data%2A> proprietà contiene un set di coppie chiave/valore che è possibile accedere con un set di chiavi preordinato.</span><span class="sxs-lookup"><span data-stu-id="e631d-355">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="e631d-356">Ogni gestore eccezioni utilizza il set di chiavi preordinato per aggiornare il componente valore della coppia chiave/valore corrispondente con informazioni univoche per il gestore di eccezioni.</span><span class="sxs-lookup"><span data-stu-id="e631d-356">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="e631d-357">Al termine del processo di aggiornamento, il gestore di eccezioni genera l'eccezione per il gestore di eccezioni di livello superiore successivo.</span><span class="sxs-lookup"><span data-stu-id="e631d-357">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="e631d-358">Infine, il gestore di eccezioni di livello più alto accede le coppie chiave/valore e visualizza le informazioni sugli aggiornamenti consolidati da tutti i gestori di eccezioni di livello inferiore.</span><span class="sxs-lookup"><span data-stu-id="e631d-358">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-359">Nell'esempio seguente viene illustrato come aggiungere e recuperare informazioni usando il <xref:System.Exception.Data%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e631d-359">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception&#xA;override this.GetBaseException : unit -&gt; Exception" Usage="exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e631d-360">Quando ne viene eseguito l'override in una classe derivata, restituisce l'<see cref="T:System.Exception" /> che è la causa radice di una o più eccezioni successive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-360">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e631d-361">Eccezione generata per prima in una catena di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-361">The first exception thrown in a chain of exceptions.</span>
          </span>
          <span data-ttu-id="e631d-362">Se la proprietà <see cref="P:System.Exception.InnerException" /> dell'eccezione corrente è un riferimento Null (<see langword="Nothing" /> in Visual Basic), restituisce l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-362">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-363">Una catena di eccezioni è costituito da un set di eccezioni in modo che ogni eccezione nella catena è stata generata come risultato diretto dell'eccezione a cui fa riferimento relativo `InnerException` proprietà.</span><span class="sxs-lookup"><span data-stu-id="e631d-363">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="e631d-364">Per una determinata catena, può essere presente esattamente un'eccezione che è la causa radice di tutte le altre eccezioni nella catena.</span><span class="sxs-lookup"><span data-stu-id="e631d-364">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="e631d-365">Questa eccezione viene chiamata l'eccezione di base e la relativa `InnerException` proprietà contiene sempre un riferimento null.</span><span class="sxs-lookup"><span data-stu-id="e631d-365">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="e631d-366">Per tutte le eccezioni in una catena di eccezioni, il `GetBaseException` metodo deve restituire lo stesso oggetto (l'eccezione di base).</span><span class="sxs-lookup"><span data-stu-id="e631d-366">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="e631d-367">Usare il `GetBaseException` metodo quando si desidera individuare la causa radice di un'eccezione, ma non sono necessarie informazioni sulle eccezioni che potrebbero essersi verificate tra la prima eccezione e l'eccezione corrente.</span><span class="sxs-lookup"><span data-stu-id="e631d-367">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-368">Esempio di codice seguente definisce due classi `Exception` classi.</span><span class="sxs-lookup"><span data-stu-id="e631d-368">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="e631d-369">La forza un'eccezione e quindi lo genera nuovamente con ognuna delle classi derivate.</span><span class="sxs-lookup"><span data-stu-id="e631d-369">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="e631d-370">Il codice viene illustrato come utilizzare il `GetBaseException` metodo per recuperare l'eccezione originale.</span><span class="sxs-lookup"><span data-stu-id="e631d-370">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e631d-371">Il <see langword="GetBaseException" /> è sottoposto a override nelle classi che richiedono il controllo del contenuto dell'eccezione e formato.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-371">The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="e631d-372">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-372">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="e631d-373">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-373">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e631d-374">Quando ne viene eseguito l'override in una classe derivata, imposta il controllo <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con le informazioni sull'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-374">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-375">Il metodo `GetObjectData` imposta un oggetto <xref:System.Runtime.Serialization.SerializationInfo> con tutti i dati dell'oggetto eccezione destinati alla serializzazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-375">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="e631d-376">Durante la deserializzazione, l'oggetto eccezione viene ricostituito dall'oggetto `SerializationInfo` trasmesso sul flusso.</span><span class="sxs-lookup"><span data-stu-id="e631d-376">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-377">Esempio di codice seguente definisce una classe serializzabile `Exception` classe che implementa `GetObjectData`, che consente modifiche di lieve entità a due proprietà e quindi chiama la classe di base per eseguire la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-377">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="e631d-378">L'esempio forza un errore di divisione-da-0 e quindi crea un'istanza di eccezione derivato.</span><span class="sxs-lookup"><span data-stu-id="e631d-378">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="e631d-379">Il codice di serializzazione dell'istanza in un file, deserializza il file in una nuova eccezione, viene generata, quindi rileva e visualizza i dati dell'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-379">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e631d-380">Il parametro <paramref name="info" /> è un riferimento Null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-380">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e631d-381">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-381">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e631d-382">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-382">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="exception.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e631d-383">Ottiene il tipo di runtime dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-383">Gets the runtime type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e631d-384">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo runtime dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-384">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-385">Il <xref:System.Exception.GetType%2A> metodo esiste per supportare l'infrastruttura .NET Framework e richiama internamente il metodo fondamentale <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e631d-385">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-386">Ottiene o imposta un collegamento al file della Guida associato all'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-386">Gets or sets a link to the help file associated with this exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-387">URN (Uniform Resource Name) o URL (Uniform Resource Locator).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-387">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-388">Il valore restituito, che rappresenta un file della Guida, è un URN o URL.</span><span class="sxs-lookup"><span data-stu-id="e631d-388">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="e631d-389">Ad esempio, il `HelpLink` valore potrebbe essere:</span><span class="sxs-lookup"><span data-stu-id="e631d-389">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="e631d-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="e631d-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-391">Il codice seguente esempio genera una `Exception` che consente di scegliere il `HelpLink` proprietà nel relativo costruttore e quindi le catture sull'eccezione e Visualizza `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="e631d-391">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HResult : int with get, set" Usage="System.Exception.HResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-392">Ottiene o imposta HRESULT, un valore numerico codificato che viene assegnato a un'eccezione specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-392">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-393">Valore HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-393">The HRESULT value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-394">HRESULT è un valore a 32 bit, suddiviso in tre campi differenti: un codice di gravità, un codice di funzionalità e un codice di errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-394">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="e631d-395">Il codice di gravità indica se il valore restituito rappresenta informazioni, avviso o errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-395">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="e631d-396">Il codice di funzionalità identifica l'area del sistema responsabile dell'errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-396">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="e631d-397">Il codice di errore è un numero univoco assegnato per rappresentare l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-397">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="e631d-398">Ogni eccezione viene eseguito il mapping a un HRESULT distinti.</span><span class="sxs-lookup"><span data-stu-id="e631d-398">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="e631d-399">Quando il codice gestito genera un'eccezione, il runtime passa il valore HRESULT per il client COM.</span><span class="sxs-lookup"><span data-stu-id="e631d-399">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="e631d-400">Quando il codice non gestito viene restituito un errore, il valore HRESULT viene convertito in un'eccezione, che viene quindi generata dal runtime.</span><span class="sxs-lookup"><span data-stu-id="e631d-400">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="e631d-401">Per informazioni sui valori HRESULT e le corrispondenti eccezioni di .NET Framework, vedere [procedura: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="e631d-401">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="e631d-402">Visualizzare [valori HRESULT comuni](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) nella documentazione di Windows per un elenco dei valori di cui si è più probabile incontrare.</span><span class="sxs-lookup"><span data-stu-id="e631d-402">See [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="e631d-403">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <xref:System.Exception.HResult%2A> setter della proprietà è protetto, mentre il metodo Get è pubblico.</span><span class="sxs-lookup"><span data-stu-id="e631d-403">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="e631d-404">Nelle versioni precedenti di .NET Framework, sono protetti sia getter e setter.</span><span class="sxs-lookup"><span data-stu-id="e631d-404">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-405">L'esempio di codice seguente definisce un oggetto derivato `Exception` classe che consente di impostare il `HResult` proprietà su un valore personalizzato nel relativo costruttore.</span><span class="sxs-lookup"><span data-stu-id="e631d-405">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/610b364b-2761-429d-9c4a-afbc3e66f1b9">
          <span data-ttu-id="e631d-406">Procedura: eseguire il mapping di HRESULT ed eccezioni</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-406">How to: Map HRESULTs and Exceptions</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx">
          <span data-ttu-id="e631d-407">Valori HRESULT comuni</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-407">Common HRESULT Values</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Exception.InnerException" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-408">Ottiene l'istanza di <see cref="T:System.Exception" /> che ha causato l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-408">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-409">Oggetto che descrive l'errore che ha causato l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-409">An object that describes the error that caused the current exception.</span>
          </span>
          <span data-ttu-id="e631d-410">La proprietà <see cref="P:System.Exception.InnerException" /> restituisce lo stesso valore passato al costruttore <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />, oppure <see langword="null" /> se il valore dell'eccezione interna non è stato fornito al costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-410">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span>
          </span>
          <span data-ttu-id="e631d-411">Questa proprietà è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-411">This property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-412">Quando un'eccezione `X` viene generata come risultato diretto di un'eccezione precedente `Y`, il <xref:System.Exception.InnerException%2A> proprietà della `X` deve contenere un riferimento a `Y`.</span><span class="sxs-lookup"><span data-stu-id="e631d-412">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="e631d-413">Utilizzare la proprietà <xref:System.Exception.InnerException%2A> per ottenere il set di eccezioni che ha causato l'eccezione corrente.</span><span class="sxs-lookup"><span data-stu-id="e631d-413">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="e631d-414">È possibile creare una nuova eccezione che rileva un'eccezione precedente.</span><span class="sxs-lookup"><span data-stu-id="e631d-414">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="e631d-415">Il codice che gestisce che la seconda eccezione può rendere utilizzano le informazioni aggiuntive relative all'eccezione precedente per gestire l'errore in modo più appropriato.</span><span class="sxs-lookup"><span data-stu-id="e631d-415">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="e631d-416">Si supponga che esista una funzione che legge un file e formatta i dati da tale file.</span><span class="sxs-lookup"><span data-stu-id="e631d-416">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="e631d-417">In questo esempio, quando si cerca di leggere il file, un <xref:System.IO.IOException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-417">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="e631d-418">La funzione intercetta le <xref:System.IO.IOException> e genera un <xref:System.IO.FileNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="e631d-418">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="e631d-419">Il <xref:System.IO.IOException> è stato possibile salvare nel <xref:System.Exception.InnerException%2A> proprietà del <xref:System.IO.FileNotFoundException>, per attivare il codice che intercetta la <xref:System.IO.FileNotFoundException> per esaminare la causa dell'errore iniziale.</span><span class="sxs-lookup"><span data-stu-id="e631d-419">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="e631d-420">Il <xref:System.Exception.InnerException%2A> , che contiene un riferimento all'eccezione interna, che viene impostata in fase di inizializzazione dell'oggetto eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-420">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-421">Nell'esempio riportato di seguito viene illustrato come generare e intercettare un'eccezione che fa riferimento all'eccezione interna.</span><span class="sxs-lookup"><span data-stu-id="e631d-421">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Exception.Message" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-422">Ottiene un messaggio che descrive l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-422">Gets a message that describes the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-423">Messaggio di errore che spiega il motivo dell'eccezione o una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-423">The error message that explains the reason for the exception, or an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-424">I messaggi di errore come destinazione lo sviluppatore che gestisce l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-424">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="e631d-425">Il testo del <xref:System.Exception.Message%2A> proprietà completamente deve descrivere l'errore e, se possibile, devono inoltre spiegato come correggere l'errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-425">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="e631d-426">I gestori di eccezioni di livello superiore possono visualizzare il messaggio agli utenti finali, è quindi consigliabile verificare che sia grammaticalmente corretta e che ogni frase del messaggio termina con un punto.</span><span class="sxs-lookup"><span data-stu-id="e631d-426">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="e631d-427">Non usare il punto interrogativo o un punto esclamativo.</span><span class="sxs-lookup"><span data-stu-id="e631d-427">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="e631d-428">Se l'applicazione utilizza i messaggi di eccezione localizzato, è necessario assicurarsi che questi valori vengono convertiti in modo accurato.</span><span class="sxs-lookup"><span data-stu-id="e631d-428">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e631d-429">Non rivelare informazioni riservate nei messaggi di eccezione senza controllare le autorizzazioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="e631d-429">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="e631d-430">Il valore della <xref:System.Exception.Message%2A> viene inclusa nelle informazioni restituite da proprietà <xref:System.Exception.ToString%2A>. Il <xref:System.Exception.Message%2A> viene impostata solo quando si crea un <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="e631d-430">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="e631d-431">Se nessun messaggio è stato fornito al costruttore per l'istanza corrente, il sistema fornisce un messaggio predefinito che viene formattato usando le impostazioni cultura correnti del sistema.</span><span class="sxs-lookup"><span data-stu-id="e631d-431">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="e631d-432">Windows Runtime e [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e631d-432">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="e631d-433">Inizia con la [!INCLUDE[net_v451](~/includes/net-v451-md.md)] e [!INCLUDE[win81](~/includes/win81-md.md)], è stata migliorata la fedeltà dei messaggi di errore da eccezioni che vengono propagati da tipi Windows Runtime e dei membri che non fanno parte di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="e631d-433">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="e631d-434">In particolare, i messaggi di eccezione da estensioni del componente Visual C++ (C + c++ /CX) ora vengono propagate in .NET Framework <xref:System.Exception> oggetti.</span><span class="sxs-lookup"><span data-stu-id="e631d-434">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-435">Esempio di codice seguente genera un'eccezione e quindi rileva un' <xref:System.Exception> eccezione e visualizza il testo dell'eccezione messaggio usando la <xref:System.Exception.Message%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e631d-435">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e631d-436">Se si genera un'eccezione da una proprietà, ed è necessario fare riferimento nel testo del <see cref="P:System.Exception.Message" /> all'argomento della proprietà che impostano oppure ottengono, Usa "valore" come nome dell'argomento della proprietà.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-436">If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e631d-437">Il <see cref="P:System.Exception.Message" /> è sottoposta a override nelle classi che richiedono il controllo del contenuto del messaggio e del formato.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-437">The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format.</span>
            </span>
            <span data-ttu-id="e631d-438">In genere il codice dell'applicazione accede a questa proprietà quando è necessario visualizzare informazioni su un'eccezione che è stata rilevata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-438">Application code typically accesses this property when it needs to display information about an exception that has been caught.</span>
            </span>
            <span data-ttu-id="e631d-439">Il messaggio di errore deve essere localizzato.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-439">The error message should be localized.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberSignature Language="F#" Value="member this.SerializeObjectState : EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " Usage="member this.SerializeObjectState : System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-440">Si verifica quando un'eccezione viene serializzata per creare un oggetto di stato eccezione contenente i dati serializzati relativi all'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-440">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-441">L'oggetto di stato di eccezione implementa il <xref:System.Runtime.Serialization.ISafeSerializationData> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="e631d-441">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="e631d-442">Quando il <xref:System.Exception.SerializeObjectState> evento è sottoscritto, l'eccezione viene deserializzata e creato come un'eccezione vuota.</span><span class="sxs-lookup"><span data-stu-id="e631d-442">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="e631d-443">Il costruttore dell'eccezione non viene eseguito e lo stato di eccezione viene anche deserializzato.</span><span class="sxs-lookup"><span data-stu-id="e631d-443">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="e631d-444">Il <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> metodo di callback di eccezione dell'oggetto di stato riceve una notifica in modo da poter inserire i dati deserializzati nell'eccezione vuota.</span><span class="sxs-lookup"><span data-stu-id="e631d-444">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="e631d-445">Il <xref:System.Exception.SerializeObjectState> evento consente ai tipi di eccezione trasparente serializzare e deserializzare i dati dell'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-445">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="e631d-446">Codice Transparent può eseguire comandi all'interno del set di autorizzazioni che funziona all'interno, ma non è possibile eseguire, chiamare, derivano da o contenere codice critico.</span><span class="sxs-lookup"><span data-stu-id="e631d-446">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="e631d-447">Se il <xref:System.Exception.SerializeObjectState> evento non ha sottoscritto, la deserializzazione vengono eseguite come di consueto utilizzando il <xref:System.Exception.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="e631d-447">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="e631d-448">In genere, un gestore per il <xref:System.Exception.SerializeObjectState> evento viene aggiunto nel costruttore dell'eccezione per fornire per la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-448">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="e631d-449">Tuttavia, poiché il costruttore non è eseguita quando il <xref:System.Exception.SerializeObjectState> gestore dell'evento, la serializzazione di un'eccezione deserializzata può generare un <xref:System.Runtime.Serialization.SerializationException> eccezione quando si tenta di deserializzare l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-449">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="e631d-450">Per evitare questo problema, è necessario aggiungere anche il gestore per il <xref:System.Exception.SerializeObjectState> eventi nel <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="e631d-450">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e631d-451">Vedere la sezione esempi per un'illustrazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-451">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-452">L'esempio seguente definisce una `BadDivisionException` che gestisce il <xref:System.Exception.SerializeObjectState> evento.</span><span class="sxs-lookup"><span data-stu-id="e631d-452">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="e631d-453">Contiene inoltre un oggetto di stato, ovvero nidificato struttura denominato `BadDivisionExceptionState` che implementa il <xref:System.Runtime.Serialization.ISafeSerializationData> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="e631d-453">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="e631d-454">Il `BadDivisionException` eccezione viene generata quando si verifica una divisione a virgola mobile per zero.</span><span class="sxs-lookup"><span data-stu-id="e631d-454">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="e631d-455">Durante la prima divisione per zero, l'esempio crea un'istanza di un `BadDivisionException` oggetto, lo serializza e genera l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-455">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="e631d-456">Quando si verificano successive divisioni per zero, l'esempio deserializza l'oggetto serializzato in precedenza, riserializza e viene generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-456">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="e631d-457">Per fornire per la serializzazione di oggetti, la deserializzazione, riserializzazione e la deserializzazione, l'esempio aggiunge il <xref:System.Exception.SerializeObjectState> gestore dell'evento sia nel `BadDivisionException` costruttore di classe e nella <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-457">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e631d-458">Se questo evento è sottoscritto e usato, tutti i tipi derivati che seguono nella gerarchia di ereditarietà devono implementare lo stesso meccanismo di serializzazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-458">If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Exception.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-459">Ottiene o imposta il nome dell'oggetto o dell'applicazione che ha generato l'errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-459">Gets or sets the name of the application or the object that causes the error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-460">Nome dell'oggetto che ha generato l'errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-460">The name of the application or the object that causes the error.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-461">Se il <xref:System.Exception.Source%2A> proprietà non è impostata in modo esplicito, il runtime lo imposta automaticamente il nome dell'assembly in cui è stata generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-461">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-462">Nell'esempio seguente genera un `Exception` che consente di scegliere il `Source` proprietà nel relativo costruttore e quindi le catture sull'eccezione e Visualizza `Source`.</span><span class="sxs-lookup"><span data-stu-id="e631d-462">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e631d-463">L'oggetto deve essere un oggetto <see cref="N:System.Reflection" /> di runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-463">The object must be a runtime <see cref="N:System.Reflection" /> object</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-464">Ottiene una rappresentazione di stringa dei frame immediati nello stack di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-464">Gets a string representation of the immediate frames on the call stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-465">Stringa in cui vengono descritti i frame immediati dello stack di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-465">A string that describes the immediate frames of the call stack.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-466">Lo stack di esecuzione tiene traccia di tutti i metodi in esecuzione in un determinato istante.</span><span class="sxs-lookup"><span data-stu-id="e631d-466">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="e631d-467">La traccia delle chiamate ai metodi viene denominata traccia dello stack.</span><span class="sxs-lookup"><span data-stu-id="e631d-467">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="e631d-468">L'elenco di traccia dello stack consente di seguire lo stack di chiamate per il numero di riga nel metodo in cui viene generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-468">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="e631d-469">Il <xref:System.Exception.StackTrace%2A> proprietà restituisce i frame dello stack di chiamate che hanno origine in corrispondenza della posizione in cui è stata generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-469">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="e631d-470">È possibile ottenere informazioni sui frame aggiuntivi nello stack di chiamate mediante la creazione di una nuova istanza della <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> classe e l'utilizzo relativo <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="e631d-470">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e631d-471">Common language runtime (CLR) Aggiorna l'analisi dello stack ogni volta che viene generata un'eccezione nel codice dell'applicazione (usando il `throw` parola chiave).</span><span class="sxs-lookup"><span data-stu-id="e631d-471">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="e631d-472">Se è stato nuovamente generata l'eccezione in un metodo che è diverso rispetto al metodo in cui è stata inizialmente generata, la traccia stack contiene la posizione nel metodo in cui è stato originariamente generata l'eccezione e la posizione nel metodo dove l'eccezione è stata generata di nuovo.</span><span class="sxs-lookup"><span data-stu-id="e631d-472">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="e631d-473">Se l'eccezione viene generata un'eccezione e rigenerata in un secondo momento, nel metodo di stesso, la traccia stack contiene solo il percorso in cui l'eccezione è stata rigenerata, non include il percorso in cui è stato originariamente generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-473">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="e631d-474">Il <xref:System.Exception.StackTrace%2A> proprietà potrebbe non segnalare il numero di chiamate di metodo come previsto a causa di trasformazioni del codice, ad esempio l'incorporamento, che si verificano durante l'ottimizzazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-474">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-475">Il codice seguente esempio genera una `Exception` e quindi rileva e consente di visualizzare una traccia stack utilizzando il `StackTrace` proprietà.</span><span class="sxs-lookup"><span data-stu-id="e631d-475">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e631d-476">Il <see langword="StackTrace" /> è sottoposta a override nelle classi che richiedono il controllo del contenuto della traccia dello stack e formato.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-476">The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.</span>
            </span>
            <span data-ttu-id="e631d-477">Per impostazione predefinita, l'analisi dello stack vengono acquisita immediatamente prima che un oggetto eccezione viene generata un'eccezione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-477">By default, the stack trace is captured immediately before an exception object is thrown.</span>
            </span>
            <span data-ttu-id="e631d-478">Usare <see cref="P:System.Environment.StackTrace" /> per ottenere informazioni sulla traccia dello stack quando non viene generata alcuna eccezione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e631d-478">Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e631d-479">Ottiene il metodo che genera l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-479">Gets the method that throws the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e631d-480">Oggetto <see cref="T:System.Reflection.MethodBase" /> che ha generato l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-480">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-481">Se il metodo che genera questa eccezione non è disponibile e l'analisi dello stack non è un riferimento null (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> Ottiene il metodo dalla traccia dello stack.</span><span class="sxs-lookup"><span data-stu-id="e631d-481">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="e631d-482">Se la traccia dello stack è un riferimento null, la proprietà <xref:System.Exception.TargetSite%2A> restituirà un riferimento null.</span><span class="sxs-lookup"><span data-stu-id="e631d-482">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e631d-483">Il <xref:System.Exception.TargetSite%2A> proprietà potrebbe non segnalare con precisione il nome del metodo in cui è stata generata un'eccezione se il gestore di eccezioni gestisce l'eccezione attraverso i limiti del dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="e631d-483">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-484">Nell'esempio di codice riportato di seguito viene genera un `Exception` e quindi rileva e visualizza il metodo origine usando il `TargetSite` proprietà.</span><span class="sxs-lookup"><span data-stu-id="e631d-484">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exception.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e631d-485">Crea e restituisce una rappresentazione di stringa dell'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-485">Creates and returns a string representation of the current exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e631d-486">Una rappresentazione di stringa dell'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e631d-486">A string representation of the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e631d-487"><xref:System.Exception.ToString%2A> Restituisce una rappresentazione dell'eccezione corrente che può essere facilmente comprensibile.</span><span class="sxs-lookup"><span data-stu-id="e631d-487"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="e631d-488">Se l'eccezione contiene i dati dipendenti dalle impostazioni cultura, la rappresentazione di stringa restituiti da `ToString` è necessario prendere in considerazione le impostazioni cultura correnti del sistema.</span><span class="sxs-lookup"><span data-stu-id="e631d-488">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="e631d-489">Anche se non sono previsti requisiti esatti per il formato della stringa restituita, consigliabile tentare riflettono il valore dell'oggetto come percepito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="e631d-489">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="e631d-490">L'implementazione predefinita di <xref:System.Exception.ToString%2A> Ottiene il nome della classe che ha generato l'eccezione corrente, il messaggio, il risultato della chiamata al metodo <xref:System.Exception.ToString%2A> nell'eccezione interna e il risultato della chiamata al metodo <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e631d-490">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e631d-491">Se uno di questi membri è `null`, il relativo valore non è incluso nella stringa restituita.</span><span class="sxs-lookup"><span data-stu-id="e631d-491">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="e631d-492">Se è presente alcun messaggio di errore o se è una stringa vuota (""), viene restituito alcun messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="e631d-492">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="e631d-493">Il nome dell'eccezione interna e l'analisi dello stack vengono restituiti solo se non sono `null`.</span><span class="sxs-lookup"><span data-stu-id="e631d-493">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="e631d-494">Questo metodo esegue l'override di <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e631d-494">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e631d-495">Nell'esempio seguente genera un'eccezione e visualizza il risultato della chiamata al metodo <xref:System.Exception.ToString%2A> su tale eccezione.</span><span class="sxs-lookup"><span data-stu-id="e631d-495">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="e631d-496">Si noti che il <xref:System.Exception.ToString%2A?displayProperty=nameWithType> metodo viene chiamato implicitamente quando l'istanza di classe di eccezione viene visualizzata nell'elenco di argomenti del <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="e631d-496">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>