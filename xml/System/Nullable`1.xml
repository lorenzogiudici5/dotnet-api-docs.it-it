<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Nullable`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The underlying value type of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> generic type.</source>
          <target state="translated">Tipo di valore sottostante del tipo generico <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Represents a value type that can be assigned <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Rappresenta un tipo di valore a cui può essere assegnato <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>A type is said to be nullable if it can be assigned a value or can be assigned <ph id="ph1">`null`</ph>, which means the type has no value whatsoever.</source>
          <target state="translated">Un tipo viene definito per i valori null se è possibile assegnare un valore o può essere assegnato <ph id="ph1">`null`</ph>, ovvero il tipo non presenta alcun valore.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>By default, all reference types, such as <ph id="ph1">&lt;xref:System.String&gt;</ph>, are nullable, but all value types, such as <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, are not.</source>
          <target state="translated">Per impostazione predefinita, i tipi di riferimento, ad esempio <ph id="ph1">&lt;xref:System.String&gt;</ph>, sono nullable, ma tutti i valori di tipi, ad esempio <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, non sono.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>In C# and Visual Basic, you mark a value type as nullable by using the <ph id="ph1">`?`</ph> notation after the value type.</source>
          <target state="translated">In c# e Visual Basic, si contrassegna un tipo di valore come nullable mediante il <ph id="ph1">`?`</ph> notazione dopo il tipo di valore.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>For example, <ph id="ph1">`int?`</ph> in C# or <ph id="ph2">`Integer?`</ph> in Visual Basic declares an integer value type that can be assigned <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Ad esempio, <ph id="ph1">`int?`</ph> in c# o <ph id="ph2">`Integer?`</ph> in Visual Basic viene dichiarato un tipo di valore integer che può essere assegnato <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure supports using only a value type as a nullable type because reference types are nullable by design.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> struttura supporta l'utilizzo di un tipo di valore come un tipo nullable poiché i tipi di riferimento sono nullable in base alla progettazione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class provides complementary support for the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> classe fornisce supporto aggiuntivo per il <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> classe supporta il recupero del tipo sottostante di un tipo nullable e operazioni di confronto e uguaglianza alle coppie di tipi nullable il cui tipo sottostante di tipo di valore non supporta le operazioni di uguaglianza e confronto generiche.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Fundamental Properties</source>
          <target state="translated">Proprietà fondamentali</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The two fundamental members of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure are the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> properties.</source>
          <target state="translated">I due membri fondamentali del <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> struttura sono il <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object is <ph id="ph3">`true`</ph>, the value of the object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà per un <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> oggetto <ph id="ph3">`true`</ph>, il valore dell'oggetto accessibile con la <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the value of the object is undefined and an attempt to access the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property throws an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà è <ph id="ph2">`false`</ph>, il valore dell'oggetto è definito un tentativo di accesso e la <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà genera un <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Boxing and Unboxing</source>
          <target state="translated">Boxing e unboxing</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object, not the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object itself.</source>
          <target state="translated">Quando un tipo nullable è boxed, common language runtime boxing automaticamente il valore sottostante del <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> oggetto, non il <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> oggetto stesso.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>That is, if the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the contents of the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property is boxed.</source>
          <target state="translated">Vale a dire, se il <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà è <ph id="ph2">`true`</ph>, il contenuto del <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà è di tipo boxed.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When the underlying value of a nullable type is unboxed, the common language runtime creates a new <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure initialized to the underlying value.</source>
          <target state="translated">Quando il valore sottostante di un tipo nullable è unboxed, common language runtime crea un nuovo <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> struttura inizializzata sul valore sottostante.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">`HasValue`</ph> property of a nullable type is <ph id="ph2">`false`</ph>, the result of a boxing operation is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Se il <ph id="ph1">`HasValue`</ph> proprietà di un tipo nullable è <ph id="ph2">`false`</ph>, il risultato di un'operazione di conversione boxing è <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Di conseguenza, se un tipo nullable boxed viene passato a un metodo che prevede un argomento di oggetto, è necessario preparare tale metodo per gestire il caso in cui l'argomento è <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When <ph id="ph1">`null`</ph> is unboxed into a nullable type, the common language runtime creates a new <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure and initializes its <ph id="ph3">`HasValue`</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Quando <ph id="ph1">`null`</ph> è unboxed in un tipo nullable, common language runtime crea un nuovo <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> struttura e inizializza il <ph id="ph3">`HasValue`</ph> proprietà <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> and Windows Runtime Components</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> e componenti Windows Runtime</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, you can include a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> type as a member of a structure exported in a WinMD library.</source>
          <target state="translated">A partire da <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, è possibile includere un tipo <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> come membro di una struttura esportata in una libreria WinMD.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Previously, this was not supported.</source>
          <target state="translated">In precedenza, tale operazione non era supportata.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The following code example defines three rows of a table in the Microsoft Pubs sample database.</source>
          <target state="translated">Esempio di codice seguente definisce tre righe di una tabella nel database di esempio Pubs Microsoft.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The table contains two columns that are not nullable and two columns that are nullable.</source>
          <target state="translated">La tabella contiene due colonne che non sono nullable e due colonne che ammettono valori null.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>A value type.</source>
          <target state="translated">Tipo di valore.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure to the specified value.</source>
          <target state="translated">Inizializza una nuova istanza della struttura <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> in base al valore specificato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.#ctor(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> constructor initializes the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the new <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object to <ph id="ph4">`true`</ph>, and the <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property to the value of the <ph id="ph6">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> costruttore inizializza il <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà del nuovo <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> oggetto <ph id="ph4">`true`</ph>e il <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> il valore di proprietà di <ph id="ph6">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>An object.</source>
          <target state="translated">Oggetto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente è uguale a un oggetto specificato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter is equal to the current <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il parametro <ph id="ph2">&lt;paramref name="other" /&gt;</ph> è uguale all'oggetto <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente; in caso contrario <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>This table describes how equality is defined for the compared values:</source>
          <target state="translated">Questa tabella descrive la definizione dell'uguaglianza per i valori confrontati:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valore restituito</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descrizione</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph8">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> La proprietà <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph7">&lt;see langword="false" /&gt;</ph> e il parametro <ph id="ph8">&lt;paramref name="other" /&gt;</ph> è <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>That is, two null values are equal by definition.</source>
          <target state="translated">Due valori null sono uguali per definizione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is equal to the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph2">&lt;see langword="true" /&gt;</ph> e il valore restituito dalla proprietà <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> è uguale al parametro <ph id="ph4">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph8">&lt;see langword="true" /&gt;</ph>, and the <ph id="ph9">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> La proprietà <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> per la struttura <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente è <ph id="ph8">&lt;see langword="true" /&gt;</ph> e il parametro <ph id="ph9">&lt;paramref name="other" /&gt;</ph> è <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter is not <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> per la struttura <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente è <ph id="ph3">&lt;see langword="false" /&gt;</ph> e il parametro <ph id="ph4">&lt;paramref name="other" /&gt;</ph> non è <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is not equal to the <ph id="ph5">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> per la struttura <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente è <ph id="ph3">&lt;see langword="true" /&gt;</ph> e il valore restituito dalla proprietà <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> non è uguale al parametro <ph id="ph5">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure is <ph id="ph3">`true`</ph> and the <ph id="ph4">`other`</ph> argument is not <ph id="ph5">`null`</ph>, equality is determined by passing the <ph id="ph6">`other`</ph> parameter to the <ph id="ph7">`Equals`</ph> method of the underlying value of the current <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà dell'oggetto corrente <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> struttura è <ph id="ph3">`true`</ph> e <ph id="ph4">`other`</ph> argomento non è <ph id="ph5">`null`</ph>, l'uguaglianza è determinata passando il <ph id="ph6">`other`</ph> parametro per il <ph id="ph7">`Equals`</ph> metodo il valore dell'oggetto corrente sottostante <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The following code example determines whether an object and a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object are equal to the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">Esempio di codice seguente determina se un oggetto e un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> oggetto sono uguali all'oggetto corrente <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>Retrieves the hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property.</source>
          <target state="translated">Recupera il codice hash dell'oggetto restituito dalla proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>The hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or zero if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Codice hash dell'oggetto restituito dalla proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> se la proprietà <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph> oppure zero se la proprietà <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or a default value.</source>
          <target state="translated">Recupera il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente o un valore predefinito.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the object's default value.</source>
          <target state="translated">Recupera il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente o il valore predefinito dell'oggetto.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the  <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the default value of the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Valore della proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> se la proprietà <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph>; in caso contrario, valore predefinito dell'oggetto <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The type of the default value is the type argument of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, and the value of the default value consists solely of binary zeroes.</source>
          <target state="translated">Il tipo del valore predefinito è l'argomento di tipo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente e il valore del valore predefinito è costituito esclusivamente da zeri binari.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> il metodo restituisce un valore anche se il <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà è <ph id="ph3">`false`</ph> (a differenza di <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà, che genera un'eccezione).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">Esempio di codice seguente recupera il valore di un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> se tale valore è definito; in caso contrario, viene recuperato il valore predefinito o un valore predefinito specifico dell'oggetto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>A value to return if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Valore da restituire se la proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the specified default value.</source>
          <target state="translated">Recupera il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente o il valore predefinito specificato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> parameter.</source>
          <target state="translated">Valore della proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> se la proprietà <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph>; in caso contrario, parametro <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> il metodo restituisce un valore anche se il <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà è <ph id="ph3">`false`</ph> (a differenza di <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà, che genera un'eccezione).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">Esempio di codice seguente recupera il valore di un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> se tale valore è definito; in caso contrario, viene recuperato il valore predefinito o un valore predefinito specifico dell'oggetto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.HasValue">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a valid value of its underlying type.</source>
          <target state="translated">Ottiene un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente presenta un valore valido per il proprio tipo sottostante.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a value; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has no value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente presenta un valore; <ph id="ph3">&lt;see langword="false" /&gt;</ph> se l'oggetto <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente non presenta alcun valore.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the current <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph>, il valore dell'oggetto corrente <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> può accedere all'oggetto con il <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>Otherwise, attempting to access its value throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">In caso contrario, il tentativo di accesso genera il relativo valore un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà di un <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> oggetto per determinare se viene visualizzato l'oggetto <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà o il relativo <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>A nullable value.</source>
          <target state="translated">Valore nullable.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> instance to its underlying value.</source>
          <target state="translated">Definisce una conversione esplicita di un valore <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> in un numero complesso.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property for the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Valore della proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> per il parametro <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>This operator supports the explicit conversion of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> instance to type <ph id="ph2">`T`</ph>, the type of <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</source>
          <target state="translated">Questo operatore supporta la conversione esplicita di corrente <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> istanza in cui digitare <ph id="ph2">`T`</ph>, il tipo di <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The syntax for such explicit conversions is language-dependent.</source>
          <target state="translated">La sintassi di tali conversioni esplicite è dipendente dalla lingua.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>You may also be able to perform the conversion by calling the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">È anche possibile eseguire la conversione chiamando il <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> operator enables code such as the following, which converts a <ph id="ph2">`Nullable(Of Int32)`</ph> value to an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> operatore consente al codice simile al seguente, che converte un <ph id="ph2">`Nullable(Of Int32)`</ph> valore un <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A value type.</source>
          <target state="translated">Tipo di valore.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object initialized to a specified value.</source>
          <target state="translated">Crea un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> inizializzato su un valore specificato.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object whose <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is initialized with the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> la cui proprietà <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> è inizializzata con il parametro <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is not <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the <ph id="ph5">`value`</ph> parameter and the <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph7">`true`</ph>.</source>
          <target state="translated">Se il <ph id="ph1">`value`</ph> parametro non è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà del nuovo <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> valore viene inizializzato il <ph id="ph5">`value`</ph> parametro e il <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà viene inizializzata su <ph id="ph7">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the default value, which is the value that is all binary zeroes, and the <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Se il <ph id="ph1">`value`</ph> parametro <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà del nuovo <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> valore viene inizializzato sul valore predefinito, ovvero il valore di zeri binari, e il <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà viene inizializzata su <ph id="ph6">`false`</ph> .</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>Returns the text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Restituisce la rappresentazione testo del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>The text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or an empty string ("") if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Rappresentazione testo del valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente se la proprietà <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph> oppure una stringa vuota ("") se la proprietà <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> property returns the string yielded by calling the <ph id="ph2">`ToString`</ph> property of the object returned by the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> proprietà restituisce la stringa risultante dalla chiamata di <ph id="ph2">`ToString`</ph> proprietà dell'oggetto restituito dal <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The following code example displays the value of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">Esempio di codice seguente consente di visualizzare il valore dell'oggetto corrente <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if it has been assigned a valid underlying value.</source>
          <target state="translated">Ottiene il valore dell'oggetto corrente <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> se allo stesso oggetto è stato assegnato un valore sottostante valido.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> corrente se la proprietà <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>An exception is thrown if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Se la proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>, viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>If a value of type <ph id="ph1">`T`</ph> has not been assigned to the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object, you can compare it to <ph id="ph3">`null`</ph> and retrieve its <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property, but you cannot access its <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or call its other members.</source>
          <target state="translated">Se un valore di tipo <ph id="ph1">`T`</ph> non è stato assegnato il <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> dell'oggetto, è possibile confrontare a <ph id="ph3">`null`</ph> e recuperare il <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà, ma è possibile accedere relativo <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà o chiamare altri membri.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> proprietà di un <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> oggetto per determinare se viene visualizzato l'oggetto <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> proprietà o il relativo <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>