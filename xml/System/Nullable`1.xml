<Type Name="Nullable&lt;T&gt;" FullName="System.Nullable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26648c369e819cdf293564be8849634e55a90bdf" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48725198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Nullable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Nullable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Nullable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Nullable" />
  <TypeSignature Language="F#" Value="type Nullable&lt;'T (requires 'T : struct)&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Tipo di valore sottostante del tipo generico <see cref="T:System.Nullable`1" />.</typeparam>
    <summary>Rappresenta un tipo di valore a cui può essere assegnato <see langword="null" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tipo viene definito che ammette valori null se questo può essere assegnato un valore o può essere assegnato `null`, ovvero il tipo non presenta alcun valore. Per impostazione predefinita, i tipi di riferimento, ad esempio <xref:System.String>, sono nullable, ma tutti i valori di tipi, ad esempio <xref:System.Int32>, non sono.  
  
 In c# e Visual Basic, si contrassegna un tipo di valore come nullable mediante il `?` notazione dopo il tipo di valore. Ad esempio, `int?` in c# o `Integer?` in Visual Basic viene dichiarato un tipo di valore integer che può essere assegnato `null`.  
  
 Il <xref:System.Nullable%601> struttura supporta l'uso solo di un tipo di valore come un tipo nullable perché i tipi di riferimento sono ammette valori null per impostazione predefinita.  
  
 Il <xref:System.Nullable> classe fornisce supporto aggiuntivo per il <xref:System.Nullable%601> struttura. Il <xref:System.Nullable> classe è possibile ottenere il tipo sottostante di un tipo nullable e operazioni di confronto e uguaglianza su una coppia di tipi nullable il cui tipo sottostante di tipo valore non supporta le operazioni di confronto e uguaglianza generiche.  
  
## <a name="fundamental-properties"></a>Proprietà fondamentali  
 I due membri fondamentali del <xref:System.Nullable%601> struttura sono le <xref:System.Nullable%601.HasValue%2A> e <xref:System.Nullable%601.Value%2A> proprietà. Se il <xref:System.Nullable%601.HasValue%2A> proprietà per un <xref:System.Nullable%601> oggetto viene `true`, il valore dell'oggetto, è possibile accedervi tramite il <xref:System.Nullable%601.Value%2A> proprietà. Se il <xref:System.Nullable%601.HasValue%2A> proprietà viene `false`, il valore dell'oggetto è definito e tenta di accedere al <xref:System.Nullable%601.Value%2A> proprietà genera un <xref:System.InvalidOperationException>.  
  
## <a name="boxing-and-unboxing"></a>Boxing e unboxing  
 Quando viene sottoposto a boxing di un tipo nullable, common language runtime caselle automaticamente il valore sottostante del <xref:System.Nullable%601> dell'oggetto, non il <xref:System.Nullable%601> oggetto stesso. Vale a dire, se il <xref:System.Nullable%601.HasValue%2A> proprietà è `true`, il contenuto del <xref:System.Nullable%601.Value%2A> proprietà è di tipo boxed. Quando il valore sottostante di un tipo nullable è unboxed, common language runtime crea un nuovo <xref:System.Nullable%601> struttura inizializzata sul valore sottostante.  
  
 Se il `HasValue` è di proprietà di un tipo nullable `false`, il risultato di un'operazione di conversione boxing è `null`. Di conseguenza, se un tipo nullable boxed viene passato a un metodo che prevede un argomento di oggetto, tale metodo deve essere preparato per gestire il caso in cui l'argomento è `null`. Quando `null` è unboxed in un tipo nullable, common language runtime crea un nuovo <xref:System.Nullable%601> struttura e la inizializza relativo `HasValue` proprietà `false`.  
  
## <a name="includenetv451includesnet-v451-mdmd-and-windows-runtime-components"></a>[!INCLUDE[net_v451](~/includes/net-v451-md.md)] e componenti Windows Runtime  
 A partire da [!INCLUDE[net_v451](~/includes/net-v451-md.md)], è possibile includere un tipo <xref:System.Nullable%601> come membro di una struttura esportata in una libreria WinMD. In precedenza, tale operazione non era supportata.  
  
   
  
## Examples  
 L'esempio di codice seguente definisce tre righe di una tabella nel database di esempio Pubs Microsoft. La tabella contiene due colonne che non sono nullable e due colonne che ammettono i valori null.  
  
 [!code-cpp[system.nullableOfT.class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.nullableOfT.class/cpp/tarow.cpp#1)]
 [!code-csharp[system.nullableOfT.class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.class/cs/tarow.cs#1)]
 [!code-vb[system.nullableOfT.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.class/vb/tarow.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable" />
    <related type="Article" href="http://msdn.microsoft.com/library/e473cb01-28ca-42be-9cea-f717055d72c6">Tipi nullable (Guida per programmatori C#)</related>
    <related type="Article" href="http://msdn.microsoft.com/library/9ac3b602-6f96-4e6d-96f7-cd4e81c468a6">Tipi di valori nullable (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Nullable (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable(T value);" />
      <MemberSignature Language="F#" Value="new Nullable&lt;'T (requires 'T : struct)&gt; : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="new System.Nullable&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Tipo di valore.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Nullable`1" /> in base al valore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Nullable%601.%23ctor%2A> costruttore inizializza la <xref:System.Nullable%601.HasValue%2A> proprietà del nuovo <xref:System.Nullable%601> oggetto `true`e il <xref:System.Nullable%601.Value%2A> il valore della proprietà il `value` parametro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nullable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto.</param>
        <summary>Indica se l'oggetto <see cref="T:System.Nullable`1" /> corrente è uguale a un oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="other" /> è uguale all'oggetto <see cref="T:System.Nullable`1" /> corrente; in caso contrario <see langword="false" />.  
  
Questa tabella descrive la definizione dell'uguaglianza per i valori confrontati: 
 <list type="table"><listheader><term> Valore restituito 
 </term><description> Descrizione 
 </description></listheader><item><term><see langword="true" /></term><description> La proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="false" /> e il parametro <paramref name="other" /> è <see langword="null" />. Due valori null sono uguali per definizione.  
  
oppure 
La proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="true" /> e il valore restituito dalla proprietà <see cref="P:System.Nullable`1.Value" /> è uguale al parametro <paramref name="other" />.  
  
 </description></item><item><term><see langword="false" /></term><description> La proprietà <see cref="P:System.Nullable`1.HasValue" /> per la struttura <see cref="T:System.Nullable`1" /> corrente è <see langword="true" /> e il parametro <paramref name="other" /> è <see langword="null" />.  
  
oppure 
La proprietà <see cref="P:System.Nullable`1.HasValue" /> per la struttura <see cref="T:System.Nullable`1" /> corrente è <see langword="false" /> e il parametro <paramref name="other" /> non è <see langword="null" />.  
  
oppure 
La proprietà <see cref="P:System.Nullable`1.HasValue" /> per la struttura <see cref="T:System.Nullable`1" /> corrente è <see langword="true" /> e il valore restituito dalla proprietà <see cref="P:System.Nullable`1.Value" /> non è uguale al parametro <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Nullable%601.HasValue%2A> proprietà dell'oggetto corrente <xref:System.Nullable%601> struttura è `true` e il `other` argomento non `null`, l'uguaglianza è determinata passando il `other` parametro per il `Equals` metodo del valore dell'oggetto corrente sottostante <xref:System.Nullable%601> struttura.  
  
   
  
## Examples  
 Esempio di codice seguente determina se un oggetto e un <xref:System.Nullable%601> oggetto sono uguali all'oggetto corrente <xref:System.Nullable%601> oggetto.  
  
 [!code-csharp[system.nullableOfT.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.Equals/cs/eq.cs#1)]
 [!code-vb[system.nullableOfT.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.Equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nullable.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera il codice hash dell'oggetto restituito dalla proprietà <see cref="P:System.Nullable`1.Value" />.</summary>
        <returns>Codice hash dell'oggetto restituito dalla proprietà <see cref="P:System.Nullable`1.Value" /> se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="true" /> oppure zero se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueOrDefault">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera il valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente o un valore predefinito.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : unit -&gt; 'T" Usage="nullable.GetValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera il valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente o il valore predefinito del tipo sottostante.</summary>
        <returns>Valore della proprietà <see cref="P:System.Nullable`1.Value" /> se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="true" />; in caso contrario, valore predefinito del tipo sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Nullable%601.GetValueOrDefault%2A> metodo restituisce un valore anche se il <xref:System.Nullable%601.HasValue%2A> proprietà è `false` (a differenza di <xref:System.Nullable%601.Value%2A> proprietà, che genera un'eccezione). Se il <xref:System.Nullable%601.HasValue%2A> proprietà viene `false`, il metodo restituisce il [predefinita](~/docs/csharp/language-reference/keywords/default-values-table.md) valore del tipo sottostante.  
  
   
  
## Examples  
 Esempio di codice seguente recupera il valore di un <xref:System.Nullable%601> se tale valore è definita; in caso contrario, viene recuperato il valore predefinito o un valore predefinito specifico dell'oggetto.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault(`0)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault (T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault(!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault (defaultValue As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault(T defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : 'T -&gt; 'T" Usage="nullable.GetValueOrDefault defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Valore da restituire se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="false" />.</param>
        <summary>Recupera il valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente o il valore predefinito specificato.</summary>
        <returns>Valore della proprietà <see cref="P:System.Nullable`1.Value" /> se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="true" />; in caso contrario, parametro <paramref name="defaultValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Nullable%601.GetValueOrDefault%2A> metodo restituisce un valore anche se il <xref:System.Nullable%601.HasValue%2A> proprietà è `false` (a differenza di <xref:System.Nullable%601.Value%2A> proprietà, che genera un'eccezione).  
  
   
  
## Examples  
 Esempio di codice seguente recupera il valore di un <xref:System.Nullable%601> se tale valore è definita; in caso contrario, viene recuperato il valore predefinito o un valore predefinito specifico dell'oggetto.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Nullable`1" /> corrente presenta un valore valido per il proprio tipo sottostante.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Nullable`1" /> corrente presenta un valore; <see langword="false" /> se l'oggetto <see cref="T:System.Nullable`1" /> corrente non presenta alcun valore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Nullable%601.HasValue%2A> proprietà viene `true`, il valore dell'oggetto corrente <xref:System.Nullable%601> oggetto sono accessibili con il <xref:System.Nullable%601.Value%2A> proprietà. In caso contrario, il tentativo di accesso relativo genera valore un <xref:System.InvalidOperationException> eccezione.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Nullable%601.HasValue%2A> proprietà di un `Nullable<int>` (`Nullable(Of Integer)` in Visual Basic) per determinare se viene visualizzato l'oggetto <xref:System.Nullable%601.Value%2A> proprietà o del relativo <xref:System.Nullable%601.GetValueOrDefault%2A> proprietà.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator T (Nullable&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Explicit(valuetype System.Nullable`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Nullable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator T(Nullable&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Nullable&lt;'T (requires 'T : struct)&gt; -&gt; 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Valore nullable.</param>
        <summary>Definisce una conversione esplicita di un valore <see cref="T:System.Nullable`1" /> in un numero complesso.</summary>
        <returns>Valore della proprietà <see cref="P:System.Nullable`1.Value" /> per il parametro <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo operatore supporta la conversione esplicita dell'oggetto corrente <xref:System.Nullable%601> istanza al tipo `T`, il tipo di <xref:System.Nullable%601.Value%2A>. La sintassi di tali conversioni esplicite è dipendente dalla lingua. È anche possibile eseguire la conversione chiamando il <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> (metodo).  
  
 È il metodo equivalente per l'operatore <xref:System.Nullable%601.Value?displayProperty=nameWithType>  
  
## Examples  
 Il <xref:System.Nullable%601.op_Explicit%2A> operatore consente codice simile al seguente, che converte un `Nullable(Of Int32)` valore un <xref:System.Int32> valore.  
  
 [!code-csharp[System.Nullable~1.Conversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.conversion/cs/explicit1.cs#1)]
 [!code-vb[System.Nullable~1.Conversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.conversion/vb/explicit1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Nullable&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As Nullable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Nullable&lt;T&gt;(T value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Tipo di valore.</param>
        <summary>Crea un nuovo oggetto <see cref="T:System.Nullable`1" /> inizializzato su un valore specificato.</summary>
        <returns>Oggetto <see cref="T:System.Nullable`1" /> la cui proprietà <see cref="P:System.Nullable`1.Value" /> è inizializzata con il parametro <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il `value` parametro non è `null`, il <xref:System.Nullable%601.Value%2A> proprietà della nuova <xref:System.Nullable%601> valore verrà inizializzato sul `value` parametro e la <xref:System.Nullable%601.HasValue%2A> proprietà viene inizializzata su `true`.  
  
 Se il `value` parametro è `null`, il <xref:System.Nullable%601.Value%2A> proprietà della nuova <xref:System.Nullable%601> valore viene inizializzato sul valore predefinito, ovvero il valore zeri binari, e il <xref:System.Nullable%601.HasValue%2A> proprietà viene inizializzata su `false` .  
  
 È il metodo equivalente per l'operatore <xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nullable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la rappresentazione testo del valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente.</summary>
        <returns>Rappresentazione testo del valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="true" /> oppure una stringa vuota ("") se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Nullable%601.ToString%2A> proprietà restituisce la stringa risultante dalla chiamata di `ToString` proprietà dell'oggetto restituito dal <xref:System.Nullable%601.Value%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare il valore dell'oggetto corrente <xref:System.Nullable%601> oggetto.  
  
 [!code-csharp[system.nullableOfT.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.ToString/cs/ts.cs#1)]
 [!code-vb[system.nullableOfT.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.ToString/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore dell'oggetto corrente <see cref="T:System.Nullable`1" /> se allo stesso oggetto è stato assegnato un valore sottostante valido.</summary>
        <value>Valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="true" />. Se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="false" />, viene generata un'eccezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si specifica un valore di tipo `T` non è stato assegnato al <xref:System.Nullable%601> dell'oggetto, è possibile confrontarlo `null` e recuperare relativo <xref:System.Nullable%601.HasValue%2A> non può accedere a proprietà, ma è relativo <xref:System.Nullable%601.Value%2A> proprietà o chiamare altri membri.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Nullable%601.HasValue%2A> proprietà di un `Nullable<int>` (`Nullable(Of Integer)` in Visual Basic) per determinare se viene visualizzato l'oggetto <xref:System.Nullable%601.Value%2A> proprietà o del relativo <xref:System.Nullable%601.GetValueOrDefault%2A> proprietà.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Nullable`1.HasValue" /> è <see langword="false" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>