<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AppContext.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de2b5eddaaa2bb43dcc7b608c490b41f3a8c1713.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de2b5eddaaa2bb43dcc7b608c490b41f3a8c1713</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AppContext">
          <source>Provides members for setting and retrieving data about an application's context.</source>
          <target state="translated">Fornisce i membri per l'impostazione e il recupero dei dati relativi al contesto di un'applicazione.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> classe consente agli autori di librerie fornire un meccanismo di rifiuto esplicito uniforme per la nuova funzionalità per i propri utenti.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">che stabilisce un contratto a regime di controllo libero ("loosely-coupled") tra componenti per poter comunicare una richiesta di rinuncia esplicita.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Questa funzionalità è importante in genere quando viene apportata una modifica alle funzionalità esistenti.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Al contrario, esiste già un consenso esplicito per la nuova funzionalità.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>AppContext for library developers</source>
          <target state="translated">AppContext per gli sviluppatori di librerie</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Libraries use  the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class to define and expose compatibility switches, while library users can set those switches to affect the library behavior.</source>
          <target state="translated">Utilizzano le librerie di <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> passa da una classe per definire ed esporre la compatibilità, mentre gli utenti di libreria possono impostare tali opzioni per influire sul comportamento della libreria.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By default, libraries provide the new functionality, and they only alter it (that is, they provide the previous functionality) if the switch is set.</source>
          <target state="translated">Per impostazione predefinita, le librerie forniscono la nuova funzionalità e la modificano (cioè offrono la funzionalità precedente) solo se l'opzione è impostata.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This allows libraries to provide new behavior for an existing API while continuing to support callers who depend on the previous behavior.</source>
          <target state="translated">Questo consente alle librerie fornire di nuovo comportamento per un'API esistente pur continuando a supportare i chiamanti che dipendono dal comportamento precedente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Defining the switch name</source>
          <target state="translated">Definire il nome del commutatore</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The most common way to allow consumers of your library to opt out of a change of behavior is to define a named switch.</source>
          <target state="translated">Il modo più comune per consentire ai consumer della libreria di rifiutare esplicitamente un cambiamento di comportamento consiste nel definire un parametro denominato.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its <ph id="ph1">`value`</ph> element is a name/value pair that consists of the name of a switch and its <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value.</source>
          <target state="translated">Il relativo <ph id="ph1">`value`</ph> elemento è una coppia nome/valore costituita da nome di un commutatore e il relativo <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By default, the switch is always implicitly <ph id="ph1">`false`</ph>, which provides the new behavior (and makes the new behavior opt-in by default).</source>
          <target state="translated">Per impostazione predefinita, l'opzione è sempre implicitamente <ph id="ph1">`false`</ph>, che fornisce il nuovo comportamento (e rende il nuovo comportamento opt-in per impostazione predefinita).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Setting the switch to <ph id="ph1">`true`</ph> enables it, which provides the legacy behavior.</source>
          <target state="translated">Impostare l'opzione su <ph id="ph1">`true`</ph> consente, che fornisce il comportamento legacy.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Explicitly setting the switch to <ph id="ph1">`false`</ph> also provides the new behavior.</source>
          <target state="translated">Impostare in modo esplicito l'opzione su <ph id="ph1">`false`</ph> fornisce anche il nuovo comportamento.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</source>
          <target state="translated">È opportuno usare un formato coerente per i nomi di parametro, poiché si tratta di un contratto formale esposto da una libreria.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following are two obvious formats.</source>
          <target state="translated">Di seguito sono riportati due formati ovvi.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Opzione<ept id="p1">*</ept>.<bpt id="p2">*</bpt>spaziodeinomi<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nomeopzione<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Opzione<ept id="p1">*</ept>.<bpt id="p2">*</bpt>libreria<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nomeopzione<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Once you define and document the switch, callers can use it by using the registry, by adding an  <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element to their application configuration file, or by calling the  <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method programmatically.</source>
          <target state="translated">Una volta definire e documentare il commutatore, i chiamanti possono utilizzarla tramite il Registro di sistema, aggiungendo un <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> elemento per i file di configurazione dell'applicazione, oppure chiamando il <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> metodo a livello di codice.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>See the <bpt id="p1">[</bpt>AppContext for library consumers<ept id="p1">](#ForConsumers)</ept> section for more information about how callers use and set the value of <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> configuration switches.</source>
          <target state="translated">Vedere il <bpt id="p1">[</bpt>AppContext per consumer della libreria<ept id="p1">](#ForConsumers)</ept> sezione per ulteriori informazioni su come i chiamanti usare e impostare il valore di <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> opzioni di configurazione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the common language runtime runs an application, it automatically reads the registry's compatibility settings and loads the application configuration file in order to populate the application's <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance.</source>
          <target state="translated">Quando in common language runtime viene eseguita un'applicazione, legge le impostazioni di compatibilità del Registro di sistema automaticamente e carica il file di configurazione dell'applicazione per popolare l'applicazione <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> istanza.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance is populated either programmatically by the caller or by the runtime, you do not have to take any action, such as calling the <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method,  to configure the <ph id="ph3">&lt;xref:System.AppContext&gt;</ph> instance.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> istanza viene compilata a livello di codice dal chiamante o dal runtime, non è necessario intraprendere alcuna azione, ad esempio la chiamata di <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> metodo, per configurare il <ph id="ph3">&lt;xref:System.AppContext&gt;</ph> istanza.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Checking the setting</source>
          <target state="translated">L'impostazione di controllo</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>You can then check if a consumer has declared the value of the switch and act appropriately by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">È quindi possibile controllare se un consumer è dichiarato il valore del parametro e act chiamando in modo appropriato il <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The method returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`switchName`</ph> argument is found, and when the method returns, its <ph id="ph3">`isEnabled`</ph> argument indicates the value of the switch.</source>
          <target state="translated">Il metodo restituisce <ph id="ph1">`true`</ph> se il <ph id="ph2">`switchName`</ph> viene trovato argomento e quando il metodo restituisce, l'oggetto <ph id="ph3">`isEnabled`</ph> argomento indica il valore dell'opzione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Otherwise, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">In caso contrario, il metodo restituisce <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>An example</source>
          <target state="translated">Un esempio</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class to allow the customer to choose the original behavior of a library method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> classe per consentire al cliente di scegliere il comportamento di un metodo di libreria originale.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following is version 1.0 of a library named <ph id="ph1">`StringLibrary`</ph>.</source>
          <target state="translated">Di seguito è la versione 1.0 di una libreria denominata <ph id="ph1">`StringLibrary`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It defines a <ph id="ph1">`SubstringStartsAt`</ph> method that performs an ordinal comparison to determine the starting index of a substring within a larger string.</source>
          <target state="translated">Definisce un <ph id="ph1">`SubstringStartsAt`</ph> metodo che esegue un confronto ordinale per determinare l'indice iniziale di una sottostringa all'interno di una stringa più grande.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following example then uses the library to find the starting index of the substring "archæ" in "The archaeologist".</source>
          <target state="translated">Nell'esempio seguente, quindi, utilizza la libreria per trovare l'indice iniziale della sottostringa "archæ" in "Il archaeologist".</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because the method performs an ordinal comparison, the substring cannot be found.</source>
          <target state="translated">Poiché il metodo esegue un confronto ordinale, Impossibile trovare la sottostringa.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Version 2 of the library, however, changes the <ph id="ph1">`SubstringStartsAt`</ph> method to use culture-sensitive comparison.</source>
          <target state="translated">Versione 2 della libreria, tuttavia, cambia il <ph id="ph1">`SubstringStartsAt`</ph> metodo da utilizzare a confronto con distinzione delle impostazioni cultura.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the app is recompiled to run against the new version of the library, it now reports that the substring "archæ" is found at index 4 in "The archaeologist".</source>
          <target state="translated">Se l'app viene ricompilato per l'esecuzione con la nuova versione della libreria, ora segnala che è possibile trovare la sottostringa "archæ" in corrispondenza dell'indice 4 in "Il archaeologist".</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This change can be prevented from breaking the applications that depend on the original behavior by defining an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> switch.</source>
          <target state="translated">Questa modifica è possibile impedire l'interruzione le applicazioni che dipendono dal comportamento originale definendo un <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> passare.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>In this case, the switch is named <ph id="ph1">`StringLibrary.DoNotUseCultureSensitiveComparison`</ph>.</source>
          <target state="translated">In questo caso, il commutatore denominato <ph id="ph1">`StringLibrary.DoNotUseCultureSensitiveComparison`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its default value, <ph id="ph1">`false`</ph>, indicates that the library should perform its version 2.0 culture-sensitive comparison.</source>
          <target state="translated">Il valore predefinito, <ph id="ph1">`false`</ph>, indica che la libreria deve eseguire il confronto con distinzione delle impostazioni cultura versione 2.0.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><ph id="ph1">`true`</ph> indicates that the library should perform its version 1.0 ordinal comparison.</source>
          <target state="translated"><ph id="ph1">`true`</ph> indica che la libreria deve eseguire il confronto ordinale versione 1.0.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>A slight modification of the previous code allows the library consumer to set the switch to determine the kind of comparison the method performs.</source>
          <target state="translated">Una lieve modifica del codice precedente consente al consumer di libreria impostare l'opzione per determinare il tipo di confronto, che il metodo esegue.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If application can then use the following configuration file to restore the version 1.0 behavior.</source>
          <target state="translated">Se l'applicazione può quindi utilizzare il file di configurazione seguente per ripristinare il comportamento della versione 1.0.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the application is run with the configuration file present, it produces the following output:</source>
          <target state="translated">Quando l'applicazione viene eseguita con il file di configurazione presentano, produce il seguente output:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>AppContext for library consumers</source>
          <target state="translated">AppContext per consumer della libreria</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If you are the consumer of a library, the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class  allows you to take advantage of a library or library method's opt-out mechanism for new functionality.</source>
          <target state="translated">Se si è il consumer di una libreria, il <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> classe consente di sfruttare i vantaggi del meccanismo di rifiuto esplicito del metodo di raccolta per nuove funzionalità o di una libreria.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Individual methods of the class library that you are calling define particular switches that enable or disable a new behavior.</source>
          <target state="translated">I singoli metodi della libreria di classi che si sta chiamando definiscono particolare opzioni che abilitano o disabilitano un nuovo comportamento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The value of the switch  is a Boolean.</source>
          <target state="translated">Il valore dell'opzione è un valore booleano.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If it is <ph id="ph1">`false`</ph>, which is typically the default value, the new behavior is enabled; if it is <ph id="ph2">`true`</ph>, the new behavior is disabled, and the member behaves as it did previously.</source>
          <target state="translated">Se è <ph id="ph1">`false`</ph>, che è in genere il valore predefinito, il nuovo comportamento è abilitato; in caso <ph id="ph2">`true`</ph>, il nuovo comportamento è disabilitato e il membro si comporta come in precedenza.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>You can set the value of a switch in one of three ways:</source>
          <target state="translated">È possibile impostare il valore di un commutatore in uno dei tre modi:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method in your code.</source>
          <target state="translated">Chiamando il <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> metodo nel codice.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The <ph id="ph1">`switchName`</ph> argument defines the switch name, and the <ph id="ph2">`isEnabled`</ph> property defines the value of the switch.</source>
          <target state="translated">Il <ph id="ph1">`switchName`</ph> argomento definisce il nome del commutatore e <ph id="ph2">`isEnabled`</ph> proprietà definisce il valore dell'opzione.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> is a static class, it is available on a per-application domain basis.</source>
          <target state="translated">Poiché <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> è una classe statica, è disponibile in base al dominio per ogni applicazione.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> has application scope; that is, it affects only the application.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> con ambito di applicazione; vale a dire influisce solo l'applicazione.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By adding an <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element to the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>runtime&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of your app.config file.</source>
          <target state="translated">Aggiungendo un <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> elemento per il <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>runtime &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> sezione del file app. config.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The switch has a single attribute, <ph id="ph1">`value`</ph>, whose value is a string that represents a key/value pair containing both the switch name and its value.</source>
          <target state="translated">Il commutatore ha un solo attributo, <ph id="ph1">`value`</ph>, il cui valore è una stringa che rappresenta una coppia chiave/valore contenente il nome del commutatore e il relativo valore.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>To define multiple switches, separate each switch's key/value pair in the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element's <ph id="ph2">`value`</ph> attribute with a semicolon.</source>
          <target state="translated">Per definire più commutatori, separare coppia chiave/valore dell'opzione ogni nel <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> dell'elemento <ph id="ph2">`value`</ph> attributo con un punto e virgola.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>In that case, the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element has the following format:</source>
          <target state="translated">In tal caso, il <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> elemento presenta il formato seguente:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Using the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element to define a configuration setting has application scope; that is, it affects only the application.</source>
          <target state="translated">Utilizzando il <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> elemento per definire un'impostazione di configurazione con ambito di applicazione; vale a dire influisce solo l'applicazione.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>For information on the switches defined by the .NET Framework, see the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt; element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept>.</source>
          <target state="translated">Per informazioni sulle opzioni definite da .NET Framework, vedere il <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt; elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By adding a string value whose name is the name of the switch to the <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> key in the registry.</source>
          <target state="translated">Tramite l'aggiunta di un valore di stringa il cui nome è il nome del commutatore per il <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> chiave del Registro di sistema.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its value must be the string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> that can be parsed by the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> method; that is, it must be "True", "true", "False", or "false".</source>
          <target state="translated">Il valore deve essere la rappresentazione di stringa di un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> che può essere analizzato dal <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> (metodo), vale a dire deve essere "True", "true", "False" o "false".</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If the runtime encounters any other value, it ignores the switch.</source>
          <target state="translated">Se il runtime incontra un altro valore, ignora il commutatore.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Using the registry to define an <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> switch has machine scope; that is, it affects every application running on the machine.</source>
          <target state="translated">Utilizzo del Registro di sistema per definire un <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> switch è dotato di ambito del computer; ovvero, influisce su tutte le applicazioni in esecuzione nel computer.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If you set the same switch in more than one way, the order of precedence for determining which setting overrides the others is:</source>
          <target state="translated">Se si imposta la stessa opzione in più modo, è l'ordine di precedenza per determinare quale impostazione esegue l'override di altri:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The programmatic setting.</source>
          <target state="translated">L'impostazione a livello di codice.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The setting in the app config file.</source>
          <target state="translated">L'impostazione nel file di configurazione app.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The registry setting.</source>
          <target state="translated">L'impostazione del Registro di sistema.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following is a simple application that passes a file URI to the <ph id="ph1">&lt;xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Di seguito è riportato una semplice applicazione che passa un URI di file per il <ph id="ph1">&lt;xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When run under the .NET Framework 4.6, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> because <ph id="ph2">`file://`</ph> is no longer a valid part of a file path.</source>
          <target state="translated">Durante l'esecuzione in .NET Framework 4.6, genera un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> perché <ph id="ph2">`file://`</ph> non è più una parte di un percorso file valida.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>To restore the method's previous behavior and prevent the exception, you can add the <ph id="ph1">`Switch.System.IO.UseLegacyPathHandling`</ph> switch to the application configuration file for the example:</source>
          <target state="translated">Per ripristinare il comportamento del metodo precedente ed evitare l'eccezione, è possibile aggiungere il <ph id="ph1">`Switch.System.IO.UseLegacyPathHandling`</ph> passare al file di configurazione dell'applicazione per un esempio:</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>See also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">[</bpt>AppContext switch<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Opzione AppContext<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.AppContext.BaseDirectory">
          <source>Gets the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">Ottiene il percorso della directory base usata dal resolver dell'assembly per verificare la presenza di assembly.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">Percorso della directory base usata dal resolver dell'assembly per verificare la presenza di assembly.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>This is a per application domain property.</source>
          <target state="translated">Si tratta di una per ogni proprietà del dominio applicazione.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>Its value corresponds to the <ph id="ph1">&lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType&gt;</ph> property of the current application domain.</source>
          <target state="translated">Il valore corrisponde al <ph id="ph1">&lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType&gt;</ph> proprietà del dominio applicazione corrente.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>The name of the data element.</source>
          <target state="translated">Nome dell'elemento dati.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>Returns the value of the named data element assigned to the current application domain.</source>
          <target state="translated">Restituisce il valore dell'elemento dati denominato assegnato al dominio applicazione corrente.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>The value of <ph id="ph1">&lt;paramref name="name" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="name" /&gt;</ph> identifies a named value; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Valore di <ph id="ph1">&lt;paramref name="name" /&gt;</ph>, se <ph id="ph2">&lt;paramref name="name" /&gt;</ph> identifica un valore denominato; in caso contrario, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The name of the switch.</source>
          <target state="translated">Nome dell'opzione.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The value of the switch.</source>
          <target state="translated">Valore dell'opzione.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Sets the value of a switch.</source>
          <target state="translated">Imposta il valore di un'opzione.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> classe consente agli autori di librerie fornire un meccanismo di rifiuto esplicito uniforme per la nuova funzionalità per i propri utenti.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">che stabilisce un contratto a regime di controllo libero ("loosely-coupled") tra componenti per poter comunicare una richiesta di rinuncia esplicita.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Questa funzionalità è importante in genere quando viene apportata una modifica alle funzionalità esistenti.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Al contrario, esiste già un consenso esplicito per la nuova funzionalità.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method is called by an application (or a library) to declare the value of a switch (which is always a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value) that a dependent library defines.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> metodo viene chiamato da un'applicazione (o una libreria) per dichiarare il valore di un'opzione (che è sempre un <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> valore) che definisce una libreria dipendente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The switch is always implicitly <ph id="ph1">`false`</ph>, which provides the new behavior.</source>
          <target state="translated">L'opzione è sempre implicitamente <ph id="ph1">`false`</ph>, che fornisce il nuovo comportamento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Setting the switch to <ph id="ph1">`true`</ph> enables it, which provides the legacy behavior.</source>
          <target state="translated">Impostare l'opzione su <ph id="ph1">`true`</ph> consente, che fornisce il comportamento legacy.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Explicitly setting the switch to <ph id="ph1">`false`</ph> also provides the new behavior.</source>
          <target state="translated">Impostare in modo esplicito l'opzione su <ph id="ph1">`false`</ph> fornisce anche il nuovo comportamento.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The dependent library can then check the value of the switch by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">La libreria dipendente può quindi controllare il valore dell'opzione chiamando il <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</source>
          <target state="translated">È opportuno usare un formato coerente per i nomi di parametro, poiché si tratta di un contratto formale esposto da una libreria.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The following are two obvious formats.</source>
          <target state="translated">Di seguito sono riportati due formati ovvi.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Opzione<ept id="p1">*</ept>.<bpt id="p2">*</bpt>spaziodeinomi<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nomeopzione<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Opzione<ept id="p1">*</ept>.<bpt id="p2">*</bpt>libreria<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nomeopzione<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>In addition to setting the value of a switch programmatically, it can also be set:</source>
          <target state="translated">Oltre a impostare il valore di un'opzione a livello di codice, è possibile impostarla anche:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>By adding the switch name and value to the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element in the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>runtime&gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of an application configuration file.</source>
          <target state="translated">Aggiungendo il nome del commutatore e il valore per il <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> elemento il <bpt id="p2">[</bpt> <ph id="ph2">\&lt;</ph>runtime &gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> sezione di un file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>For example, the following defines a switch named <ph id="ph1">`Libraries.FPLibrary.UseExactFloatingPointComparison`</ph> whose value is <ph id="ph2">`False`</ph>.</source>
          <target state="translated">Ad esempio, il seguente definisce un commutatore denominato <ph id="ph1">`Libraries.FPLibrary.UseExactFloatingPointComparison`</ph> il cui valore è <ph id="ph2">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>By adding a string value whose name is the name of the switch to the <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> key in the registry.</source>
          <target state="translated">Tramite l'aggiunta di un valore di stringa il cui nome è il nome del commutatore per il <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> chiave del Registro di sistema.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Its value must be the string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> that can be parsed by the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> method; that is, it must be "True", "true", "False", or "false".</source>
          <target state="translated">Il valore deve essere la rappresentazione di stringa di un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> che può essere analizzato dal <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> (metodo), vale a dire deve essere "True", "true", "False" o "false".</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>If <ph id="ph1">`switchName`</ph> already exists, its value is overwritten by the <ph id="ph2">`isEnabled`</ph> argument.</source>
          <target state="translated">Se <ph id="ph1">`switchName`</ph> esiste già, il relativo valore viene sovrascritto dal <ph id="ph2">`isEnabled`</ph> argomento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>That is, the most recent call to the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method overrides the value defined in the registry, in an app configuration file, or by previous calls to the <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">Vale a dire, la chiamata più recente per il <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> metodo sostituisce il valore definito nel Registro di sistema, in un file di configurazione dell'applicazione o dalle chiamate precedenti al <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The following line of code sets a switch named <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph> to <ph id="ph2">`true`</ph>, which enables a legacy behavior.</source>
          <target state="translated">La riga di codice seguente imposta un'opzione denominata <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph> a <ph id="ph2">`true`</ph>, che consente un comportamento legacy.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The library can then check whether a library consumer has set the value of the switch by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">La libreria è possibile controllare quindi se un consumer della libreria è impostato il valore dell'opzione chiamando il <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> è <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.AppContext.TargetFrameworkName">
          <source>Gets the name of the framework version targeted by the current application.</source>
          <target state="translated">Ottiene il nome della versione del framework di destinazione dell'applicazione corrente.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>The name of the framework version targeted by the current application.</source>
          <target state="translated">Nome della versione del framework di destinazione dell'applicazione corrente.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>The name of the target framework version corresponds to the value of the <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Il nome della versione di framework di destinazione corrisponde al valore del <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>For a list of target framework names for the .NET Framework, see the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>supportedRuntime<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept> element.</source>
          <target state="translated">Per un elenco di nomi di framework di destinazione per .NET Framework, vedere il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>supportedRuntime<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The name of the switch.</source>
          <target state="translated">Nome dell'opzione.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>When this method returns, contains the value of <bpt id="p1">&lt;c&gt;</bpt>switchName<ept id="p1">&lt;/c&gt;</ept> if <bpt id="p2">&lt;c&gt;</bpt>switchName<ept id="p2">&lt;/c&gt;</ept> was found, or <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <bpt id="p3">&lt;c&gt;</bpt>switchName<ept id="p3">&lt;/c&gt;</ept> was not found.</source>
          <target state="translated">Quando questo metodo termina, contiene il valore di <bpt id="p1">&lt;c&gt;</bpt>switchName<ept id="p1">&lt;/c&gt;</ept> se <bpt id="p2">&lt;c&gt;</bpt>switchName<ept id="p2">&lt;/c&gt;</ept> è stato trovato oppure <ph id="ph1">&lt;see langword="false" /&gt;</ph> se <bpt id="p3">&lt;c&gt;</bpt>switchName<ept id="p3">&lt;/c&gt;</ept> non è stato trovato.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>Tries to get the value of a switch.</source>
          <target state="translated">Prova a ottenere il valore di un'opzione.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="switchName" /&gt;</ph> was set and the <ph id="ph3">&lt;paramref name="isEnabled" /&gt;</ph> argument contains the value of the switch; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="switchName" /&gt;</ph> è stato impostato e l'argomento <ph id="ph3">&lt;paramref name="isEnabled" /&gt;</ph> contiene il valore dell'opzione; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> classe consente agli autori di librerie fornire un meccanismo di rifiuto esplicito uniforme per la nuova funzionalità per i propri utenti.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">che stabilisce un contratto a regime di controllo libero ("loosely-coupled") tra componenti per poter comunicare una richiesta di rinuncia esplicita.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Questa funzionalità è importante in genere quando viene apportata una modifica alle funzionalità esistenti.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Al contrario, esiste già un consenso esplicito per la nuova funzionalità.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The common language runtime automatically populates the switches assigned to an <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance by reading the registry and the application's configuration file.</source>
          <target state="translated">Common language runtime popola automaticamente i commutatori assegnati a un <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> istanza mediante la lettura del Registro di sistema e file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The value of these switches can then be overridden, and new switches added, by calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">Il valore di queste opzioni possa quindi essere sottoposto a override e aggiunta di nuovi switch, chiamando la <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>A library calls the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method to check whether its consumers have declared the value of the switch and then act appropriately on it.</source>
          <target state="translated">Una libreria chiama il <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> metodo per verificare se i relativi consumer stato dichiarato il valore dell'opzione e agire in modo appropriato su di esso.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>By default, if the switch is not defined, the new functionality is enabled..</source>
          <target state="translated">Per impostazione predefinita, se l'opzione non è definito, le nuove funzionalità sono abilitata...</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>If the switch is defined and its value is <ph id="ph1">`false`</ph>, the new functionality is also enabled.</source>
          <target state="translated">Se l'opzione è definita e il relativo valore è <ph id="ph1">`false`</ph>, la nuova funzionalità è abilitata anche.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>If its value is <ph id="ph1">`true`</ph>, the legacy behavior is enabled.</source>
          <target state="translated">Se il valore è <ph id="ph1">`true`</ph>, il comportamento legacy è abilitato.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The following example determines whether a library consumer has set a switch named <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph>.</source>
          <target state="translated">Nell'esempio seguente determina se un consumer della libreria è impostato un commutatore denominato <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> è <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>