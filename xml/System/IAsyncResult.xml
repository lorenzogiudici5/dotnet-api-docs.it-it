<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IAsyncResult.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52276b9f380f6f18b31bcbd48397cc4ae980b77ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2276b9f380f6f18b31bcbd48397cc4ae980b77ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IAsyncResult">
          <source>Represents the status of an asynchronous operation.</source>
          <target state="translated">Rappresenta lo stato di un'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface is implemented by classes containing methods that can operate asynchronously.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interfaccia viene implementata da classi che contengono metodi che possono operare in modo asincrono.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>It is the return type of methods that initiate an asynchronous operation, such as <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType&gt;</ph>, and it is passed to methods that conclude an asynchronous operation, such as <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Un'operazione asincrona viene iniziata dal tipo restituito dei metodi, ad esempio <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType&gt;</ph>, e viene passata ai metodi che concludono un'operazione asincrona, ad esempio <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> objects are also passed to methods invoked by <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegates when an asynchronous operation completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> gli oggetti vengono inoltre passati ai metodi richiamati da <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delega al completamento di un'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>An object that supports the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</source>
          <target state="translated">Un oggetto che supporta il <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interfaccia archivia informazioni sullo stato per un'operazione asincrona e fornisce un oggetto di sincronizzazione per consentire ai thread di essere segnalato al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> class is the implementation of <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is returned by the <ph id="ph3">`BeginInvoke`</ph> method when you use a delegate to call a method asynchronously.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> è un'implementazione della classe <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> restituito dal <ph id="ph3">`BeginInvoke`</ph> metodo quando si usa un delegato per chiamare un metodo in modo asincrono.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>For a detailed description of how the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface is used, see the <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept> topic.</source>
          <target state="translated">Per una descrizione dettagliata di come <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interfaccia viene utilizzata, vedere il <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept> argomento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A&gt;</ph> property to get a <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>, and how to wait for an asynchronous call on a delegate.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A&gt;</ph> proprietà da ottenere un <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>e come in attesa di una chiamata asincrona su un delegato.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> is signaled when the asynchronous call completes, and you can wait for it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> viene segnalato al completamento della chiamata asincrona ed è possibile attenderlo chiamando il metodo <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">L'esempio è costituito da due classi: la classe che contiene il metodo viene chiamato in modo asincrono e la classe che contiene il <ph id="ph1">`Main`</ph> metodo che effettua la chiamata.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni ed esempi di chiamata asincrona dei metodi tramite delegati, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.AsyncState">
          <source>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Ottiene un oggetto definito dall'utente che qualifica o contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Oggetto definito dall'utente che qualifica o contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</source>
          <target state="translated">Questa proprietà restituisce l'oggetto che è l'ultimo parametro del metodo che avvia un'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The following code example demonstrates how the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A&gt;</ph> property is used to pass information to a callback method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come la <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A&gt;</ph> proprietà viene utilizzata per passare informazioni a un metodo di callback.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The last parameter of the <ph id="ph1">`BeginInvoke`</ph> method call is a format string, which the callback method uses to format an output message.</source>
          <target state="translated">L'ultimo parametro del <ph id="ph1">`BeginInvoke`</ph> chiamata al metodo è una stringa di formato, il metodo di callback utilizzato per formattare un messaggio di output.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">L'esempio è costituito da due classi: la classe che contiene il metodo viene chiamato in modo asincrono e la classe che contiene il <ph id="ph1">`Main`</ph> metodo che effettua la chiamata.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sul funzionamento di questo esempio di callback e ulteriori esempi di chiamata asincrona dei metodi tramite delegati, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</source>
          <target state="translated">Implementare questa proprietà per consentire al chiamante di un'operazione asincrona ottenere un oggetto definito dall'applicazione specificato all'inizio dell'operazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>This object can be used to pass state information for the asynchronous operation to an <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> that you provide.</source>
          <target state="translated">Questo oggetto può essere utilizzato per passare le informazioni di stato per l'operazione asincrona per un <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> specificata dall'utente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">Ottiene un <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph>, utilizzato per attendere il completamento di un'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> utilizzato per attendere il completamento di un'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The return value allows the client to wait for an asynchronous operation to complete instead of polling <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> until the operation concludes.</source>
          <target state="translated">Il valore restituito consente al client di attendere il completamento anziché il polling di un'operazione asincrona <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> fino a quando non è terminata l'operazione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The return value can be used to perform a <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> operation.</source>
          <target state="translated">Il valore restituito può essere utilizzato per eseguire un <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, o <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> operazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The common language runtime supplies a number of waitable objects, such as <ph id="ph1">&lt;xref:System.Threading.ManualResetEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.Mutex&gt;</ph>, all of which mirror Win32 synchronization primitives.</source>
          <target state="translated">Common language runtime fornisce un numero di oggetti waitable, ad esempio <ph id="ph1">&lt;xref:System.Threading.ManualResetEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph>, e <ph id="ph3">&lt;xref:System.Threading.Mutex&gt;</ph>, che riflettono le di primitive di sincronizzazione di Win32.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property to get a <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>, and how to wait for an asynchronous call on a delegate.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> proprietà da ottenere un <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>e come in attesa di una chiamata asincrona su un delegato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> is signaled when the asynchronous call completes, and you can wait for it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> viene segnalato al completamento della chiamata asincrona ed è possibile attenderlo chiamando il metodo <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">L'esempio è costituito da due classi: la classe che contiene il metodo viene chiamato in modo asincrono e la classe che contiene il <ph id="ph1">`Main`</ph> metodo che effettua la chiamata.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni ed esempi di chiamata asincrona dei metodi tramite delegati, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The object that implements <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> does not need to create the <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> until the <ph id="ph3">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> property is read.</source>
          <target state="translated">Oggetto che implementa <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> non è necessario creare il <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> fino a quando il <ph id="ph3">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> proprietà è di lettura.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>It is the choice of the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> implementer.</source>
          <target state="translated">Si tratta della scelta del <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> responsabile dell'implementazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>However, if the implementer creates <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph>, it is the responsibility of the implementer to signal the <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that will terminate the wait at the appropriate time.</source>
          <target state="translated">Tuttavia, se l'implementatore crea <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph>, è responsabilità dell'implementatore per segnalare il <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> che termina l'attesa al momento appropriato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For example, <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /&gt;</ph> terminates the wait on behalf of the caller when an asynchronously invoked method returns.</source>
          <target state="translated">Ad esempio, <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /&gt;</ph> termina l'attesa per conto del chiamante quando viene restituito un metodo richiamato in modo asincrono.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Once created, <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> should be kept alive until the user calls the method that concludes the asynchronous operation.</source>
          <target state="translated">Una volta creato, <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> deve essere mantenuto attivo fino a quando l'utente chiama il metodo che termina l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>At that time the object behind <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> can be discarded.</source>
          <target state="translated">In tale periodo l'oggetto sottostante <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> possono essere ignorate.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.</source>
          <target state="translated">I client in attesa per l'operazione di completamento (in contrapposizione a polling) utilizzano questa proprietà per ottenere un oggetto di sincronizzazione in attesa.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>When you use the <ph id="ph1">&lt;see langword="BeginInvoke" /&gt;</ph> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <ph id="ph2">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, we recommend that you close the wait handle as soon as you are finished using it, by calling the <ph id="ph3">&lt;see cref="M:System.Threading.WaitHandle.Close" /&gt;</ph> method.</source>
          <target state="translated">Quando si utilizza il <ph id="ph1">&lt;see langword="BeginInvoke" /&gt;</ph> metodo di un delegato per chiamare un metodo in modo asincrono e ottenere un handle di attesa da risultante <ph id="ph2">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, è consigliabile chiudere l'handle di attesa subito dopo aver terminato di utilizzare, chiamando la <ph id="ph3">&lt;see cref="M:System.Threading.WaitHandle.Close" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</source>
          <target state="translated">Se si rilasciano semplicemente tutti i riferimenti all'handle di attesa, le risorse di sistema vengono liberate quando garbage collection recupera l'handle di attesa, ma l'operazione di garbage collection funziona in modo più efficiente quando gli oggetti eliminabili chiuse o eliminati in modo esplicito.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For more information, see the <ph id="ph1">&lt;see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /&gt;</ph> property.</source>
          <target state="translated">Per altre informazioni, vedere la proprietà <ph id="ph1">&lt;see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Gets a value that indicates whether the asynchronous operation completed synchronously.</source>
          <target state="translated">Valore che indica se l'operazione asincrona. è stata completata in modo sincrono</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'operazione asincrona è stata completata in modo sincrono. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>If the synchronous completion of the call is detected in the <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</source>
          <target state="translated">Se il completamento della chiamata sincrona viene rilevato nel <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegato, è probabile che il thread che ha avviato l'operazione asincrona è il thread corrente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Most implementers of the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interface will not use this property and should return <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La maggior parte dei responsabili dell'implementazione di <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interfaccia non utilizzerà questa proprietà e deve restituire <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, a task that is created with the <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /&gt;</ph> method will not complete if this property is not implemented correctly.</source>
          <target state="translated">A partire da <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, un'attività creata con il metodo <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /&gt;</ph> non verrà completata se questa proprietà non viene implementata correttamente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>See <bpt id="p1">[</bpt>Application Compatibility in 4.5<ept id="p1">](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>compatibilità delle applicazioni in 4.5<ept id="p1">](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Use this property to determine if the asynchronous operation completed synchronously.</source>
          <target state="translated">Utilizzare questa proprietà per determinare se l'operazione asincrona è stata completata in modo sincrono.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>For example, this property can return <ph id="ph1">&lt;see langword="true" /&gt;</ph> for an asynchronous I/O operation if the I/O request was small.</source>
          <target state="translated">Ad esempio, questa proprietà può restituire <ph id="ph1">&lt;see langword="true" /&gt;</ph> per un'operazione dei / o asincrona se la richiesta dei / o è piccola.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.IsCompleted">
          <source>Gets a value that indicates whether the asynchronous operation has completed.</source>
          <target state="translated">Ottiene un valore che indica l'eventuale completamento dell'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is complete; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'operazione viene completata, in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>When this property is <ph id="ph1">`true`</ph>, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</source>
          <target state="translated">Quando questa proprietà è <ph id="ph1">`true`</ph>, è possibile presupporre che è possibile annullare eventuali risorse allocate per l'utilizzo tramite l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to discover when an asynchronous call completes.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> per rilevare quando viene completata una chiamata asincrona.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>In this case, the asynchronous call is made by using the <ph id="ph1">`BeginInvoke`</ph> method of a delegate.</source>
          <target state="translated">In questo caso, in cui viene effettuata la chiamata asincrona utilizzando il <ph id="ph1">`BeginInvoke`</ph> metodo di un delegato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>You might use the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property to poll for completion when making the asynchronous call from a thread that services the user interface.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> proprietà per eseguire il polling del completamento quando si effettua la chiamata asincrona da un thread che serve l'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Il polling del completamento consente al thread chiamante di continuare l'esecuzione mentre viene eseguita la chiamata asincrona su un thread <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">L'esempio è costituito da due classi: la classe che contiene il metodo viene chiamato in modo asincrono e la classe che contiene il <ph id="ph1">`Main`</ph> metodo che effettua la chiamata.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni ed esempi di chiamata asincrona dei metodi tramite delegati, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Implementers will typically return the value of a private field or internal test as the value of this property.</source>
          <target state="translated">I responsabili dell'implementazione in genere restituirà il valore di un campo privato o interno come valore di questa proprietà.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</source>
          <target state="translated">I client che eseguono il polling dello stato dell'operazione (in contrapposizione a un oggetto di sincronizzazione in attesa) utilizzano questa proprietà per determinare lo stato dell'operazione.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>