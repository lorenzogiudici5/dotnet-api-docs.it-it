<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6c253c8a55eee9c2031ad155142dfe81d39d968" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590634" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e811d-101">Rappresenta lo stato di un'operazione asincrona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e811d-101">Represents the status of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e811d-102">Il <xref:System.IAsyncResult> interfaccia viene implementata da classi che contengono metodi che possono operare in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="e811d-102">The <xref:System.IAsyncResult> interface is implemented by classes containing methods that can operate asynchronously.</span></span> <span data-ttu-id="e811d-103">Un'operazione asincrona viene iniziata dal tipo restituito dei metodi, ad esempio <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, e viene passata ai metodi che concludono un'operazione asincrona, ad esempio <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e811d-103">It is the return type of methods that initiate an asynchronous operation, such as <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, and it is passed to methods that conclude an asynchronous operation, such as <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e811d-104"><xref:System.IAsyncResult> gli oggetti vengono passati anche ai metodi richiamati dal <xref:System.AsyncCallback> delega al termine dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="e811d-104"><xref:System.IAsyncResult> objects are also passed to methods invoked by <xref:System.AsyncCallback> delegates when an asynchronous operation completes.</span></span>  
  
 <span data-ttu-id="e811d-105">Un oggetto che supporta il <xref:System.IAsyncResult> interfaccia archivia le informazioni sullo stato per un'operazione asincrona e fornisce un oggetto di sincronizzazione per consentire un thread venga segnalato al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="e811d-105">An object that supports the <xref:System.IAsyncResult> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e811d-106">Il <xref:System.Runtime.Remoting.Messaging.AsyncResult> classe è l'implementazione di <xref:System.IAsyncResult> restituito dal `BeginInvoke` metodo quando si usa un delegato per chiamare un metodo in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="e811d-106">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is the implementation of <xref:System.IAsyncResult> that is returned by the `BeginInvoke` method when you use a delegate to call a method asynchronously.</span></span>  
  
 <span data-ttu-id="e811d-107">Per una descrizione dettagliata del modo in cui il <xref:System.IAsyncResult> viene utilizzata l'interfaccia, vedere la [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) argomento.</span><span class="sxs-lookup"><span data-stu-id="e811d-107">For a detailed description of how the <xref:System.IAsyncResult> interface is used, see the [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e811d-108">L'esempio seguente illustra come usare il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> proprietà da ottenere un <xref:System.Threading.WaitHandle>e come in attesa di una chiamata asincrona su un delegato.</span><span class="sxs-lookup"><span data-stu-id="e811d-108">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="e811d-109">L'oggetto <xref:System.Threading.WaitHandle> viene segnalato al completamento della chiamata asincrona ed è possibile attenderlo chiamando il metodo <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="e811d-109">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="e811d-110">L'esempio è costituito da due classi: classe che contiene il metodo che viene chiamato in modo asincrono e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="e811d-110">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e811d-111">Per altre informazioni ed esempi di chiamate ai metodi in modo asincrono usando i delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e811d-111">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e811d-112">Ottiene un oggetto definito dall'utente che qualifica o contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e811d-113">Oggetto definito dall'utente che qualifica o contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e811d-114">Questa proprietà restituisce l'oggetto che è l'ultimo parametro del metodo che avvia un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="e811d-114">This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e811d-115">L'esempio di codice seguente illustra come il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> proprietà viene utilizzata per passare informazioni a un metodo di callback.</span><span class="sxs-lookup"><span data-stu-id="e811d-115">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="e811d-116">L'ultimo parametro del `BeginInvoke` chiamata al metodo è una stringa di formato, che usa il metodo di callback per formattare un messaggio di output.</span><span class="sxs-lookup"><span data-stu-id="e811d-116">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="e811d-117">L'esempio è costituito da due classi: classe che contiene il metodo che viene chiamato in modo asincrono e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="e811d-117">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e811d-118">Per altre informazioni sul funzionamento di questo esempio di callback e altri esempi di chiamate ai metodi in modo asincrono usando i delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e811d-118">For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e811d-119">Implementare questa proprietà per consentire al chiamante di un'operazione asincrona ottenere un oggetto definito dall'applicazione specificato all'inizio dell'operazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-119">Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e811d-120">Questo oggetto può essere usato per passare le informazioni sullo stato per l'operazione asincrona per un <see cref="T:System.AsyncCallback" /> specificata dall'utente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-120">This object can be used to pass state information for the asynchronous operation to an <see cref="T:System.AsyncCallback" /> that you provide.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e811d-121">Ottiene un oggetto <see cref="T:System.Threading.WaitHandle" /> che viene usato per attendere il completamento di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-121">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e811d-122">Oggetto <see cref="T:System.Threading.WaitHandle" /> che viene usato per attendere il completamento di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-122">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e811d-123">Il valore restituito consente al client in attesa di un'operazione asincrona per il completamento anziché polling <xref:System.IAsyncResult.IsCompleted%2A> fino al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="e811d-123">The return value allows the client to wait for an asynchronous operation to complete instead of polling <xref:System.IAsyncResult.IsCompleted%2A> until the operation concludes.</span></span> <span data-ttu-id="e811d-124">Il valore restituito può essere utilizzato per eseguire una <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, o <xref:System.Threading.WaitHandle.WaitAll%2A> operazione.</span><span class="sxs-lookup"><span data-stu-id="e811d-124">The return value can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> operation.</span></span>  
  
 <span data-ttu-id="e811d-125">Common language runtime fornisce una serie di oggetti awaitable, ad esempio <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, e <xref:System.Threading.Mutex>, ognuno dei quali eseguire il mirroring di primitive di sincronizzazione Win32.</span><span class="sxs-lookup"><span data-stu-id="e811d-125">The common language runtime supplies a number of waitable objects, such as <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.Mutex>, all of which mirror Win32 synchronization primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e811d-126">L'esempio seguente illustra come usare il <xref:System.IAsyncResult.AsyncWaitHandle%2A> proprietà da ottenere un <xref:System.Threading.WaitHandle>e come in attesa di una chiamata asincrona su un delegato.</span><span class="sxs-lookup"><span data-stu-id="e811d-126">The following example demonstrates how to use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="e811d-127">L'oggetto <xref:System.Threading.WaitHandle> viene segnalato al completamento della chiamata asincrona ed è possibile attenderlo chiamando il metodo <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="e811d-127">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="e811d-128">L'esempio è costituito da due classi: classe che contiene il metodo che viene chiamato in modo asincrono e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="e811d-128">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e811d-129">Per altre informazioni ed esempi di chiamate ai metodi in modo asincrono usando i delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e811d-129">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e811d-130">Oggetto che implementa <see cref="T:System.IAsyncResult" /> non è necessario creare le <see cref="T:System.Threading.WaitHandle" /> fino a quando non la <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> lettura della proprietà.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-130">The object that implements <see cref="T:System.IAsyncResult" /> does not need to create the <see cref="T:System.Threading.WaitHandle" /> until the <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> property is read.</span>
            </span>
            <span data-ttu-id="e811d-131">Si tratta della scelta del <see cref="T:System.IAsyncResult" /> responsabile dell'implementazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-131">It is the choice of the <see cref="T:System.IAsyncResult" /> implementer.</span>
            </span>
            <span data-ttu-id="e811d-132">Tuttavia, se viene creata l'implementatore <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, è responsabilità dell'implementatore per segnalare il <see cref="T:System.Threading.WaitHandle" /> che verrà interrotta l'attesa nel momento appropriato.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-132">However, if the implementer creates <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, it is the responsibility of the implementer to signal the <see cref="T:System.Threading.WaitHandle" /> that will terminate the wait at the appropriate time.</span>
            </span>
            <span data-ttu-id="e811d-133">Ad esempio, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> termina l'attesa per conto del chiamante quando viene restituito un metodo asincrono richiamato.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-133">For example, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> terminates the wait on behalf of the caller when an asynchronously invoked method returns.</span>
            </span>
            <span data-ttu-id="e811d-134">Una volta creata, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> devono essere mantenuti attivi fino a quando l'utente chiama il metodo che si conclude l'operazione asincrona.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-134">Once created, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> should be kept alive until the user calls the method that concludes the asynchronous operation.</span>
            </span>
            <span data-ttu-id="e811d-135">A quel punto l'oggetto sottostante <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> possono essere ignorate.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-135">At that time the object behind <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> can be discarded.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e811d-136">I client che attendono che l'operazione venga completata (invece di polling) usano questa proprietà per ottenere un oggetto di sincronizzazione per restare in attesa.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-136">Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.</span>
            </span>
            <block subset="none" type="note">
              <para>
                <span data-ttu-id="e811d-137">Quando si usa la <see langword="BeginInvoke" /> metodo di un delegato da chiamare in modo asincrono un metodo e ottenere un handle di attesa da risultante <see cref="T:System.IAsyncResult" />, si consiglia di chiudere l'handle di attesa, non appena si è terminato, chiamando il <see cref="M:System.Threading.WaitHandle.Close" /> (metodo).</span>
                <span class="sxs-lookup">
                  <span data-stu-id="e811d-137">When you use the <see langword="BeginInvoke" /> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <see cref="T:System.IAsyncResult" />, we recommend that you close the wait handle as soon as you are finished using it, by calling the <see cref="M:System.Threading.WaitHandle.Close" /> method.</span>
                </span>
                <span data-ttu-id="e811d-138">Se si rilasciano semplicemente tutti i riferimenti all'handle di attesa, le risorse di sistema vengono liberate quando garbage collection recupera l'handle di attesa, ma l'operazione di garbage collection funziona in modo più efficiente quando gli oggetti eliminabili chiuse o eliminati in modo esplicito.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="e811d-138">If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span>
                </span>
                <span data-ttu-id="e811d-139">Per altre informazioni, vedere la proprietà <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="e811d-139">For more information, see the <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> property.</span>
                </span>
              </para>
            </block>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e811d-140">Valore che indica se l'operazione asincrona. è stata completata in modo sincrono</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-140">Gets a value that indicates whether the asynchronous operation completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e811d-141">
            <see langword="true" /> se l'operazione asincrona è stata completata in modo sincrono. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-141">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e811d-142">Se viene rilevato il completamento della chiamata sincrono di <xref:System.AsyncCallback> delegato, è probabile che il thread che ha avviato l'operazione asincrona è il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="e811d-142">If the synchronous completion of the call is detected in the <xref:System.AsyncCallback> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e811d-143">La maggior parte dei responsabili dell'implementazione di <see cref="T:System.IAsyncResult" /> interfaccia non utilizzerà questa proprietà e deve restituire <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-143">Most implementers of the <see cref="T:System.IAsyncResult" /> interface will not use this property and should return <see langword="false" />.</span>
            </span>
            <span data-ttu-id="e811d-144">A partire da [!INCLUDE[net_v45](~/includes/net-v45-md.md)], un'attività creata con il metodo <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> non verrà completata se questa proprietà non viene implementata correttamente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-144">Beginning with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], a task that is created with the <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> method will not complete if this property is not implemented correctly.</span>
            </span>
            <span data-ttu-id="e811d-145">Visualizzare [compatibilità delle applicazioni in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-145">See [Application Compatibility in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e811d-146">Utilizzare questa proprietà per determinare se l'operazione asincrona è stata completata in modo sincrono.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-146">Use this property to determine if the asynchronous operation completed synchronously.</span>
            </span>
            <span data-ttu-id="e811d-147">Ad esempio, questa proprietà può restituire <see langword="true" /> per un'operazione dei / o asincrona se la richiesta dei / o è piccola.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-147">For example, this property can return <see langword="true" /> for an asynchronous I/O operation if the I/O request was small.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e811d-148">Ottiene un valore che indica l'eventuale completamento dell'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-148">Gets a value that indicates whether the asynchronous operation has completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e811d-149">
            <see langword="true" /> se l'operazione viene completata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e811d-149">
              <see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e811d-150">Quando questa proprietà è `true`, si può presupporre è consigliabile rimuovere tutte le risorse allocate per l'utilizzo dall'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="e811d-150">When this property is `true`, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e811d-151">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IAsyncResult.IsCompleted%2A> proprietà del <xref:System.IAsyncResult> per rilevare quando viene completata una chiamata asincrona.</span><span class="sxs-lookup"><span data-stu-id="e811d-151">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> to discover when an asynchronous call completes.</span></span> <span data-ttu-id="e811d-152">In questo caso, viene effettuata la chiamata asincrona usando il `BeginInvoke` metodo di un delegato.</span><span class="sxs-lookup"><span data-stu-id="e811d-152">In this case, the asynchronous call is made by using the `BeginInvoke` method of a delegate.</span></span> <span data-ttu-id="e811d-153">È possibile usare il <xref:System.IAsyncResult.IsCompleted%2A> proprietà per eseguire il polling del completamento quando si effettua la chiamata asincrona da un thread che serve l'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="e811d-153">You might use the <xref:System.IAsyncResult.IsCompleted%2A> property to poll for completion when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="e811d-154">Il polling del completamento consente al thread chiamante di continuare l'esecuzione mentre viene eseguita la chiamata asincrona su un thread <xref:System.Threading.ThreadPool> .</span><span class="sxs-lookup"><span data-stu-id="e811d-154">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="e811d-155">L'esempio è costituito da due classi: classe che contiene il metodo che viene chiamato in modo asincrono e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="e811d-155">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e811d-156">Per altre informazioni ed esempi di chiamate ai metodi in modo asincrono usando i delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e811d-156">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e811d-157">I responsabili dell'implementazione in genere restituisce il valore di un campo privato o interno test come il valore di questa proprietà.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-157">Implementers will typically return the value of a private field or internal test as the value of this property.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e811d-158">I client che eseguono il polling dello stato dell'operazione (e non in attesa di un oggetto di sincronizzazione) usano questa proprietà per determinare lo stato dell'operazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e811d-158">Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>