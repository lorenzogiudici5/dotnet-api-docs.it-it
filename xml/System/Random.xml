<Type Name="Random" FullName="System.Random">
  <Metadata><Meta Name="ms.openlocfilehash" Value="447dee75b747e7a9f668a091a7e5101818494ba4" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="it-IT" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53222616" /></Metadata><TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <TypeSignature Language="F#" Value="type Random = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1d196-101">Rappresenta un generatore di numeri pseudo-casuali, ovvero un dispositivo che produce una sequenza di numeri che soddisfano determinati requisiti statistici di casualità.</span><span class="sxs-lookup"><span data-stu-id="1d196-101">Represents a pseudo-random number generator, which is a device that produces a sequence of numbers that meet certain statistical requirements for randomness.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-102">Numeri pseudo-casuali vengono scelti con uguale probabilità di un set di numeri.</span><span class="sxs-lookup"><span data-stu-id="1d196-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="1d196-103">I numeri selezionati non sono completamente casuali perché viene usato un algoritmo matematico per selezionarli, ma sono sufficientemente casuale ai fini pratici.</span><span class="sxs-lookup"><span data-stu-id="1d196-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="1d196-104">L'implementazione corrente del <xref:System.Random> classe si basa su una versione modificata del sottrattivo casuale di numeri generatore Knuth Donald E. Knuth.</span><span class="sxs-lookup"><span data-stu-id="1d196-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="1d196-105">Per altre informazioni, vedere E. D.</span><span class="sxs-lookup"><span data-stu-id="1d196-105">For more information, see D. E.</span></span> <span data-ttu-id="1d196-106">Knuth.</span><span class="sxs-lookup"><span data-stu-id="1d196-106">Knuth.</span></span> <span data-ttu-id="1d196-107">*L'arte della programmazione, il Volume 2 Computer: Gli algoritmi seminumerical*.</span><span class="sxs-lookup"><span data-stu-id="1d196-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="1d196-108">Edizione Addison-Wesley, lettura, MA, terza, 1997.</span><span class="sxs-lookup"><span data-stu-id="1d196-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="1d196-109">Per generare un numero casuale crittograficamente sicuro, ad esempio quella più adatta per la creazione di una password casuale, usare il <xref:System.Security.Cryptography.RNGCryptoServiceProvider> classe oppure derivare una classe da <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d196-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1d196-110">In questo argomento</span><span class="sxs-lookup"><span data-stu-id="1d196-110">In this topic:</span></span>  
  
 <span data-ttu-id="1d196-111">[Creazione di un'istanza del generatore di numeri casuali](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="1d196-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="1d196-112">[Come evitare più creazioni di istanza](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="1d196-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="1d196-113">[La sicurezza di thread e classe Random](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="1d196-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="1d196-114">[Generazione di tipi diversi di numeri casuali](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="1d196-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="1d196-115">[Sostituzione di un algoritmo personalizzato](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="1d196-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="1d196-116">[Come si usa System. Random per...](#Operations) </span><span class="sxs-lookup"><span data-stu-id="1d196-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="1d196-117">Recuperare la stessa sequenza di valori casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="1d196-118">Recuperare le sequenze univoche di valori casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="1d196-119">Recuperare interi in un intervallo specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="1d196-120">Recuperare interi con un numero di cifre specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="1d196-121">Recuperare i valori a virgola mobile in un intervallo specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="1d196-122">Generare i valori booleani casuale</span><span class="sxs-lookup"><span data-stu-id="1d196-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="1d196-123">Generare numeri interi a 64 bit casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="1d196-124">Recuperare byte in un intervallo specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="1d196-125">Recuperare un elemento da una matrice o raccolta in modo casuale</span><span class="sxs-lookup"><span data-stu-id="1d196-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="1d196-126">Recuperare un elemento univoco da una matrice o raccolta</span><span class="sxs-lookup"><span data-stu-id="1d196-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="1d196-127">Creazione di un'istanza del generatore di numeri casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="1d196-128">Si crea un'istanza del generatore di numeri casuali, fornendo un valore di inizializzazione (un valore iniziale per l'algoritmo di generazione di numeri pseudo-casuali) per un <xref:System.Random.%23ctor%2A> costruttore della classe.</span><span class="sxs-lookup"><span data-stu-id="1d196-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="1d196-129">È possibile fornire il valore di inizializzazione in modo implicito o esplicito:</span><span class="sxs-lookup"><span data-stu-id="1d196-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="1d196-130">Il <xref:System.Random.%23ctor%28System.Int32%29> costruttore utilizza un valore di inizializzazione esplicita che viene fornito.</span><span class="sxs-lookup"><span data-stu-id="1d196-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="1d196-131">Il <xref:System.Random.%23ctor> costruttore Usa l'orologio di sistema per fornire un valore di inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="1d196-132">Questo è il modo più comune di un'istanza del generatore di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="1d196-133">Se il valore di inizializzazione stessa viene utilizzato per separato <xref:System.Random> oggetti, i generatori produrranno la stessa serie di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="1d196-134">Ciò può essere utile per la creazione di un gruppo di test che elabora i valori casuali o per la riproduzione dei giochi che derivano i propri dati da numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="1d196-135">Si noti tuttavia che <xref:System.Random> oggetti nei processi in esecuzione in versioni diverse di .NET Framework possono restituire diverse serie di numeri casuali, anche se ne è creata l'istanza con i valori di inizializzazione identici.</span><span class="sxs-lookup"><span data-stu-id="1d196-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="1d196-136">Per produrre un gruppo di sequenze di numeri casuali, è possibile apportare il valore di inizializzazione dipendente dal tempo, in tal modo producendo così una serie diversa con ogni nuova istanza di <xref:System.Random>.</span><span class="sxs-lookup"><span data-stu-id="1d196-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="1d196-137">Con i parametri <xref:System.Random.%23ctor%28System.Int32%29> costruttore può accettare un' <xref:System.Int32> valore in base al numero di tick nell'ora corrente, mentre senza parametri <xref:System.Random.%23ctor> costruttore Usa l'orologio di sistema per generare il valore di inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="1d196-138">Tuttavia, poiché l'orologio ha una risoluzione finita, usando il costruttore senza parametri per creare diversi <xref:System.Random> gli oggetti in successione Chiudi crea generatori di numeri casuali che generano identiche sequenze di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-138">However, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="1d196-139">Nell'esempio seguente viene illustrato come due <xref:System.Random> gli oggetti che vengono create istanze in successione Chiudi generano una serie di numeri casuali identica.</span><span class="sxs-lookup"><span data-stu-id="1d196-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession generate an identical series of random numbers.</span></span> <span data-ttu-id="1d196-140">Nella maggior parte dei sistemi Windows, <xref:System.Random> gli oggetti creati entro 15 millisecondi una da altra sono probabile che hanno valori di inizializzazione identici.</span><span class="sxs-lookup"><span data-stu-id="1d196-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
 <span data-ttu-id="1d196-141">Per evitare questo problema, creare un singolo <xref:System.Random> oggetto anziché più oggetti.</span><span class="sxs-lookup"><span data-stu-id="1d196-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span>  
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="1d196-142">Come evitare più creazioni di istanza</span><span class="sxs-lookup"><span data-stu-id="1d196-142">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="1d196-143">L'inizializzazione due i generatori di numeri casuali in un ciclo o in rapida successione crea due generatori di numeri casuali che possono produrre identiche sequenze di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-143">Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="1d196-144">Nella maggior parte dei casi, ciò non è intenzione dello sviluppatore e può causare problemi di prestazioni, perché un'istanza e inizializzazione di un generatore di numeri casuali è un processo relativamente costoso.</span><span class="sxs-lookup"><span data-stu-id="1d196-144">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="1d196-145">Per migliorare le prestazioni sia per evitare di creare inavvertitamente separati i generatori di numeri casuali che generano le sequenze numeriche identiche, è consigliabile creare un <xref:System.Random> oggetto per generare numeri casuali molti nel corso del tempo, invece di creare nuovo <xref:System.Random> oggetti per generare un numero casuale.</span><span class="sxs-lookup"><span data-stu-id="1d196-145">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="1d196-146">Tuttavia, il <xref:System.Random> classe non è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="1d196-146">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="1d196-147">Se si chiama <xref:System.Random> metodi da più thread, seguire le linee guida illustrate nella sezione successiva.</span><span class="sxs-lookup"><span data-stu-id="1d196-147">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="1d196-148">La sicurezza di thread e classe Random</span><span class="sxs-lookup"><span data-stu-id="1d196-148">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="1d196-149">Anziché creare un'istanza di singoli <xref:System.Random> oggetti, si consiglia di creare un singolo <xref:System.Random> istanza da generare tutti i numeri casuali necessari all'applicazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-149">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="1d196-150">Tuttavia, <xref:System.Random> oggetti non sono thread-safe.</span><span class="sxs-lookup"><span data-stu-id="1d196-150">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="1d196-151">Se l'app chiama <xref:System.Random> da più thread, è necessario usare un oggetto di sincronizzazione per garantire che solo un thread può accedere il generatore di numeri casuali in un momento.</span><span class="sxs-lookup"><span data-stu-id="1d196-151">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="1d196-152">Se si non assicura che il <xref:System.Random> all'oggetto avviene in modo thread-safe, le chiamate ai metodi che restituiscono numeri casuali restituiscono 0.</span><span class="sxs-lookup"><span data-stu-id="1d196-152">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="1d196-153">L'esempio seguente usa il linguaggio c# [istruzione lock](~/docs/csharp/language-reference/keywords/lock-statement.md) e Visual Basic [istruzione SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) per garantire che un singolo generatore di numeri casuali è accessibile da 11 thread in modo thread-safe.</span><span class="sxs-lookup"><span data-stu-id="1d196-153">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="1d196-154">Ogni thread genera numeri casuali di 2 milioni, Conta il numero di numeri casuali generati e viene calcolata la somma e quindi aggiorna i totali per tutti i thread quando termina l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="1d196-154">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="1d196-155">L'esempio specifica la thread safety nei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="1d196-155">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="1d196-156">Il <xref:System.ThreadStaticAttribute> attributo viene usato per definire le variabili locali del thread che tengono traccia il numero totale di numeri casuali generati e la somma per ogni thread.</span><span class="sxs-lookup"><span data-stu-id="1d196-156">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="1d196-157">Un blocco (il `lock` istruzione in c# e il `SyncLock` istruzione in Visual Basic) consente di proteggere l'accesso alle variabili per il conteggio totale e la somma di tutti i numeri casuali generati su tutti i thread.</span><span class="sxs-lookup"><span data-stu-id="1d196-157">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="1d196-158">Un semaforo (il <xref:System.Threading.CountdownEvent> oggetto) viene usato per garantire che il thread principale si blocca fino a tutti gli altri thread completamento dell'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="1d196-158">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="1d196-159">L'esempio controlla se il generatore di numeri casuali sia stato danneggiato, determinando se due chiamate consecutive per i metodi di generazione di numeri casuali restituiscono 0.</span><span class="sxs-lookup"><span data-stu-id="1d196-159">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="1d196-160">Se vengono rilevati dati danneggiati, nell'esempio viene usato il <xref:System.Threading.CancellationTokenSource> oggetto per segnalare che tutti i thread devono essere annullati.</span><span class="sxs-lookup"><span data-stu-id="1d196-160">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="1d196-161">Prima di generare ogni numero casuale, ogni thread controlla lo stato del <xref:System.Threading.CancellationToken> oggetto.</span><span class="sxs-lookup"><span data-stu-id="1d196-161">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="1d196-162">Se viene richiesto l'annullamento, viene chiamato il <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> metodo per annullare il thread.</span><span class="sxs-lookup"><span data-stu-id="1d196-162">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="1d196-163">L'esempio seguente è identico al primo, ad eccezione del fatto che usa un' <xref:System.Threading.Tasks.Task> oggetto e un'espressione lambda anziché <xref:System.Threading.Thread> oggetti.</span><span class="sxs-lookup"><span data-stu-id="1d196-163">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="1d196-164">È diverso dal primo esempio nei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="1d196-164">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="1d196-165">Le variabili di tenere traccia del numero di numeri casuali generati e somma in ogni attività sono locali per l'attività, pertanto non è necessario usare il <xref:System.ThreadStaticAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="1d196-165">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="1d196-166">Il metodo statico <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> metodo viene usato per assicurarsi che il thread principale non viene completata prima di aver completato tutte le attività.</span><span class="sxs-lookup"><span data-stu-id="1d196-166">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="1d196-167">Non è necessario per il <xref:System.Threading.CountdownEvent> oggetto.</span><span class="sxs-lookup"><span data-stu-id="1d196-167">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="1d196-168">L'eccezione che deriva dall'annullamento delle attività viene esposto nel <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-168">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1d196-169">Nell'esempio precedente, viene gestita da ogni thread.</span><span class="sxs-lookup"><span data-stu-id="1d196-169">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="1d196-170">Generazione di tipi diversi di numeri casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-170">Generating different types of random numbers</span></span>  
 <span data-ttu-id="1d196-171">Generatore di numeri casuali fornisce metodi che consentono di generare i seguenti tipi di numeri casuali:</span><span class="sxs-lookup"><span data-stu-id="1d196-171">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="1d196-172">Una serie di <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="1d196-172">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="1d196-173">Determinare il numero di valori di byte passando una matrice inizializzata sul numero di elementi si desidera che il metodo per tornare al <xref:System.Random.NextBytes%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-173">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="1d196-174">Nell'esempio seguente genera 20 byte.</span><span class="sxs-lookup"><span data-stu-id="1d196-174">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="1d196-175">Un numero intero.</span><span class="sxs-lookup"><span data-stu-id="1d196-175">A single integer.</span></span> <span data-ttu-id="1d196-176">È possibile scegliere se si desidera che un numero intero compreso tra 0 a un valore massimo (<xref:System.Int32.MaxValue?displayProperty=nameWithType> - 1) chiamando il <xref:System.Random.Next> metodo, un numero intero compreso tra 0 e un valore specifico chiamando il <xref:System.Random.Next%28System.Int32%29> metodo oppure un valore integer all'interno di un intervallo di valori chiamando il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-176">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> - 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="1d196-177">Negli overload con parametri, il valore massimo specificato è esclusivo; il numero massimo effettivo generato è uno minore del valore specificato.</span><span class="sxs-lookup"><span data-stu-id="1d196-177">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="1d196-178">L'esempio seguente chiama il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodo per generare 10 numeri casuale compreso tra -10 e 10.</span><span class="sxs-lookup"><span data-stu-id="1d196-178">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="1d196-179">Si noti che il secondo argomento al metodo specifica il limite superiore esclusivo dell'intervallo di valori casuali restituito dal metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-179">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="1d196-180">In altre parole, l'intero più grande che il metodo può restituire uno è minore di questo valore.</span><span class="sxs-lookup"><span data-stu-id="1d196-180">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="1d196-181">Un singolo valore a virgola mobile compreso tra 0,0 e minore di 1,0 chiamando il <xref:System.Random.NextDouble%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-181">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="1d196-182">Limite superiore esclusivo del numero casuale restituito dal metodo è 1, pertanto il limite massimo effettivo è 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="1d196-182">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="1d196-183">Nell'esempio seguente genera l'errore 10 numeri a virgola mobile casuale.</span><span class="sxs-lookup"><span data-stu-id="1d196-183">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="1d196-184">Il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodo consente di specificare l'intervallo del numero casuale restituito.</span><span class="sxs-lookup"><span data-stu-id="1d196-184">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="1d196-185">Tuttavia, il `maxValue` parametro che specifica l'intervallo superiore restituiti numeri, è un'esclusiva e non un inclusivo, valore.</span><span class="sxs-lookup"><span data-stu-id="1d196-185">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="1d196-186">Ciò significa che la chiamata al metodo `Next(0, 100)` restituisce un valore compreso tra 0 e 99 e non è compreso tra 0 e 100.</span><span class="sxs-lookup"><span data-stu-id="1d196-186">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="1d196-187">È anche possibile usare la <xref:System.Random> classe per attività quali la generazione [valori casuali T:System.Boolean](#Boolean), generazione [valori a virgola mobile casuale con un intervallo diverso da 0 a 1](#Floats), generazione [numeri interi a 64 bit casuali](#Long), e [richiamo in modo casuale di un elemento univoco da una matrice o raccolta](#UniqueArray).</span><span class="sxs-lookup"><span data-stu-id="1d196-187">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="1d196-188">Per queste e altre attività comuni, vedere il [come si usa System. Random per...](#Operations)</span><span class="sxs-lookup"><span data-stu-id="1d196-188">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="1d196-189">sezione.</span><span class="sxs-lookup"><span data-stu-id="1d196-189">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="1d196-190">Sostituzione di un algoritmo personalizzato</span><span class="sxs-lookup"><span data-stu-id="1d196-190">Substituting your own algorithm</span></span>  
 <span data-ttu-id="1d196-191">È possibile implementare il proprio generatore di numeri casuali ereditando dal <xref:System.Random> classe e specificando l'algoritmo di generazione di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-191">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="1d196-192">Per fornire il proprio algoritmo, è necessario eseguire l'override di <xref:System.Random.Sample%2A> metodo, che implementa l'algoritmo di generazione di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-192">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="1d196-193">È inoltre consigliabile eseguire l'override di <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, e <xref:System.Random.NextBytes%2A> metodi per garantire che chiamano sottoposto a override <xref:System.Random.Sample%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-193">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="1d196-194">Non è necessario eseguire l'override di <xref:System.Random.Next%28System.Int32%29> e <xref:System.Random.NextDouble%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="1d196-194">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="1d196-195">Per un esempio che deriva dal <xref:System.Random> classe e modifica, il generatore di numeri pseudo-casuali predefinito vedere il <xref:System.Random.Sample%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="1d196-195">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="1d196-196">Come si usa System. Random per...</span><span class="sxs-lookup"><span data-stu-id="1d196-196">How do you use System.Random to…</span></span>  
 <span data-ttu-id="1d196-197">Le sezioni seguenti forniscono informazioni e codice di esempio per alcuni dei metodi che si potrebbe voler usare numeri casuali nell'app.</span><span class="sxs-lookup"><span data-stu-id="1d196-197">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="1d196-198">Recuperare la stessa sequenza di valori casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-198">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="1d196-199">Talvolta si desidera generare la stessa sequenza di numeri casuali negli scenari di test di software e la riproduzione del gioco.</span><span class="sxs-lookup"><span data-stu-id="1d196-199">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="1d196-200">Test con la stessa sequenza di numeri casuali consente di rilevare le regressioni e confermare le correzioni di bug.</span><span class="sxs-lookup"><span data-stu-id="1d196-200">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="1d196-201">Utilizzando la stessa sequenza di numero casuale nei giochi è possibile riprodurre giochi precedente.</span><span class="sxs-lookup"><span data-stu-id="1d196-201">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="1d196-202">È possibile generare la stessa sequenza di numeri casuali, fornendo lo stesso valore di inizializzazione per il <xref:System.Random.%23ctor%28System.Int32%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="1d196-202">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="1d196-203">Il valore di inizializzazione fornisce un valore iniziale per l'algoritmo di generazione di numeri pseudo-casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-203">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="1d196-204">L'esempio seguente usa 100100 come un valore di inizializzazione arbitrario per creare un'istanza di <xref:System.Random> oggetto, vengono visualizzati 20 valori a virgola mobile casuali e mantiene il valore di inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-204">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="1d196-205">Quindi Ripristina il valore di inizializzazione, crea un'istanza di un nuovo generatore di numeri casuali e visualizza le stessi 20 casuale valori a virgola mobile.</span><span class="sxs-lookup"><span data-stu-id="1d196-205">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="1d196-206">Si noti che l'esempio può produrre un gruppo di sequenze di numeri casuali se eseguiti in versioni diverse di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1d196-206">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="1d196-207">Recuperare le sequenze univoche di numeri casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-207">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="1d196-208">Fornire i valori di inizializzazione diversi per le istanze del <xref:System.Random> classe fa in modo che ogni generatore di numeri casuali per produrre una sequenza di valori diversi.</span><span class="sxs-lookup"><span data-stu-id="1d196-208">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="1d196-209">È possibile fornire un valore di inizializzazione in modo esplicito chiamando il <xref:System.Random.%23ctor%28System.Int32%29> costruttore, oppure in modo implicito chiamando la <xref:System.Random.%23ctor> costruttore.</span><span class="sxs-lookup"><span data-stu-id="1d196-209">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="1d196-210">La maggior parte degli sviluppatori di chiamano il costruttore senza parametri, che usa il clock di sistema.</span><span class="sxs-lookup"><span data-stu-id="1d196-210">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="1d196-211">L'esempio seguente usa questo approccio per creare un'istanza di due <xref:System.Random> istanze.</span><span class="sxs-lookup"><span data-stu-id="1d196-211">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="1d196-212">Ogni istanza viene visualizzata una serie di 10 numeri interi casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-212">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="1d196-213">Tuttavia, a causa di risoluzione finita, l'orologio di sistema non rileva le differenze di orario di minore di circa 15 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="1d196-213">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="1d196-214">Pertanto, se il codice chiama il <xref:System.Random.%23ctor> per creare un'istanza di due overload <xref:System.Random> gli oggetti in successione, si potrebbero inavvertitamente fornire gli oggetti con valori di inizializzazione identici.</span><span class="sxs-lookup"><span data-stu-id="1d196-214">Therefore, if your code calls the <xref:System.Random.%23ctor> overload to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="1d196-215">Per verificarlo nell'esempio precedente, impostare come commento il <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> chiamata al metodo e compilazione ed eseguire l'esempio di nuovo.</span><span class="sxs-lookup"><span data-stu-id="1d196-215">To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="1d196-216">Per evitare che ciò accada, è consigliabile che si crea un'istanza di un singolo <xref:System.Random> oggetto anziché più sessioni.</span><span class="sxs-lookup"><span data-stu-id="1d196-216">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="1d196-217">Tuttavia, poiché <xref:System.Random> non è thread-safe, è necessario usare un dispositivo di sincronizzazione se si accede a un <xref:System.Random> dell'istanza da più thread; per altre informazioni, vedere [casuale la sicurezza della classe e thread](#ThreadSafety) più indietro in questo argomento.</span><span class="sxs-lookup"><span data-stu-id="1d196-217">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="1d196-218">In alternativa, è possibile usare un meccanismo di ritardo, ad esempio il <xref:System.Threading.Thread.Sleep%2A> metodo usato nell'esempio precedente, per garantire che le istanze create si distanti più di 15 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="1d196-218">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="1d196-219">Recuperare interi in un intervallo specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-219">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="1d196-220">È possibile recuperare valori interi in un intervallo specificato chiamando il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodo, che consente di specificare sia il limite minimo e il limite superiore dei numeri di cui si vuole che il generatore di numeri casuali da restituire.</span><span class="sxs-lookup"><span data-stu-id="1d196-220">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="1d196-221">Il limite superiore è un'esclusiva e non un inclusivo, valore.</span><span class="sxs-lookup"><span data-stu-id="1d196-221">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="1d196-222">Vale a dire non è incluso nell'intervallo dei valori restituiti dal metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-222">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="1d196-223">L'esempio seguente usa questo metodo per generare numeri casuali interi compresi tra -10 e 10.</span><span class="sxs-lookup"><span data-stu-id="1d196-223">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="1d196-224">Si noti che specifichi 11, ovvero una maggiore del valore desiderato, come il valore della `maxValue` argomento nella chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-224">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="1d196-225">Recuperare interi con un numero di cifre specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-225">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="1d196-226">È possibile chiamare il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodo per recuperare numeri con un numero di cifre specificato.</span><span class="sxs-lookup"><span data-stu-id="1d196-226">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="1d196-227">Ad esempio, per recuperare numeri con quattro cifre (ovvero numeri compresi tra 1000 e 9999), si chiama il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodo con un `minValue` pari a 1000 e un `maxValue` pari a 10000, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="1d196-227">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="1d196-228">Recuperare i valori a virgola mobile in un intervallo specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-228">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="1d196-229">Il <xref:System.Random.NextDouble%2A> metodo restituisce valori a virgola mobile casuale quell'intervallo da 0 a meno di 1.</span><span class="sxs-lookup"><span data-stu-id="1d196-229">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="1d196-230">Tuttavia, spesso è opportuno generare valori casuali in un altro intervallo.</span><span class="sxs-lookup"><span data-stu-id="1d196-230">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="1d196-231">Se l'intervallo tra i valori minimi e massimo desiderati è 1, è possibile aggiungere la differenza tra l'intervallo inizia desiderato e 0 per il numero restituito dal <xref:System.Random.NextDouble%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-231">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="1d196-232">Nell'esempio seguente esegue questa opzione per generare 10 numeri casuale compreso tra -1 e 0.</span><span class="sxs-lookup"><span data-stu-id="1d196-232">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="1d196-233">Per generare numeri a virgola mobile casuale con limite inferiore è 0 ma limite superiore è maggiore di 1 (o, nel caso i numeri negativi, il cui limite inferiore è minore di -1 e il limite superiore è 0), moltiplicare il numero casuale per il limite diverso da zero.</span><span class="sxs-lookup"><span data-stu-id="1d196-233">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="1d196-234">Nell'esempio seguente esegue questa generazione di numeri a virgola mobile casuale 20 milioni di quell'intervallo compreso tra 0 e <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d196-234">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1d196-235">In Visualizza anche la distribuzione dei valori casuali generati dal metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-235">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="1d196-236">Per generare numeri a virgola mobile casuale compreso tra due valori arbitrari, ad esempio il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodo per i numeri interi, utilizzare la formula seguente:</span><span class="sxs-lookup"><span data-stu-id="1d196-236">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```csharp  
Random.NextDouble() * (maxValue - minValue) + minValue  
```  
  
 <span data-ttu-id="1d196-237">Nell'esempio seguente genera numeri casuali di 1 milione che vanno da 10.0 a 11.0 e Visualizza la loro distribuzione.</span><span class="sxs-lookup"><span data-stu-id="1d196-237">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="1d196-238">Generare i valori booleani casuale</span><span class="sxs-lookup"><span data-stu-id="1d196-238">Generate random Boolean values</span></span>  
 <span data-ttu-id="1d196-239">Il <xref:System.Random> classe non fornisce metodi che generano <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="1d196-239">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="1d196-240">Tuttavia, è possibile definire il proprio classe o un metodo per eseguire questa operazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-240">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="1d196-241">L'esempio seguente definisce una classe `BooleanGenerator`, con un solo metodo, `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="1d196-241">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="1d196-242">Il `BooleanGenerator` classe archivia un <xref:System.Random> oggetto come una variabile privata.</span><span class="sxs-lookup"><span data-stu-id="1d196-242">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="1d196-243">Il `NextBoolean` chiamate al metodo il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metodo e passa il risultato per il <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-243">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1d196-244">Si noti che 2 viene utilizzata come argomento per specificare il limite superiore del numero casuale.</span><span class="sxs-lookup"><span data-stu-id="1d196-244">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="1d196-245">Poiché si tratta di un valore esclusivo, la chiamata al metodo restituisce 0 o 1.</span><span class="sxs-lookup"><span data-stu-id="1d196-245">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="1d196-246">Anziché creare una classe separata per generare casuale <xref:System.Boolean> valori, nell'esempio viene semplicemente potrebbe essere stata definita un singolo metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-246">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="1d196-247">In tal caso, tuttavia, il <xref:System.Random> deve avere l'oggetto sia stato definito come una variabile a livello di classe per evitare un'istanza di un nuovo <xref:System.Random> istanza in ogni chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-247">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="1d196-248">In Visual Basic, l'istanza di Random può essere definita come una [statici](~/docs/visual-basic/language-reference/modifiers/static.md) di una variabile nel `NextBoolean` (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-248">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="1d196-249">Nell'esempio seguente fornisce un'implementazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-249">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="1d196-250">Generare numeri interi a 64 bit casuali</span><span class="sxs-lookup"><span data-stu-id="1d196-250">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="1d196-251">Gli overload del <xref:System.Random.Next%2A> metodo restituiscono valori integer a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="1d196-251">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="1d196-252">Tuttavia, in alcuni casi, potrebbe voler usare con numeri interi a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="1d196-252">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="1d196-253">Procedere come segue:</span><span class="sxs-lookup"><span data-stu-id="1d196-253">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="1d196-254">Chiamare il <xref:System.Random.NextDouble%2A> valore del punto per recuperare un mobile e precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="1d196-254">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="1d196-255">Tale valore da moltiplicare <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d196-255">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1d196-256">Nell'esempio seguente usa questa tecnica per generare valori long integer 20 milioni casuali e li classifica in 10 gruppi di uguali.</span><span class="sxs-lookup"><span data-stu-id="1d196-256">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="1d196-257">Viene quindi valutato la distribuzione di numeri casuali contando il numero in ogni gruppo compreso tra 0 e <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d196-257">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1d196-258">Come illustrato nell'output dell'esempio, i numeri vengono distribuiti più o meno in modo uniforme tramite l'intervallo di un long integer.</span><span class="sxs-lookup"><span data-stu-id="1d196-258">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="1d196-259">Una tecnica alternativa che viene utilizzato bit manipolazione non genera numeri casuali realmente.</span><span class="sxs-lookup"><span data-stu-id="1d196-259">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="1d196-260">Questa tecnica chiama <xref:System.Random.Next> per generare due numeri interi, sposta verso sinistra uno da 32 bit e sono uno a altro.</span><span class="sxs-lookup"><span data-stu-id="1d196-260">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="1d196-261">Questa tecnica presenta due limitazioni:</span><span class="sxs-lookup"><span data-stu-id="1d196-261">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="1d196-262">Poiché il bit 31 bit di segno, il valore in bit 31 long integer risultante è sempre 0.</span><span class="sxs-lookup"><span data-stu-id="1d196-262">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="1d196-263">Questo problema può essere risolto tramite la generazione casuale 0 o 1, spostamento a sinistra 31 bit e ORing con long integer casuale originale.</span><span class="sxs-lookup"><span data-stu-id="1d196-263">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="1d196-264">Attenzione, perché la probabilità che il valore restituito da <xref:System.Random.Next> sarà pari a 0, vi saranno alcuni eventuali numeri casuali nell'intervallo 0x0 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="1d196-264">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="1d196-265">Recuperare byte in un intervallo specificato</span><span class="sxs-lookup"><span data-stu-id="1d196-265">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="1d196-266">Gli overload del <xref:System.Random.Next%2A> metodo consentono di specificare l'intervallo di numeri casuali, ma il <xref:System.Random.NextBytes%2A> non dal metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-266">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="1d196-267">L'esempio seguente implementa un `NextBytes` metodo che consente di specificare l'intervallo di byte restituiti.</span><span class="sxs-lookup"><span data-stu-id="1d196-267">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="1d196-268">Definisce un `Random2` classe che deriva da <xref:System.Random> ed esegue l'overload relativi `NextBytes` (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-268">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="1d196-269">Il `NextBytes(Byte[], Byte, Byte)` metodo esegue il wrapping di una chiamata al <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> (metodo) e specifica il valore minimo e una maggiore rispetto al valore massimo (in questo caso, 0 e 101) che si desidera vengano restituite nella matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="1d196-269">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="1d196-270">Poiché si è certi che i valori interi restituita dal <xref:System.Random.Next%2A> metodo siano compresi nell'intervallo del <xref:System.Byte> tipo di dati, è possibile in modo sicuro eseguirne il cast (in c#) o convertire (in Visual Basic) da numeri interi in byte.</span><span class="sxs-lookup"><span data-stu-id="1d196-270">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="1d196-271">Recuperare un elemento da una matrice o raccolta in modo casuale</span><span class="sxs-lookup"><span data-stu-id="1d196-271">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="1d196-272">Numeri casuali vengono spesso usati come gli indici per recuperare valori da matrici o raccolte.</span><span class="sxs-lookup"><span data-stu-id="1d196-272">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="1d196-273">Per recuperare un valore di indice casuale, è possibile chiamare il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodo e usare il limite inferiore della matrice come valore di relativi `minValue` argomento e una maggiore del limite superiore della matrice come valore del relativo `maxValue` argomento.</span><span class="sxs-lookup"><span data-stu-id="1d196-273">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="1d196-274">Per una matrice in base zero, questo è equivalente al relativo <xref:System.Array.Length%2A> proprietà o una maggiore del valore restituito dal <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-274">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1d196-275">Nell'esempio seguente recupera in modo casuale il nome di una città negli Stati Uniti da una matrice di città.</span><span class="sxs-lookup"><span data-stu-id="1d196-275">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="1d196-276">Recuperare un elemento univoco da una matrice o raccolta</span><span class="sxs-lookup"><span data-stu-id="1d196-276">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="1d196-277">Un generatore di numeri casuali può restituire sempre valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="1d196-277">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="1d196-278">Quando l'intervallo di numeri diventa più piccolo o il numero di valori generati diventa più grande, aumenta la probabilità di duplicati.</span><span class="sxs-lookup"><span data-stu-id="1d196-278">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="1d196-279">Se i valori casuali devono essere univoci, più numeri vengono generati per compensare la presenza di duplicati, causando sempre più spesso una riduzione delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="1d196-279">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="1d196-280">Esistono diverse tecniche per gestire questo scenario.</span><span class="sxs-lookup"><span data-stu-id="1d196-280">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="1d196-281">Una soluzione comune consiste nel creare una matrice o raccolta che contiene i valori da recuperare e una matrice parallela che contiene numeri a virgola mobile casuale.</span><span class="sxs-lookup"><span data-stu-id="1d196-281">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="1d196-282">Nella seconda matrice viene popolata con i numeri casuali al momento della creazione, la prima matrice e <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> metodo viene utilizzato per ordinare la prima matrice utilizzando i valori nella matrice parallela.</span><span class="sxs-lookup"><span data-stu-id="1d196-282">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="1d196-283">Ad esempio, se si sta sviluppando un gioco di Solitario, si desidera assicurarsi che ogni scheda venga utilizzata una sola volta.</span><span class="sxs-lookup"><span data-stu-id="1d196-283">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="1d196-284">Invece di generare numeri casuali per recuperare una scheda e verificando se tale scheda ha già coinvolti, è possibile creare una matrice parallela di numeri casuali che possono essere usati per ordinare il mazzo di carte.</span><span class="sxs-lookup"><span data-stu-id="1d196-284">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="1d196-285">Una volta il mazzo di carte è ordinato, l'app può mantenere un puntatore per indicare l'indice della scheda successiva di mettersi all'opera.</span><span class="sxs-lookup"><span data-stu-id="1d196-285">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="1d196-286">Questo approccio viene illustrato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="1d196-286">The following example illustrates this approach.</span></span> <span data-ttu-id="1d196-287">Definisce un `Card` classe che rappresenta una carta da gioco e un `Dealer` classe che gestisce un mazzo di carte riprodurre con sequenza casuale.</span><span class="sxs-lookup"><span data-stu-id="1d196-287">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="1d196-288">Il `Dealer` costruttore di classe popola due matrici: una `deck` array con ambito di classe e che rappresenta tutte le schede in una variabile locale e il mazzo; `order` array con lo stesso numero di elementi come il `deck` matrice e come viene popolato con generato casualmente <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="1d196-288">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="1d196-289">Il <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> viene quindi chiamato il metodo per ordinare le `deck` matrice in base ai valori nel `order` matrice.</span><span class="sxs-lookup"><span data-stu-id="1d196-289">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="1d196-290">L'esempio seguente crea un singolo generatore di numeri casuali e le chiamate relative <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, e <xref:System.Random.NextDouble%2A> metodi per generare le sequenze di numeri casuali all'interno degli intervalli diversi.</span><span class="sxs-lookup"><span data-stu-id="1d196-290">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="1d196-291">Nell'esempio seguente genera un integer casuale che viene utilizzato come indice per recuperare un valore stringa da una matrice.</span><span class="sxs-lookup"><span data-stu-id="1d196-291">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="1d196-292">In .NET Framework 1.0 e 1.1, un'implementazione minima di una classe derivata da <see cref="T:System.Random" /> richiedeva l'override di <see cref="M:System.Random.Sample" /> metodo per definire un algoritmo di nuovo o modificato per la generazione di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-292">In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers.</span></span> <span data-ttu-id="1d196-293">La classe derivata può quindi si basano sull'implementazione della classe di base del <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, e <see cref="M:System.Random.NextDouble" /> metodi per chiamare l'implementazione della classe derivata di <see cref="M:System.Random.Sample" /> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-293">The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span>  
  
<span data-ttu-id="1d196-294">In .NET Framework 2.0 e versioni successive, il comportamento dei <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, e <see cref="M:System.Random.NextBytes(System.Byte[])" /> metodi sono stati modificati in modo che questi metodi non necessariamente chiamano l'implementazione della classe derivata di <see cref="M:System.Random.Sample" /> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-294">In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span> <span data-ttu-id="1d196-295">Di conseguenza, le classi derivate da <see cref="T:System.Random" /> che destinate a .NET Framework 2.0 e in un secondo momento eseguire l'override di questi tre metodi.</span><span class="sxs-lookup"><span data-stu-id="1d196-295">As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</span></span></para></block>
    <block subset="none" type="usage"><para><span data-ttu-id="1d196-296">L'implementazione del generatore di numeri casuali nel <see cref="T:System.Random" /> classe non è garantito che deve rimanere uguale in tutte le versioni principali di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1d196-296">The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework.</span></span> <span data-ttu-id="1d196-297">Di conseguenza, si dovrebbero evitare supposizioni che il valore di inizializzazione stessa avrà come risultato nella stessa sequenza pseudocasuale nelle diverse versioni di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1d196-297">As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d196-298">Inizializza una nuova istanza della classe <see cref="T:System.Random" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-298">Initializes a new instance of the <see cref="T:System.Random" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d196-299">Inizializza una nuova istanza della classe <see cref="T:System.Random" /> utilizzando un valore di inizializzazione predefinito dipendente da un fattore temporale.</span><span class="sxs-lookup"><span data-stu-id="1d196-299">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-300">Il valore di inizializzazione predefinito è derivato dal clock di sistema e ha una risoluzione limitata.</span><span class="sxs-lookup"><span data-stu-id="1d196-300">The default seed value is derived from the system clock and has finite resolution.</span></span> <span data-ttu-id="1d196-301">Di conseguenza, diversa <xref:System.Random> gli oggetti creati da una chiamata al costruttore predefinito in successione Chiudi avranno valori di inizializzazione predefinito identici e, pertanto restituirà stessi set di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-301">As a result, different <xref:System.Random> objects that are created in close succession by a call to the default constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="1d196-302">Questo problema può essere evitato usando un singolo <xref:System.Random> oggetto per generare tutti i numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-302">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="1d196-303">Possono anche aggirare il problema modificando il valore di inizializzazione restituito dal clock di sistema e quindi fornire in modo esplicito questo nuovo valore di inizializzazione per il <xref:System.Random.%23ctor%28System.Int32%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="1d196-303">You can also work around it by modifying the seed value returned by the system clock and then explicitly providing this new seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="1d196-304">Per altre informazioni, vedere il <xref:System.Random.%23ctor%28System.Int32%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="1d196-304">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="1d196-305">Chiamare questo costruttore se si desidera che il generatore di numeri casuali per generare una sequenza di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-305">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="1d196-306">Per generare una sequenza fissa di numeri casuali che saranno gli stessi per generatori di numeri casuali diversi, chiamare il <xref:System.Random.%23ctor%28System.Int32%29> costruttore con un valore di inizializzazione predefinito.</span><span class="sxs-lookup"><span data-stu-id="1d196-306">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="1d196-307">Ciò <xref:System.Random> overload del costruttore viene spesso utilizzato durante il test di App che usano numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-307">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="1d196-308">Dopo aver creato l'istanza del generatore di numeri casuali, è chiamare singole <xref:System.Random> metodi, ad esempio <xref:System.Random.Next> o <xref:System.Random.NextDouble>per generare numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-308">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-309">L'esempio seguente usa il costruttore predefinito per creare un'istanza di tre <xref:System.Random> degli oggetti e consente di visualizzare una sequenza di cinque valori integer casuale per ognuno.</span><span class="sxs-lookup"><span data-stu-id="1d196-309">The following example uses the default constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="1d196-310">Poiché le prime due <xref:System.Random> gli oggetti vengono creati in successione Chiudi, le relative istanze vengono create usando i valori di inizializzazione identici in base al clock di sistema e, pertanto producono una sequenza identica di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-310">Because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="1d196-311">D'altra parte, il costruttore predefinito del terzo <xref:System.Random> oggetto viene chiamato dopo un ritardo di due secondi indotte chiamando il <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-311">On the other hand, the default constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1d196-312">Poiché questo genera un valore di inizializzazione diversi per la terza <xref:System.Random> dell'oggetto, produce una sequenza di numeri casuali diversi.</span><span class="sxs-lookup"><span data-stu-id="1d196-312">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberSignature Language="F#" Value="new Random : int -&gt; Random" Usage="new System.Random Seed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed"><span data-ttu-id="1d196-313">Numero usato per calcolare un valore iniziale per la sequenza di numeri pseudo-casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-313">A number used to calculate a starting value for the pseudo-random number sequence.</span></span> <span data-ttu-id="1d196-314">Se viene specificato un numero negativo, viene usato il valore assoluto del numero.</span><span class="sxs-lookup"><span data-stu-id="1d196-314">If a negative number is specified, the absolute value of the number is used.</span></span></param>
        <summary><span data-ttu-id="1d196-315">Inizializza una nuova istanza della classe <see cref="T:System.Random" /> usando il valore di inizializzazione specificato.</span><span class="sxs-lookup"><span data-stu-id="1d196-315">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-316">Fornendo un valore di inizializzazione identici a diversi <xref:System.Random> oggetti fa in modo che ogni istanza per produrre identiche sequenze di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-316">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="1d196-317">Questa operazione viene spesso eseguita durante il test di App che si basano su generatori di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-317">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="1d196-318">Se l'applicazione richiede diverse sequenze di numeri casuali, richiamare il costruttore più volte con valori di inizializzazione diverso.</span><span class="sxs-lookup"><span data-stu-id="1d196-318">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="1d196-319">Un modo per generare un valore di inizializzazione univoco è per renderla dipendenti dal tempo.</span><span class="sxs-lookup"><span data-stu-id="1d196-319">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="1d196-320">Ad esempio, derivare il valore di inizializzazione dal clock di sistema, come il <xref:System.Random.%23ctor> viene overload.</span><span class="sxs-lookup"><span data-stu-id="1d196-320">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="1d196-321">Tuttavia, l'orologio di sistema potrebbe non avere risoluzione sufficiente per fornire diverse chiamate di questo costruttore con un valore di inizializzazione diverso.</span><span class="sxs-lookup"><span data-stu-id="1d196-321">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="1d196-322">Ciò comporta generatori di numeri casuali che generano identiche sequenze di numeri pseudo-casuali, come illustrato nei primi due <xref:System.Random> oggetti nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="1d196-322">This results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="1d196-323">Per evitare questo problema, applicare un algoritmo per distinguere il valore di inizializzazione in ogni chiamata o chiamare il <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodo per assicurarsi di aver previsto ogni costruttore con un valore di inizializzazione diverso.</span><span class="sxs-lookup"><span data-stu-id="1d196-323">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="1d196-324">Un'altra opzione consiste nel creare un'istanza di un singolo <xref:System.Random> che è utilizzato per generare tutti i numeri casuali nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-324">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="1d196-325">Ciò produce prestazioni leggermente migliori, poiché è piuttosto costosa, creare un'istanza di un generatore di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-325">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-326">L'esempio seguente crea <xref:System.Random> oggetti con il costruttore della classe che accetta un parametro di inizializzazione e genera una sequenza di numeri interi casuali e Double.</span><span class="sxs-lookup"><span data-stu-id="1d196-326">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="1d196-327">Nell'esempio viene illustrato che la stessa sequenza viene generata quando il <xref:System.Random> oggetto viene creato nuovamente con il parametro di costruttore e valore di inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="1d196-327">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d196-328">Restituisce un intero casuale.</span><span class="sxs-lookup"><span data-stu-id="1d196-328">Returns a random integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int&#xA;override this.Next : unit -&gt; int" Usage="random.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d196-329">Restituisce un intero casuale non negativo.</span><span class="sxs-lookup"><span data-stu-id="1d196-329">Returns a non-negative random integer.</span></span></summary>
        <returns><span data-ttu-id="1d196-330">Intero con segno a 32 bit maggiore o uguale a 0 e minore di <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-330">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> Genera un numero casuale, il cui valore è compreso tra 0 e minore di <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d196-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1d196-332">Per generare un numero casuale, il cui valore è compreso tra 0 e un altro numero positivo, utilizzare il <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-332">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="1d196-333">Per generare un numero casuale all'interno di un intervallo diverso, usare il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-333">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-334">Nell'esempio riportato di seguito vengono effettuate chiamate ripetute al metodo <xref:System.Random.Next%2A> per generare un numero specifico di numeri casuali richiesti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="1d196-334">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="1d196-335">Il metodo <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> viene utilizzato per ricevere l'input del cliente.</span><span class="sxs-lookup"><span data-stu-id="1d196-335">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="1d196-336">Nell'esempio seguente deriva una classe dalla classe <xref:System.Random> per generare una sequenza di numeri casuale la cui distribuzione è diversa dalla distribuzione uniforme generata dal <xref:System.Random.Sample%2A> metodo della classe di base.</span><span class="sxs-lookup"><span data-stu-id="1d196-336">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="1d196-337">Viene eseguito l'override di <xref:System.Random.Sample%2A> metodo per fornire la distribuzione di numeri casuali ed esegue l'override di <xref:System.Random.Next%2A?displayProperty=nameWithType> metodo da usare una serie di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-337">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d196-338">Partire da .NET Framework versione 2.0, se si deriva una classe dalla classe <see cref="T:System.Random" /> ed eseguire l'override di <see cref="M:System.Random.Sample" /> metodo, la distribuzione fornita dall'implementazione della classe derivata del <see cref="M:System.Random.Sample" /> metodo non viene utilizzato nelle chiamate alla classe di base implementazione del <see cref="M:System.Random.Next" /> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-338">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method.</span></span> <span data-ttu-id="1d196-339">Al contrario, la distribuzione uniforme restituito dalla base <see cref="T:System.Random" /> classe viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="1d196-339">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="1d196-340">Questo comportamento migliora le prestazioni complessive del <see cref="T:System.Random" /> classe.</span><span class="sxs-lookup"><span data-stu-id="1d196-340">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="1d196-341">Per modificare questo comportamento per chiamare il <see cref="M:System.Random.Sample" /> metodo nella classe derivata, è inoltre necessario sostituire il <see cref="M:System.Random.Next" /> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-341">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int -&gt; int&#xA;override this.Next : int -&gt; int" Usage="random.Next maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="1d196-342">Limite superiore esclusivo del numero casuale da generare.</span><span class="sxs-lookup"><span data-stu-id="1d196-342">The exclusive upper bound of the random number to be generated.</span></span> <span data-ttu-id="1d196-343"><paramref name="maxValue" /> deve essere maggiore o uguale a 0.</span><span class="sxs-lookup"><span data-stu-id="1d196-343"><paramref name="maxValue" /> must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="1d196-344">Restituisce un intero casuale non negativo inferiore al massimo specificato.</span><span class="sxs-lookup"><span data-stu-id="1d196-344">Returns a non-negative random integer that is less than the specified maximum.</span></span></summary>
        <returns><span data-ttu-id="1d196-345">Intero con segno a 32 bit maggiore o uguale a 0 e minore di <paramref name="maxValue" />; ovvero, l'intervallo dei valori restituiti in genere include 0 ma non <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-345">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="1d196-346">Se tuttavia <paramref name="maxValue" /> è uguale a 0 viene restituito <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-346">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-347">Il <xref:System.Random.Next%28System.Int32%29> overload restituisce numeri interi casuali quell'intervallo compreso tra 0 e `maxValue` - 1.</span><span class="sxs-lookup"><span data-stu-id="1d196-347">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` - 1.</span></span> <span data-ttu-id="1d196-348">Tuttavia, se `maxValue` è 0, il metodo restituisce 0.</span><span class="sxs-lookup"><span data-stu-id="1d196-348">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-349">L'esempio seguente genera integer casuale con diversi overload del <xref:System.Random.Next%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-349">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  
  
 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="1d196-350">Nell'esempio seguente genera un integer casuale che viene utilizzato come indice per recuperare un valore stringa da una matrice.</span><span class="sxs-lookup"><span data-stu-id="1d196-350">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="1d196-351">Poiché l'indice più alto della matrice è una minore la sua lunghezza, il valore della <xref:System.Array.Length%2A?displayProperty=nameWithType> proprietà deve essere fornita come un il `maxValue` parametro.</span><span class="sxs-lookup"><span data-stu-id="1d196-351">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d196-352"><paramref name="maxValue" /> è minore di 0.</span><span class="sxs-lookup"><span data-stu-id="1d196-352"><paramref name="maxValue" /> is less than 0.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * int -&gt; int&#xA;override this.Next : int * int -&gt; int" Usage="random.Next (minValue, maxValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="1d196-353">Limite inferiore inclusivo del numero casuale restituito.</span><span class="sxs-lookup"><span data-stu-id="1d196-353">The inclusive lower bound of the random number returned.</span></span></param>
        <param name="maxValue"><span data-ttu-id="1d196-354">Limite superiore esclusivo del numero casuale restituito.</span><span class="sxs-lookup"><span data-stu-id="1d196-354">The exclusive upper bound of the random number returned.</span></span> <span data-ttu-id="1d196-355"><paramref name="maxValue" /> deve essere maggiore o uguale a <paramref name="minValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-355"><paramref name="maxValue" /> must be greater than or equal to <paramref name="minValue" />.</span></span></param>
        <summary><span data-ttu-id="1d196-356">Restituisce un intero casuale all'interno di un intervallo specificato.</span><span class="sxs-lookup"><span data-stu-id="1d196-356">Returns a random integer that is within a specified range.</span></span></summary>
        <returns><span data-ttu-id="1d196-357">Intero con segno a 32 bit maggiore o uguale a <paramref name="minValue" /> e minore di <paramref name="maxValue" />: l'intervallo dei valori restituiti includerà <paramref name="minValue" /> ma non <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-357">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="1d196-358">Se <paramref name="minValue" /> è uguale a <paramref name="maxValue" />, viene restituito <paramref name="minValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-358">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-359">Il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload restituisce numeri interi casuali compresi tra `minValue` a `maxValue` - 1.</span><span class="sxs-lookup"><span data-stu-id="1d196-359">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` - 1.</span></span> <span data-ttu-id="1d196-360">Tuttavia, se `maxValue` è uguale a `minValue`, il metodo restituisce `minValue`.</span><span class="sxs-lookup"><span data-stu-id="1d196-360">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="1d196-361">A differenza di altri overload del <xref:System.Random.Next%2A> (metodo), che restituiscono valori solo un valore non negativo, questo metodo può restituire un intero casuale negativo.</span><span class="sxs-lookup"><span data-stu-id="1d196-361">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-362">L'esempio seguente usa il <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metodo per generare numeri interi casuali con tre intervalli distinti.</span><span class="sxs-lookup"><span data-stu-id="1d196-362">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="1d196-363">Si noti che l'output dell'esempio esatta dipende il valore di inizializzazione di sistema passato al <xref:System.Random> costruttore della classe.</span><span class="sxs-lookup"><span data-stu-id="1d196-363">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="1d196-364">Nell'esempio seguente genera un integer casuale che viene utilizzato come indice per recuperare un valore stringa da una matrice.</span><span class="sxs-lookup"><span data-stu-id="1d196-364">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="1d196-365">Poiché l'indice più alto della matrice è una minore la sua lunghezza, il valore della <xref:System.Array.Length%2A?displayProperty=nameWithType> proprietà deve essere fornita come un il `maxValue` parametro.</span><span class="sxs-lookup"><span data-stu-id="1d196-365">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d196-366"><paramref name="minValue" /> è maggiore di <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-366"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d196-367">Partire da .NET Framework versione 2.0, se si deriva una classe dalla classe <see cref="T:System.Random" /> ed eseguire l'override di <see cref="M:System.Random.Sample" /> metodo, la distribuzione fornita dall'implementazione della classe derivata del <see cref="M:System.Random.Sample" /> metodo non viene utilizzato nelle chiamate alla classe di base implementazione del <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> overload del metodo se la differenza tra il <paramref name="minValue" /> e <paramref name="maxValue" /> parametri è maggiore di quella <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-367">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="1d196-368">Al contrario, la distribuzione uniforme restituito dalla base <see cref="T:System.Random" /> classe viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="1d196-368">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="1d196-369">Questo comportamento migliora le prestazioni complessive del <see cref="T:System.Random" /> classe.</span><span class="sxs-lookup"><span data-stu-id="1d196-369">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="1d196-370">Per modificare questo comportamento per chiamare il <see cref="M:System.Random.Sample" /> metodo nella classe derivata, è inoltre necessario sostituire il <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="1d196-370">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : byte[] -&gt; unit&#xA;override this.NextBytes : byte[] -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1d196-371">Matrice di byte che deve contenere numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-371">An array of bytes to contain random numbers.</span></span></param>
        <summary><span data-ttu-id="1d196-372">Inserisce numeri casuali negli elementi di una matrice di byte specificata.</span><span class="sxs-lookup"><span data-stu-id="1d196-372">Fills the elements of a specified array of bytes with random numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-373">Ogni elemento della matrice di byte è impostata su un numero casuale maggiore o uguale a 0 e minore o uguale a <xref:System.Byte.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="1d196-373">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="1d196-374">Ad esempio, per generare un numero casuale sicuro da adatto per la creazione di una password casuale, usare un metodo, ad esempio <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d196-374">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-375">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Random.NextBytes%2A> metodo da riempire una matrice di byte con valori di byte casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-375">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
  
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d196-376"><paramref name="buffer" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-376"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d196-377">Partire da .NET Framework versione 2.0, se si deriva una classe dalla classe <see cref="T:System.Random" /> ed eseguire l'override di <see cref="M:System.Random.Sample" /> metodo, la distribuzione fornita dall'implementazione della classe derivata del <see cref="M:System.Random.Sample" /> metodo non viene utilizzato nelle chiamate alla classe di base implementazione del <see cref="M:System.Random.NextBytes(System.Byte[])" /> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-377">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span> <span data-ttu-id="1d196-378">Al contrario, la distribuzione uniforme restituito dalla base <see cref="T:System.Random" /> classe viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="1d196-378">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="1d196-379">Questo comportamento migliora le prestazioni complessive del <see cref="T:System.Random" /> classe.</span><span class="sxs-lookup"><span data-stu-id="1d196-379">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="1d196-380">Per modificare questo comportamento per chiamare il <see cref="M:System.Random.Sample" /> metodo nella classe derivata, è inoltre necessario sostituire il <see cref="M:System.Random.NextBytes(System.Byte[])" /> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-380">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.NextBytes : Span&lt;byte&gt; -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberSignature Language="F#" Value="abstract member NextDouble : unit -&gt; double&#xA;override this.NextDouble : unit -&gt; double" Usage="random.NextDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d196-381">Restituisce un numero casuale a virgola mobile e precisione doppia maggiore o uguale a 0,0 e minore di 1,0.</span><span class="sxs-lookup"><span data-stu-id="1d196-381">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span></span></summary>
        <returns><span data-ttu-id="1d196-382">Numero a virgola mobile e precisione doppia maggiore o uguale a 0,0 e minore di 1,0.</span><span class="sxs-lookup"><span data-stu-id="1d196-382">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-383">Il limite superiore effettivo del numero casuale restituito da questo metodo è 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="1d196-383">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="1d196-384">Per recuperare i valori a virgola mobile casuale compreso in un intervallo diverso da 0.0 e 1.0, vedere la sezione "Valori a virgola mobile in un intervallo specificato di recuperare" le <xref:System.Random> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="1d196-384">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="1d196-385">Questo metodo è la versione pubblica del metodo protetto, <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="1d196-385">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-386">L'esempio seguente usa il <xref:System.Random.NextDouble%2A> metodo per generare le sequenze di valori double casuale.</span><span class="sxs-lookup"><span data-stu-id="1d196-386">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="1d196-387">L'esempio seguente chiama il <xref:System.Random.NextDouble%2A> metodo per generare casuale 100 numeri e Visualizza la frequenza di distribuzione.</span><span class="sxs-lookup"><span data-stu-id="1d196-387">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberSignature Language="F#" Value="abstract member Sample : unit -&gt; double&#xA;override this.Sample : unit -&gt; double" Usage="random.Sample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d196-388">Restituisce un numero a virgola mobile casuale compreso tra 0,0 e 1,0.</span><span class="sxs-lookup"><span data-stu-id="1d196-388">Returns a random floating-point number between 0.0 and 1.0.</span></span></summary>
        <returns><span data-ttu-id="1d196-389">Numero a virgola mobile e precisione doppia maggiore o uguale a 0,0 e minore di 1,0.</span><span class="sxs-lookup"><span data-stu-id="1d196-389">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d196-390">Per produrre una distribuzione casuale diversa o un principio del generatore di numeri casuali diversi, derivare una classe dal <xref:System.Random> classe ed eseguire l'override di <xref:System.Random.Sample%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-390">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1d196-391">Il <xref:System.Random.Sample%2A> metodo viene `protected`, che significa che è accessibile solo all'interno di <xref:System.Random> classe e le relative classi derivate.</span><span class="sxs-lookup"><span data-stu-id="1d196-391">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="1d196-392">Per generare un numero casuale compreso tra 0 e 1 da un <xref:System.Random> dell'istanza, chiamare il <xref:System.Random.NextDouble%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="1d196-392">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d196-393">Nell'esempio seguente deriva una classe dalla classe <xref:System.Random> ed esegue l'override di <xref:System.Random.Sample%2A> metodo per generare una distribuzione di numeri casuali.</span><span class="sxs-lookup"><span data-stu-id="1d196-393">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="1d196-394">Questa distribuzione è diversa dalla distribuzione uniforme generata dal <xref:System.Random.Sample%2A> metodo della classe di base.</span><span class="sxs-lookup"><span data-stu-id="1d196-394">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d196-395">Partire da .NET Framework versione 2.0, se si deriva una classe dalla classe <see cref="T:System.Random" /> ed eseguire l'override di <see cref="M:System.Random.Sample" /> metodo, la distribuzione fornita dall'implementazione della classe derivata del <see cref="M:System.Random.Sample" /> metodo non viene utilizzato nelle chiamate alla classe di base implementazione dei metodi seguenti:</span><span class="sxs-lookup"><span data-stu-id="1d196-395">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:</span></span> 
<span data-ttu-id="1d196-396">-   Il metodo <see cref="M:System.Random.NextBytes(System.Byte[])" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-396">-   The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span>  
  
<span data-ttu-id="1d196-397">-   Il metodo <see cref="M:System.Random.Next" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-397">-   The <see cref="M:System.Random.Next" /> method.</span></span>  
  
<span data-ttu-id="1d196-398">-il <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> metodo, se (<paramref name="maxValue" /> - <paramref name="minValue" />) è maggiore di quella <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1d196-398">-   The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="1d196-399">Al contrario, la distribuzione uniforme fornito da base <see cref="T:System.Random" /> classe viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="1d196-399">Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="1d196-400">Questo comportamento migliora le prestazioni complessive del <see cref="T:System.Random" /> classe.</span><span class="sxs-lookup"><span data-stu-id="1d196-400">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="1d196-401">Per modificare questo comportamento per chiamare l'implementazione del <see cref="M:System.Random.Sample" /> metodo nella classe derivata, è anche necessario eseguire l'override del comportamento di questi tre membri.</span><span class="sxs-lookup"><span data-stu-id="1d196-401">To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members.</span></span> <span data-ttu-id="1d196-402">Nell'esempio viene illustrata una situazione di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="1d196-402">The example provides an illustration.</span></span></para></block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>