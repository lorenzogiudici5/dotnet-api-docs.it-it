<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc806c33d54c770db49c6f4962c847e2e41cb635" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431183" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides functionality to format the value of an object into a string representation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IFormattable> interfaccia converte un oggetto nella relativa rappresentazione di stringa in base a una stringa di formato e un provider del formato.  
  
 In genere, una stringa di formato definisce l'aspetto generale di un oggetto. Ad esempio, .NET Framework supporta quanto segue:  
  
-   Stringhe di formato standard per la formattazione di valori di enumerazione (vedere [stringhe di formato di enumerazione](~/docs/standard/base-types/enumeration-format-strings.md)).  
  
-   Stringhe di formato standard e personalizzate per la formattazione di valori numerici (vedere [stringhe di formato numerico Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) e [stringhe di formato numerico personalizzate](~/docs/standard/base-types/custom-numeric-format-strings.md)).  
  
-   Stringhe di formato standard e personalizzate per la formattazione di valori di data e ora (vedere [stringhe di formato di ora e data Standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date e stringhe di formato di ora](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).  
  
-   Stringhe di formato standard e personalizzate per la formattazione di intervalli di tempo (vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md)).  
  
 È inoltre possibile definire stringhe di formato per supportare la formattazione dei tipi definiti dall'applicazione.  
  
 Un provider del formato restituisce un oggetto di formattazione che in genere definisce i simboli utilizzati nella conversione di un oggetto nella relativa rappresentazione di stringa. Ad esempio, quando si converte un numero in un valore di valuta, un provider del formato definisce il simbolo di valuta che viene visualizzato nella stringa di risultato. .NET Framework definisce tre provider di formato:  
  
-   Il <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> (classe), che restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto per la formattazione di valori numerici, o un <xref:System.Globalization.DateTimeFormatInfo> oggetto per la formattazione di valori di data e ora.  
  
-   Il <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> (classe), che restituisce un'istanza di se stesso per la formattazione di valori numerici.  
  
-   Il <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> (classe), che restituisce un'istanza di se stesso per la formattazione di valori di data e ora.  
  
 Inoltre, è possibile definire i propri provider di formato personalizzato per fornire impostazioni cultura specifiche, professione specifico, o informazioni specifiche del settore usati nella formattazione. Per ulteriori informazioni sull'implementazione della formattazione personalizzata mediante un provider di formato personalizzati, vedere <xref:System.ICustomFormatter>.  
  
 Il <xref:System.IFormattable> interfaccia definisce un singolo metodo, <xref:System.IFormattable.ToString%2A>, che fornisce servizi di formattazione per il tipo di implementazione. Il <xref:System.IFormattable.ToString%2A> metodo può essere chiamato direttamente. Inoltre, viene chiamato automaticamente dal <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> e <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodi e dai metodi che utilizzano il [funzionalità di formattazione composta](~/docs/standard/base-types/composite-formatting.md) in .NET Framework. Tali metodi includono <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, e <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, tra gli altri. Il <xref:System.IFormattable.ToString%2A> metodo viene chiamato per ogni elemento di formato nella stringa di formato del metodo.  
  
 Il <xref:System.IFormattable> interfaccia viene implementata dai tipi di dati di base.  
  
   
  
## Examples  
 Nell'esempio seguente viene definita una classe `Temperature` che implementa l'interfaccia <xref:System.IFormattable> . La classe supporta quattro identificatori di formato: "G" e "C", che indicano che la temperatura deve essere visualizzato in Celsius; "F", che indica che la temperatura in Fahrenheit; da visualizzare e "K", che indica che la temperatura in Kelvin da visualizzare. Inoltre, il <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementazione possa gestire anche una stringa di formato `null` o vuoto. Le altre due `ToString` metodi definiti dal `Temperature` classe semplicemente il wrapping di una chiamata al <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementazione.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 Nell'esempio seguente chiama quindi il <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementazione direttamente o tramite una stringa in formato composito.  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Le classi che richiedono un maggiore controllo sulla formattazione di stringhe rispetto <see cref="M:System.Object.ToString" /> fornisce deve implementare <see cref="T:System.IFormattable" />.  Una classe che implementa <see cref="T:System.IFormattable" /> deve supportare l'identificatore di formato (generale) "G". Oltre l'identificatore "G", la classe può definire l'elenco di identificatori di formato che supporta. Inoltre, la classe deve essere preparata per gestire un identificatore di formato <see langword="null" />. Per ulteriori informazioni sulla formattazione e codici di formattazione, vedere [formattazione Types](~/docs/standard/base-types/formatting-types.md)</para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member ToString : string * IFormatProvider -&gt; string" Usage="iFormattable.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">The format to use.  -or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
        <param name="formatProvider">The provider to use to format the value.  -or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
        <summary>Formats the value of the current instance using the specified format.</summary>
        <returns>The value of the current instance in the specified format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IFormattable.ToString%2A> metodo converte un valore in una rappresentazione di stringa che può essere espresso in diversi modi. Il formato esatto dipende dal simboli specifici o un ordine specificato definito dalle impostazioni cultura specifiche professioni o settori. È possibile chiamare direttamente il metodo. Viene inoltre chiamato automaticamente dai metodi <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> e <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> e dai metodi che utilizzano la funzionalità di formattazione composita in .NET Framework, come <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> e <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>. (Per altre informazioni, vedere [formattazione composita](~/docs/standard/base-types/composite-formatting.md).)  
  
 Chiamata di metodi di formattazione composita la <xref:System.IFormattable.ToString%2A> metodo una volta per ogni elemento di formato in una stringa di formato. I parametri passati al metodo dipendono dal metodo di formattazione specifico che viene chiamato e il contenuto dell'elemento di formato, come indicato di seguito:  
  
-   Se l'elemento di formato non include una stringa di formato (ad esempio, se l'elemento di formato è semplicemente `{0}`), viene passato `null` come valore della <xref:System.String?displayProperty=nameWithType> parametro.  
  
-   Se l'elemento di formato include una stringa di formato (ad esempio `{0:G}`), viene passata come valore della stringa di formato di <xref:System.String?displayProperty=nameWithType> parametro.  
  
-   Se la chiamata al metodo originale non include un' <xref:System.IFormatProvider?displayProperty=nameWithType> parametro, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> viene passato come il valore della <xref:System.IFormatProvider?displayProperty=nameWithType> parametro.  
  
-   Se la chiamata al metodo originale include un' <xref:System.IFormatProvider?displayProperty=nameWithType> , il provider fornito nella chiamata al metodo che viene passato come valore della <xref:System.IFormatProvider?displayProperty=nameWithType> parametro.  
  
> [!NOTE]
>  Un oggetto <xref:System.IFormattable.ToString%2A> implementazione viene chiamata dai metodi di formattazione composti solo se non vengono passati un' <xref:System.ICustomFormatter> provider di formato, o se il <xref:System.ICustomFormatter.Format%2A> metodo del provider di formato personalizzato restituisce `null`.  
  
 .NET Framework include tre provider di formato, che implementano il <xref:System.IFormatProvider> interfaccia:  
  
-   <xref:System.Globalization.NumberFormatInfo> fornisce numerico, ad esempio i caratteri da utilizzare per decimali e i separatori di gruppi, informazioni di formattazione e l'ortografia e la posizione dei simboli di valuta in valori monetari.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> fornisce relative alla data e ora informazioni di formattazione, ad esempio la posizione del mese, giorno e l'anno in un modello di Data.  
  
-   <xref:System.Globalization.CultureInfo> contiene le informazioni contenute in una lingua specifica, incluse le informazioni di formato numerico e informazioni di formattazione relative alla data e ora di formattazione predefinite.  
  
 Inoltre, è possibile definire un provider di formato personalizzata.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un `Temperature` classe che implementa il <xref:System.IFormattable.ToString%2A> metodo. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.IFormattable> classe.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> (metodo) deve supportare l'identificatore di formato (generale) "G". Oltre l'identificatore "G", la classe può definire l'elenco di identificatori di formato che supporta. Inoltre, la classe deve essere preparata per gestire un identificatore di formato <see langword="null" />. Per ulteriori informazioni sulla formattazione e codici di formattazione, vedere [Types](~/docs/standard/base-types/formatting-types.md) formattazione.</para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>