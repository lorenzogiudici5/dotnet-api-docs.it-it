<Type Name="FormatException" FullName="System.FormatException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3df6355c6e7d8e2c797fda13c09af1c5c8621025" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48693113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormatException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FormatException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.FormatException" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatException : SystemException" />
  <TypeSignature Language="F#" Value="type FormatException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Eccezione generata quando il formato di un argomento non è valido oppure quando una [stringa di formato composita](~/docs/standard/base-types/composite-formatting.md) non è corretta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.FormatException> eccezione può essere generata per uno dei motivi seguenti:  
  
-   In una chiamata a un metodo che converte una stringa in un altro tipo di dati, la stringa non sono conformi al criterio obbligatorio. Ciò si verifica in genere quando si chiamano alcuni metodi del <xref:System.Convert> classe e il `Parse` e `ParseExact` metodi di alcuni tipi.  
  
     Nella maggior parte dei casi, in particolare se la stringa che si sta convertendo di input da un utente o viene letto da un file, è necessario utilizzare un `try/catch` bloccare e gestire il <xref:System.FormatException> eccezione se la conversione ha esito negativo. È inoltre possibile sostituire la chiamata al metodo di conversione con una chiamata a un `TryParse` o `TryParseExact` metodo, se presente. Tuttavia, un <xref:System.FormatException> eccezione generata quando si tenta di analizzare una stringa predefinita o impostate come hardcoded indica un errore del programma. In questo caso, è necessario correggere l'errore piuttosto che gestisce l'eccezione.  
  
     La conversione di una stringa per i tipi seguenti nel <xref:System> dello spazio dei nomi può generare un <xref:System.FormatException> eccezione:  
  
    -   <xref:System.Boolean>. Il <xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType> e <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> metodi richiedono la stringa da convertire per essere "True", "true", "False" o "false". Genera un'eccezione di qualsiasi altro valore un <xref:System.FormatException> eccezione.  
  
    -   <xref:System.DateTime> e <xref:System.DateTimeOffset>. Tutti i dati di data e ora viene interpretato in base a convenzioni di formattazione di determinate impostazioni cultura: entrambi corrente impostazioni cultura del thread (o, in alcuni casi, le impostazioni cultura correnti dominio dell'applicazione), le impostazioni cultura invarianti, o impostazioni cultura specificate. Quando si chiama il <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodi, i dati di data e ora devono inoltre essere conforme *esattamente* a un criterio specificato da uno o più [stringhe di formato standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md) o [personalizzato stringhe di formato](~/docs/standard/base-types/custom-date-and-time-format-strings.md) che vengono passati come argomenti nella chiamata al metodo. Se non è conforme a un modello di impostazioni cultura specifiche previsto, un <xref:System.FormatException> viene generata un'eccezione. Ciò significa che i dati di data e ora salvati in un formato specifico delle impostazioni cultura su un sistema potrebbero non vengono analizzate correttamente in un altro sistema.  
  
         Per ulteriori informazioni sull'analisi date e ore, vedere [l'analisi di stringhe di data e ora](~/docs/standard/base-types/parsing-datetime.md) e la documentazione per il metodo che ha generato l'eccezione.  
  
    -   **GUIDs.** Rappresentazione di stringa del GUID deve essere costituito da 32 cifre esadecimali (0-F) e deve essere in uno all'output di cinque formati il <xref:System.Guid.ToString%2A?displayProperty=nameWithType> (metodo). Per altre informazioni, vedere il metodo <xref:System.Guid.Parse%2A?displayProperty=nameWithType>.  
  
    -   **Tipi numerici, inclusi tutti firmati interi, numeri interi senza segno e tipi a virgola mobile.** La stringa da analizzare deve contenere le cifre latine da 0 a 9. Potrebbe essere consentiti anche un segno positivo o negativo, il separatore decimale, i separatori di gruppi e simbolo di valuta. Tentativo di analizzare una stringa che contiene qualsiasi altro carattere sempre genera un <xref:System.FormatException> eccezione.  
  
         Tutte le stringhe numeriche vengono interpretate in base alle convenzioni di formattazione di determinate impostazioni cultura: entrambi corrente impostazioni cultura del thread (o, in alcuni casi, le impostazioni cultura correnti dominio dell'applicazione), le impostazioni cultura invarianti, o impostazioni cultura specificate. Di conseguenza, una stringa numerica che viene analizzata tramite le convenzioni delle impostazioni cultura potrebbe non riuscire quando si usa le convenzioni di un altro.  
  
         Per altre informazioni sull'analisi di stringhe numeriche, vedere [l'analisi di stringhe numeriche](~/docs/standard/base-types/parsing-numeric.md) e la documentazione per il metodo specifico che ha generato l'eccezione.  
  
    -   **Intervalli di tempo.** La stringa da analizzare deve essere in formato fisso distinzione delle impostazioni cultura o in un formato di distinzione delle impostazioni cultura definite dalle impostazioni cultura del thread corrente (o, in alcuni casi, le impostazioni cultura correnti dominio dell'applicazione), le impostazioni cultura invarianti, o impostazioni cultura specificate. Se la stringa non è in un formato appropriato o se il valore minimo, i giorni, ore, e non sono presenti componenti minuti dell'intervallo di tempo, il metodo di analisi genera un <xref:System.FormatException> eccezione. Per altre informazioni, vedere la documentazione per il <xref:System.TimeSpan> analisi del metodo che ha generato l'eccezione.  
  
-   Un tipo implementa la <xref:System.IFormattable> interfaccia, che supporta le stringhe di formato che definiscono come un oggetto viene convertito nella rappresentazione di stringa e viene utilizzata una stringa di formato non valido. Questo è più comune in un'operazione di formattazione. Nell'esempio seguente, la stringa di formato standard "Q" viene utilizzata in una stringa di formato composito per formattare un numero. Tuttavia, non è valido "Q" [stringa di formato standard](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
     [!code-csharp[System.FormatException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable1.cs#7)]
     [!code-vb[System.FormatException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable1.vb#7)]  
  
     Questa eccezione comporta che da un errore di codifica. Per correggere l'errore, rimuovere la stringa di formato o sostituire uno valido. Nell'esempio seguente corregge l'errore sostituendo la stringa di formato non valido con la stringa di formato "C" (valuta).  
  
     [!code-csharp[System.FormatException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable2.cs#8)]
     [!code-vb[System.FormatException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable2.vb#8)]  
  
     Oggetto <xref:System.FormatException> eccezione può essere generata anche dai metodi, ad esempio di analisi <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> e <xref:System.Guid.ParseExact%2A?displayProperty=nameWithType>, che richiedono la stringa da analizzare per corrispondere esattamente al criterio specificato da una stringa di formato. Nell'esempio seguente, la rappresentazione di stringa di un GUID prevede sia conforme al criterio specificato dalla stringa di formato standard "G". Tuttavia, il <xref:System.Guid> implementazione della struttura di <xref:System.IFormattable> non supporta la stringa di formato "G".  
  
     [!code-csharp[System.FormatException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable3.cs#9)]
     [!code-vb[System.FormatException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable3.vb#9)]  
  
     Questa eccezione comporta che anche da un errore di codifica. Per correggere l'errore, chiamare un metodo di analisi che non richiede un formato preciso, ad esempio <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> o <xref:System.Guid.Parse%2A?displayProperty=nameWithType>, oppure sostituire con una stringa di formato valido. Nell'esempio seguente corregge l'errore chiamando il <xref:System.Guid.Parse%2A?displayProperty=nameWithType> (metodo).  
  
     [!code-csharp[System.FormatException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable4.cs#10)]
     [!code-vb[System.FormatException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable4.vb#10)]  
  
-   Uno o più degli indici degli elementi di formato in una [stringa di formato composito](~/docs/standard/base-types/composite-formatting.md) è maggiore di indici degli elementi nella matrice di oggetti parametro o elenco. Nell'esempio seguente, l'indice più grande di un elemento di formato della stringa di formato è 3. Poiché gli indici degli elementi nell'elenco di oggetti in base zero, questa stringa di formato richiederebbe l'elenco di oggetti per avere quattro elementi. Ma ne contiene solo tre `dat`, `temp`, e `scale`, quindi il codice comporta un <xref:System.FormatException> eccezione in fase di esecuzione:.  
  
     [!code-csharp[System.FormatException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example1.cs#1)]
     [!code-vb[System.FormatException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example1.vb#1)]  
  
     In questo caso, il <xref:System.FormatException> eccezione è il risultato di errore per gli sviluppatori. Deve essere corretto anziché gestito in un `try/catch` blocco assicurandosi che ogni elemento nell'elenco di oggetti corrisponde all'indice di un elemento di formato. Per correggere questo esempio, modificare l'indice dell'elemento di formato secondo per fare riferimento al `dat` variabile dataready e decremento in forma dell'indice di ogni elemento di formato successive da uno.  
  
     [!code-csharp[System.FormatException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example2.cs#2)]
     [!code-vb[System.FormatException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example2.vb#2)]  
  
-   La stringa di formato composto non è ben formata. In questo caso, il <xref:System.FormatException> eccezione è sempre un risultato di errore per gli sviluppatori. Deve essere corretto anziché gestito in un `try/catch` blocco.  
  
     Il tentativo di inserire le parentesi graffe letterale in una stringa, come nell'esempio seguente viene, verrà generata l'eccezione.  
  
     [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
     [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
     La tecnica consigliata per l'inclusione di valori letterali parentesi graffe in una stringa di formato composto è includerli nell'elenco di oggetti e usare gli elementi di formato per inserirli nella stringa di risultato. Ad esempio, è possibile modificare la stringa di formato composito precedente come illustrato di seguito.  
  
     [!code-csharp[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
     [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
     L'eccezione viene generata anche se la stringa di formato contiene un errore di digitazione. La chiamata seguente al <xref:System.String.Format%2A?displayProperty=nameWithType> metodo omette una parentesi graffa di chiusura e coppie di parentesi graffa aperta con una parentesi di chiusura.  
  
     [!code-csharp[System.FormatException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#3)]
     [!code-vb[System.FormatException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#3)]  
  
     Per correggere l'errore, assicurarsi che tutti apertura e chiusura delle parentesi graffe corrispondenti.  
  
     [!code-csharp[System.FormatException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#4)]
     [!code-vb[System.FormatException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#4)]  
  
-   Sono stati forniti l'elenco di oggetti in un metodo come una matrice di parametri fortemente tipizzati, di formattazione composita e <xref:System.FormatException> eccezione indica che l'indice di uno o più elementi di formato supera il numero di argomenti nell'elenco di oggetti. Ciò si verifica perché non esiste alcuna conversione esplicita tra i tipi di matrice, ma che il compilatore considera la matrice come un singolo argomento anziché come una matrice di parametri. Ad esempio, la chiamata seguente al <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metodo genera un <xref:System.FormatException> eccezione, anche se l'indice più elevato di elementi di formato è 3 e la matrice di parametri di tipo <xref:System.Int32> dispone di quattro elementi.  
  
     [!code-csharp[System.FormatException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa1.cs#5)]
     [!code-vb[System.FormatException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa1.vb#5)]  
  
     Invece di gestire questa eccezione, è consigliabile eliminare la causa. Poiché Visual Basic né c# può convertire una matrice di interi in una matrice di oggetti, è necessario eseguire la conversione prima di chiamare il metodo di formattazione composita. Nell'esempio seguente fornisce un'implementazione.  
  
     [!code-csharp[System.FormatException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa2.cs#6)]
     [!code-vb[System.FormatException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa2.vb#6)]  
  
 <xref:System.FormatException> Usa l'HRESULT COR_E_FORMAT con il valore 0x80131537.  
  
 Il <xref:System.FormatException> deriva dalla classe <xref:System.Exception> e viene aggiunto alcun membro univoco. Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.FormatException>, vedere il <xref:System.FormatException.%23ctor%2A> costruttori.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Gestione e generazione di eccezioni</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza il <xref:System.Exception.Message%2A> proprietà della nuova istanza di un messaggio fornito dal sistema che descrive l'errore, ad esempio "Formato non valido". Questo messaggio prende in considerazione le impostazioni cultura correnti del sistema.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.FormatException>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Riferimento null (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore localizzato.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new FormatException : string -&gt; FormatException" Usage="new System.FormatException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio in cui viene descritto l'errore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" /> con un messaggio di errore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Exception.Message%2A?displayProperty=nameWithType> proprietà della nuova eccezione utilizzando il `message` parametro. Il contenuto di `message` deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.FormatException>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Riferimento null (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormatException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new FormatException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; FormatException" Usage="new System.FormatException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
        <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" /> con dati serializzati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto eccezione trasmesso su un flusso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new FormatException : string * Exception -&gt; FormatException" Usage="new System.FormatException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
        <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <c>innerException</c> non è un riferimento Null (<see langword="Nothing" /> in Visual Basic), l'eccezione corrente viene generata in un blocco <see langword="catch" /> che gestisce l'eccezione interna.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'eccezione generata come risultato diretto di un'eccezione precedente deve includere un riferimento all'eccezione precedente nella proprietà <xref:System.Exception.InnerException%2A>. La proprietà <xref:System.Exception.InnerException%2A> restituisce lo stesso valore che viene passato al costruttore o un riferimento null (`Nothing` in Visual Basic), se la proprietà <xref:System.Exception.InnerException%2A> non fornisce al costruttore il valore dell'eccezione interna.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.FormatException>.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Riferimento all'eccezione interna.|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Gestione e generazione di eccezioni</related>
      </Docs>
    </Member>
  </Members>
</Type>