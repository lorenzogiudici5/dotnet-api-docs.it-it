<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Converter`2.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58ebc43f69c05a59da70b74f44f3d48d9cc067743.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ebc43f69c05a59da70b74f44f3d48d9cc067743</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The type of object that is to be converted.</source>
          <target state="translated">Tipo di oggetto da convertire.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The type the input object is to be converted to.</source>
          <target state="translated">Tipo in cui l'oggetto di input deve essere convertito.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Converter`2">
          <source>The object to convert.</source>
          <target state="translated">Oggetto da convertire.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Converter`2">
          <source>Represents a method that converts an object from one type to another type.</source>
          <target state="translated">Rappresenta un metodo che converte un oggetto da un tipo in un altro.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Converter`2">
          <source>The <ph id="ph1">&lt;typeparamref name="TOutput" /&gt;</ph> that represents the converted <ph id="ph2">&lt;typeparamref name="TInput" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;typeparamref name="TOutput" /&gt;</ph> che rappresenta l’oggetto <ph id="ph2">&lt;typeparamref name="TInput" /&gt;</ph> convertito.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>This delegate is used by the <ph id="ph1">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Array&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class to convert each element of the collection from one type to another.</source>
          <target state="translated">Questo delegato è utilizzato dal <ph id="ph1">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> metodo il <ph id="ph2">&lt;xref:System.Array&gt;</ph> classe e il <ph id="ph3">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> metodo il <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> classe per convertire ogni elemento della raccolta da un tipo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>This section contains two code examples.</source>
          <target state="translated">In questa sezione contiene due esempi di codice.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The first demonstrates the <ph id="ph1">&lt;xref:System.Converter%602&gt;</ph> delegate with the <ph id="ph2">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Array&gt;</ph> class, and the second demonstrates the delegate with the <ph id="ph4">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class.</source>
          <target state="translated">Nel primo esempio viene il <ph id="ph1">&lt;xref:System.Converter%602&gt;</ph> delegato con il <ph id="ph2">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> metodo il <ph id="ph3">&lt;xref:System.Array&gt;</ph> classe, mentre la seconda viene illustrato il delegato con il <ph id="ph4">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> metodo il <ph id="ph5">&lt;xref:System.Collections.Generic.List%601&gt;</ph> classe generica.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>Example 1</source>
          <target state="translated">Esempio 1</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The following code example defines a method named <ph id="ph1">`PointFToPoint`</ph> that converts a <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> structure to a <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structure.</source>
          <target state="translated">Esempio di codice seguente definisce un metodo denominato <ph id="ph1">`PointFToPoint`</ph> che converte un <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> struttura in un <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The example then creates an array of <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures, creates a <ph id="ph2">`Converter&lt;PointF, Point&gt;`</ph> delegate (<ph id="ph3">`Converter(Of PointF, Point)`</ph> in Visual Basic) to represent the <ph id="ph4">`PointFToPoint`</ph> method, and passes the delegate to the <ph id="ph5">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> method.</source>
          <target state="translated">Viene quindi creata una matrice di <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> strutture, crea un <ph id="ph2">`Converter&lt;PointF, Point&gt;`</ph> delegato (<ph id="ph3">`Converter(Of PointF, Point)`</ph> in Visual Basic) per rappresentare il <ph id="ph4">`PointFToPoint`</ph> metodo e passa il delegato per il <ph id="ph5">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The <ph id="ph1">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> method passes each element of the input list to the <ph id="ph2">`PointFToPoint`</ph> method and puts the converted elements into a new list of <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Array.ConvertAll%2A&gt;</ph> metodo passa ogni elemento dell'elenco di input per il <ph id="ph2">`PointFToPoint`</ph> (metodo) e inserisce gli elementi convertiti in un nuovo elenco di <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> strutture.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>Both lists are displayed.</source>
          <target state="translated">Entrambi gli elenchi vengono visualizzati.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>Example 2</source>
          <target state="translated">Esempio 2</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The following code example defines a method named <ph id="ph1">`PointFToPoint`</ph> that converts a <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> structure to a <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structure.</source>
          <target state="translated">Esempio di codice seguente definisce un metodo denominato <ph id="ph1">`PointFToPoint`</ph> che converte un <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> struttura in un <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> structures, creates a <ph id="ph3">`Converter\&lt;PointF, Point&gt;`</ph> delegate (<ph id="ph4">`Converter(Of PointF, Point)`</ph> in Visual Basic) to represent the <ph id="ph5">`PointFToPoint`</ph> method, and passes the delegate to the <ph id="ph6">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> method.</source>
          <target state="translated">Nell'esempio viene quindi creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> strutture, crea un <ph id="ph3">`Converter\&lt;PointF, Point&gt;`</ph> delegato (<ph id="ph4">`Converter(Of PointF, Point)`</ph> in Visual Basic) per rappresentare il <ph id="ph5">`PointFToPoint`</ph> , metodo e passa il delegato per il <ph id="ph6">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> method passes each element of the input list to the <ph id="ph2">`PointFToPoint`</ph> method and puts the converted elements into a new list of <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Generic.List`1.ConvertAll*&gt;</ph> metodo passa ogni elemento dell'elenco di input per il <ph id="ph2">`PointFToPoint`</ph> (metodo) e inserisce gli elementi convertiti in un nuovo elenco di <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> strutture.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Converter`2">
          <source>Both lists are displayed.</source>
          <target state="translated">Entrambi gli elenchi vengono visualizzati.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>